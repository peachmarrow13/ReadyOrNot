#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ACLPlugin

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "ACLPlugin_structs.hpp"


namespace SDK
{

// Class ACLPlugin.AnimationCompressionLibraryDatabase
// 0x0140 (0x0168 - 0x0028)
class UAnimationCompressionLibraryDatabase final : public UObject
{
public:
	TArray<uint8>                                 CookedCompressedBytes;                             // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<uint64>                                CookedAnimSequenceMappings;                        // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_48[0x118];                                     // 0x0048(0x0118)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        MaxStreamRequestSizeKB;                            // 0x0160(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static EACLVisualFidelity GetVisualFidelity(class UAnimationCompressionLibraryDatabase* DatabaseAsset);
	static void SetVisualFidelity(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class UAnimationCompressionLibraryDatabase* DatabaseAsset, EACLVisualFidelityChangeResult* Result, EACLVisualFidelity VisualFidelity);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimationCompressionLibraryDatabase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimationCompressionLibraryDatabase")
	}
	static class UAnimationCompressionLibraryDatabase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimationCompressionLibraryDatabase>();
	}
};
DUMPER7_ASSERTS_UAnimationCompressionLibraryDatabase;

// Class ACLPlugin.AnimBoneCompressionCodec_ACLBase
// 0x0000 (0x0038 - 0x0038)
class UAnimBoneCompressionCodec_ACLBase : public UAnimBoneCompressionCodec
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimBoneCompressionCodec_ACLBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimBoneCompressionCodec_ACLBase")
	}
	static class UAnimBoneCompressionCodec_ACLBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBoneCompressionCodec_ACLBase>();
	}
};
DUMPER7_ASSERTS_UAnimBoneCompressionCodec_ACLBase;

// Class ACLPlugin.AnimBoneCompressionCodec_ACL
// 0x0000 (0x0038 - 0x0038)
class UAnimBoneCompressionCodec_ACL final : public UAnimBoneCompressionCodec_ACLBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimBoneCompressionCodec_ACL")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimBoneCompressionCodec_ACL")
	}
	static class UAnimBoneCompressionCodec_ACL* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBoneCompressionCodec_ACL>();
	}
};
DUMPER7_ASSERTS_UAnimBoneCompressionCodec_ACL;

// Class ACLPlugin.AnimBoneCompressionCodec_ACLCustom
// 0x0000 (0x0038 - 0x0038)
class UAnimBoneCompressionCodec_ACLCustom final : public UAnimBoneCompressionCodec_ACLBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimBoneCompressionCodec_ACLCustom")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimBoneCompressionCodec_ACLCustom")
	}
	static class UAnimBoneCompressionCodec_ACLCustom* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBoneCompressionCodec_ACLCustom>();
	}
};
DUMPER7_ASSERTS_UAnimBoneCompressionCodec_ACLCustom;

// Class ACLPlugin.AnimBoneCompressionCodec_ACLDatabase
// 0x0008 (0x0040 - 0x0038)
class UAnimBoneCompressionCodec_ACLDatabase final : public UAnimBoneCompressionCodec_ACLBase
{
public:
	class UAnimationCompressionLibraryDatabase*   DatabaseAsset;                                     // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimBoneCompressionCodec_ACLDatabase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimBoneCompressionCodec_ACLDatabase")
	}
	static class UAnimBoneCompressionCodec_ACLDatabase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBoneCompressionCodec_ACLDatabase>();
	}
};
DUMPER7_ASSERTS_UAnimBoneCompressionCodec_ACLDatabase;

// Class ACLPlugin.AnimBoneCompressionCodec_ACLSafe
// 0x0000 (0x0038 - 0x0038)
class UAnimBoneCompressionCodec_ACLSafe final : public UAnimBoneCompressionCodec_ACLBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimBoneCompressionCodec_ACLSafe")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimBoneCompressionCodec_ACLSafe")
	}
	static class UAnimBoneCompressionCodec_ACLSafe* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBoneCompressionCodec_ACLSafe>();
	}
};
DUMPER7_ASSERTS_UAnimBoneCompressionCodec_ACLSafe;

// Class ACLPlugin.AnimCurveCompressionCodec_ACL
// 0x0000 (0x0038 - 0x0038)
class UAnimCurveCompressionCodec_ACL final : public UAnimCurveCompressionCodec
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimCurveCompressionCodec_ACL")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimCurveCompressionCodec_ACL")
	}
	static class UAnimCurveCompressionCodec_ACL* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimCurveCompressionCodec_ACL>();
	}
};
DUMPER7_ASSERTS_UAnimCurveCompressionCodec_ACL;

}

