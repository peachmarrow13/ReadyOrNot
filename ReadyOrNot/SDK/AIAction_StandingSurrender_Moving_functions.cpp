#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIAction_StandingSurrender_Moving

#include "Basic.hpp"

#include "AIAction_StandingSurrender_Moving_classes.hpp"
#include "AIAction_StandingSurrender_Moving_parameters.hpp"


namespace SDK
{

// Function AIAction_StandingSurrender_Moving.AIAction_StandingSurrender_Moving_C.BeginAction_Blueprint
// (Event, Protected, BlueprintEvent)

void UAIAction_StandingSurrender_Moving_C::BeginAction_Blueprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIAction_StandingSurrender_Moving_C", "BeginAction_Blueprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AIAction_StandingSurrender_Moving.AIAction_StandingSurrender_Moving_C.EndAction_Blueprint
// (Event, Protected, BlueprintEvent)

void UAIAction_StandingSurrender_Moving_C::EndAction_Blueprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIAction_StandingSurrender_Moving_C", "EndAction_Blueprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AIAction_StandingSurrender_Moving.AIAction_StandingSurrender_Moving_C.ExecuteUbergraph_AIAction_StandingSurrender_Moving
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAIAction_StandingSurrender_Moving_C::ExecuteUbergraph_AIAction_StandingSurrender_Moving(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIAction_StandingSurrender_Moving_C", "ExecuteUbergraph_AIAction_StandingSurrender_Moving");

	Params::AIAction_StandingSurrender_Moving_C_ExecuteUbergraph_AIAction_StandingSurrender_Moving Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIAction_StandingSurrender_Moving.AIAction_StandingSurrender_Moving_C.GetComplianceVoiceOver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bUseAlternate                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString*                          NewParam                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UAIAction_StandingSurrender_Moving_C::GetComplianceVoiceOver(bool bUseAlternate, class FString* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIAction_StandingSurrender_Moving_C", "GetComplianceVoiceOver");

	Params::AIAction_StandingSurrender_Moving_C_GetComplianceVoiceOver Parms{};

	Parms.bUseAlternate = bUseAlternate;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function AIAction_StandingSurrender_Moving.AIAction_StandingSurrender_Moving_C.InitAction_Blueprint
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ACyberneticController*            Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UAIAction_StandingSurrender_Moving_C::InitAction_Blueprint(class ACyberneticController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIAction_StandingSurrender_Moving_C", "InitAction_Blueprint");

	Params::AIAction_StandingSurrender_Moving_C_InitAction_Blueprint Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIAction_StandingSurrender_Moving.AIAction_StandingSurrender_Moving_C.PlayComplianceVO
// (BlueprintCallable, BlueprintEvent)

void UAIAction_StandingSurrender_Moving_C::PlayComplianceVO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIAction_StandingSurrender_Moving_C", "PlayComplianceVO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AIAction_StandingSurrender_Moving.AIAction_StandingSurrender_Moving_C.Tick_Blueprint
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAIAction_StandingSurrender_Moving_C::Tick_Blueprint(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIAction_StandingSurrender_Moving_C", "Tick_Blueprint");

	Params::AIAction_StandingSurrender_Moving_C_Tick_Blueprint Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIAction_StandingSurrender_Moving.AIAction_StandingSurrender_Moving_C.GetMoveStyleOverride
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName UAIAction_StandingSurrender_Moving_C::GetMoveStyleOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIAction_StandingSurrender_Moving_C", "GetMoveStyleOverride");

	Params::AIAction_StandingSurrender_Moving_C_GetMoveStyleOverride Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AIAction_StandingSurrender_Moving.AIAction_StandingSurrender_Moving_C.ShouldPerformAction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UAIAction_StandingSurrender_Moving_C::ShouldPerformAction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIAction_StandingSurrender_Moving_C", "ShouldPerformAction");

	Params::AIAction_StandingSurrender_Moving_C_ShouldPerformAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

