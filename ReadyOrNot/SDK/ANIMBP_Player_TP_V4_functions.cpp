#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_Player_TP_V4

#include "Basic.hpp"

#include "ANIMBP_Player_TP_V4_classes.hpp"
#include "ANIMBP_Player_TP_V4_parameters.hpp"


namespace SDK
{

// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink*                       AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "AnimGraph");

	Params::ANIMBP_Player_TP_V4_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.AnimNotify_HideTPMesh
// (BlueprintCallable, BlueprintEvent)

void UANIMBP_Player_TP_V4_C::AnimNotify_HideTPMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "AnimNotify_HideTPMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.AnimNotify_PlayFootstep
// (BlueprintCallable, BlueprintEvent)

void UANIMBP_Player_TP_V4_C::AnimNotify_PlayFootstep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "AnimNotify_PlayFootstep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.AnimNotify_ShowTPMesh
// (BlueprintCallable, BlueprintEvent)

void UANIMBP_Player_TP_V4_C::AnimNotify_ShowTPMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "AnimNotify_ShowTPMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UANIMBP_Player_TP_V4_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "BlueprintUpdateAnimation");

	Params::ANIMBP_Player_TP_V4_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.ExecuteUbergraph_ANIMBP_Player_TP_V4
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UANIMBP_Player_TP_V4_C::ExecuteUbergraph_ANIMBP_Player_TP_V4(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "ExecuteUbergraph_ANIMBP_Player_TP_V4");

	Params::ANIMBP_Player_TP_V4_C_ExecuteUbergraph_ANIMBP_Player_TP_V4 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.SetActiveTurnAnim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::SetActiveTurnAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "SetActiveTurnAnim");

	Params::ANIMBP_Player_TP_V4_C_SetActiveTurnAnim Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.SetActiveTurnRecoveryAnim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::SetActiveTurnRecoveryAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "SetActiveTurnRecoveryAnim");

	Params::ANIMBP_Player_TP_V4_C_SetActiveTurnRecoveryAnim Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.SetCrouchToStandAnim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::SetCrouchToStandAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "SetCrouchToStandAnim");

	Params::ANIMBP_Player_TP_V4_C_SetCrouchToStandAnim Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.SetJumpStartAnim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::SetJumpStartAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "SetJumpStartAnim");

	Params::ANIMBP_Player_TP_V4_C_SetJumpStartAnim Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.SetStandToCrouchAnim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::SetStandToCrouchAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "SetStandToCrouchAnim");

	Params::ANIMBP_Player_TP_V4_C_SetStandToCrouchAnim Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.SetWeaponGripPose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::SetWeaponGripPose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "SetWeaponGripPose");

	Params::ANIMBP_Player_TP_V4_C_SetWeaponGripPose Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateActiveTurnAnim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateActiveTurnAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateActiveTurnAnim");

	Params::ANIMBP_Player_TP_V4_C_UpdateActiveTurnAnim Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateBaseOverridePose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateBaseOverridePose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateBaseOverridePose");

	Params::ANIMBP_Player_TP_V4_C_UpdateBaseOverridePose Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateCurrentAOBS
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateCurrentAOBS(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateCurrentAOBS");

	Params::ANIMBP_Player_TP_V4_C_UpdateCurrentAOBS Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateHighLeanAdditivePose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateHighLeanAdditivePose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateHighLeanAdditivePose");

	Params::ANIMBP_Player_TP_V4_C_UpdateHighLeanAdditivePose Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateItemIdleOverridePose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateItemIdleOverridePose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateItemIdleOverridePose");

	Params::ANIMBP_Player_TP_V4_C_UpdateItemIdleOverridePose Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateJumpLoopAnim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateJumpLoopAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateJumpLoopAnim");

	Params::ANIMBP_Player_TP_V4_C_UpdateJumpLoopAnim Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateJumpRecoveryAnim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateJumpRecoveryAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateJumpRecoveryAnim");

	Params::ANIMBP_Player_TP_V4_C_UpdateJumpRecoveryAnim Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateLeanLeftPose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateLeanLeftPose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateLeanLeftPose");

	Params::ANIMBP_Player_TP_V4_C_UpdateLeanLeftPose Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateLeanRightPose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateLeanRightPose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateLeanRightPose");

	Params::ANIMBP_Player_TP_V4_C_UpdateLeanRightPose Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateLoweredAdditivePose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateLoweredAdditivePose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateLoweredAdditivePose");

	Params::ANIMBP_Player_TP_V4_C_UpdateLoweredAdditivePose Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateQuickLeanLeftPose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateQuickLeanLeftPose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateQuickLeanLeftPose");

	Params::ANIMBP_Player_TP_V4_C_UpdateQuickLeanLeftPose Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateQuickLeanRightPose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateQuickLeanRightPose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateQuickLeanRightPose");

	Params::ANIMBP_Player_TP_V4_C_UpdateQuickLeanRightPose Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateRetentionAdditivePose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateRetentionAdditivePose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateRetentionAdditivePose");

	Params::ANIMBP_Player_TP_V4_C_UpdateRetentionAdditivePose Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateShieldAimPose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateShieldAimPose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateShieldAimPose");

	Params::ANIMBP_Player_TP_V4_C_UpdateShieldAimPose Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateSightsAdditivePose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateSightsAdditivePose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateSightsAdditivePose");

	Params::ANIMBP_Player_TP_V4_C_UpdateSightsAdditivePose Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateStunLoopAnim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateStunLoopAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateStunLoopAnim");

	Params::ANIMBP_Player_TP_V4_C_UpdateStunLoopAnim Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_Player_TP_V4.ANIMBP_Player_TP_V4_C.UpdateTaserLoopAnim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UANIMBP_Player_TP_V4_C::UpdateTaserLoopAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_Player_TP_V4_C", "UpdateTaserLoopAnim");

	Params::ANIMBP_Player_TP_V4_C_UpdateTaserLoopAnim Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}

}

