#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AimAssistSystem

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"
#include "AimAssistSystem_structs.hpp"


namespace SDK
{

// Class AimAssistSystem.UASAimAssistComponent
// 0x01C8 (0x0268 - 0x00A0)
class UUASAimAssistComponent : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(class UUASAimAssistConfigDataAsset* NewAsset)> OnAimDataAssetChangedDelegate; // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bEnableStickiness;                                 // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableMagnetism;                                  // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableScaling;                                    // 0x00B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bScalingByDPI;                                     // 0x00B3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableAutoAim;                                    // 0x00B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableSnapToTarget;                               // 0x00B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDrawCircles;                                      // 0x00B6(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDrawCrosshair;                                    // 0x00B7(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDrawWeights;                                      // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDebugOverlayBox;                                  // 0x00B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bShowValidTargetSockets;                           // 0x00BA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDebugTargetTraces;                                // 0x00BB(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUASAimAssistConfigDataAsset*           AimAssistDataAsset;                                // 0x00C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   TargetsDetectionProfileName;                       // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   ObstacleCheckProfileName;                          // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bShouldCharactersBlockTrace;                       // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D9[0x18F];                                     // 0x00D9(0x018F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CancelSnapToTarget();
	void ExecuteSnapToTarget();
	bool GetDrawAimBox();
	bool GetDrawCircles();
	bool GetDrawCrosshair();
	bool GetDrawSockets();
	bool GetDrawWeights();
	bool GetEnableAutoAim();
	bool GetEnableMagnetism();
	bool GetEnableSnapToTarget();
	bool GetEnableStickiness();
	bool GetEnableZoneScaling();
	bool GetMouseActive();
	bool IsAnimationBlocking();
	void OnTargetDestroyed(class AActor* DestroyedActor);
	void SetAimAssistDataAsset(class UUASAimAssistConfigDataAsset* DataAsset);
	void SetDrawAimBox(bool Enable);
	void SetDrawCircles(bool Enable);
	void SetDrawCrosshair(bool Enable);
	void SetDrawSockets(bool Enable);
	void SetDrawWeights(bool Enable);
	void SetEnableAutoAim(bool Enable);
	void SetEnableMagnetism(bool Enable);
	void SetEnableSnapToTarget(bool Enable);
	void SetEnableStickiness(bool Enable);
	void SetEnableZoneScaling(bool Enable);
	void SetMouseActive(bool Enable);
	void SetScopeSizeFactor(const float SizeFactor);
	void SetWeaponAimPoint(const struct FVector2D& AimPoint);
	void SetWeaponBulletSpawnLocation(const struct FVector& BulletSpawnLocation);

	float CalculateSocketDistance(const struct FUASAimAssistTargetData& TargetData) const;
	float CalculateSocketWeight(const struct FUASAimAssistTargetData& TargetData) const;
	void GetControlMultipliers(float* Pitch, float* Yaw) const;
	const struct FVector2D GetCrosshairPosition() const;
	struct FRotator GetRotationToCrosshairDirection(const struct FVector& From, class FName TraceProfileName, float MinDistanceToRotateToTarget, float Distance) const;
	bool ShouldSocketBeConsidered(const struct FUASAimAssistTargetData& TargetData) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UASAimAssistComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UASAimAssistComponent")
	}
	static class UUASAimAssistComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUASAimAssistComponent>();
	}
};
DUMPER7_ASSERTS_UUASAimAssistComponent;

// Class AimAssistSystem.UASAimAssistConfigDataAsset
// 0x0238 (0x0268 - 0x0030)
class UUASAimAssistConfigDataAsset final : public UDataAsset
{
public:
	float                                         UpdateTargetsRate;                                 // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AimAreaExtents;                                    // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bQuadraticDistance;                                // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeMoveSpeedWeight;                           // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MoveSpeedCoefficient;                              // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecentlySeenTargetTrackingDuration;                // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStickinessZoneConfig;                             // 0x005C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUASStickinessZoneConfig               StickinessZoneConfig;                              // 0x0060(0x0118)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bMagnetismZoneConfig;                              // 0x0178(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUASMagnetismZoneConfig                MagnetismZoneConfig;                               // 0x017C(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bScalingZoneConfig;                                // 0x0184(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUASZonesScalingConfig                 ZonesScalingConfig;                                // 0x0188(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bAutoAimConfig;                                    // 0x0210(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUASAutoAimConfig                      AutoAimConfig;                                     // 0x0214(0x001C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bSnapToTargetConfig;                               // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUASSnapToTargetConfig                 SnapToTargetConfig;                                // 0x0234(0x001C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                              CrosshairOffset;                                   // 0x0250(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableStickiness;                                  // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableMagnetism;                                   // 0x0261(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableZoneScaling;                                 // 0x0262(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableAutoAim;                                     // 0x0263(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableSnapToTarget;                                // 0x0264(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UASAimAssistConfigDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UASAimAssistConfigDataAsset")
	}
	static class UUASAimAssistConfigDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUASAimAssistConfigDataAsset>();
	}
};
DUMPER7_ASSERTS_UUASAimAssistConfigDataAsset;

// Class AimAssistSystem.ASAimAssistSubsystem
// 0x0010 (0x0040 - 0x0030)
class UASAimAssistSubsystem final : public UWorldSubsystem
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ASAimAssistSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ASAimAssistSubsystem")
	}
	static class UASAimAssistSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UASAimAssistSubsystem>();
	}
};
DUMPER7_ASSERTS_UASAimAssistSubsystem;

// Class AimAssistSystem.UASAimAssistTargetComponent
// 0x0020 (0x00C0 - 0x00A0)
class UUASAimAssistTargetComponent : public UActorComponent
{
public:
	class UMeshComponent*                         MeshComponent;                                     // 0x00A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsAimAssistActive;                                // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           AimTargetSocketNames;                              // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	float GetMoveSpeed();
	float GetWeightByState();
	class FString GetWeightLabel();
	void Init(class UMeshComponent* Mesh);
	bool ShouldAlwaysBlockTrace();
	bool ShouldConsiderWeight();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UASAimAssistTargetComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UASAimAssistTargetComponent")
	}
	static class UUASAimAssistTargetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUASAimAssistTargetComponent>();
	}
};
DUMPER7_ASSERTS_UUASAimAssistTargetComponent;

}

