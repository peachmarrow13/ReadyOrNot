#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioSynesthesia

#include "Basic.hpp"


namespace SDK::Params
{

// Function AudioSynesthesia.ConstantQNRT.GetChannelConstantQAtTime
// 0x0018 (0x0018 - 0x0000)
struct ConstantQNRT_GetChannelConstantQAtTime final
{
public:
	float                                         InSeconds;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InChannel;                                         // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 OutConstantQ;                                      // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_ConstantQNRT_GetChannelConstantQAtTime;

// Function AudioSynesthesia.ConstantQNRT.GetNormalizedChannelConstantQAtTime
// 0x0018 (0x0018 - 0x0000)
struct ConstantQNRT_GetNormalizedChannelConstantQAtTime final
{
public:
	float                                         InSeconds;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InChannel;                                         // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 OutConstantQ;                                      // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_ConstantQNRT_GetNormalizedChannelConstantQAtTime;

// Function AudioSynesthesia.LoudnessNRT.GetChannelLoudnessAtTime
// 0x000C (0x000C - 0x0000)
struct LoudnessNRT_GetChannelLoudnessAtTime final
{
public:
	float                                         InSeconds;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InChannel;                                         // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutLoudness;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_LoudnessNRT_GetChannelLoudnessAtTime;

// Function AudioSynesthesia.LoudnessNRT.GetLoudnessAtTime
// 0x0008 (0x0008 - 0x0000)
struct LoudnessNRT_GetLoudnessAtTime final
{
public:
	float                                         InSeconds;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutLoudness;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_LoudnessNRT_GetLoudnessAtTime;

// Function AudioSynesthesia.LoudnessNRT.GetNormalizedChannelLoudnessAtTime
// 0x000C (0x000C - 0x0000)
struct LoudnessNRT_GetNormalizedChannelLoudnessAtTime final
{
public:
	float                                         InSeconds;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InChannel;                                         // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutLoudness;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_LoudnessNRT_GetNormalizedChannelLoudnessAtTime;

// Function AudioSynesthesia.LoudnessNRT.GetNormalizedLoudnessAtTime
// 0x0008 (0x0008 - 0x0000)
struct LoudnessNRT_GetNormalizedLoudnessAtTime final
{
public:
	float                                         InSeconds;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutLoudness;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_LoudnessNRT_GetNormalizedLoudnessAtTime;

// Function AudioSynesthesia.OnsetNRT.GetChannelOnsetsBetweenTimes
// 0x0030 (0x0030 - 0x0000)
struct OnsetNRT_GetChannelOnsetsBetweenTimes final
{
public:
	float                                         InStartSeconds;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InEndSeconds;                                      // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InChannel;                                         // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 OutOnsetTimestamps;                                // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 OutOnsetStrengths;                                 // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_OnsetNRT_GetChannelOnsetsBetweenTimes;

// Function AudioSynesthesia.OnsetNRT.GetNormalizedChannelOnsetsBetweenTimes
// 0x0030 (0x0030 - 0x0000)
struct OnsetNRT_GetNormalizedChannelOnsetsBetweenTimes final
{
public:
	float                                         InStartSeconds;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InEndSeconds;                                      // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InChannel;                                         // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 OutOnsetTimestamps;                                // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 OutOnsetStrengths;                                 // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_OnsetNRT_GetNormalizedChannelOnsetsBetweenTimes;

// Function AudioSynesthesia.SynesthesiaSpectrumAnalyzer.GetCenterFrequencies
// 0x0018 (0x0018 - 0x0000)
struct SynesthesiaSpectrumAnalyzer_GetCenterFrequencies final
{
public:
	float                                         InSampleRate;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 OutCenterFrequencies;                              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_SynesthesiaSpectrumAnalyzer_GetCenterFrequencies;

// Function AudioSynesthesia.SynesthesiaSpectrumAnalyzer.GetNumCenterFrequencies
// 0x0004 (0x0004 - 0x0000)
struct SynesthesiaSpectrumAnalyzer_GetNumCenterFrequencies final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_SynesthesiaSpectrumAnalyzer_GetNumCenterFrequencies;

}

