#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AugmentedReality

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "AugmentedReality_structs.hpp"


namespace SDK
{

// Class AugmentedReality.ARActor
// 0x0000 (0x0298 - 0x0298)
class AARActor final : public AActor
{
public:
	class UARComponent* AddARComponent(TSubclassOf<class UARComponent> InComponentClass, const struct FGuid& NativeID);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARActor")
	}
	static class AARActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AARActor>();
	}
};
DUMPER7_ASSERTS_AARActor;

// Class AugmentedReality.ARBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UARBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool AddManualEnvironmentCaptureProbe(const struct FVector& Location, const struct FVector& Extent);
	static class UARCandidateImage* AddRuntimeCandidateImage(class UARSessionConfig* SessionConfig, class UTexture2D* CandidateTexture, const class FString& FriendlyName, float PhysicalWidth);
	static bool AddTrackedPointWithName(const struct FTransform& WorldTransform, const class FString& PointName, bool bDeletePointsWithSameName);
	static void CalculateAlignmentTransform(const struct FTransform& TransformInFirstCoordinateSystem, const struct FTransform& TransformInSecondCoordinateSystem, struct FTransform* AlignmentTransform);
	static void CalculateClosestIntersection(const TArray<struct FVector>& StartPoints, const TArray<struct FVector>& EndPoints, struct FVector* ClosestIntersection);
	static void DebugDrawPin(class UARPin* ARPin, class UObject* WorldContextObject, const struct FLinearColor& Color, float Scale, float PersistForSeconds);
	static void DebugDrawTrackedGeometry(class UARTrackedGeometry* TrackedGeometry, class UObject* WorldContextObject, const struct FLinearColor& Color, float OutlineThickness, float PersistForSeconds);
	static TArray<class UARTrackedPoint*> FindTrackedPointsByName(const class FString& PointName);
	static struct FTransform GetAlignmentTransform();
	static TArray<class UARTrackedGeometry*> GetAllGeometries();
	static TArray<class UARTrackedGeometry*> GetAllGeometriesByClass(TSubclassOf<class UARTrackedGeometry> GeometryClass);
	static TArray<class UARPin*> GetAllPins();
	static TArray<struct FARPose2D> GetAllTracked2DPoses();
	static struct FARSessionStatus GetARSessionStatus();
	static class UARTexture* GetARTexture(EARTextureType TextureType);
	static float GetARWorldScale();
	static bool GetCameraIntrinsics(struct FARCameraIntrinsics* OutCameraIntrinsics);
	static class UARLightEstimate* GetCurrentLightEstimate();
	static int32 GetNumberOfTrackedFacesSupported();
	static bool GetObjectClassificationAtLocation(const struct FVector& InWorldLocation, EARObjectClassification* OutClassification, struct FVector* OutClassificationLocation, float MaxLocationDiff);
	static TArray<struct FVector> GetPointCloud();
	static class UARSessionConfig* GetSessionConfig();
	static TArray<struct FARVideoFormat> GetSupportedVideoFormats(EARSessionType SessionType);
	static EARTrackingQuality GetTrackingQuality();
	static EARTrackingQualityReason GetTrackingQualityReason();
	static EARWorldMappingState GetWorldMappingStatus();
	static bool IsARPinLocalStoreReady();
	static bool IsARPinLocalStoreSupported();
	static bool IsARSupported();
	static bool IsSceneReconstructionSupported(EARSessionType SessionType, EARSceneReconstruction SceneReconstructionMethod);
	static bool IsSessionTrackingFeatureSupported(EARSessionType SessionType, EARSessionTrackingFeature SessionTrackingFeature);
	static bool IsSessionTypeSupported(EARSessionType SessionType);
	static TArray<struct FARTraceResult> LineTraceTrackedObjects(const struct FVector2D& ScreenCoord, bool bTestFeaturePoints, bool bTestGroundPlane, bool bTestPlaneExtents, bool bTestPlaneBoundaryPolygon);
	static TArray<struct FARTraceResult> LineTraceTrackedObjects3D(const struct FVector& Start, const struct FVector& End, bool bTestFeaturePoints, bool bTestGroundPlane, bool bTestPlaneExtents, bool bTestPlaneBoundaryPolygon);
	static TMap<class FName, class UARPin*> LoadARPinsFromLocalStore();
	static void PauseARSession();
	static class UARPin* PinComponent(class USceneComponent* ComponentToPin, const struct FTransform& PinToWorldTransform, class UARTrackedGeometry* TrackedGeometry, const class FName DebugName);
	static bool PinComponentToARPin(class USceneComponent* ComponentToPin, class UARPin* Pin);
	static class UARPin* PinComponentToTraceResult(class USceneComponent* ComponentToPin, const struct FARTraceResult& TraceResult, const class FName DebugName);
	static void RemoveAllARPinsFromLocalStore();
	static void RemoveARPinFromLocalStore(class FName InSaveName);
	static void RemovePin(class UARPin* PinToRemove);
	static struct FIntPoint ResizeXRCamera(const struct FIntPoint& InSize);
	static bool SaveARPinToLocalStore(class FName InSaveName, class UARPin* InPin);
	static void SetAlignmentTransform(const struct FTransform& InAlignmentTransform);
	static void SetARWorldOriginLocationAndRotation(const struct FVector& OriginLocation, const struct FRotator& OriginRotation, bool bIsTransformInWorldSpace, bool bMaintainUpDirection);
	static void SetARWorldScale(float InWorldScale);
	static void SetEnabledXRCamera(bool bOnOff);
	static void StartARSession(class UARSessionConfig* SessionConfig);
	static void StopARSession();
	static bool ToggleARCapture(const bool bOnOff, const EARCaptureType CaptureType);
	static void UnpinComponent(class USceneComponent* ComponentToUnpin);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARBlueprintLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARBlueprintLibrary")
	}
	static class UARBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARBlueprintLibrary>();
	}
};
DUMPER7_ASSERTS_UARBlueprintLibrary;

// Class AugmentedReality.ARTraceResultLibrary
// 0x0000 (0x0028 - 0x0028)
class UARTraceResultLibrary final : public UBlueprintFunctionLibrary
{
public:
	static float GetDistanceFromCamera(const struct FARTraceResult& TraceResult);
	static struct FTransform GetLocalToTrackingTransform(const struct FARTraceResult& TraceResult);
	static struct FTransform GetLocalToWorldTransform(const struct FARTraceResult& TraceResult);
	static struct FTransform GetLocalTransform(const struct FARTraceResult& TraceResult);
	static EARLineTraceChannels GetTraceChannel(const struct FARTraceResult& TraceResult);
	static class UARTrackedGeometry* GetTrackedGeometry(const struct FARTraceResult& TraceResult);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARTraceResultLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARTraceResultLibrary")
	}
	static class UARTraceResultLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTraceResultLibrary>();
	}
};
DUMPER7_ASSERTS_UARTraceResultLibrary;

// Class AugmentedReality.ARBaseAsyncTaskBlueprintProxy
// 0x0020 (0x0050 - 0x0030)
class UARBaseAsyncTaskBlueprintProxy : public UBlueprintAsyncActionBase
{
public:
	uint8                                         Pad_30[0x20];                                      // 0x0030(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARBaseAsyncTaskBlueprintProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARBaseAsyncTaskBlueprintProxy")
	}
	static class UARBaseAsyncTaskBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARBaseAsyncTaskBlueprintProxy>();
	}
};
DUMPER7_ASSERTS_UARBaseAsyncTaskBlueprintProxy;

// Class AugmentedReality.ARSaveWorldAsyncTaskBlueprintProxy
// 0x0030 (0x0080 - 0x0050)
class UARSaveWorldAsyncTaskBlueprintProxy final : public UARBaseAsyncTaskBlueprintProxy
{
public:
	TMulticastInlineDelegate<void(const TArray<uint8>& SavedWorld)> OnSuccess;                       // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const TArray<uint8>& SavedWorld)> OnFailed;                        // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x10];                                      // 0x0070(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UARSaveWorldAsyncTaskBlueprintProxy* ARSaveWorld(class UObject* WorldContextObject);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARSaveWorldAsyncTaskBlueprintProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARSaveWorldAsyncTaskBlueprintProxy")
	}
	static class UARSaveWorldAsyncTaskBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARSaveWorldAsyncTaskBlueprintProxy>();
	}
};
DUMPER7_ASSERTS_UARSaveWorldAsyncTaskBlueprintProxy;

// Class AugmentedReality.ARGetCandidateObjectAsyncTaskBlueprintProxy
// 0x0060 (0x00B0 - 0x0050)
class UARGetCandidateObjectAsyncTaskBlueprintProxy final : public UARBaseAsyncTaskBlueprintProxy
{
public:
	TMulticastInlineDelegate<void(class UARCandidateObject* SavedObject)> OnSuccess;                 // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARCandidateObject* SavedObject)> OnFailed;                  // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x40];                                      // 0x0070(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UARGetCandidateObjectAsyncTaskBlueprintProxy* ARGetCandidateObject(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& Extent);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARGetCandidateObjectAsyncTaskBlueprintProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARGetCandidateObjectAsyncTaskBlueprintProxy")
	}
	static class UARGetCandidateObjectAsyncTaskBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARGetCandidateObjectAsyncTaskBlueprintProxy>();
	}
};
DUMPER7_ASSERTS_UARGetCandidateObjectAsyncTaskBlueprintProxy;

// Class AugmentedReality.ARComponent
// 0x0080 (0x0320 - 0x02A0)
class UARComponent : public USceneComponent
{
public:
	struct FGuid                                  NativeID;                                          // 0x02A0(0x0010)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B0[0x30];                                     // 0x02B0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bUseDefaultReplication;                            // 0x02E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     DefaultMeshMaterial;                               // 0x02E8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     DefaultWireframeMeshMaterial;                      // 0x02F0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMRMeshComponent*                       MRMeshComponent;                                   // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UARTrackedGeometry*                     MyTrackedGeometry;                                 // 0x0300(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_308[0x18];                                     // 0x0308(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UMRMeshComponent* GetMRMesh();
	void OnRep_Payload();
	void ReceiveRemove();
	void SetNativeID(const struct FGuid& NativeID_0);
	void UpdateVisualization();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARComponent")
	}
	static class UARComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARComponent>();
	}
};
DUMPER7_ASSERTS_UARComponent;

// Class AugmentedReality.ARPlaneComponent
// 0x00D0 (0x03F0 - 0x0320)
class UARPlaneComponent final : public UARComponent
{
public:
	struct FARPlaneUpdatePayload                  ReplicatedPayload;                                 // 0x0320(0x00D0)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)

public:
	static const TMap<EARObjectClassification, struct FLinearColor> GetObjectClassificationDebugColors();
	static void SetObjectClassificationDebugColors(const TMap<EARObjectClassification, struct FLinearColor>& InColors);
	static void SetPlaneComponentDebugMode(EPlaneComponentDebugMode NewDebugMode);

	void ReceiveAdd(const struct FARPlaneUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARPlaneUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARPlaneUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARPlaneComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARPlaneComponent")
	}
	static class UARPlaneComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARPlaneComponent>();
	}
};
DUMPER7_ASSERTS_UARPlaneComponent;

// Class AugmentedReality.ARPointComponent
// 0x0010 (0x0330 - 0x0320)
class UARPointComponent final : public UARComponent
{
public:
	struct FARPointUpdatePayload                  ReplicatedPayload;                                 // 0x0320(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_321[0xF];                                      // 0x0321(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ReceiveAdd(const struct FARPointUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARPointUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARPointUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARPointComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARPointComponent")
	}
	static class UARPointComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARPointComponent>();
	}
};
DUMPER7_ASSERTS_UARPointComponent;

// Class AugmentedReality.ARFaceComponent
// 0x0090 (0x03B0 - 0x0320)
class UARFaceComponent final : public UARComponent
{
public:
	EARFaceTransformMixing                        TransformSetting;                                  // 0x0320(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUpdateVertexNormal;                               // 0x0321(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bFaceOutOfScreen;                                  // 0x0322(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_323[0x5];                                      // 0x0323(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FARFaceUpdatePayload                   ReplicatedPayload;                                 // 0x0328(0x0060)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_388[0x28];                                     // 0x0388(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void SetFaceComponentDebugMode(EFaceComponentDebugMode NewDebugMode);

	void ReceiveAdd(const struct FARFaceUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARFaceUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARFaceUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARFaceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARFaceComponent")
	}
	static class UARFaceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARFaceComponent>();
	}
};
DUMPER7_ASSERTS_UARFaceComponent;

// Class AugmentedReality.ARImageComponent
// 0x00A0 (0x03C0 - 0x0320)
class UARImageComponent final : public UARComponent
{
public:
	struct FARImageUpdatePayload                  ReplicatedPayload;                                 // 0x0320(0x00A0)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	static void SetImageComponentDebugMode(EImageComponentDebugMode NewDebugMode);

	void ReceiveAdd(const struct FARImageUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARImageUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARImageUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARImageComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARImageComponent")
	}
	static class UARImageComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARImageComponent>();
	}
};
DUMPER7_ASSERTS_UARImageComponent;

// Class AugmentedReality.ARQRCodeComponent
// 0x00B0 (0x03D0 - 0x0320)
class UARQRCodeComponent final : public UARComponent
{
public:
	struct FARQRCodeUpdatePayload                 ReplicatedPayload;                                 // 0x0320(0x00B0)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)

public:
	static void SetQRCodeComponentDebugMode(EQRCodeComponentDebugMode NewDebugMode);

	void ReceiveAdd(const struct FARQRCodeUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARQRCodeUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARQRCodeUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARQRCodeComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARQRCodeComponent")
	}
	static class UARQRCodeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARQRCodeComponent>();
	}
};
DUMPER7_ASSERTS_UARQRCodeComponent;

// Class AugmentedReality.ARPoseComponent
// 0x0070 (0x0390 - 0x0320)
class UARPoseComponent final : public UARComponent
{
public:
	struct FARPoseUpdatePayload                   ReplicatedPayload;                                 // 0x0320(0x0070)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)

public:
	static void SetPoseComponentDebugMode(EPoseComponentDebugMode NewDebugMode);

	void ReceiveAdd(const struct FARPoseUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARPoseUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARPoseUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARPoseComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARPoseComponent")
	}
	static class UARPoseComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARPoseComponent>();
	}
};
DUMPER7_ASSERTS_UARPoseComponent;

// Class AugmentedReality.AREnvironmentProbeComponent
// 0x0060 (0x0380 - 0x0320)
class UAREnvironmentProbeComponent final : public UARComponent
{
public:
	struct FAREnvironmentProbeUpdatePayload       ReplicatedPayload;                                 // 0x0320(0x0060)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	void ReceiveAdd(const struct FAREnvironmentProbeUpdatePayload& Payload);
	void ReceiveUpdate(const struct FAREnvironmentProbeUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FAREnvironmentProbeUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AREnvironmentProbeComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AREnvironmentProbeComponent")
	}
	static class UAREnvironmentProbeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAREnvironmentProbeComponent>();
	}
};
DUMPER7_ASSERTS_UAREnvironmentProbeComponent;

// Class AugmentedReality.ARObjectComponent
// 0x0060 (0x0380 - 0x0320)
class UARObjectComponent final : public UARComponent
{
public:
	struct FARObjectUpdatePayload                 ReplicatedPayload;                                 // 0x0320(0x0060)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	void ReceiveAdd(const struct FARObjectUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARObjectUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARObjectUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARObjectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARObjectComponent")
	}
	static class UARObjectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARObjectComponent>();
	}
};
DUMPER7_ASSERTS_UARObjectComponent;

// Class AugmentedReality.ARMeshComponent
// 0x0090 (0x03B0 - 0x0320)
class UARMeshComponent final : public UARComponent
{
public:
	struct FARMeshUpdatePayload                   ReplicatedPayload;                                 // 0x0320(0x0090)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	void ReceiveAdd(const struct FARMeshUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARMeshUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARMeshUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARMeshComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARMeshComponent")
	}
	static class UARMeshComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARMeshComponent>();
	}
};
DUMPER7_ASSERTS_UARMeshComponent;

// Class AugmentedReality.ARGeoAnchorComponent
// 0x00A0 (0x03C0 - 0x0320)
class UARGeoAnchorComponent final : public UARComponent
{
public:
	struct FARGeoAnchorUpdatePayload              ReplicatedPayload;                                 // 0x0320(0x00A0)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)

public:
	static void SetGeoAnchorComponentDebugMode(EGeoAnchorComponentDebugMode NewDebugMode);

	void ReceiveAdd(const struct FARGeoAnchorUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARGeoAnchorUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARGeoAnchorUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARGeoAnchorComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARGeoAnchorComponent")
	}
	static class UARGeoAnchorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARGeoAnchorComponent>();
	}
};
DUMPER7_ASSERTS_UARGeoAnchorComponent;

// Class AugmentedReality.ARDependencyHandler
// 0x0000 (0x0028 - 0x0028)
class UARDependencyHandler final : public UObject
{
public:
	static class UARDependencyHandler* GetARDependencyHandler();

	void CheckARServiceAvailability(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, EARServiceAvailability* OutAvailability);
	void InstallARService(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, EARServiceInstallRequestResult* OutInstallResult);
	void RequestARSessionPermission(class UObject* WorldContextObject, class UARSessionConfig* SessionConfig, const struct FLatentActionInfo& LatentInfo, EARServicePermissionRequestResult* OutPermissionResult);
	void StartARSessionLatent(class UObject* WorldContextObject, class UARSessionConfig* SessionConfig, const struct FLatentActionInfo& LatentInfo);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARDependencyHandler")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARDependencyHandler")
	}
	static class UARDependencyHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARDependencyHandler>();
	}
};
DUMPER7_ASSERTS_UARDependencyHandler;

// Class AugmentedReality.ARGeoTrackingSupport
// 0x0000 (0x0028 - 0x0028)
class UARGeoTrackingSupport final : public UObject
{
public:
	static class UARGeoTrackingSupport* GetGeoTrackingSupport();

	bool AddGeoAnchorAtLocation(float Longitude, float Latitude, const class FString& OptionalAnchorName);
	bool AddGeoAnchorAtLocationWithAltitude(float Longitude, float Latitude, float AltitudeMeters, const class FString& OptionalAnchorName);

	EARGeoTrackingAccuracy GetGeoTrackingAccuracy() const;
	EARGeoTrackingState GetGeoTrackingState() const;
	EARGeoTrackingStateReason GetGeoTrackingStateReason() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARGeoTrackingSupport")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARGeoTrackingSupport")
	}
	static class UARGeoTrackingSupport* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARGeoTrackingSupport>();
	}
};
DUMPER7_ASSERTS_UARGeoTrackingSupport;

// Class AugmentedReality.CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
// 0x0050 (0x00A0 - 0x0050)
class UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy final : public UARBaseAsyncTaskBlueprintProxy
{
public:
	TMulticastInlineDelegate<void(bool bIsAvailable, const class FString& Error)> OnSuccess;         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bIsAvailable, const class FString& Error)> OnFailed;          // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x30];                                      // 0x0070(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy* CheckGeoTrackingAvailability(class UObject* WorldContextObject);
	static class UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy* CheckGeoTrackingAvailabilityAtLocation(class UObject* WorldContextObject, float Longitude, float Latitude);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy")
	}
	static class UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy>();
	}
};
DUMPER7_ASSERTS_UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy;

// Class AugmentedReality.GetGeoLocationAsyncTaskBlueprintProxy
// 0x0058 (0x00A8 - 0x0050)
class UGetGeoLocationAsyncTaskBlueprintProxy final : public UARBaseAsyncTaskBlueprintProxy
{
public:
	TMulticastInlineDelegate<void(float Longitude, float Latitude, float Altitude, const class FString& Error)> OnSuccess; // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float Longitude, float Latitude, float Altitude, const class FString& Error)> OnFailed; // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x38];                                      // 0x0070(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UGetGeoLocationAsyncTaskBlueprintProxy* GetGeoLocationAtWorldPosition(class UObject* WorldContextObject, const struct FVector& WorldPosition);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GetGeoLocationAsyncTaskBlueprintProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GetGeoLocationAsyncTaskBlueprintProxy")
	}
	static class UGetGeoLocationAsyncTaskBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGetGeoLocationAsyncTaskBlueprintProxy>();
	}
};
DUMPER7_ASSERTS_UGetGeoLocationAsyncTaskBlueprintProxy;

// Class AugmentedReality.ARLifeCycleComponent
// 0x0030 (0x02D0 - 0x02A0)
class UARLifeCycleComponent final : public USceneComponent
{
public:
	TMulticastInlineDelegate<void(class UClass* ComponentClass, const struct FGuid& NativeID, class AARActor* SpawnedActor)> OnARActorSpawnedDelegate; // 0x02A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AARActor* Actor)> OnARActorToBeDestroyedDelegate;            // 0x02B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C0[0x10];                                     // 0x02C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ServerDestroyARActor(class AARActor* Actor);
	void ServerSpawnARActor(class UClass* ComponentClass, const struct FGuid& NativeID);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARLifeCycleComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARLifeCycleComponent")
	}
	static class UARLifeCycleComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARLifeCycleComponent>();
	}
};
DUMPER7_ASSERTS_UARLifeCycleComponent;

// Class AugmentedReality.ARLightEstimate
// 0x0000 (0x0028 - 0x0028)
class UARLightEstimate : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARLightEstimate")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARLightEstimate")
	}
	static class UARLightEstimate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARLightEstimate>();
	}
};
DUMPER7_ASSERTS_UARLightEstimate;

// Class AugmentedReality.ARBasicLightEstimate
// 0x0018 (0x0040 - 0x0028)
class UARBasicLightEstimate final : public UARLightEstimate
{
public:
	float                                         AmbientIntensityLumens;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AmbientColorTemperatureKelvin;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                           AmbientColor;                                      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	struct FLinearColor GetAmbientColor() const;
	float GetAmbientColorTemperatureKelvin() const;
	float GetAmbientIntensityLumens() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARBasicLightEstimate")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARBasicLightEstimate")
	}
	static class UARBasicLightEstimate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARBasicLightEstimate>();
	}
};
DUMPER7_ASSERTS_UARBasicLightEstimate;

// Class AugmentedReality.AROriginActor
// 0x0000 (0x0298 - 0x0298)
class AAROriginActor final : public AActor
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AROriginActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AROriginActor")
	}
	static class AAROriginActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAROriginActor>();
	}
};
DUMPER7_ASSERTS_AAROriginActor;

// Class AugmentedReality.ARPin
// 0x0128 (0x0150 - 0x0028)
class UARPin final : public UObject
{
public:
	class UARTrackedGeometry*                     TrackedGeometry;                                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                        PinnedComponent;                                   // 0x0030(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LocalToTrackingTransform;                          // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTransform                             LocalToAlignedTrackingTransform;                   // 0x00A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EARTrackingState                              TrackingState;                                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_101[0x1F];                                     // 0x0101(0x001F)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EARTrackingState NewTrackingState)> OnARTrackingStateChanged;      // 0x0120(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(const struct FTransform& OldToNewTransform)> OnARTransformUpdated; // 0x0130(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_140[0x10];                                     // 0x0140(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DebugDraw(class UWorld* World, const struct FLinearColor& Color, float Scale, float PersistForSeconds) const;
	class FName GetDebugName() const;
	struct FTransform GetLocalToTrackingTransform() const;
	struct FTransform GetLocalToWorldTransform() const;
	class USceneComponent* GetPinnedComponent() const;
	class UARTrackedGeometry* GetTrackedGeometry() const;
	EARTrackingState GetTrackingState() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARPin")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARPin")
	}
	static class UARPin* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARPin>();
	}
};
DUMPER7_ASSERTS_UARPin;

// Class AugmentedReality.ARSessionConfig
// 0x00E0 (0x0110 - 0x0030)
class UARSessionConfig final : public UDataAsset
{
public:
	bool                                          bGenerateMeshDataFromTrackedGeometry;              // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGenerateCollisionForMeshData;                     // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGenerateNavMeshForMeshData;                       // 0x0032(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseMeshDataForOcclusion;                          // 0x0033(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRenderMeshDataInWireframe;                        // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTrackSceneObjects;                                // 0x0035(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsePersonSegmentationForOcclusion;                // 0x0036(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSceneDepthForOcclusion;                        // 0x0037(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAutomaticImageScaleEstimation;                 // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseStandardOnboardingUX;                          // 0x0039(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EARWorldAlignment                             WorldAlignment;                                    // 0x003A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARSessionType                                SessionType;                                       // 0x003B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARPlaneDetectionMode                         PlaneDetectionMode;                                // 0x003C(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHorizontalPlaneDetection;                         // 0x003D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bVerticalPlaneDetection;                           // 0x003E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableAutoFocus;                                  // 0x003F(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARLightEstimationMode                        LightEstimationMode;                               // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARFrameSyncMode                              FrameSyncMode;                                     // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableAutomaticCameraOverlay;                     // 0x0042(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableAutomaticCameraTracking;                    // 0x0043(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bResetCameraTracking;                              // 0x0044(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bResetTrackedObjects;                              // 0x0045(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UARCandidateImage*>              CandidateImages;                                   // 0x0048(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	int32                                         MaxNumSimultaneousImagesTracked;                   // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAREnvironmentCaptureProbeType                EnvironmentCaptureProbeType;                       // 0x005C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 WorldMapData;                                      // 0x0060(0x0010)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class UARCandidateObject*>             CandidateObjects;                                  // 0x0070(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FARVideoFormat                         DesiredVideoFormat;                                // 0x0080(0x000C)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bUseOptimalVideoFormat;                            // 0x008C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARFaceTrackingDirection                      FaceTrackingDirection;                             // 0x008D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARFaceTrackingUpdate                         FaceTrackingUpdate;                                // 0x008E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxNumberOfTrackedFaces;                           // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 SerializedARCandidateImageDatabase;                // 0x0098(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	EARSessionTrackingFeature                     EnabledSessionTrackingFeature;                     // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARSceneReconstruction                        SceneReconstructionMethod;                         // 0x00A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UARPlaneComponent>          PlaneComponentClass;                               // 0x00B0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARPointComponent>          PointComponentClass;                               // 0x00B8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARFaceComponent>           FaceComponentClass;                                // 0x00C0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARImageComponent>          ImageComponentClass;                               // 0x00C8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARQRCodeComponent>         QRCodeComponentClass;                              // 0x00D0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARPoseComponent>           PoseComponentClass;                                // 0x00D8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAREnvironmentProbeComponent> EnvironmentProbeComponentClass;                  // 0x00E0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARObjectComponent>         ObjectComponentClass;                              // 0x00E8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARMeshComponent>           MeshComponentClass;                                // 0x00F0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARGeoAnchorComponent>      GeoAnchorComponentClass;                           // 0x00F8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     DefaultMeshMaterial;                               // 0x0100(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     DefaultWireframeMeshMaterial;                      // 0x0108(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void AddCandidateImage(class UARCandidateImage* NewCandidateImage);
	void AddCandidateObject(class UARCandidateObject* CandidateObject);
	void ClearCandidateImages();
	void RemoveCandidateImage(class UARCandidateImage* CandidateImage);
	void RemoveCandidateImageAtIndex(int32 Index_0);
	void SetCandidateObjectList(const TArray<class UARCandidateObject*>& InCandidateObjects);
	void SetDesiredVideoFormat(const struct FARVideoFormat& NewFormat);
	void SetEnableAutoFocus(bool bNewValue);
	void SetFaceTrackingDirection(EARFaceTrackingDirection InDirection);
	void SetFaceTrackingUpdate(EARFaceTrackingUpdate InUpdate);
	void SetResetCameraTracking(bool bNewValue);
	void SetResetTrackedObjects(bool bNewValue);
	void SetSceneReconstructionMethod(EARSceneReconstruction InSceneReconstructionMethod);
	void SetSessionTrackingFeatureToEnable(EARSessionTrackingFeature InSessionTrackingFeature);
	void SetWorldMapData(const TArray<uint8>& WorldMapData_0);

	const TArray<class UARCandidateImage*> GetCandidateImageList() const;
	const TArray<class UARCandidateObject*> GetCandidateObjectList() const;
	struct FARVideoFormat GetDesiredVideoFormat() const;
	EARSessionTrackingFeature GetEnabledSessionTrackingFeature() const;
	EAREnvironmentCaptureProbeType GetEnvironmentCaptureProbeType() const;
	EARFaceTrackingDirection GetFaceTrackingDirection() const;
	EARFaceTrackingUpdate GetFaceTrackingUpdate() const;
	EARFrameSyncMode GetFrameSyncMode() const;
	EARLightEstimationMode GetLightEstimationMode() const;
	int32 GetMaxNumSimultaneousImagesTracked() const;
	EARPlaneDetectionMode GetPlaneDetectionMode() const;
	EARSceneReconstruction GetSceneReconstructionMethod() const;
	EARSessionType GetSessionType() const;
	EARWorldAlignment GetWorldAlignment() const;
	const TArray<uint8> GetWorldMapData() const;
	bool ShouldEnableAutoFocus() const;
	bool ShouldEnableCameraTracking() const;
	bool ShouldRenderCameraOverlay() const;
	bool ShouldResetCameraTracking() const;
	bool ShouldResetTrackedObjects() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARSessionConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARSessionConfig")
	}
	static class UARSessionConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARSessionConfig>();
	}
};
DUMPER7_ASSERTS_UARSessionConfig;

// Class AugmentedReality.ARSharedWorldGameMode
// 0x0068 (0x03E8 - 0x0380)
class AARSharedWorldGameMode final : public AGameMode
{
public:
	int32                                         BufferSizePerChunk;                                // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_384[0x64];                                     // 0x0384(0x0064)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class AARSharedWorldGameState* GetARSharedWorldGameState();
	void SetARSharedWorldData(const TArray<uint8>& ARWorldData);
	void SetARWorldSharingIsReady();
	void SetPreviewImageData(const TArray<uint8>& ImageData);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARSharedWorldGameMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARSharedWorldGameMode")
	}
	static class AARSharedWorldGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<AARSharedWorldGameMode>();
	}
};
DUMPER7_ASSERTS_AARSharedWorldGameMode;

// Class AugmentedReality.ARSharedWorldGameState
// 0x0038 (0x0348 - 0x0310)
class AARSharedWorldGameState final : public AGameState
{
public:
	TArray<uint8>                                 PreviewImageData;                                  // 0x0310(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ARWorldData;                                       // 0x0320(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         PreviewImageBytesTotal;                            // 0x0330(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ARWorldBytesTotal;                                 // 0x0334(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PreviewImageBytesDelivered;                        // 0x0338(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ARWorldBytesDelivered;                             // 0x033C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_340[0x8];                                      // 0x0340(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void K2_OnARWorldMapIsReady();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARSharedWorldGameState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARSharedWorldGameState")
	}
	static class AARSharedWorldGameState* GetDefaultObj()
	{
		return GetDefaultObjImpl<AARSharedWorldGameState>();
	}
};
DUMPER7_ASSERTS_AARSharedWorldGameState;

// Class AugmentedReality.ARSharedWorldPlayerController
// 0x0008 (0x0860 - 0x0858)
class AARSharedWorldPlayerController final : public APlayerController
{
public:
	uint8                                         Pad_858[0x8];                                      // 0x0858(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClientInitSharedWorld(int32 PreviewImageSize, int32 ARWorldDataSize);
	void ClientUpdateARWorldData(int32 Offset, const TArray<uint8>& Buffer);
	void ClientUpdatePreviewImageData(int32 Offset, const TArray<uint8>& Buffer);
	void ServerMarkReadyForReceiving();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARSharedWorldPlayerController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARSharedWorldPlayerController")
	}
	static class AARSharedWorldPlayerController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AARSharedWorldPlayerController>();
	}
};
DUMPER7_ASSERTS_AARSharedWorldPlayerController;

// Class AugmentedReality.ARSkyLight
// 0x0010 (0x02B8 - 0x02A8)
class AARSkyLight final : public ASkyLight
{
public:
	class UAREnvironmentCaptureProbe*             CaptureProbe;                                      // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B0[0x8];                                      // 0x02B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetEnvironmentCaptureProbe(class UAREnvironmentCaptureProbe* InCaptureProbe);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARSkyLight")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARSkyLight")
	}
	static class AARSkyLight* GetDefaultObj()
	{
		return GetDefaultObjImpl<AARSkyLight>();
	}
};
DUMPER7_ASSERTS_AARSkyLight;

// Class AugmentedReality.ARTexture
// 0x0020 (0x01F0 - 0x01D0)
#pragma pack(push, 0x1)
class alignas(0x10) UARTexture : public UTexture
{
public:
	EARTextureType                                TextureType;                                       // 0x01C8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Timestamp;                                         // 0x01CC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ExternalTextureGuid;                               // 0x01D0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2f                              Size;                                              // 0x01E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARTexture")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARTexture")
	}
	static class UARTexture* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTexture>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_UARTexture;

// Class AugmentedReality.ARTextureCameraImage
// 0x0000 (0x01F0 - 0x01F0)
class UARTextureCameraImage final : public UARTexture
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARTextureCameraImage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARTextureCameraImage")
	}
	static class UARTextureCameraImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTextureCameraImage>();
	}
};
DUMPER7_ASSERTS_UARTextureCameraImage;

// Class AugmentedReality.ARTextureCameraDepth
// 0x0000 (0x01F0 - 0x01F0)
class UARTextureCameraDepth final : public UARTexture
{
public:
	EARDepthQuality                               DepthQuality;                                      // 0x01E8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EARDepthAccuracy                              DepthAccuracy;                                     // 0x01E9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTemporallySmoothed;                             // 0x01EA(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EB[0x5];                                      // 0x01EB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARTextureCameraDepth")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARTextureCameraDepth")
	}
	static class UARTextureCameraDepth* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTextureCameraDepth>();
	}
};
DUMPER7_ASSERTS_UARTextureCameraDepth;

// Class AugmentedReality.AREnvironmentCaptureProbeTexture
// 0x0020 (0x0280 - 0x0260)
class UAREnvironmentCaptureProbeTexture final : public UTextureCube
{
public:
	EARTextureType                                TextureType;                                       // 0x0260(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Timestamp;                                         // 0x0264(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ExternalTextureGuid;                               // 0x0268(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2f                              Size;                                              // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AREnvironmentCaptureProbeTexture")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AREnvironmentCaptureProbeTexture")
	}
	static class UAREnvironmentCaptureProbeTexture* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAREnvironmentCaptureProbeTexture>();
	}
};
DUMPER7_ASSERTS_UAREnvironmentCaptureProbeTexture;

// Class AugmentedReality.ARTraceResultDummy
// 0x0000 (0x0028 - 0x0028)
class UARTraceResultDummy final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARTraceResultDummy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARTraceResultDummy")
	}
	static class UARTraceResultDummy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTraceResultDummy>();
	}
};
DUMPER7_ASSERTS_UARTraceResultDummy;

// Class AugmentedReality.ARTrackedGeometry
// 0x0138 (0x0160 - 0x0028)
#pragma pack(push, 0x1)
class alignas(0x10) UARTrackedGeometry : public UObject
{
public:
	struct FGuid                                  UniqueID;                                          // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LocalToTrackingTransform;                          // 0x0040(0x0060)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                             LocalToAlignedTrackingTransform;                   // 0x00A0(0x0060)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARTrackingState                              TrackingState;                                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_101[0xF];                                      // 0x0101(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class UMRMeshComponent*                       UnderlyingMesh;                                    // 0x0110(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARObjectClassification                       ObjectClassification;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARSpatialMeshUsageFlags                      SpatialMeshUsageFlags;                             // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_11A[0x16];                                     // 0x011A(0x0016)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastUpdateFrameNumber;                             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_134[0xC];                                      // 0x0134(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DebugName;                                         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_148[0x10];                                     // 0x0148(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UMRMeshComponent* GetUnderlyingMesh();

	class FName GetDebugName() const;
	int32 GetLastUpdateFrameNumber() const;
	float GetLastUpdateTimestamp() const;
	struct FTransform GetLocalToTrackingTransform() const;
	struct FTransform GetLocalToWorldTransform() const;
	class FString GetName() const;
	EARObjectClassification GetObjectClassification() const;
	EARTrackingState GetTrackingState() const;
	bool HasSpatialMeshUsageFlag(const EARSpatialMeshUsageFlags InFlag) const;
	bool IsTracked() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARTrackedGeometry")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARTrackedGeometry")
	}
	static class UARTrackedGeometry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedGeometry>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_UARTrackedGeometry;

// Class AugmentedReality.ARPlaneGeometry
// 0x0050 (0x01B0 - 0x0160)
class UARPlaneGeometry final : public UARTrackedGeometry
{
public:
	EARPlaneOrientation                           Orientation;                                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Center;                                            // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                Extent;                                            // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                        BoundaryPolygon;                                   // 0x0190(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UARPlaneGeometry*                       SubsumedBy;                                        // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<struct FVector> GetBoundaryPolygonInLocalSpace() const;
	struct FVector GetCenter() const;
	struct FVector GetExtent() const;
	EARPlaneOrientation GetOrientation() const;
	class UARPlaneGeometry* GetSubsumedBy() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARPlaneGeometry")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARPlaneGeometry")
	}
	static class UARPlaneGeometry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARPlaneGeometry>();
	}
};
DUMPER7_ASSERTS_UARPlaneGeometry;

// Class AugmentedReality.ARTrackedPoint
// 0x0000 (0x0160 - 0x0160)
class UARTrackedPoint final : public UARTrackedGeometry
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARTrackedPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARTrackedPoint")
	}
	static class UARTrackedPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedPoint>();
	}
};
DUMPER7_ASSERTS_UARTrackedPoint;

// Class AugmentedReality.ARTrackedImage
// 0x0010 (0x0170 - 0x0160)
class UARTrackedImage : public UARTrackedGeometry
{
public:
	class UARCandidateImage*                      DetectedImage;                                     // 0x0158(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              EstimatedSize;                                     // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	struct FVector2D GetEstimateSize();

	class UARCandidateImage* GetDetectedImage() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARTrackedImage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARTrackedImage")
	}
	static class UARTrackedImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedImage>();
	}
};
DUMPER7_ASSERTS_UARTrackedImage;

// Class AugmentedReality.ARTrackedQRCode
// 0x0020 (0x0190 - 0x0170)
class UARTrackedQRCode final : public UARTrackedImage
{
public:
	class FString                                 QRCode;                                            // 0x0170(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Version;                                           // 0x0180(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_184[0xC];                                      // 0x0184(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARTrackedQRCode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARTrackedQRCode")
	}
	static class UARTrackedQRCode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedQRCode>();
	}
};
DUMPER7_ASSERTS_UARTrackedQRCode;

// Class AugmentedReality.ARFaceGeometry
// 0x0160 (0x02C0 - 0x0160)
class UARFaceGeometry final : public UARTrackedGeometry
{
public:
	struct FVector                                LookAtTarget;                                      // 0x0158(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTracked;                                        // 0x0170(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EARFaceBlendShape, float>                BlendShapes;                                       // 0x0178(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_1C8[0x38];                                     // 0x01C8(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LeftEyeTransform;                                  // 0x0200(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTransform                             RightEyeTransform;                                 // 0x0260(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	const TMap<EARFaceBlendShape, float> GetBlendShapes() const;
	float GetBlendShapeValue(EARFaceBlendShape BlendShape) const;
	const struct FTransform GetLocalSpaceEyeTransform(EAREye Eye) const;
	struct FTransform GetWorldSpaceEyeTransform(EAREye Eye) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARFaceGeometry")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARFaceGeometry")
	}
	static class UARFaceGeometry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARFaceGeometry>();
	}
};
DUMPER7_ASSERTS_UARFaceGeometry;

// Class AugmentedReality.AREnvironmentCaptureProbe
// 0x0020 (0x0180 - 0x0160)
class UAREnvironmentCaptureProbe final : public UARTrackedGeometry
{
public:
	struct FVector                                Extent;                                            // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAREnvironmentCaptureProbeTexture*      EnvironmentCaptureTexture;                         // 0x0170(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_178[0x8];                                      // 0x0178(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UAREnvironmentCaptureProbeTexture* GetEnvironmentCaptureTexture();

	struct FVector GetExtent() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AREnvironmentCaptureProbe")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AREnvironmentCaptureProbe")
	}
	static class UAREnvironmentCaptureProbe* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAREnvironmentCaptureProbe>();
	}
};
DUMPER7_ASSERTS_UAREnvironmentCaptureProbe;

// Class AugmentedReality.ARTrackedObject
// 0x0000 (0x0160 - 0x0160)
class UARTrackedObject final : public UARTrackedGeometry
{
public:
	class UARCandidateObject*                     DetectedObject;                                    // 0x0158(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UARCandidateObject* GetDetectedObject() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARTrackedObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARTrackedObject")
	}
	static class UARTrackedObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedObject>();
	}
};
DUMPER7_ASSERTS_UARTrackedObject;

// Class AugmentedReality.ARTrackedPose
// 0x0050 (0x01B0 - 0x0160)
class UARTrackedPose final : public UARTrackedGeometry
{
public:
	struct FARPose3D                              TrackedPose;                                       // 0x0158(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	const struct FARPose3D GetTrackedPoseData() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARTrackedPose")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARTrackedPose")
	}
	static class UARTrackedPose* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedPose>();
	}
};
DUMPER7_ASSERTS_UARTrackedPose;

// Class AugmentedReality.ARMeshGeometry
// 0x0000 (0x0160 - 0x0160)
class UARMeshGeometry final : public UARTrackedGeometry
{
public:
	bool GetObjectClassificationAtLocation(const struct FVector& InWorldLocation, EARObjectClassification* OutClassification, struct FVector* OutClassificationLocation, float MaxLocationDiff);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARMeshGeometry")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARMeshGeometry")
	}
	static class UARMeshGeometry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARMeshGeometry>();
	}
};
DUMPER7_ASSERTS_UARMeshGeometry;

// Class AugmentedReality.ARGeoAnchor
// 0x0010 (0x0170 - 0x0160)
class UARGeoAnchor final : public UARTrackedGeometry
{
public:
	uint8                                         Pad_158[0x18];                                     // 0x0158(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetAltitudeMeters() const;
	EARAltitudeSource GetAltitudeSource() const;
	float GetLatitude() const;
	float GetLongitude() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARGeoAnchor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARGeoAnchor")
	}
	static class UARGeoAnchor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARGeoAnchor>();
	}
};
DUMPER7_ASSERTS_UARGeoAnchor;

// Class AugmentedReality.ARTrackableNotifyComponent
// 0x0150 (0x01F0 - 0x00A0)
class UARTrackableNotifyComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(class UARTrackedGeometry* TrackedGeometry)> OnAddTrackedGeometry;  // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARTrackedGeometry* TrackedGeometry)> OnUpdateTrackedGeometry; // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARTrackedGeometry* TrackedGeometry)> OnRemoveTrackedGeometry; // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARPlaneGeometry* TrackedPlane)> OnAddTrackedPlane;          // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARPlaneGeometry* TrackedPlane)> OnUpdateTrackedPlane;       // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARPlaneGeometry* TrackedPlane)> OnRemoveTrackedPlane;       // 0x00F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARTrackedPoint* TrackedPoint)> OnAddTrackedPoint;           // 0x0100(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARTrackedPoint* TrackedPoint)> OnUpdateTrackedPoint;        // 0x0110(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARTrackedPoint* TrackedPoint)> OnRemoveTrackedPoint;        // 0x0120(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARTrackedImage* TrackedImage)> OnAddTrackedImage;           // 0x0130(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARTrackedImage* TrackedImage)> OnUpdateTrackedImage;        // 0x0140(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARTrackedImage* TrackedImage)> OnRemoveTrackedImage;        // 0x0150(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARFaceGeometry* TrackedFace)> OnAddTrackedFace;             // 0x0160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARFaceGeometry* TrackedFace)> OnUpdateTrackedFace;          // 0x0170(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARFaceGeometry* TrackedFace)> OnRemoveTrackedFace;          // 0x0180(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UAREnvironmentCaptureProbe* TrackedEnvProbe)> OnAddTrackedEnvProbe; // 0x0190(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UAREnvironmentCaptureProbe* TrackedEnvProbe)> OnUpdateTrackedEnvProbe; // 0x01A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UAREnvironmentCaptureProbe* TrackedEnvProbe)> OnRemoveTrackedEnvProbe; // 0x01B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARTrackedObject* TrackedObject)> OnAddTrackedObject;        // 0x01C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARTrackedObject* TrackedObject)> OnUpdateTrackedObject;     // 0x01D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UARTrackedObject* TrackedObject)> OnRemoveTrackedObject;     // 0x01E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARTrackableNotifyComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARTrackableNotifyComponent")
	}
	static class UARTrackableNotifyComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackableNotifyComponent>();
	}
};
DUMPER7_ASSERTS_UARTrackableNotifyComponent;

// Class AugmentedReality.ARTypesDummyClass
// 0x0000 (0x0028 - 0x0028)
class UARTypesDummyClass final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARTypesDummyClass")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARTypesDummyClass")
	}
	static class UARTypesDummyClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTypesDummyClass>();
	}
};
DUMPER7_ASSERTS_UARTypesDummyClass;

// Class AugmentedReality.ARCandidateImage
// 0x0028 (0x0058 - 0x0030)
class UARCandidateImage final : public UDataAsset
{
public:
	class UTexture2D*                             CandidateTexture;                                  // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 FriendlyName;                                      // 0x0038(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Width;                                             // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Height;                                            // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARCandidateImageOrientation                  Orientation;                                       // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UTexture2D* GetCandidateTexture() const;
	class FString GetFriendlyName() const;
	EARCandidateImageOrientation GetOrientation() const;
	float GetPhysicalHeight() const;
	float GetPhysicalWidth() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARCandidateImage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARCandidateImage")
	}
	static class UARCandidateImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARCandidateImage>();
	}
};
DUMPER7_ASSERTS_UARCandidateImage;

// Class AugmentedReality.ARCandidateObject
// 0x0058 (0x0088 - 0x0030)
class UARCandidateObject final : public UDataAsset
{
public:
	TArray<uint8>                                 CandidateObjectData;                               // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class FString                                 FriendlyName;                                      // 0x0040(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBox                                   BoundingBox;                                       // 0x0050(0x0038)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)

public:
	void SetBoundingBox(const struct FBox& InBoundingBox);
	void SetCandidateObjectData(const TArray<uint8>& InCandidateObject);
	void SetFriendlyName(const class FString& NewName);

	const struct FBox GetBoundingBox() const;
	const TArray<uint8> GetCandidateObjectData() const;
	class FString GetFriendlyName() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ARCandidateObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ARCandidateObject")
	}
	static class UARCandidateObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARCandidateObject>();
	}
};
DUMPER7_ASSERTS_UARCandidateObject;

}

