#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_UI

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "ReadyOrNot_structs.hpp"
#include "Slate_structs.hpp"
#include "CommonInput_structs.hpp"
#include "E_CustomizationGroups_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPF_UI.BPF_UI_C
// 0x0000 (0x0028 - 0x0028)
class UBPF_UI_C final : public UBlueprintFunctionLibrary
{
public:
	static void AddMargins(const struct FMargin& _, const struct FMargin& __, class UObject* __WorldContext, struct FMargin* ___);
	static void FormatViewProfileText(const class FString& PlayerName, class UObject* __WorldContext, class FText* FormattedText);
	static void Get_Player_State_Team_Color(class AReadyOrNotPlayerState* PlayerState, double Opacity, class UObject* __WorldContext, struct FLinearColor* LinearColor, struct FSlateColor* SlateColor);
	static void GetArmorCoverageText(EArmourCoverage Coverage, class UObject* __WorldContext, class FText* CoverageText);
	static void GetAttachmentSlotText(EWeaponAttachmentType AttachmentType, class UObject* __WorldContext, class FText* SlotText);
	static void GetColorByName(class FName ColorName, double Opacity, class UObject* __WorldContext, struct FLinearColor* LinearColor, struct FSlateColor* SlateColor);
	static void GetCustomizationCategoryText(ECustomizationType ItemCategory, class UObject* __WorldContext, class FText* Category_Text);
	static void GetCustomizationGroupByCategory(ECustomizationType Category, class UObject* __WorldContext, E_CustomizationGroups* Group);
	static void GetCustomizationGroupText(E_CustomizationGroups Group, class UObject* __WorldContext, class FText* Text);
	static void GetItemClassText(EItemClass ItemCategory, class UObject* __WorldContext, class FText* Category_Text);
	static void GetItemType(class UClass* BaseItemClass, class UObject* __WorldContext, EItemType* Item_Type);
	static void GetLinearColorScheme(double Opacity, class UObject* __WorldContext, struct FLinearColor* White, struct FLinearColor* Dark, struct FLinearColor* Red, struct FLinearColor* Yellow, struct FLinearColor* Blue, struct FLinearColor* Green);
	static void GetLoadoutCategoryText(EItemCategory ItemCategory, class UObject* __WorldContext, class FText* Category_Text);
	static void GetLoadoutWidget(class UObject* __WorldContext, class UW_Loadout_V2_C** AsW_Loadout_V2);
	static void GetMunitionTypeText(ELoadoutMunitionSlotType MunitionType, class UObject* __WorldContext, class FText* MunitionText);
	static void GetNVG_StyleDescription(ENVGStyle NVG_Style, class UObject* __WorldContext, class FText* CoverageText);
	static void GetNVG_StyleText(ENVGStyle NVG_Style, class UObject* __WorldContext, class FText* CoverageText);
	static void GetPlanLineColors(class UObject* __WorldContext, struct FMissionPlanLineColors* Colors);
	static void GetPlatformIcon(EGamePlatform Platform, class UObject* __WorldContext, TSoftObjectPtr<class UTexture2D>* NewParam);
	static void GetPlayerTeamColor(ETeamType Team, double Opacity, class UObject* __WorldContext, struct FLinearColor* LinearColor, struct FSlateColor* SlateColor);
	static void GetSlateColorScheme(double Opacity, class UObject* __WorldContext, struct FSlateColor* White, struct FSlateColor* Dark, struct FSlateColor* Red, struct FSlateColor* Yellow, struct FSlateColor* Blue, struct FSlateColor* Green);
	static void GetSyleGuide(class UObject* __WorldContext, class UPDA_UI_Styleguide_C** StyleGuide);
	static void GetTeamColorByEquippingSwatEnum(EEquippingSwat EquippingSwat, double Opacity, class UObject* __WorldContext, struct FLinearColor* LinearColor, struct FSlateColor* SlateColor);
	static void IsCurrentPresetDirty(bool Customization, class UObject* __WorldContext, bool* IsDirty);
	static void MultiplyMargins(const struct FMargin& _, const struct FMargin& __, class UObject* __WorldContext, struct FMargin* ___);
	static void RemoveSpacesFromString(const class FString& String, class UObject* __WorldContext, class FString* ReturnString, class FText* ReturnText, class FName* ReturnName);
	static void SetScrollboxScrollRule(class UScrollBox* ScrollBox, class UObject* __WorldContext);
	static void TextIsNotEmpty(const class FText& InText, class UObject* __WorldContext, bool* NotEmpty);
	static void TextToName(const class FText& InText, class UObject* __WorldContext, class FName* OutName);

	void GetAmmoCategoryText(class UClass* ItemData, class UObject* __WorldContext, class FText* Text);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BPF_UI_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BPF_UI_C")
	}
	static class UBPF_UI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPF_UI_C>();
	}
};
DUMPER7_ASSERTS_UBPF_UI_C;

}

