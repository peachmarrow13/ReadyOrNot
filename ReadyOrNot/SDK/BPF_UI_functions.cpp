#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_UI

#include "Basic.hpp"

#include "BPF_UI_classes.hpp"
#include "BPF_UI_parameters.hpp"


namespace SDK
{

// Function BPF_UI.BPF_UI_C.AddMargins
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FMargin&                   _                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FMargin&                   __                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FMargin*                         ___                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPF_UI_C::AddMargins(const struct FMargin& _, const struct FMargin& __, class UObject* __WorldContext, struct FMargin* ___)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "AddMargins");

	Params::BPF_UI_C_AddMargins Parms{};

	Parms._ = std::move(_);
	Parms.__ = std::move(__);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (___ != nullptr)
		*___ = std::move(Parms.___);
}


// Function BPF_UI.BPF_UI_C.FormatViewProfileText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FString&                    PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            FormattedText                                          (Parm, OutParm)

void UBPF_UI_C::FormatViewProfileText(const class FString& PlayerName, class UObject* __WorldContext, class FText* FormattedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "FormatViewProfileText");

	Params::BPF_UI_C_FormatViewProfileText Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FormattedText != nullptr)
		*FormattedText = std::move(Parms.FormattedText);
}


// Function BPF_UI.BPF_UI_C.Get Player State Team Color
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AReadyOrNotPlayerState*           PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    LinearColor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor*                     SlateColor                                             (Parm, OutParm)

void UBPF_UI_C::Get_Player_State_Team_Color(class AReadyOrNotPlayerState* PlayerState, double Opacity, class UObject* __WorldContext, struct FLinearColor* LinearColor, struct FSlateColor* SlateColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "Get Player State Team Color");

	Params::BPF_UI_C_Get_Player_State_Team_Color Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Opacity = Opacity;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LinearColor != nullptr)
		*LinearColor = std::move(Parms.LinearColor);

	if (SlateColor != nullptr)
		*SlateColor = std::move(Parms.SlateColor);
}


// Function BPF_UI.BPF_UI_C.GetArmorCoverageText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EArmourCoverage                         Coverage                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            CoverageText                                           (Parm, OutParm)

void UBPF_UI_C::GetArmorCoverageText(EArmourCoverage Coverage, class UObject* __WorldContext, class FText* CoverageText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetArmorCoverageText");

	Params::BPF_UI_C_GetArmorCoverageText Parms{};

	Parms.Coverage = Coverage;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CoverageText != nullptr)
		*CoverageText = std::move(Parms.CoverageText);
}


// Function BPF_UI.BPF_UI_C.GetAttachmentSlotText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EWeaponAttachmentType                   AttachmentType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            SlotText                                               (Parm, OutParm)

void UBPF_UI_C::GetAttachmentSlotText(EWeaponAttachmentType AttachmentType, class UObject* __WorldContext, class FText* SlotText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetAttachmentSlotText");

	Params::BPF_UI_C_GetAttachmentSlotText Parms{};

	Parms.AttachmentType = AttachmentType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SlotText != nullptr)
		*SlotText = std::move(Parms.SlotText);
}


// Function BPF_UI.BPF_UI_C.GetColorByName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ColorName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    LinearColor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor*                     SlateColor                                             (Parm, OutParm)

void UBPF_UI_C::GetColorByName(class FName ColorName, double Opacity, class UObject* __WorldContext, struct FLinearColor* LinearColor, struct FSlateColor* SlateColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetColorByName");

	Params::BPF_UI_C_GetColorByName Parms{};

	Parms.ColorName = ColorName;
	Parms.Opacity = Opacity;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LinearColor != nullptr)
		*LinearColor = std::move(Parms.LinearColor);

	if (SlateColor != nullptr)
		*SlateColor = std::move(Parms.SlateColor);
}


// Function BPF_UI.BPF_UI_C.GetCustomizationCategoryText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ECustomizationType                      ItemCategory                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Category_Text                                          (Parm, OutParm)

void UBPF_UI_C::GetCustomizationCategoryText(ECustomizationType ItemCategory, class UObject* __WorldContext, class FText* Category_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetCustomizationCategoryText");

	Params::BPF_UI_C_GetCustomizationCategoryText Parms{};

	Parms.ItemCategory = ItemCategory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Category_Text != nullptr)
		*Category_Text = std::move(Parms.Category_Text);
}


// Function BPF_UI.BPF_UI_C.GetCustomizationGroupByCategory
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ECustomizationType                      Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups*                  Group                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_UI_C::GetCustomizationGroupByCategory(ECustomizationType Category, class UObject* __WorldContext, E_CustomizationGroups* Group)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetCustomizationGroupByCategory");

	Params::BPF_UI_C_GetCustomizationGroupByCategory Parms{};

	Parms.Category = Category;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Group != nullptr)
		*Group = Parms.Group;
}


// Function BPF_UI.BPF_UI_C.GetCustomizationGroupText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_CustomizationGroups                   Group                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Text                                                   (Parm, OutParm)

void UBPF_UI_C::GetCustomizationGroupText(E_CustomizationGroups Group, class UObject* __WorldContext, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetCustomizationGroupText");

	Params::BPF_UI_C_GetCustomizationGroupText Parms{};

	Parms.Group = Group;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function BPF_UI.BPF_UI_C.GetItemClassText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EItemClass                              ItemCategory                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Category_Text                                          (Parm, OutParm)

void UBPF_UI_C::GetItemClassText(EItemClass ItemCategory, class UObject* __WorldContext, class FText* Category_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetItemClassText");

	Params::BPF_UI_C_GetItemClassText Parms{};

	Parms.ItemCategory = ItemCategory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Category_Text != nullptr)
		*Category_Text = std::move(Parms.Category_Text);
}


// Function BPF_UI.BPF_UI_C.GetItemType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           BaseItemClass                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EItemType*                              Item_Type                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_UI_C::GetItemType(class UClass* BaseItemClass, class UObject* __WorldContext, EItemType* Item_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetItemType");

	Params::BPF_UI_C_GetItemType Parms{};

	Parms.BaseItemClass = BaseItemClass;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Item_Type != nullptr)
		*Item_Type = Parms.Item_Type;
}


// Function BPF_UI.BPF_UI_C.GetLinearColorScheme
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    White                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Dark                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Red                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Yellow                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Blue                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Green                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_UI_C::GetLinearColorScheme(double Opacity, class UObject* __WorldContext, struct FLinearColor* White, struct FLinearColor* Dark, struct FLinearColor* Red, struct FLinearColor* Yellow, struct FLinearColor* Blue, struct FLinearColor* Green)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetLinearColorScheme");

	Params::BPF_UI_C_GetLinearColorScheme Parms{};

	Parms.Opacity = Opacity;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (White != nullptr)
		*White = std::move(Parms.White);

	if (Dark != nullptr)
		*Dark = std::move(Parms.Dark);

	if (Red != nullptr)
		*Red = std::move(Parms.Red);

	if (Yellow != nullptr)
		*Yellow = std::move(Parms.Yellow);

	if (Blue != nullptr)
		*Blue = std::move(Parms.Blue);

	if (Green != nullptr)
		*Green = std::move(Parms.Green);
}


// Function BPF_UI.BPF_UI_C.GetLoadoutCategoryText
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EItemCategory                           ItemCategory                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Category_Text                                          (Parm, OutParm)

void UBPF_UI_C::GetLoadoutCategoryText(EItemCategory ItemCategory, class UObject* __WorldContext, class FText* Category_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetLoadoutCategoryText");

	Params::BPF_UI_C_GetLoadoutCategoryText Parms{};

	Parms.ItemCategory = ItemCategory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Category_Text != nullptr)
		*Category_Text = std::move(Parms.Category_Text);
}


// Function BPF_UI.BPF_UI_C.GetLoadoutWidget
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UW_Loadout_V2_C**                 AsW_Loadout_V2                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPF_UI_C::GetLoadoutWidget(class UObject* __WorldContext, class UW_Loadout_V2_C** AsW_Loadout_V2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetLoadoutWidget");

	Params::BPF_UI_C_GetLoadoutWidget Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (AsW_Loadout_V2 != nullptr)
		*AsW_Loadout_V2 = Parms.AsW_Loadout_V2;
}


// Function BPF_UI.BPF_UI_C.GetMunitionTypeText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ELoadoutMunitionSlotType                MunitionType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            MunitionText                                           (Parm, OutParm)

void UBPF_UI_C::GetMunitionTypeText(ELoadoutMunitionSlotType MunitionType, class UObject* __WorldContext, class FText* MunitionText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetMunitionTypeText");

	Params::BPF_UI_C_GetMunitionTypeText Parms{};

	Parms.MunitionType = MunitionType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MunitionText != nullptr)
		*MunitionText = std::move(Parms.MunitionText);
}


// Function BPF_UI.BPF_UI_C.GetNVG_StyleDescription
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENVGStyle                               NVG_Style                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            CoverageText                                           (Parm, OutParm)

void UBPF_UI_C::GetNVG_StyleDescription(ENVGStyle NVG_Style, class UObject* __WorldContext, class FText* CoverageText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetNVG_StyleDescription");

	Params::BPF_UI_C_GetNVG_StyleDescription Parms{};

	Parms.NVG_Style = NVG_Style;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CoverageText != nullptr)
		*CoverageText = std::move(Parms.CoverageText);
}


// Function BPF_UI.BPF_UI_C.GetNVG_StyleText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENVGStyle                               NVG_Style                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            CoverageText                                           (Parm, OutParm)

void UBPF_UI_C::GetNVG_StyleText(ENVGStyle NVG_Style, class UObject* __WorldContext, class FText* CoverageText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetNVG_StyleText");

	Params::BPF_UI_C_GetNVG_StyleText Parms{};

	Parms.NVG_Style = NVG_Style;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CoverageText != nullptr)
		*CoverageText = std::move(Parms.CoverageText);
}


// Function BPF_UI.BPF_UI_C.GetPlanLineColors
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FMissionPlanLineColors*          Colors                                                 (Parm, OutParm, NoDestructor)

void UBPF_UI_C::GetPlanLineColors(class UObject* __WorldContext, struct FMissionPlanLineColors* Colors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetPlanLineColors");

	Params::BPF_UI_C_GetPlanLineColors Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Colors != nullptr)
		*Colors = std::move(Parms.Colors);
}


// Function BPF_UI.BPF_UI_C.GetPlatformIcon
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EGamePlatform                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>*       NewParam                                               (Parm, OutParm, HasGetValueTypeHash)

void UBPF_UI_C::GetPlatformIcon(EGamePlatform Platform, class UObject* __WorldContext, TSoftObjectPtr<class UTexture2D>* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetPlatformIcon");

	Params::BPF_UI_C_GetPlatformIcon Parms{};

	Parms.Platform = Platform;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPF_UI.BPF_UI_C.GetPlayerTeamColor
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ETeamType                               Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    LinearColor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor*                     SlateColor                                             (Parm, OutParm)

void UBPF_UI_C::GetPlayerTeamColor(ETeamType Team, double Opacity, class UObject* __WorldContext, struct FLinearColor* LinearColor, struct FSlateColor* SlateColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetPlayerTeamColor");

	Params::BPF_UI_C_GetPlayerTeamColor Parms{};

	Parms.Team = Team;
	Parms.Opacity = Opacity;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LinearColor != nullptr)
		*LinearColor = std::move(Parms.LinearColor);

	if (SlateColor != nullptr)
		*SlateColor = std::move(Parms.SlateColor);
}


// Function BPF_UI.BPF_UI_C.GetSlateColorScheme
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor*                     White                                                  (Parm, OutParm)
// struct FSlateColor*                     Dark                                                   (Parm, OutParm)
// struct FSlateColor*                     Red                                                    (Parm, OutParm)
// struct FSlateColor*                     Yellow                                                 (Parm, OutParm)
// struct FSlateColor*                     Blue                                                   (Parm, OutParm)
// struct FSlateColor*                     Green                                                  (Parm, OutParm)

void UBPF_UI_C::GetSlateColorScheme(double Opacity, class UObject* __WorldContext, struct FSlateColor* White, struct FSlateColor* Dark, struct FSlateColor* Red, struct FSlateColor* Yellow, struct FSlateColor* Blue, struct FSlateColor* Green)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetSlateColorScheme");

	Params::BPF_UI_C_GetSlateColorScheme Parms{};

	Parms.Opacity = Opacity;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (White != nullptr)
		*White = std::move(Parms.White);

	if (Dark != nullptr)
		*Dark = std::move(Parms.Dark);

	if (Red != nullptr)
		*Red = std::move(Parms.Red);

	if (Yellow != nullptr)
		*Yellow = std::move(Parms.Yellow);

	if (Blue != nullptr)
		*Blue = std::move(Parms.Blue);

	if (Green != nullptr)
		*Green = std::move(Parms.Green);
}


// Function BPF_UI.BPF_UI_C.GetSyleGuide
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPDA_UI_Styleguide_C**            StyleGuide                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPF_UI_C::GetSyleGuide(class UObject* __WorldContext, class UPDA_UI_Styleguide_C** StyleGuide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetSyleGuide");

	Params::BPF_UI_C_GetSyleGuide Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (StyleGuide != nullptr)
		*StyleGuide = Parms.StyleGuide;
}


// Function BPF_UI.BPF_UI_C.GetTeamColorByEquippingSwatEnum
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EEquippingSwat                          EquippingSwat                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    LinearColor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor*                     SlateColor                                             (Parm, OutParm)

void UBPF_UI_C::GetTeamColorByEquippingSwatEnum(EEquippingSwat EquippingSwat, double Opacity, class UObject* __WorldContext, struct FLinearColor* LinearColor, struct FSlateColor* SlateColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetTeamColorByEquippingSwatEnum");

	Params::BPF_UI_C_GetTeamColorByEquippingSwatEnum Parms{};

	Parms.EquippingSwat = EquippingSwat;
	Parms.Opacity = Opacity;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LinearColor != nullptr)
		*LinearColor = std::move(Parms.LinearColor);

	if (SlateColor != nullptr)
		*SlateColor = std::move(Parms.SlateColor);
}


// Function BPF_UI.BPF_UI_C.IsCurrentPresetDirty
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Customization                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsDirty                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_UI_C::IsCurrentPresetDirty(bool Customization, class UObject* __WorldContext, bool* IsDirty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "IsCurrentPresetDirty");

	Params::BPF_UI_C_IsCurrentPresetDirty Parms{};

	Parms.Customization = Customization;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsDirty != nullptr)
		*IsDirty = Parms.IsDirty;
}


// Function BPF_UI.BPF_UI_C.MultiplyMargins
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FMargin&                   _                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FMargin&                   __                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FMargin*                         ___                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPF_UI_C::MultiplyMargins(const struct FMargin& _, const struct FMargin& __, class UObject* __WorldContext, struct FMargin* ___)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "MultiplyMargins");

	Params::BPF_UI_C_MultiplyMargins Parms{};

	Parms._ = std::move(_);
	Parms.__ = std::move(__);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (___ != nullptr)
		*___ = std::move(Parms.___);
}


// Function BPF_UI.BPF_UI_C.RemoveSpacesFromString
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FString&                    String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString*                          ReturnString                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FText*                            ReturnText                                             (Parm, OutParm)
// class FName*                            ReturnName                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_UI_C::RemoveSpacesFromString(const class FString& String, class UObject* __WorldContext, class FString* ReturnString, class FText* ReturnText, class FName* ReturnName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "RemoveSpacesFromString");

	Params::BPF_UI_C_RemoveSpacesFromString Parms{};

	Parms.String = std::move(String);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ReturnString != nullptr)
		*ReturnString = std::move(Parms.ReturnString);

	if (ReturnText != nullptr)
		*ReturnText = std::move(Parms.ReturnText);

	if (ReturnName != nullptr)
		*ReturnName = Parms.ReturnName;
}


// Function BPF_UI.BPF_UI_C.SetScrollboxScrollRule
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScrollBox*                       ScrollBox                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPF_UI_C::SetScrollboxScrollRule(class UScrollBox* ScrollBox, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "SetScrollboxScrollRule");

	Params::BPF_UI_C_SetScrollboxScrollRule Parms{};

	Parms.ScrollBox = ScrollBox;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_UI.BPF_UI_C.TextIsNotEmpty
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FText&                      InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   NotEmpty                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_UI_C::TextIsNotEmpty(const class FText& InText, class UObject* __WorldContext, bool* NotEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "TextIsNotEmpty");

	Params::BPF_UI_C_TextIsNotEmpty Parms{};

	Parms.InText = std::move(InText);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NotEmpty != nullptr)
		*NotEmpty = Parms.NotEmpty;
}


// Function BPF_UI.BPF_UI_C.TextToName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FText&                      InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName*                            OutName                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_UI_C::TextToName(const class FText& InText, class UObject* __WorldContext, class FName* OutName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "TextToName");

	Params::BPF_UI_C_TextToName Parms{};

	Parms.InText = std::move(InText);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutName != nullptr)
		*OutName = Parms.OutName;
}


// Function BPF_UI.BPF_UI_C.GetAmmoCategoryText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           ItemData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Text                                                   (Parm, OutParm)

void UBPF_UI_C::GetAmmoCategoryText(class UClass* ItemData, class UObject* __WorldContext, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPF_UI_C", "GetAmmoCategoryText");

	Params::BPF_UI_C_GetAmmoCategoryText Parms{};

	Parms.ItemData = ItemData;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}

}

