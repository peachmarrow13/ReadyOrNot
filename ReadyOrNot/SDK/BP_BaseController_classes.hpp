#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseController

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "Engine_structs.hpp"
#include "EJoystickTypes_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BaseController.BP_BaseController_C
// 0x0058 (0x0D80 - 0x0D28)
class ABP_BaseController_C final : public AReadyOrNotPlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_PauseMenu_C*                         EscapeMenuRef;                                     // 0x0D30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          EscapeMenuOpen;                                    // 0x0D38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFreeDrawColor                                CurrentFreeDrawColor;                              // 0x0D39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MouseButtonDown;                                   // 0x0D3A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3B[0x5];                                      // 0x0D3B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Slomo;                                             // 0x0D40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  LastPawn;                                          // 0x0D48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bFreeCamera;                                       // 0x0D50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D51[0x7];                                      // 0x0D51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            ReplaySystemWidget;                                // 0x0D58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  PawnBeforePremissionPlanning;                      // 0x0D60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UW_COOPScorePopUp_C*                    Pop_UpWidget;                                      // 0x0D68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VotePopUp_C*                         VoteWidget;                                        // 0x0D70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VotePopUp_gamepad_C*                 VoteWidget_Gamepad;                                // 0x0D78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void AcknowledgeVote(const struct FVoteData& CurrentVoteData);
	void BP_ClientWasKicked(const class FText& KickReason);
	void CloseDeployMenu();
	void ExecuteUbergraph_BP_BaseController(int32 EntryPoint);
	void GetJoystickDirection(EJoystickTypes Stick, struct FVector2D* StickInput);
	void HideEscapeMenu();
	void InpActEvt_End_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_Equals_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_IA_EndPrimaryUse_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_PrimaryUse_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_ReadyUp_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_VoteNo_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_VoteYes_K2Node_InputActionEvent_2(const struct FKey& Key);
	void Input_Changed(ECommonInputType bNewInputType);
	void IsEquippedWeaponAimAssistEnabled(bool* IsAimAssistEnabled);
	void IsPlayerLowReady(bool* IsLowReady);
	void OnFailure_E5236F624136A216FC80949690426E05();
	void OnSuccess_E5236F624136A216FC80949690426E05();
	void PresentVoteResult(const struct FVoteData& VoteResult, int32 YesVotes, int32 NoVotes);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void RequestVoteInput(const struct FVoteData& CurrentVoteData);
	void Server_FreeCamera();
	void ServerPossesPawn(class APawn* Pawn_0);
	void SetUpVoteWidget_Gamepad(class UW_VotePopUp_gamepad_C* Widget);
	void ShowCoopScoreChangeWidget(float ScoreChangeValue);
	void SpawnEscapeMenu();
	void StopVoteInput();
	void UpdateWeaponAimPoint();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_BaseController_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_BaseController_C")
	}
	static class ABP_BaseController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BaseController_C>();
	}
};
DUMPER7_ASSERTS_ABP_BaseController_C;

}

