#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DynamicCoverSystem

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum DynamicCoverSystem.ECrouchCoverType
// NumValues: 0x0009
enum class ECrouchCoverType : uint8
{
	Wall                                     = 0,
	LeftOnly                                 = 1,
	RightOnly                                = 2,
	LeftAndRight                             = 3,
	UpOnly                                   = 4,
	LeftAndUp                                = 5,
	RightAndUp                               = 6,
	LeftRightAndUp                           = 7,
	ECrouchCoverType_MAX                     = 8,
};

// Enum DynamicCoverSystem.EStandCoverType
// NumValues: 0x0005
enum class EStandCoverType : uint8
{
	Wall                                     = 0,
	LeftOnly                                 = 1,
	RightOnly                                = 2,
	LeftAndRight                             = 3,
	EStandCoverType_MAX                      = 4,
};

// Enum DynamicCoverSystem.ECoverDirection
// NumValues: 0x0003
enum class ECoverDirection : uint8
{
	Left                                     = 0,
	Right                                    = 1,
	ECoverDirection_MAX                      = 2,
};

// Enum DynamicCoverSystem.ECoverAimType
// NumValues: 0x0003
enum class ECoverAimType : uint8
{
	LeftOrRight                              = 0,
	Up                                       = 1,
	ECoverAimType_MAX                        = 2,
};

// Enum DynamicCoverSystem.ECoverFireType
// NumValues: 0x0004
enum class ECoverFireType : uint8
{
	None                                     = 0,
	Blind                                    = 1,
	Exposed                                  = 2,
	ECoverFireType_MAX                       = 3,
};

// Enum DynamicCoverSystem.ECoverSearchMode
// NumValues: 0x0004
enum class ECoverSearchMode : uint8
{
	NonWallOnly                              = 0,
	WallOnly                                 = 1,
	Both                                     = 2,
	ECoverSearchMode_MAX                     = 3,
};

// Enum DynamicCoverSystem.ECoverStance
// NumValues: 0x0004
enum class ECoverStance : uint8
{
	Both                                     = 0,
	StandOnly                                = 1,
	CrouchOnly                               = 2,
	ECoverStance_MAX                         = 3,
};

// ScriptStruct DynamicCoverSystem.CoverGenSettings
// 0x0030 (0x0030 - 0x0000)
struct FCoverGenSettings final
{
public:
	float                                         MaxCrouchCoverHeight;                              // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxStandCoverHeight;                               // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchEdgeTestHeightOffset;                        // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchUpEdgeOffset;                                // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StandHeightOffset;                                 // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DepthThreshold;                                    // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftRightEdgeExtent;                               // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpEdgeExtent;                                      // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftRightEdgeAngle;                                // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxCoverTestDistance;                              // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VertexZOffset;                                     // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IndentOffset;                                      // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCoverGenSettings;

// ScriptStruct DynamicCoverSystem.CoverPointIndex
// 0x0020 (0x0020 - 0x0000)
struct FCoverPointIndex final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index;                                             // 0x0018(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCoverPointIndex;

// ScriptStruct DynamicCoverSystem.CoverRail
// 0x0058 (0x0058 - 0x0000)
struct FCoverRail final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                End;                                               // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Direction;                                         // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCoverPointIndex>               CoverPoints;                                       // 0x0048(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCoverRail;

// ScriptStruct DynamicCoverSystem.CoverDirection
// 0x0030 (0x0030 - 0x0000)
struct FCoverDirection final
{
public:
	struct FVector                                Left;                                              // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Right;                                             // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCoverDirection;

// ScriptStruct DynamicCoverSystem.CoverGenResult
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FCoverGenResult final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCoverGenResult;

}

