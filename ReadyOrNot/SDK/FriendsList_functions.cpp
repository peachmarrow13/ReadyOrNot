#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FriendsList

#include "Basic.hpp"

#include "FriendsList_classes.hpp"
#include "FriendsList_parameters.hpp"


namespace SDK
{

// Function FriendsList.FriendsList_C.BackPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Handled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::BackPage(bool* Handled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "BackPage");

	Params::FriendsList_C_BackPage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Handled != nullptr)
		*Handled = Parms.Handled;
}


// Function FriendsList.FriendsList_C.BndEvt__FriendsList_btn_Expand_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_Button_C*                      Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::BndEvt__FriendsList_btn_Expand_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "BndEvt__FriendsList_btn_Expand_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");

	Params::FriendsList_C_BndEvt__FriendsList_btn_Expand_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void UFriendsList_C::BP_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FriendsList.FriendsList_C.ChangePage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PageName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::ChangePage(class FName PageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "ChangePage");

	Params::FriendsList_C_ChangePage Parms{};

	Parms.PageName = PageName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.ConnectionStatusChanged
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MultiplayerConnectionAvailable                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::ConnectionStatusChanged(bool MultiplayerConnectionAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "ConnectionStatusChanged");

	Params::FriendsList_C_ConnectionStatusChanged Parms{};

	Parms.MultiplayerConnectionAvailable = MultiplayerConnectionAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.CreateFriendEntry
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFriend&                   Friend                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class UW_FriendsList_Entry_C**          NewEntryWidget                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::CreateFriendEntry(const struct FFriend& Friend, class UW_FriendsList_Entry_C** NewEntryWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "CreateFriendEntry");

	Params::FriendsList_C_CreateFriendEntry Parms{};

	Parms.Friend = std::move(Friend);

	UObject::ProcessEvent(Func, &Parms);

	if (NewEntryWidget != nullptr)
		*NewEntryWidget = Parms.NewEntryWidget;
}


// Function FriendsList.FriendsList_C.DoCustomNavigation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Navigation_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UFriendsList_C::DoCustomNavigation(EUINavigation Navigation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "DoCustomNavigation");

	Params::FriendsList_C_DoCustomNavigation Parms{};

	Parms.Navigation_0 = Navigation_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FriendsList.FriendsList_C.DoesFriendExistAlready
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FFriend&                   TestFriend                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// bool*                                   Exists_                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UW_FriendsList_Entry_C**          FriendEntry                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::DoesFriendExistAlready(const struct FFriend& TestFriend, bool* Exists_, class UW_FriendsList_Entry_C** FriendEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "DoesFriendExistAlready");

	Params::FriendsList_C_DoesFriendExistAlready Parms{};

	Parms.TestFriend = std::move(TestFriend);

	UObject::ProcessEvent(Func, &Parms);

	if (Exists_ != nullptr)
		*Exists_ = Parms.Exists_;

	if (FriendEntry != nullptr)
		*FriendEntry = Parms.FriendEntry;
}


// Function FriendsList.FriendsList_C.ExecuteUbergraph_FriendsList
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::ExecuteUbergraph_FriendsList(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "ExecuteUbergraph_FriendsList");

	Params::FriendsList_C_ExecuteUbergraph_FriendsList Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.GenerateDebugFriendData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFriend*                         DebugFriend                                            (Parm, OutParm)

void UFriendsList_C::GenerateDebugFriendData(int32 Index_0, struct FFriend* DebugFriend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "GenerateDebugFriendData");

	Params::FriendsList_C_GenerateDebugFriendData Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (DebugFriend != nullptr)
		*DebugFriend = std::move(Parms.DebugFriend);
}


// Function FriendsList.FriendsList_C.GetNoFriendsPlayingText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UFriendsList_C::GetNoFriendsPlayingText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "GetNoFriendsPlayingText");

	Params::FriendsList_C_GetNoFriendsPlayingText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FriendsList.FriendsList_C.GetNumberOfFriends
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::GetNumberOfFriends(int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "GetNumberOfFriends");

	Params::FriendsList_C_GetNumberOfFriends Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function FriendsList.FriendsList_C.Hide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Collapse                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::Hide(double Delay, bool Collapse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "Hide");

	Params::FriendsList_C_Hide Parms{};

	Parms.Delay = Delay;
	Parms.Collapse = Collapse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.InputTypeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonInputType                        bNewInputType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::InputTypeChanged(ECommonInputType bNewInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "InputTypeChanged");

	Params::FriendsList_C_InputTypeChanged Parms{};

	Parms.bNewInputType = bNewInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.MaximizeList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UFriendsList_C::MaximizeList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "MaximizeList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FriendsList.FriendsList_C.MinimizeList
// (Public, BlueprintCallable, BlueprintEvent)

void UFriendsList_C::MinimizeList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "MinimizeList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FriendsList.FriendsList_C.OnConnectionStatusChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsMultiplayerConnectionAvailable                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::OnConnectionStatusChanged(bool bIsMultiplayerConnectionAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "OnConnectionStatusChanged");

	Params::FriendsList_C_OnConnectionStatusChanged Parms{};

	Parms.bIsMultiplayerConnectionAvailable = bIsMultiplayerConnectionAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.OnEntryHovered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_FriendsList_Entry_C*           TriggeringEntry                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FFriend&                   Friend                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UFriendsList_C::OnEntryHovered(class UW_FriendsList_Entry_C* TriggeringEntry, const struct FFriend& Friend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "OnEntryHovered");

	Params::FriendsList_C_OnEntryHovered Parms{};

	Parms.TriggeringEntry = TriggeringEntry;
	Parms.Friend = std::move(Friend);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.OnFailure_Event_0
// (BlueprintCallable, BlueprintEvent)

void UFriendsList_C::OnFailure_Event_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "OnFailure_Event_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FriendsList.FriendsList_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UFriendsList_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FriendsList.FriendsList_C.OnJoinFriendClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_FriendsList_Entry_C*           TriggeringEntry                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FFriend&                   Friend                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UFriendsList_C::OnJoinFriendClicked(class UW_FriendsList_Entry_C* TriggeringEntry, const struct FFriend& Friend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "OnJoinFriendClicked");

	Params::FriendsList_C_OnJoinFriendClicked Parms{};

	Parms.TriggeringEntry = TriggeringEntry;
	Parms.Friend = std::move(Friend);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.OnSuccess_Event_0
// (BlueprintCallable, BlueprintEvent)

void UFriendsList_C::OnSuccess_Event_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "OnSuccess_Event_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FriendsList.FriendsList_C.OnViewProfileClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_FriendsList_Entry_C*           TriggeringEntry                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FFriend&                   Friend                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UFriendsList_C::OnViewProfileClicked(class UW_FriendsList_Entry_C* TriggeringEntry, const struct FFriend& Friend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "OnViewProfileClicked");

	Params::FriendsList_C_OnViewProfileClicked Parms{};

	Parms.TriggeringEntry = TriggeringEntry;
	Parms.Friend = std::move(Friend);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.PlaceFriendEntryByState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_FriendsList_Entry_C*           FriendEntry                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::PlaceFriendEntryByState(class UW_FriendsList_Entry_C* FriendEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "PlaceFriendEntryByState");

	Params::FriendsList_C_PlaceFriendEntryByState Parms{};

	Parms.FriendEntry = FriendEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.PopulateDebugFriends
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UFriendsList_C::PopulateDebugFriends()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "PopulateDebugFriends");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FriendsList.FriendsList_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "PreConstruct");

	Params::FriendsList_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.RefreshDebugFriends
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UFriendsList_C::RefreshDebugFriends()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "RefreshDebugFriends");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FriendsList.FriendsList_C.RemoveFriendEntry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_FriendsList_Entry_C*           Entry                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    HideEntry                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::RemoveFriendEntry(class UW_FriendsList_Entry_C* Entry, bool HideEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "RemoveFriendEntry");

	Params::FriendsList_C_RemoveFriendEntry Parms{};

	Parms.Entry = Entry;
	Parms.HideEntry = HideEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.RemoveNonExistentFriendWidgets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UFriendsList_C::RemoveNonExistentFriendWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "RemoveNonExistentFriendWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FriendsList.FriendsList_C.Reveal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::Reveal(double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "Reveal");

	Params::FriendsList_C_Reveal Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.SetInputMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::SetInputMode(bool IsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "SetInputMode");

	Params::FriendsList_C_SetInputMode Parms{};

	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.SortAllLists
// (Public, BlueprintCallable, BlueprintEvent)

void UFriendsList_C::SortAllLists()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "SortAllLists");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FriendsList.FriendsList_C.SortEntryList
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          ListContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::SortEntryList(class UWidget* ListContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "SortEntryList");

	Params::FriendsList_C_SortEntryList Parms{};

	Parms.ListContainer = ListContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.ToggleExpand
// (Public, BlueprintCallable, BlueprintEvent)

void UFriendsList_C::ToggleExpand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "ToggleExpand");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FriendsList.FriendsList_C.UnhideEntry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_FriendsList_Entry_C*           FriendEntry                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::UnhideEntry(class UW_FriendsList_Entry_C* FriendEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "UnhideEntry");

	Params::FriendsList_C_UnhideEntry Parms{};

	Parms.FriendEntry = FriendEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FriendsList.FriendsList_C.UpdateFriendsList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UFriendsList_C::UpdateFriendsList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "UpdateFriendsList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FriendsList.FriendsList_C.UpdateNoJoinVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UFriendsList_C::UpdateNoJoinVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "UpdateNoJoinVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FriendsList.FriendsList_C.UpdateStyle
// (Public, BlueprintCallable, BlueprintEvent)

void UFriendsList_C::UpdateStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "UpdateStyle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FriendsList.FriendsList_C.BP_GetDesiredFocusTarget
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UFriendsList_C::BP_GetDesiredFocusTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "BP_GetDesiredFocusTarget");

	Params::FriendsList_C_BP_GetDesiredFocusTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FriendsList.FriendsList_C.GetFocusTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UWidget**                         Focus                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UFriendsList_C::GetFocusTarget(class UWidget** Focus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsList_C", "GetFocusTarget");

	Params::FriendsList_C_GetFocusTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Focus != nullptr)
		*Focus = Parms.Focus;
}

}

