#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModioUICore

#include "Basic.hpp"

#include "ModioUICore_classes.hpp"
#include "ModioUICore_parameters.hpp"


namespace SDK
{

// Function ModioUICore.ModioModTagSelectorEntry.NotifyClicked
// (Final, Native, Protected, BlueprintCallable)

void UModioModTagSelectorEntry::NotifyClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagSelectorEntry", "NotifyClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModTagSelectorEntry.NotifySelectionChanged
// (Final, Native, Protected, BlueprintCallable)

void UModioModTagSelectorEntry::NotifySelectionChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagSelectorEntry", "NotifySelectionChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModTagSelectorEntry.OnTagEntryClicked
// (Final, Native, Protected)
// Parameters:
// class UObject*                          ClickedObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModTagSelectorEntry::OnTagEntryClicked(class UObject* ClickedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagSelectorEntry", "OnTagEntryClicked");

	Params::ModioModTagSelectorEntry_OnTagEntryClicked Parms{};

	Parms.ClickedObject = ClickedObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModTagSelectorEntry.GetClickableWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModTagSelectorEntry::GetClickableWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagSelectorEntry", "GetClickableWidget");

	Params::ModioModTagSelectorEntry_GetClickableWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagSelectorEntry.GetSelectionWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUISelectableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUISelectableWidget> UModioModTagSelectorEntry::GetSelectionWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagSelectorEntry", "GetSelectionWidget");

	Params::ModioModTagSelectorEntry_GetSelectionWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagSelectorEntry.GetTagLabelWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioModTagSelectorEntry::GetTagLabelWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagSelectorEntry", "GetTagLabelWidget");

	Params::ModioModTagSelectorEntry_GetTagLabelWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioActivatableWidget.Activate
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioActivatableWidget::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioActivatableWidget", "Activate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioActivatableWidget.AddActivationChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* ActivationContext, bool bIsActivated)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioActivatableWidget::AddActivationChangedHandler(const TDelegate<void(class UObject* ActivationContext, bool bIsActivated)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioActivatableWidget", "AddActivationChangedHandler");

	Params::ModioActivatableWidget_AddActivationChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioActivatableWidget.Deactivate
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioActivatableWidget::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioActivatableWidget", "Deactivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioActivatableWidget.RemoveActivationChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* ActivationContext, bool bIsActivated)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioActivatableWidget::RemoveActivationChangedHandler(const TDelegate<void(class UObject* ActivationContext, bool bIsActivated)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioActivatableWidget", "RemoveActivationChangedHandler");

	Params::ModioActivatableWidget_RemoveActivationChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioEnumEntryUIDetails.GetEnumEntryDetails
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8*                                  EnumValue                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText*                            EnumValueDisplayText                                   (Parm, OutParm, NativeAccessSpecifierPublic)

void IModioEnumEntryUIDetails::GetEnumEntryDetails(uint8* EnumValue, class FText* EnumValueDisplayText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioEnumEntryUIDetails", "GetEnumEntryDetails");

	Params::ModioEnumEntryUIDetails_GetEnumEntryDetails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (EnumValue != nullptr)
		*EnumValue = Parms.EnumValue;

	if (EnumValueDisplayText != nullptr)
		*EnumValueDisplayText = std::move(Parms.EnumValueDisplayText);
}


// Function ModioUICore.ModioRetryLibrary.CanRetry
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FModioRetryCounter&        Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioRetryLibrary::CanRetry(const struct FModioRetryCounter& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioRetryLibrary", "CanRetry");

	Params::ModioRetryLibrary_CanRetry Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioRetryLibrary.CanRetryAsExec
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FModioRetryCounter&        Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioRetryLibrary::CanRetryAsExec(const struct FModioRetryCounter& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioRetryLibrary", "CanRetryAsExec");

	Params::ModioRetryLibrary_CanRetryAsExec Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioRetryLibrary.ResetRetryCount
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioRetryCounter&              Target                                                 (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UModioRetryLibrary::ResetRetryCount(struct FModioRetryCounter& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioRetryLibrary", "ResetRetryCount");

	Params::ModioRetryLibrary_ResetRetryCount Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Target = std::move(Parms.Target);
}


// Function ModioUICore.ModioRetryLibrary.ResetRetryCountPure
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FModioRetryCounter&              Target                                                 (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FModioRetryCounter               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FModioRetryCounter UModioRetryLibrary::ResetRetryCountPure(struct FModioRetryCounter& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioRetryLibrary", "ResetRetryCountPure");

	Params::ModioRetryLibrary_ResetRetryCountPure Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Target = std::move(Parms.Target);

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioRetryLibrary.Retry
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioRetryCounter&              Target                                                 (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioRetryLibrary::Retry(struct FModioRetryCounter& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioRetryLibrary", "Retry");

	Params::ModioRetryLibrary_Retry Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Target = std::move(Parms.Target);

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioFocusableWidget.AddFocusPathChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* FocusContext, const struct FFocusEvent& InFocusEvent, bool bIsFocused)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioFocusableWidget::AddFocusPathChangedHandler(const TDelegate<void(class UObject* FocusContext, const struct FFocusEvent& InFocusEvent, bool bIsFocused)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioFocusableWidget", "AddFocusPathChangedHandler");

	Params::ModioFocusableWidget_AddFocusPathChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioFocusableWidget.RemoveFocusPathChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* FocusContext, const struct FFocusEvent& InFocusEvent, bool bIsFocused)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioFocusableWidget::RemoveFocusPathChangedHandler(const TDelegate<void(class UObject* FocusContext, const struct FFocusEvent& InFocusEvent, bool bIsFocused)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioFocusableWidget", "RemoveFocusPathChangedHandler");

	Params::ModioFocusableWidget_RemoveFocusPathChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioFocusableWidget.GetWidgetToFocus
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EUINavigation                           NavigationType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* IModioFocusableWidget::GetWidgetToFocus(EUINavigation NavigationType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioFocusableWidget", "GetWidgetToFocus");

	Params::ModioFocusableWidget_GetWidgetToFocus Parms{};

	Parms.NavigationType = NavigationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioGalleryImageUIDetails.GetImage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioImageWrapper               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FModioImageWrapper IModioGalleryImageUIDetails::GetImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioGalleryImageUIDetails", "GetImage");

	Params::ModioGalleryImageUIDetails_GetImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioGalleryImageUIDetails.GetIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IModioGalleryImageUIDetails::GetIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioGalleryImageUIDetails", "GetIndex");

	Params::ModioGalleryImageUIDetails_GetIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDependencyUIDetails.GetModDependency
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioModDependency              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FModioModDependency IModioModDependencyUIDetails::GetModDependency()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModDependencyUIDetails", "GetModDependency");

	Params::ModioModDependencyUIDetails_GetModDependency Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDependencyUIDetails.GetModID
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioModID                      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioModID IModioModDependencyUIDetails::GetModID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModDependencyUIDetails", "GetModID");

	Params::ModioModDependencyUIDetails_GetModID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModFilterUIDetails.GetFilterName
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText&                            Name_0                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioModFilterUIDetails::GetFilterName(class FText& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModFilterUIDetails", "GetFilterName");

	Params::ModioModFilterUIDetails_GetFilterName Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Name_0 = std::move(Parms.Name_0);

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModFilterUIDetails.GetFilterParams
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioFilterParams               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FModioFilterParams IModioModFilterUIDetails::GetFilterParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModFilterUIDetails", "GetFilterParams");

	Params::ModioModFilterUIDetails_GetFilterParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagSelector.GetMenuToggleClickableWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModTagSelector::GetMenuToggleClickableWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagSelector", "GetMenuToggleClickableWidget");

	Params::ModioModTagSelector_GetMenuToggleClickableWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagSelector.GetSelectorMenuWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIModTagSelector>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIModTagSelector> UModioModTagSelector::GetSelectorMenuWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagSelector", "GetSelectorMenuWidget");

	Params::ModioModTagSelector_GetSelectorMenuWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModInfoUIDetails.GetFullModInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioModInfo                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FModioModInfo IModioModInfoUIDetails::GetFullModInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModInfoUIDetails", "GetFullModInfo");

	Params::ModioModInfoUIDetails_GetFullModInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModInfoUIDetails.GetModID
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioModID                      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioModID IModioModInfoUIDetails::GetModID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModInfoUIDetails", "GetModID");

	Params::ModioModInfoUIDetails_GetModID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagUIDetails.GetLocalizedText
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText IModioModTagUIDetails::GetLocalizedText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModTagUIDetails", "GetLocalizedText");

	Params::ModioModTagUIDetails_GetLocalizedText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagUIDetails.GetRawStringValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString IModioModTagUIDetails::GetRawStringValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModTagUIDetails", "GetRawStringValue");

	Params::ModioModTagUIDetails_GetRawStringValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagUIDetails.GetSelectionState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioModTagUIDetails::GetSelectionState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModTagUIDetails", "GetSelectionState");

	Params::ModioModTagUIDetails_GetSelectionState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagUIDetails.SetSelectionState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewSelectionState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioModTagUIDetails::SetSelectionState(bool bNewSelectionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModTagUIDetails", "SetSelectionState");

	Params::ModioModTagUIDetails_SetSelectionState Parms{};

	Parms.bNewSelectionState = bNewSelectionState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.PropertyOverridesLibrary.ApplyClassPathOverride
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FClassPathOverride&        Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FSoftClassPath&            DefaultValue                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftClassPath                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSoftClassPath UPropertyOverridesLibrary::ApplyClassPathOverride(const struct FClassPathOverride& Target, const struct FSoftClassPath& DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ApplyClassPathOverride");

	Params::PropertyOverridesLibrary_ApplyClassPathOverride Parms{};

	Parms.Target = std::move(Target);
	Parms.DefaultValue = std::move(DefaultValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ApplyClassPathOverride_Casted
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FClassPathOverride&        Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TSubclassOf<class UObject>              BaseClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           DefaultValue                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UPropertyOverridesLibrary::ApplyClassPathOverride_Casted(const struct FClassPathOverride& Target, TSubclassOf<class UObject> BaseClass, class UClass* DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ApplyClassPathOverride_Casted");

	Params::PropertyOverridesLibrary_ApplyClassPathOverride_Casted Parms{};

	Parms.Target = std::move(Target);
	Parms.BaseClass = BaseClass;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ApplyFloatOverride
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFloatOverride&            Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   DefaultValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPropertyOverridesLibrary::ApplyFloatOverride(const struct FFloatOverride& Target, float DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ApplyFloatOverride");

	Params::PropertyOverridesLibrary_ApplyFloatOverride Parms{};

	Parms.Target = std::move(Target);
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ApplyFontInfoOverride
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSlateFontInfoOverride&    Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FSlateFontInfo&            DefaultValue                                           (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateFontInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSlateFontInfo UPropertyOverridesLibrary::ApplyFontInfoOverride(const struct FSlateFontInfoOverride& Target, const struct FSlateFontInfo& DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ApplyFontInfoOverride");

	Params::PropertyOverridesLibrary_ApplyFontInfoOverride Parms{};

	Parms.Target = std::move(Target);
	Parms.DefaultValue = std::move(DefaultValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ApplyHAlignOverride
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHAlignOverride&           Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EHorizontalAlignment                    DefaultValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHorizontalAlignment                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHorizontalAlignment UPropertyOverridesLibrary::ApplyHAlignOverride(const struct FHAlignOverride& Target, EHorizontalAlignment DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ApplyHAlignOverride");

	Params::PropertyOverridesLibrary_ApplyHAlignOverride Parms{};

	Parms.Target = std::move(Target);
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ApplyInputActionOverride
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FInputActionOverride&      Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FDataTableRowHandle&       DefaultValue                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FDataTableRowHandle              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FDataTableRowHandle UPropertyOverridesLibrary::ApplyInputActionOverride(const struct FInputActionOverride& Target, const struct FDataTableRowHandle& DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ApplyInputActionOverride");

	Params::PropertyOverridesLibrary_ApplyInputActionOverride Parms{};

	Parms.Target = std::move(Target);
	Parms.DefaultValue = std::move(DefaultValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ApplyIntOverride
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FIntegerOverride&          Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   DefaultValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPropertyOverridesLibrary::ApplyIntOverride(const struct FIntegerOverride& Target, int32 DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ApplyIntOverride");

	Params::PropertyOverridesLibrary_ApplyIntOverride Parms{};

	Parms.Target = std::move(Target);
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ApplyTextOverride
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTextOverride&             Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      DefaultValue                                           (Parm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPropertyOverridesLibrary::ApplyTextOverride(const struct FTextOverride& Target, const class FText& DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ApplyTextOverride");

	Params::PropertyOverridesLibrary_ApplyTextOverride Parms{};

	Parms.Target = std::move(Target);
	Parms.DefaultValue = std::move(DefaultValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ApplyTextTransformOverride
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTextTransformOverride&    Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// ETextTransformPolicy                    DefaultValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETextTransformPolicy                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETextTransformPolicy UPropertyOverridesLibrary::ApplyTextTransformOverride(const struct FTextTransformOverride& Target, ETextTransformPolicy DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ApplyTextTransformOverride");

	Params::PropertyOverridesLibrary_ApplyTextTransformOverride Parms{};

	Parms.Target = std::move(Target);
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveClassPathOverride
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FClassPathOverride&        Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftClassPath                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSoftClassPath UPropertyOverridesLibrary::ResolveClassPathOverride(const struct FClassPathOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveClassPathOverride");

	Params::PropertyOverridesLibrary_ResolveClassPathOverride Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveClassPathOverride_Casted
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FClassPathOverride&        Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TSubclassOf<class UObject>              BaseClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UPropertyOverridesLibrary::ResolveClassPathOverride_Casted(const struct FClassPathOverride& Target, TSubclassOf<class UObject> BaseClass, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveClassPathOverride_Casted");

	Params::PropertyOverridesLibrary_ResolveClassPathOverride_Casted Parms{};

	Parms.Target = std::move(Target);
	Parms.BaseClass = BaseClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveClassPathOverrideAsExec
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FClassPathOverride&        Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftClassPath                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSoftClassPath UPropertyOverridesLibrary::ResolveClassPathOverrideAsExec(const struct FClassPathOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveClassPathOverrideAsExec");

	Params::PropertyOverridesLibrary_ResolveClassPathOverrideAsExec Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveClassPathOverrideAsExec_Casted
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FClassPathOverride&        Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TSubclassOf<class UObject>              BaseClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UPropertyOverridesLibrary::ResolveClassPathOverrideAsExec_Casted(const struct FClassPathOverride& Target, TSubclassOf<class UObject> BaseClass, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveClassPathOverrideAsExec_Casted");

	Params::PropertyOverridesLibrary_ResolveClassPathOverrideAsExec_Casted Parms{};

	Parms.Target = std::move(Target);
	Parms.BaseClass = BaseClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveFloatOverride
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FFloatOverride&            Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPropertyOverridesLibrary::ResolveFloatOverride(const struct FFloatOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveFloatOverride");

	Params::PropertyOverridesLibrary_ResolveFloatOverride Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveFloatOverrideAsExec
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFloatOverride&            Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPropertyOverridesLibrary::ResolveFloatOverrideAsExec(const struct FFloatOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveFloatOverrideAsExec");

	Params::PropertyOverridesLibrary_ResolveFloatOverrideAsExec Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveFontInfoOverride
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FSlateFontInfoOverride&    Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateFontInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSlateFontInfo UPropertyOverridesLibrary::ResolveFontInfoOverride(const struct FSlateFontInfoOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveFontInfoOverride");

	Params::PropertyOverridesLibrary_ResolveFontInfoOverride Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveFontInfoOverrideAsExec
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSlateFontInfoOverride&    Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateFontInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSlateFontInfo UPropertyOverridesLibrary::ResolveFontInfoOverrideAsExec(const struct FSlateFontInfoOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveFontInfoOverrideAsExec");

	Params::PropertyOverridesLibrary_ResolveFontInfoOverrideAsExec Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveHAlignOverride
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHAlignOverride&           Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHorizontalAlignment                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHorizontalAlignment UPropertyOverridesLibrary::ResolveHAlignOverride(const struct FHAlignOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveHAlignOverride");

	Params::PropertyOverridesLibrary_ResolveHAlignOverride Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveHAlignOverrideAsExec
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHAlignOverride&           Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHorizontalAlignment                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHorizontalAlignment UPropertyOverridesLibrary::ResolveHAlignOverrideAsExec(const struct FHAlignOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveHAlignOverrideAsExec");

	Params::PropertyOverridesLibrary_ResolveHAlignOverrideAsExec Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveInputActionOverride
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FInputActionOverride&      Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDataTableRowHandle              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FDataTableRowHandle UPropertyOverridesLibrary::ResolveInputActionOverride(const struct FInputActionOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveInputActionOverride");

	Params::PropertyOverridesLibrary_ResolveInputActionOverride Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveInputActionOverrideAsExec
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FInputActionOverride&      Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDataTableRowHandle              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FDataTableRowHandle UPropertyOverridesLibrary::ResolveInputActionOverrideAsExec(const struct FInputActionOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveInputActionOverrideAsExec");

	Params::PropertyOverridesLibrary_ResolveInputActionOverrideAsExec Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveIntOverride
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FIntegerOverride&          Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPropertyOverridesLibrary::ResolveIntOverride(const struct FIntegerOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveIntOverride");

	Params::PropertyOverridesLibrary_ResolveIntOverride Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveIntOverrideAsExec
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FIntegerOverride&          Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPropertyOverridesLibrary::ResolveIntOverrideAsExec(const struct FIntegerOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveIntOverrideAsExec");

	Params::PropertyOverridesLibrary_ResolveIntOverrideAsExec Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveTextOverride
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTextOverride&             Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPropertyOverridesLibrary::ResolveTextOverride(const struct FTextOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveTextOverride");

	Params::PropertyOverridesLibrary_ResolveTextOverride Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveTextOverrideAsExec
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTextOverride&             Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPropertyOverridesLibrary::ResolveTextOverrideAsExec(const struct FTextOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveTextOverrideAsExec");

	Params::PropertyOverridesLibrary_ResolveTextOverrideAsExec Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveTextTransformOverride
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTextTransformOverride&    Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETextTransformPolicy                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETextTransformPolicy UPropertyOverridesLibrary::ResolveTextTransformOverride(const struct FTextTransformOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveTextTransformOverride");

	Params::PropertyOverridesLibrary_ResolveTextTransformOverride Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.PropertyOverridesLibrary.ResolveTextTransformOverrideAsExec
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTextTransformOverride&    Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETextTransformPolicy                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETextTransformPolicy UPropertyOverridesLibrary::ResolveTextTransformOverrideAsExec(const struct FTextTransformOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PropertyOverridesLibrary", "ResolveTextTransformOverrideAsExec");

	Params::PropertyOverridesLibrary_ResolveTextTransformOverrideAsExec Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagCategoryUIDetails.GetAllowMultipleSelection
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioModTagCategoryUIDetails::GetAllowMultipleSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModTagCategoryUIDetails", "GetAllowMultipleSelection");

	Params::ModioModTagCategoryUIDetails_GetAllowMultipleSelection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagCategoryUIDetails.GetCategoryTags
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TScriptInterface<class IModioModTagUIDetails>>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TScriptInterface<class IModioModTagUIDetails>> IModioModTagCategoryUIDetails::GetCategoryTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModTagCategoryUIDetails", "GetCategoryTags");

	Params::ModioModTagCategoryUIDetails_GetCategoryTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagCategoryUIDetails.GetIsCategoryHidden
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioModTagCategoryUIDetails::GetIsCategoryHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModTagCategoryUIDetails", "GetIsCategoryHidden");

	Params::ModioModTagCategoryUIDetails_GetIsCategoryHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagCategoryUIDetails.GetIsCategoryLocked
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioModTagCategoryUIDetails::GetIsCategoryLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModTagCategoryUIDetails", "GetIsCategoryLocked");

	Params::ModioModTagCategoryUIDetails_GetIsCategoryLocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagCategoryUIDetails.GetLocalizedCategoryName
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText IModioModTagCategoryUIDetails::GetLocalizedCategoryName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModTagCategoryUIDetails", "GetLocalizedCategoryName");

	Params::ModioModTagCategoryUIDetails_GetLocalizedCategoryName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagCategoryUIDetails.GetRawCategoryName
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString IModioModTagCategoryUIDetails::GetRawCategoryName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModTagCategoryUIDetails", "GetRawCategoryName");

	Params::ModioModTagCategoryUIDetails_GetRawCategoryName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagCategoryUIDetails.GetSelectedTags
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> IModioModTagCategoryUIDetails::GetSelectedTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModTagCategoryUIDetails", "GetSelectedTags");

	Params::ModioModTagCategoryUIDetails_GetSelectedTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagOptionsUIDetails.ClearSelectedTags
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioModTagOptionsUIDetails::ClearSelectedTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModTagOptionsUIDetails", "ClearSelectedTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModTagOptionsUIDetails.GetCategories
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TScriptInterface<class IModioModTagCategoryUIDetails>>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TScriptInterface<class IModioModTagCategoryUIDetails>> IModioModTagOptionsUIDetails::GetCategories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModTagOptionsUIDetails", "GetCategories");

	Params::ModioModTagOptionsUIDetails_GetCategories Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagOptionsUIDetails.GetSelectedTags
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> IModioModTagOptionsUIDetails::GetSelectedTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioModTagOptionsUIDetails", "GetSelectedTags");

	Params::ModioModTagOptionsUIDetails_GetSelectedTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioTokenPackBrowser.GetTitleTextWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioTokenPackBrowser::GetTitleTextWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTokenPackBrowser", "GetTitleTextWidget");

	Params::ModioTokenPackBrowser_GetTitleTextWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioTokenPackBrowser.GetTokenTileViewWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUITokenPackListInterface>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUITokenPackListInterface> UModioTokenPackBrowser::GetTokenTileViewWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTokenPackBrowser", "GetTokenTileViewWidget");

	Params::ModioTokenPackBrowser_GetTokenTileViewWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioScrollableWidget.ScrollToBottom
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioScrollableWidget::ScrollToBottom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioScrollableWidget", "ScrollToBottom");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioScrollableWidget.ScrollToTop
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioScrollableWidget::ScrollToTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioScrollableWidget", "ScrollToTop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioScrollableWidget.SetScrollOffset
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Offset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioScrollableWidget::SetScrollOffset(float Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioScrollableWidget", "SetScrollOffset");

	Params::ModioScrollableWidget_SetScrollOffset Parms{};

	Parms.Offset = Offset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioScrollableWidget.GetScrollOffset
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IModioScrollableWidget::GetScrollOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioScrollableWidget", "GetScrollOffset");

	Params::ModioScrollableWidget_GetScrollOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioToggleableWidget.AddToggleStateChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* Context, bool bIsOpen)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioToggleableWidget::AddToggleStateChangedHandler(const TDelegate<void(class UObject* Context, bool bIsOpen)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioToggleableWidget", "AddToggleStateChangedHandler");

	Params::ModioToggleableWidget_AddToggleStateChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioToggleableWidget.Close
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioToggleableWidget::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioToggleableWidget", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioToggleableWidget.Open
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFocusMenu                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioToggleableWidget::Open(bool bForce, bool bFocusMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioToggleableWidget", "Open");

	Params::ModioToggleableWidget_Open Parms{};

	Parms.bForce = bForce;
	Parms.bFocusMenu = bFocusMenu;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioToggleableWidget.RemoveToggleStateChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* Context, bool bIsOpen)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioToggleableWidget::RemoveToggleStateChangedHandler(const TDelegate<void(class UObject* Context, bool bIsOpen)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioToggleableWidget", "RemoveToggleStateChangedHandler");

	Params::ModioToggleableWidget_RemoveToggleStateChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioToggleableWidget.IsOpen
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioToggleableWidget::IsOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioToggleableWidget", "IsOpen");

	Params::ModioToggleableWidget_IsOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioStackedBoolLibrary.PeekBoolValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FModioStackedBool&         Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool*                                   bDidPeekSuccessfully                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioStackedBoolLibrary::PeekBoolValue(const struct FModioStackedBool& Target, bool* bDidPeekSuccessfully)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioStackedBoolLibrary", "PeekBoolValue");

	Params::ModioStackedBoolLibrary_PeekBoolValue Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bDidPeekSuccessfully != nullptr)
		*bDidPeekSuccessfully = Parms.bDidPeekSuccessfully;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioStackedBoolLibrary.PopBoolValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioStackedBool&               Target                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool*                                   bDidPopSuccessfully                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioStackedBoolLibrary::PopBoolValue(struct FModioStackedBool& Target, bool* bDidPopSuccessfully)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioStackedBoolLibrary", "PopBoolValue");

	Params::ModioStackedBoolLibrary_PopBoolValue Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Target = std::move(Parms.Target);

	if (bDidPopSuccessfully != nullptr)
		*bDidPopSuccessfully = Parms.bDidPopSuccessfully;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioStackedBoolLibrary.PushBoolValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioStackedBool&               Target                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioStackedBoolLibrary::PushBoolValue(struct FModioStackedBool& Target, bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioStackedBoolLibrary", "PushBoolValue");

	Params::ModioStackedBoolLibrary_PushBoolValue Parms{};

	Parms.Target = std::move(Target);
	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Target = std::move(Parms.Target);
}


// Function ModioUICore.ModioUIClickableWidget.AddClickedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* ClickContext)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIClickableWidget::AddClickedHandler(const TDelegate<void(class UObject* ClickContext)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIClickableWidget", "AddClickedHandler");

	Params::ModioUIClickableWidget_AddClickedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIClickableWidget.DisableClick
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUIClickableWidget::DisableClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIClickableWidget", "DisableClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIClickableWidget.EnableClick
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUIClickableWidget::EnableClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIClickableWidget", "EnableClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIClickableWidget.RemoveClickedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* ClickContext)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIClickableWidget::RemoveClickedHandler(const TDelegate<void(class UObject* ClickContext)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIClickableWidget", "RemoveClickedHandler");

	Params::ModioUIClickableWidget_RemoveClickedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIBoundActionWidget.AddActionCompletedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(const struct FDataTableRowHandle& BoundAction)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIBoundActionWidget::AddActionCompletedHandler(const TDelegate<void(const struct FDataTableRowHandle& BoundAction)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIBoundActionWidget", "AddActionCompletedHandler");

	Params::ModioUIBoundActionWidget_AddActionCompletedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIBoundActionWidget.AddActionProgressHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(const struct FDataTableRowHandle& BoundAction, float Progress)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIBoundActionWidget::AddActionProgressHandler(const TDelegate<void(const struct FDataTableRowHandle& BoundAction, float Progress)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIBoundActionWidget", "AddActionProgressHandler");

	Params::ModioUIBoundActionWidget_AddActionProgressHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIBoundActionWidget.ClearBoundAction
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUIBoundActionWidget::ClearBoundAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIBoundActionWidget", "ClearBoundAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIBoundActionWidget.RemoveActionCompletedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(const struct FDataTableRowHandle& BoundAction)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIBoundActionWidget::RemoveActionCompletedHandler(const TDelegate<void(const struct FDataTableRowHandle& BoundAction)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIBoundActionWidget", "RemoveActionCompletedHandler");

	Params::ModioUIBoundActionWidget_RemoveActionCompletedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIBoundActionWidget.RemoveActionProgressHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(const struct FDataTableRowHandle& BoundAction, float Progress)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIBoundActionWidget::RemoveActionProgressHandler(const TDelegate<void(const struct FDataTableRowHandle& BoundAction, float Progress)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIBoundActionWidget", "RemoveActionProgressHandler");

	Params::ModioUIBoundActionWidget_RemoveActionProgressHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIBoundActionWidget.SetBoundAction
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDataTableRowHandle&       InputActionRow                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IModioUIBoundActionWidget::SetBoundAction(const struct FDataTableRowHandle& InputActionRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIBoundActionWidget", "SetBoundAction");

	Params::ModioUIBoundActionWidget_SetBoundAction Parms{};

	Parms.InputActionRow = std::move(InputActionRow);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIBoundActionWidget.TryGetBoundAction
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FDataTableRowHandle*             InputActionRow                                         (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioUIBoundActionWidget::TryGetBoundAction(struct FDataTableRowHandle* InputActionRow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIBoundActionWidget", "TryGetBoundAction");

	Params::ModioUIBoundActionWidget_TryGetBoundAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InputActionRow != nullptr)
		*InputActionRow = std::move(Parms.InputActionRow);

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioPresetFilterEntryWidget.GetLabelWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioPresetFilterEntryWidget::GetLabelWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioPresetFilterEntryWidget", "GetLabelWidget");

	Params::ModioPresetFilterEntryWidget_GetLabelWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommandMenu.AddCommandListBuilder
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(TArray<class UObject*>* CommandList, class UObject* Context)>&Builder                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUICommandMenu::AddCommandListBuilder(const TDelegate<void(TArray<class UObject*>* CommandList, class UObject* Context)>& Builder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUICommandMenu", "AddCommandListBuilder");

	Params::ModioUICommandMenu_AddCommandListBuilder Parms{};

	Parms.Builder = Builder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUICommandMenu.RebuildCommandList
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUICommandMenu::RebuildCommandList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUICommandMenu", "RebuildCommandList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUICommandMenu.RemoveCommandListBuilder
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(TArray<class UObject*>* CommandList, class UObject* Context)>&Builder                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUICommandMenu::RemoveCommandListBuilder(const TDelegate<void(TArray<class UObject*>* CommandList, class UObject* Context)>& Builder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUICommandMenu", "RemoveCommandListBuilder");

	Params::ModioUICommandMenu_RemoveCommandListBuilder Parms{};

	Parms.Builder = Builder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUICommandObject.CanExecute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioUICommandObject::CanExecute(class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUICommandObject", "CanExecute");

	Params::ModioUICommandObject_CanExecute Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommandObject.Execute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUICommandObject::Execute(class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUICommandObject", "Execute");

	Params::ModioUICommandObject_Execute Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUICommandObject.GetCommandBrush
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSlateBrush IModioUICommandObject::GetCommandBrush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUICommandObject", "GetCommandBrush");

	Params::ModioUICommandObject_GetCommandBrush Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommandObject.GetCommandDisplayString
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText IModioUICommandObject::GetCommandDisplayString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUICommandObject", "GetCommandDisplayString");

	Params::ModioUICommandObject_GetCommandDisplayString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommandObject.SetDataSource
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InDataSource                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUICommandObject::SetDataSource(class UObject* InDataSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUICommandObject", "SetDataSource");

	Params::ModioUICommandObject_SetDataSource Parms{};

	Parms.InDataSource = InDataSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUICommandLibrary.GetCommandAssetEntry
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    CommandID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bResolved                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FModioUICommandAssetEntry  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FModioUICommandAssetEntry UModioUICommandLibrary::GetCommandAssetEntry(const class FString& CommandID, bool* bResolved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommandLibrary", "GetCommandAssetEntry");

	Params::ModioUICommandLibrary_GetCommandAssetEntry Parms{};

	Parms.CommandID = std::move(CommandID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bResolved != nullptr)
		*bResolved = Parms.bResolved;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommandLibrary.GetCommandBrush
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    CommandID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      BrushName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bResolved                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSlateBrush                ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FSlateBrush UModioUICommandLibrary::GetCommandBrush(const class FString& CommandID, const class FName& BrushName, bool* bResolved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommandLibrary", "GetCommandBrush");

	Params::ModioUICommandLibrary_GetCommandBrush Parms{};

	Parms.CommandID = std::move(CommandID);
	Parms.BrushName = BrushName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bResolved != nullptr)
		*bResolved = Parms.bResolved;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommandLibrary.GetCommandText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    CommandID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      TextName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bResolved                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UModioUICommandLibrary::GetCommandText(const class FString& CommandID, const class FName& TextName, bool* bResolved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommandLibrary", "GetCommandText");

	Params::ModioUICommandLibrary_GetCommandText Parms{};

	Parms.CommandID = std::move(CommandID);
	Parms.TextName = TextName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bResolved != nullptr)
		*bResolved = Parms.bResolved;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonButtonWidget.ConfigureCommonButton
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FModioCommonButtonParams&  Params_0                                               (Parm, NativeAccessSpecifierPublic)

void IModioUICommonButtonWidget::ConfigureCommonButton(const struct FModioCommonButtonParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUICommonButtonWidget", "ConfigureCommonButton");

	Params::ModioUICommonButtonWidget_ConfigureCommonButton Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIConnectivityChangedReceiver.OnConnectivityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewConnectivityState                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIConnectivityChangedReceiver::OnConnectivityChanged(bool bNewConnectivityState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIConnectivityChangedReceiver", "OnConnectivityChanged");

	Params::ModioUIConnectivityChangedReceiver_OnConnectivityChanged Parms{};

	Parms.bNewConnectivityState = bNewConnectivityState;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIConnectivityChangedReceiverLibrary.DeregisterConnectivityChangedReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToDeregister                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIConnectivityChangedReceiverLibrary::DeregisterConnectivityChangedReceiver(class UObject* ObjectToDeregister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIConnectivityChangedReceiverLibrary", "DeregisterConnectivityChangedReceiver");

	Params::ModioUIConnectivityChangedReceiverLibrary_DeregisterConnectivityChangedReceiver Parms{};

	Parms.ObjectToDeregister = ObjectToDeregister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIConnectivityChangedReceiverLibrary.RegisterConnectivityChangedReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToRegister                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIConnectivityChangedReceiverLibrary::RegisterConnectivityChangedReceiver(class UObject* ObjectToRegister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIConnectivityChangedReceiverLibrary", "RegisterConnectivityChangedReceiver");

	Params::ModioUIConnectivityChangedReceiverLibrary_RegisterConnectivityChangedReceiver Parms{};

	Parms.ObjectToRegister = ObjectToRegister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioTokenPackUIDetails.GetFullTokenPack
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioTokenPack                  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FModioTokenPack IModioTokenPackUIDetails::GetFullTokenPack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioTokenPackUIDetails", "GetFullTokenPack");

	Params::ModioTokenPackUIDetails_GetFullTokenPack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioTokenPackUIDetails.GetTokenPackID
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioTokenPackID                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioTokenPackID IModioTokenPackUIDetails::GetTokenPackID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioTokenPackUIDetails", "GetTokenPackID");

	Params::ModioTokenPackUIDetails_GetTokenPackID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIDataSourceWidget.GetDataSource
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* IModioUIDataSourceWidget::GetDataSource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIDataSourceWidget", "GetDataSource");

	Params::ModioUIDataSourceWidget_GetDataSource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIDataSourceWidget.SetDataSource
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InDataSource                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIDataSourceWidget::SetDataSource(class UObject* InDataSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIDataSourceWidget", "SetDataSource");

	Params::ModioUIDataSourceWidget_SetDataSource Parms{};

	Parms.InDataSource = InDataSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIDialog.AddDialogButtonClickedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(int32 ButtonIndex)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIDialog::AddDialogButtonClickedHandler(const TDelegate<void(int32 ButtonIndex)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIDialog", "AddDialogButtonClickedHandler");

	Params::ModioUIDialog_AddDialogButtonClickedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIDialog.AddDialogCanceledHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void()>&                Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIDialog::AddDialogCanceledHandler(const TDelegate<void()>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIDialog", "AddDialogCanceledHandler");

	Params::ModioUIDialog_AddDialogCanceledHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIDialog.AddDialogConfirmedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void()>&                Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIDialog::AddDialogConfirmedHandler(const TDelegate<void()>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIDialog", "AddDialogConfirmedHandler");

	Params::ModioUIDialog_AddDialogConfirmedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIDialog.AddDialogShownHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(bool bOpen)>&      Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIDialog::AddDialogShownHandler(const TDelegate<void(bool bOpen)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIDialog", "AddDialogShownHandler");

	Params::ModioUIDialog_AddDialogShownHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIDialog.CloseModal
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUIDialog::CloseModal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIDialog", "CloseModal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIDialog.RemoveDialogButtonClickedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(int32 ButtonIndex)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIDialog::RemoveDialogButtonClickedHandler(const TDelegate<void(int32 ButtonIndex)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIDialog", "RemoveDialogButtonClickedHandler");

	Params::ModioUIDialog_RemoveDialogButtonClickedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIDialog.RemoveDialogCanceledHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void()>&                Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIDialog::RemoveDialogCanceledHandler(const TDelegate<void()>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIDialog", "RemoveDialogCanceledHandler");

	Params::ModioUIDialog_RemoveDialogCanceledHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIDialog.RemoveDialogConfirmedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void()>&                Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIDialog::RemoveDialogConfirmedHandler(const TDelegate<void()>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIDialog", "RemoveDialogConfirmedHandler");

	Params::ModioUIDialog_RemoveDialogConfirmedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIDialog.RemoveDialogShownHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(bool bOpen)>&      Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIDialog::RemoveDialogShownHandler(const TDelegate<void(bool bOpen)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIDialog", "RemoveDialogShownHandler");

	Params::ModioUIDialog_RemoveDialogShownHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIDialog.ShowModal
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bFocusCancelButton                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIDialog::ShowModal(bool bFocusCancelButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIDialog", "ShowModal");

	Params::ModioUIDialog_ShowModal Parms{};

	Parms.bFocusCancelButton = bFocusCancelButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioTagCounterIcon.GetCounterLabelWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioTagCounterIcon::GetCounterLabelWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTagCounterIcon", "GetCounterLabelWidget");

	Params::ModioTagCounterIcon_GetCounterLabelWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioTagCounterIcon.SynchronizeCounter
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UModioTagCounterIcon::SynchronizeCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTagCounterIcon", "SynchronizeCounter");

	Params::ModioTagCounterIcon_SynchronizeCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIDialogDisplayEventReceiver.OnDialogDisplayEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// EModioUIDialogType                      DialogRequested                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          DataSource                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIDialogDisplayEventReceiver::OnDialogDisplayEvent(EModioUIDialogType DialogRequested, class UObject* DataSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIDialogDisplayEventReceiver", "OnDialogDisplayEvent");

	Params::ModioUIDialogDisplayEventReceiver_OnDialogDisplayEvent Parms{};

	Parms.DialogRequested = DialogRequested;
	Parms.DataSource = DataSource;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIDialogDisplayEventReceiverLibrary.DeregisterDialogDisplayEventReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToDeregister                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIDialogDisplayEventReceiverLibrary::DeregisterDialogDisplayEventReceiver(class UObject* ObjectToDeregister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIDialogDisplayEventReceiverLibrary", "DeregisterDialogDisplayEventReceiver");

	Params::ModioUIDialogDisplayEventReceiverLibrary_DeregisterDialogDisplayEventReceiver Parms{};

	Parms.ObjectToDeregister = ObjectToDeregister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIDialogDisplayEventReceiverLibrary.RegisterDialogDisplayEventReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToRegister                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIDialogDisplayEventReceiverLibrary::RegisterDialogDisplayEventReceiver(class UObject* ObjectToRegister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIDialogDisplayEventReceiverLibrary", "RegisterDialogDisplayEventReceiver");

	Params::ModioUIDialogDisplayEventReceiverLibrary_RegisterDialogDisplayEventReceiver Parms{};

	Parms.ObjectToRegister = ObjectToRegister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIEntitlementRefreshEventReceiver.OnEntitlementRefreshEvent
// (Event, Protected, BlueprintEvent)

void IModioUIEntitlementRefreshEventReceiver::OnEntitlementRefreshEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIEntitlementRefreshEventReceiver", "OnEntitlementRefreshEvent");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function ModioUICore.ModioUIEntitlementRefreshEventReceiverLibrary.DeregisterEntitlementRefreshEventReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToDeregister                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIEntitlementRefreshEventReceiverLibrary::DeregisterEntitlementRefreshEventReceiver(class UObject* ObjectToDeregister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIEntitlementRefreshEventReceiverLibrary", "DeregisterEntitlementRefreshEventReceiver");

	Params::ModioUIEntitlementRefreshEventReceiverLibrary_DeregisterEntitlementRefreshEventReceiver Parms{};

	Parms.ObjectToDeregister = ObjectToDeregister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIEntitlementRefreshEventReceiverLibrary.RegisterEntitlementRefreshEventReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToRegister                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIEntitlementRefreshEventReceiverLibrary::RegisterEntitlementRefreshEventReceiver(class UObject* ObjectToRegister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIEntitlementRefreshEventReceiverLibrary", "RegisterEntitlementRefreshEventReceiver");

	Params::ModioUIEntitlementRefreshEventReceiverLibrary_RegisterEntitlementRefreshEventReceiver Parms{};

	Parms.ObjectToRegister = ObjectToRegister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIHasConfigurableColor.ConfigureWidgetColor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ColorName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColorRef&           ColorValue                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void IModioUIHasConfigurableColor::ConfigureWidgetColor(class FName ColorName, const struct FLinearColorRef& ColorValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHasConfigurableColor", "ConfigureWidgetColor");

	Params::ModioUIHasConfigurableColor_ConfigureWidgetColor Parms{};

	Parms.ColorName = ColorName;
	Parms.ColorValue = std::move(ColorValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIHasConfigurableColor.ConfigureWidgetColorDirectly
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ColorName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSlateColor&               ColorValue                                             (Parm, NativeAccessSpecifierPublic)

void IModioUIHasConfigurableColor::ConfigureWidgetColorDirectly(class FName ColorName, const struct FSlateColor& ColorValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHasConfigurableColor", "ConfigureWidgetColorDirectly");

	Params::ModioUIHasConfigurableColor_ConfigureWidgetColorDirectly Parms{};

	Parms.ColorName = ColorName;
	Parms.ColorValue = std::move(ColorValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIHasLoadStateWidget.AddLoadStateChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* Object, EModioUILoadState NewState)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIHasLoadStateWidget::AddLoadStateChangedHandler(const TDelegate<void(class UObject* Object, EModioUILoadState NewState)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHasLoadStateWidget", "AddLoadStateChangedHandler");

	Params::ModioUIHasLoadStateWidget_AddLoadStateChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIHasLoadStateWidget.RemoveLoadStateChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* Object, EModioUILoadState NewState)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIHasLoadStateWidget::RemoveLoadStateChangedHandler(const TDelegate<void(class UObject* Object, EModioUILoadState NewState)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHasLoadStateWidget", "RemoveLoadStateChangedHandler");

	Params::ModioUIHasLoadStateWidget_RemoveLoadStateChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIHasLoadStateWidget.SetLoadState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EModioUILoadState                       NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIHasLoadStateWidget::SetLoadState(EModioUILoadState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHasLoadStateWidget", "SetLoadState");

	Params::ModioUIHasLoadStateWidget_SetLoadState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIHasLoadStateWidget.GetLoadState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EModioUILoadState                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EModioUILoadState IModioUIHasLoadStateWidget::GetLoadState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHasLoadStateWidget", "GetLoadState");

	Params::ModioUIHasLoadStateWidget_GetLoadState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIHasTextWidget.GetWidgetText
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText IModioUIHasTextWidget::GetWidgetText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHasTextWidget", "GetWidgetText");

	Params::ModioUIHasTextWidget_GetWidgetText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIHasTextWidget.GetWidgetTextFont
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateFontInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSlateFontInfo IModioUIHasTextWidget::GetWidgetTextFont()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHasTextWidget", "GetWidgetTextFont");

	Params::ModioUIHasTextWidget_GetWidgetTextFont Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIHasTextWidget.SetWidgetText
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      DisplayText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IModioUIHasTextWidget::SetWidgetText(const class FText& DisplayText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHasTextWidget", "SetWidgetText");

	Params::ModioUIHasTextWidget_SetWidgetText Parms{};

	Parms.DisplayText = std::move(DisplayText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIHasTextWidget.SetWidgetTextFont
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FSlateFontInfo&            FontInfo                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIHasTextWidget::SetWidgetTextFont(const struct FSlateFontInfo& FontInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHasTextWidget", "SetWidgetTextFont");

	Params::ModioUIHasTextWidget_SetWidgetTextFont Parms{};

	Parms.FontInfo = std::move(FontInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIHasTooltipWidget.ConfigureTooltip
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      TitleText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      InfoText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      TagText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IModioUIHasTooltipWidget::ConfigureTooltip(const class FText& TitleText, const class FText& InfoText, const class FText& TagText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHasTooltipWidget", "ConfigureTooltip");

	Params::ModioUIHasTooltipWidget_ConfigureTooltip Parms{};

	Parms.TitleText = std::move(TitleText);
	Parms.InfoText = std::move(InfoText);
	Parms.TagText = std::move(TagText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIHasTooltipWidget.SetTooltipEnabledState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewEnabledState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIHasTooltipWidget::SetTooltipEnabledState(bool bNewEnabledState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHasTooltipWidget", "SetTooltipEnabledState");

	Params::ModioUIHasTooltipWidget_SetTooltipEnabledState Parms{};

	Parms.bNewEnabledState = bNewEnabledState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIHoverableWidget.AddHoverStateChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* HoverContext, bool bHoveredState)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIHoverableWidget::AddHoverStateChangedHandler(const TDelegate<void(class UObject* HoverContext, bool bHoveredState)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHoverableWidget", "AddHoverStateChangedHandler");

	Params::ModioUIHoverableWidget_AddHoverStateChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIHoverableWidget.DisableHoverEvents
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUIHoverableWidget::DisableHoverEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHoverableWidget", "DisableHoverEvents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIHoverableWidget.EnableHoverEvents
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUIHoverableWidget::EnableHoverEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHoverableWidget", "EnableHoverEvents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIHoverableWidget.RemoveHoverStateChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* HoverContext, bool bHoveredState)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIHoverableWidget::RemoveHoverStateChangedHandler(const TDelegate<void(class UObject* HoverContext, bool bHoveredState)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIHoverableWidget", "RemoveHoverStateChangedHandler");

	Params::ModioUIHoverableWidget_RemoveHoverStateChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIImageDisplayWidget.AddImageLoadEventHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* LoadContext, bool bLoadSuccess)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIImageDisplayWidget::AddImageLoadEventHandler(const TDelegate<void(class UObject* LoadContext, bool bLoadSuccess)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIImageDisplayWidget", "AddImageLoadEventHandler");

	Params::ModioUIImageDisplayWidget_AddImageLoadEventHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIImageDisplayWidget.BeginLoadImageFromFile
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FModioImageWrapper&        Image                                                  (Parm, NativeAccessSpecifierPublic)

void IModioUIImageDisplayWidget::BeginLoadImageFromFile(const struct FModioImageWrapper& Image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIImageDisplayWidget", "BeginLoadImageFromFile");

	Params::ModioUIImageDisplayWidget_BeginLoadImageFromFile Parms{};

	Parms.Image = std::move(Image);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIImageDisplayWidget.RemoveImageLoadEventHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* LoadContext, bool bLoadSuccess)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIImageDisplayWidget::RemoveImageLoadEventHandler(const TDelegate<void(class UObject* LoadContext, bool bLoadSuccess)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIImageDisplayWidget", "RemoveImageLoadEventHandler");

	Params::ModioUIImageDisplayWidget_RemoveImageLoadEventHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIImageDisplayWidget.SetBrushDirectly
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FSlateBrush&               NewBrush                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IModioUIImageDisplayWidget::SetBrushDirectly(const struct FSlateBrush& NewBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIImageDisplayWidget", "SetBrushDirectly");

	Params::ModioUIImageDisplayWidget_SetBrushDirectly Parms{};

	Parms.NewBrush = std::move(NewBrush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIImageDisplayWidget.SetBrushMatchTextureSize
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bMatchTextureSize                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIImageDisplayWidget::SetBrushMatchTextureSize(bool bMatchTextureSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIImageDisplayWidget", "SetBrushMatchTextureSize");

	Params::ModioUIImageDisplayWidget_SetBrushMatchTextureSize Parms{};

	Parms.bMatchTextureSize = bMatchTextureSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIImageDisplayWidget.SetDesiredBrushSize
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 DesiredSize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIImageDisplayWidget::SetDesiredBrushSize(const struct FVector2D& DesiredSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIImageDisplayWidget", "SetDesiredBrushSize");

	Params::ModioUIImageDisplayWidget_SetDesiredBrushSize Parms{};

	Parms.DesiredSize = std::move(DesiredSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIMediaDownloadCompletedReceiver.OnModCreatorAvatarDownloadCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FModioModID&               ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FModioErrorCode&           ErrorCode                                              (Parm, NativeAccessSpecifierPublic)
// const struct FModioOptionalImage&       Image                                                  (Parm, NativeAccessSpecifierPublic)

void IModioUIMediaDownloadCompletedReceiver::OnModCreatorAvatarDownloadCompleted(const struct FModioModID& ModId, const struct FModioErrorCode& ErrorCode, const struct FModioOptionalImage& Image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIMediaDownloadCompletedReceiver", "OnModCreatorAvatarDownloadCompleted");

	Params::ModioUIMediaDownloadCompletedReceiver_OnModCreatorAvatarDownloadCompleted Parms{};

	Parms.ModId = std::move(ModId);
	Parms.ErrorCode = std::move(ErrorCode);
	Parms.Image = std::move(Image);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIMediaDownloadCompletedReceiver.OnModGalleryImageDownloadCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FModioModID&               ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FModioErrorCode&           ErrorCode                                              (Parm, NativeAccessSpecifierPublic)
// int32                                   ImageIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FModioOptionalImage&       Image                                                  (Parm, NativeAccessSpecifierPublic)

void IModioUIMediaDownloadCompletedReceiver::OnModGalleryImageDownloadCompleted(const struct FModioModID& ModId, const struct FModioErrorCode& ErrorCode, int32 ImageIndex, const struct FModioOptionalImage& Image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIMediaDownloadCompletedReceiver", "OnModGalleryImageDownloadCompleted");

	Params::ModioUIMediaDownloadCompletedReceiver_OnModGalleryImageDownloadCompleted Parms{};

	Parms.ModId = std::move(ModId);
	Parms.ErrorCode = std::move(ErrorCode);
	Parms.ImageIndex = ImageIndex;
	Parms.Image = std::move(Image);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIMediaDownloadCompletedReceiver.OnModLogoDownloadCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FModioModID&               ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FModioErrorCode&           ErrorCode                                              (Parm, NativeAccessSpecifierPublic)
// const struct FModioOptionalImage&       Image                                                  (Parm, NativeAccessSpecifierPublic)
// EModioLogoSize                          LogoSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIMediaDownloadCompletedReceiver::OnModLogoDownloadCompleted(const struct FModioModID& ModId, const struct FModioErrorCode& ErrorCode, const struct FModioOptionalImage& Image, EModioLogoSize LogoSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIMediaDownloadCompletedReceiver", "OnModLogoDownloadCompleted");

	Params::ModioUIMediaDownloadCompletedReceiver_OnModLogoDownloadCompleted Parms{};

	Parms.ModId = std::move(ModId);
	Parms.ErrorCode = std::move(ErrorCode);
	Parms.Image = std::move(Image);
	Parms.LogoSize = LogoSize;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIMediaDownloadCompletedReceiverLibrary.DeregisterMediaDownloadCompletedReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToDeregister                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioUIMediaDownloadEventType          DownloadTypes                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIMediaDownloadCompletedReceiverLibrary::DeregisterMediaDownloadCompletedReceiver(class UObject* ObjectToDeregister, EModioUIMediaDownloadEventType DownloadTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIMediaDownloadCompletedReceiverLibrary", "DeregisterMediaDownloadCompletedReceiver");

	Params::ModioUIMediaDownloadCompletedReceiverLibrary_DeregisterMediaDownloadCompletedReceiver Parms{};

	Parms.ObjectToDeregister = ObjectToDeregister;
	Parms.DownloadTypes = DownloadTypes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIMediaDownloadCompletedReceiverLibrary.RegisterMediaDownloadCompletedReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToRegister                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioUIMediaDownloadEventType          DownloadTypes                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIMediaDownloadCompletedReceiverLibrary::RegisterMediaDownloadCompletedReceiver(class UObject* ObjectToRegister, EModioUIMediaDownloadEventType DownloadTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIMediaDownloadCompletedReceiverLibrary", "RegisterMediaDownloadCompletedReceiver");

	Params::ModioUIMediaDownloadCompletedReceiverLibrary_RegisterMediaDownloadCompletedReceiver Parms{};

	Parms.ObjectToRegister = ObjectToRegister;
	Parms.DownloadTypes = DownloadTypes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModEnabledStateChangedReceiver.OnModEnabledStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FModioModID&               ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewEnabledState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIModEnabledStateChangedReceiver::OnModEnabledStateChanged(const struct FModioModID& ModId, bool bNewEnabledState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModEnabledStateChangedReceiver", "OnModEnabledStateChanged");

	Params::ModioUIModEnabledStateChangedReceiver_OnModEnabledStateChanged Parms{};

	Parms.ModId = std::move(ModId);
	Parms.bNewEnabledState = bNewEnabledState;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIModEnabledStateChangedReceiverLibrary.DeregisterModEnabledStateChangedReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToDeregister                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIModEnabledStateChangedReceiverLibrary::DeregisterModEnabledStateChangedReceiver(class UObject* ObjectToDeregister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIModEnabledStateChangedReceiverLibrary", "DeregisterModEnabledStateChangedReceiver");

	Params::ModioUIModEnabledStateChangedReceiverLibrary_DeregisterModEnabledStateChangedReceiver Parms{};

	Parms.ObjectToDeregister = ObjectToDeregister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModEnabledStateChangedReceiverLibrary.RegisterModEnabledStateChangedReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToRegister                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIModEnabledStateChangedReceiverLibrary::RegisterModEnabledStateChangedReceiver(class UObject* ObjectToRegister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIModEnabledStateChangedReceiverLibrary", "RegisterModEnabledStateChangedReceiver");

	Params::ModioUIModEnabledStateChangedReceiverLibrary_RegisterModEnabledStateChangedReceiver Parms{};

	Parms.ObjectToRegister = ObjectToRegister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModEnabledStateProvider.AddModEnabledStateChangeHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(int64 RawID, bool bNewEnabledState)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIModEnabledStateProvider::AddModEnabledStateChangeHandler(const TDelegate<void(int64 RawID, bool bNewEnabledState)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModEnabledStateProvider", "AddModEnabledStateChangeHandler");

	Params::ModioUIModEnabledStateProvider_AddModEnabledStateChangeHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModEnabledStateProvider.QueryIsModEnabled
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FModioModID&               ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioUIModEnabledStateProvider::QueryIsModEnabled(const struct FModioModID& ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModEnabledStateProvider", "QueryIsModEnabled");

	Params::ModioUIModEnabledStateProvider_QueryIsModEnabled Parms{};

	Parms.ModId = std::move(ModId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIModEnabledStateProvider.RemoveModEnabledStateChangeHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(int64 RawID, bool bNewEnabledState)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIModEnabledStateProvider::RemoveModEnabledStateChangeHandler(const TDelegate<void(int64 RawID, bool bNewEnabledState)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModEnabledStateProvider", "RemoveModEnabledStateChangeHandler");

	Params::ModioUIModEnabledStateProvider_RemoveModEnabledStateChangeHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModEnabledStateProvider.RequestModEnabledStateChange
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FModioModID&               ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewEnabledState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioUIModEnabledStateProvider::RequestModEnabledStateChange(const struct FModioModID& ID, bool bNewEnabledState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModEnabledStateProvider", "RequestModEnabledStateChange");

	Params::ModioUIModEnabledStateProvider_RequestModEnabledStateChange Parms{};

	Parms.ID = std::move(ID);
	Parms.bNewEnabledState = bNewEnabledState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIModInfoReceiver.OnListAllModsRequestCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class FString&                    RequestIdentifier                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FModioErrorCode&           ErrorCode                                              (Parm, NativeAccessSpecifierPublic)
// const struct FModioOptionalModInfoList& List                                                   (Parm, NativeAccessSpecifierPublic)

void IModioUIModInfoReceiver::OnListAllModsRequestCompleted(const class FString& RequestIdentifier, const struct FModioErrorCode& ErrorCode, const struct FModioOptionalModInfoList& List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModInfoReceiver", "OnListAllModsRequestCompleted");

	Params::ModioUIModInfoReceiver_OnListAllModsRequestCompleted Parms{};

	Parms.RequestIdentifier = std::move(RequestIdentifier);
	Parms.ErrorCode = std::move(ErrorCode);
	Parms.List = std::move(List);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIModInfoReceiver.OnModInfoRequestCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FModioModID&               ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FModioErrorCode&           ErrorCode                                              (Parm, NativeAccessSpecifierPublic)
// const struct FModioOptionalModInfo&     Info                                                   (Parm, NativeAccessSpecifierPublic)

void IModioUIModInfoReceiver::OnModInfoRequestCompleted(const struct FModioModID& ModId, const struct FModioErrorCode& ErrorCode, const struct FModioOptionalModInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModInfoReceiver", "OnModInfoRequestCompleted");

	Params::ModioUIModInfoReceiver_OnModInfoRequestCompleted Parms{};

	Parms.ModId = std::move(ModId);
	Parms.ErrorCode = std::move(ErrorCode);
	Parms.Info = std::move(Info);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUISubsystem.DisableModManagement
// (Final, Native, Public, BlueprintCallable)

void UModioUISubsystem::DisableModManagement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "DisableModManagement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.EnableModManagement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioErrorCode                  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FModioErrorCode UModioUISubsystem::EnableModManagement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "EnableModManagement");

	Params::ModioUISubsystem_EnableModManagement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.GetCurrentDPIScaleValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UModioUISubsystem::GetCurrentDPIScaleValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "GetCurrentDPIScaleValue");

	Params::ModioUISubsystem_GetCurrentDPIScaleValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.IsUGCFeatureEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EModioUIFeatureFlags                    Feature                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUISubsystem::IsUGCFeatureEnabled(EModioUIFeatureFlags Feature)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "IsUGCFeatureEnabled");

	Params::ModioUISubsystem_IsUGCFeatureEnabled Parms{};

	Parms.Feature = Feature;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.NotifyConnectivityChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewConnectivityState                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::NotifyConnectivityChange(bool bNewConnectivityState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "NotifyConnectivityChange");

	Params::ModioUISubsystem_NotifyConnectivityChange Parms{};

	Parms.bNewConnectivityState = bNewConnectivityState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.OnModEnabledChanged
// (Final, Native, Protected)
// Parameters:
// int64                                   RawModID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewEnabledState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::OnModEnabledChanged(int64 RawModID, bool bNewEnabledState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "OnModEnabledChanged");

	Params::ModioUISubsystem_OnModEnabledChanged Parms{};

	Parms.RawModID = RawModID;
	Parms.bNewEnabledState = bNewEnabledState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.QueryConnectivityState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUISubsystem::QueryConnectivityState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "QueryConnectivityState");

	Params::ModioUISubsystem_QueryConnectivityState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.QueryIsModEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FModioModID&               ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUISubsystem::QueryIsModEnabled(const struct FModioModID& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "QueryIsModEnabled");

	Params::ModioUISubsystem_QueryIsModEnabled Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.RequestEmailAuthenticationWithHandler
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FModioEmailAuthCode&       Code                                                   (Parm, NativeAccessSpecifierPublic)
// const TDelegate<void(const struct FModioErrorCode& ErrorCode)>Callback                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestEmailAuthenticationWithHandler(const struct FModioEmailAuthCode& Code, const TDelegate<void(const struct FModioErrorCode& ErrorCode)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestEmailAuthenticationWithHandler");

	Params::ModioUISubsystem_RequestEmailAuthenticationWithHandler Parms{};

	Parms.Code = std::move(Code);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestGalleryImageDownloadForModID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FModioModID&               ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioGallerySize                       ImageSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestGalleryImageDownloadForModID(const struct FModioModID& ID, int32 Index_0, EModioGallerySize ImageSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestGalleryImageDownloadForModID");

	Params::ModioUISubsystem_RequestGalleryImageDownloadForModID Parms{};

	Parms.ID = std::move(ID);
	Parms.Index_0 = Index_0;
	Parms.ImageSize = ImageSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestListAllMods
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FModioFilterParams&        Params_0                                               (Parm, NativeAccessSpecifierPublic)
// const class FString&                    RequestIdentifier                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestListAllMods(const struct FModioFilterParams& Params_0, const class FString& RequestIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestListAllMods");

	Params::ModioUISubsystem_RequestListAllMods Parms{};

	Parms.Params_0 = std::move(Params_0);
	Parms.RequestIdentifier = std::move(RequestIdentifier);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestListAllTokenPacks
// (Final, Native, Public, BlueprintCallable)

void UModioUISubsystem::RequestListAllTokenPacks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestListAllTokenPacks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestLogoDownloadForModID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FModioModID&               ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioLogoSize                          LogoSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestLogoDownloadForModID(const struct FModioModID& ID, EModioLogoSize LogoSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestLogoDownloadForModID");

	Params::ModioUISubsystem_RequestLogoDownloadForModID Parms{};

	Parms.ID = std::move(ID);
	Parms.LogoSize = LogoSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestModEnabledStateChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FModioModID&               ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewEnabledState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUISubsystem::RequestModEnabledStateChange(const struct FModioModID& ID, bool bNewEnabledState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestModEnabledStateChange");

	Params::ModioUISubsystem_RequestModEnabledStateChange Parms{};

	Parms.ID = std::move(ID);
	Parms.bNewEnabledState = bNewEnabledState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.RequestModInfoForModIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<struct FModioModID>&       IDs                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestModInfoForModIDs(const TArray<struct FModioModID>& IDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestModInfoForModIDs");

	Params::ModioUISubsystem_RequestModInfoForModIDs Parms{};

	Parms.IDs = std::move(IDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestPurchaseForModIDWithHandler
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FModioModID&               ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FModioUnsigned64&          ExpectedPrice                                          (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalTransactionRecord& Transaction)>&Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestPurchaseForModIDWithHandler(const struct FModioModID& ID, const struct FModioUnsigned64& ExpectedPrice, const TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalTransactionRecord& Transaction)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestPurchaseForModIDWithHandler");

	Params::ModioUISubsystem_RequestPurchaseForModIDWithHandler Parms{};

	Parms.ID = std::move(ID);
	Parms.ExpectedPrice = std::move(ExpectedPrice);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestPurchaseTokenPack
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FModioTokenPackID&         TokenPackID                                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(bool bSuccess, const class FString& Message)>&Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUISubsystem::RequestPurchaseTokenPack(const struct FModioTokenPackID& TokenPackID, const TDelegate<void(bool bSuccess, const class FString& Message)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestPurchaseTokenPack");

	Params::ModioUISubsystem_RequestPurchaseTokenPack Parms{};

	Parms.TokenPackID = std::move(TokenPackID);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.RequestRefreshEntitlements
// (Final, Native, Public, BlueprintCallable)

void UModioUISubsystem::RequestRefreshEntitlements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestRefreshEntitlements");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestRemoveSubscriptionForModID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FModioModID&               ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestRemoveSubscriptionForModID(const struct FModioModID& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestRemoveSubscriptionForModID");

	Params::ModioUISubsystem_RequestRemoveSubscriptionForModID Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestRemoveSubscriptionForModIDWithHandler
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FModioModID&               ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FModioErrorCode& ErrorCode)>DedicatedCallback                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestRemoveSubscriptionForModIDWithHandler(const struct FModioModID& ID, TDelegate<void(const struct FModioErrorCode& ErrorCode)> DedicatedCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestRemoveSubscriptionForModIDWithHandler");

	Params::ModioUISubsystem_RequestRemoveSubscriptionForModIDWithHandler Parms{};

	Parms.ID = std::move(ID);
	Parms.DedicatedCallback = DedicatedCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestShowDialog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EModioUIDialogType                      DialogType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          DataSource                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestShowDialog(EModioUIDialogType DialogType, class UObject* DataSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestShowDialog");

	Params::ModioUISubsystem_RequestShowDialog Parms{};

	Parms.DialogType = DialogType;
	Parms.DataSource = DataSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestShowTokenPurchaseUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EModioOpenStoreResult                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EModioOpenStoreResult UModioUISubsystem::RequestShowTokenPurchaseUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestShowTokenPurchaseUI");

	Params::ModioUISubsystem_RequestShowTokenPurchaseUI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.RequestShowTokenPurchaseUIWithHandler
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TDelegate<void(bool bResult, const class FString& Message)>&Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioOpenStoreResult                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EModioOpenStoreResult UModioUISubsystem::RequestShowTokenPurchaseUIWithHandler(const TDelegate<void(bool bResult, const class FString& Message)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestShowTokenPurchaseUIWithHandler");

	Params::ModioUISubsystem_RequestShowTokenPurchaseUIWithHandler Parms{};

	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.RequestSubscriptionForModID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FModioModID&               ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IncludeDependencies                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestSubscriptionForModID(const struct FModioModID& ID, bool IncludeDependencies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestSubscriptionForModID");

	Params::ModioUISubsystem_RequestSubscriptionForModID Parms{};

	Parms.ID = std::move(ID);
	Parms.IncludeDependencies = IncludeDependencies;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestSubscriptionForModIDWithHandler
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FModioModID&               ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IncludeDependencies                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FModioErrorCode& ErrorCode)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestSubscriptionForModIDWithHandler(const struct FModioModID& ID, bool IncludeDependencies, TDelegate<void(const struct FModioErrorCode& ErrorCode)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestSubscriptionForModIDWithHandler");

	Params::ModioUISubsystem_RequestSubscriptionForModIDWithHandler Parms{};

	Parms.ID = std::move(ID);
	Parms.IncludeDependencies = IncludeDependencies;
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestUserAvatar
// (Final, Native, Public, BlueprintCallable)

void UModioUISubsystem::RequestUserAvatar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestUserAvatar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestWalletBalanceRefresh
// (Final, Native, Public, BlueprintCallable)

void UModioUISubsystem::RequestWalletBalanceRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestWalletBalanceRefresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestWalletBalanceRefreshWithHandler
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalUInt64& WalletBalance)>&Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestWalletBalanceRefreshWithHandler(const TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalUInt64& WalletBalance)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestWalletBalanceRefreshWithHandler");

	Params::ModioUISubsystem_RequestWalletBalanceRefreshWithHandler Parms{};

	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.SetModEnabledStateDataProvider
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IModioUIModEnabledStateProvider>InModEnabledStateDataProvider                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::SetModEnabledStateDataProvider(TScriptInterface<class IModioUIModEnabledStateProvider> InModEnabledStateDataProvider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "SetModEnabledStateDataProvider");

	Params::ModioUISubsystem_SetModEnabledStateDataProvider Parms{};

	Parms.InModEnabledStateDataProvider = InModEnabledStateDataProvider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.SetModRatingStateDataProvider
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IModRatingStateProvider>InModRatingStateProvider                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::SetModRatingStateDataProvider(TScriptInterface<class IModRatingStateProvider> InModRatingStateProvider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "SetModRatingStateDataProvider");

	Params::ModioUISubsystem_SetModRatingStateDataProvider Parms{};

	Parms.InModRatingStateProvider = InModRatingStateProvider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.SubscriptionHandler
// (Final, Native, Protected)
// Parameters:
// const struct FModioErrorCode&           ErrorCode                                              (Parm, NativeAccessSpecifierPublic)
// const struct FModioModID&               ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::SubscriptionHandler(const struct FModioErrorCode& ErrorCode, const struct FModioModID& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "SubscriptionHandler");

	Params::ModioUISubsystem_SubscriptionHandler Parms{};

	Parms.ErrorCode = std::move(ErrorCode);
	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.UninstallHandler
// (Final, Native, Protected)
// Parameters:
// const struct FModioErrorCode&           ErrorCode                                              (Parm, NativeAccessSpecifierPublic)
// const struct FModioModID&               ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::UninstallHandler(const struct FModioErrorCode& ErrorCode, const struct FModioModID& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "UninstallHandler");

	Params::ModioUISubsystem_UninstallHandler Parms{};

	Parms.ErrorCode = std::move(ErrorCode);
	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.UnsubscribeHandler
// (Final, Native, Protected)
// Parameters:
// const struct FModioErrorCode&           ErrorCode                                              (Parm, NativeAccessSpecifierPublic)
// const struct FModioModID&               ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::UnsubscribeHandler(const struct FModioErrorCode& ErrorCode, const struct FModioModID& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "UnsubscribeHandler");

	Params::ModioUISubsystem_UnsubscribeHandler Parms{};

	Parms.ErrorCode = std::move(ErrorCode);
	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModInfoReceiverLibrary.DeregisterModInfoReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToDeregister                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioUIModInfoEventType                EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIModInfoReceiverLibrary::DeregisterModInfoReceiver(class UObject* ObjectToDeregister, EModioUIModInfoEventType EventType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIModInfoReceiverLibrary", "DeregisterModInfoReceiver");

	Params::ModioUIModInfoReceiverLibrary_DeregisterModInfoReceiver Parms{};

	Parms.ObjectToDeregister = ObjectToDeregister;
	Parms.EventType = EventType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModInfoReceiverLibrary.RegisterModInfoReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToRegister                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioUIModInfoEventType                EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIModInfoReceiverLibrary::RegisterModInfoReceiver(class UObject* ObjectToRegister, EModioUIModInfoEventType EventType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIModInfoReceiverLibrary", "RegisterModInfoReceiver");

	Params::ModioUIModInfoReceiverLibrary_RegisterModInfoReceiver Parms{};

	Parms.ObjectToRegister = ObjectToRegister;
	Parms.EventType = EventType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModListViewInterface.SetModSelectionByID
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FModioModID&               ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIModListViewInterface::SetModSelectionByID(const struct FModioModID& ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModListViewInterface", "SetModSelectionByID");

	Params::ModioUIModListViewInterface_SetModSelectionByID Parms{};

	Parms.ModId = std::move(ModId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModListViewInterface.SetModsFromModCollectionEntryArray
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FModioModCollectionEntry>&inArray                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bAddToExisting                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIModListViewInterface::SetModsFromModCollectionEntryArray(const TArray<struct FModioModCollectionEntry>& inArray, bool bAddToExisting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModListViewInterface", "SetModsFromModCollectionEntryArray");

	Params::ModioUIModListViewInterface_SetModsFromModCollectionEntryArray Parms{};

	Parms.inArray = std::move(inArray);
	Parms.bAddToExisting = bAddToExisting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModListViewInterface.SetModsFromModInfoArray
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FModioModInfo>&     inArray                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bAddToExisting                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIModListViewInterface::SetModsFromModInfoArray(const TArray<struct FModioModInfo>& inArray, bool bAddToExisting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModListViewInterface", "SetModsFromModInfoArray");

	Params::ModioUIModListViewInterface_SetModsFromModInfoArray Parms{};

	Parms.inArray = std::move(inArray);
	Parms.bAddToExisting = bAddToExisting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModListViewInterface.SetModsFromModInfoList
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FModioModInfoList&         InList                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddToExisting                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIModListViewInterface::SetModsFromModInfoList(const struct FModioModInfoList& InList, bool bAddToExisting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModListViewInterface", "SetModsFromModInfoList");

	Params::ModioUIModListViewInterface_SetModsFromModInfoList Parms{};

	Parms.InList = std::move(InList);
	Parms.bAddToExisting = bAddToExisting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModManagementEventReceiver.OnModManagementEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FModioModManagementEvent&  Event                                                  (Parm, NativeAccessSpecifierPublic)

void IModioUIModManagementEventReceiver::OnModManagementEvent(const struct FModioModManagementEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModManagementEventReceiver", "OnModManagementEvent");

	Params::ModioUIModManagementEventReceiver_OnModManagementEvent Parms{};

	Parms.Event = std::move(Event);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioModManagementEventReceiverLibrary.DeregisterModManagementEventReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToDeregister                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModManagementEventReceiverLibrary::DeregisterModManagementEventReceiver(class UObject* ObjectToDeregister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioModManagementEventReceiverLibrary", "DeregisterModManagementEventReceiver");

	Params::ModioModManagementEventReceiverLibrary_DeregisterModManagementEventReceiver Parms{};

	Parms.ObjectToDeregister = ObjectToDeregister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModManagementEventReceiverLibrary.RegisterModManagementEventReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToRegister                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModManagementEventReceiverLibrary::RegisterModManagementEventReceiver(class UObject* ObjectToRegister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioModManagementEventReceiverLibrary", "RegisterModManagementEventReceiver");

	Params::ModioModManagementEventReceiverLibrary_RegisterModManagementEventReceiver Parms{};

	Parms.ObjectToRegister = ObjectToRegister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModTagSelector.AddTagSelectionChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void()>&                Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIModTagSelector::AddTagSelectionChangedHandler(const TDelegate<void()>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModTagSelector", "AddTagSelectionChangedHandler");

	Params::ModioUIModTagSelector_AddTagSelectionChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModTagSelector.ClearSelectedTags
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUIModTagSelector::ClearSelectedTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModTagSelector", "ClearSelectedTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModTagSelector.GetAllowHiddenTags
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioUIModTagSelector::GetAllowHiddenTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModTagSelector", "GetAllowHiddenTags");

	Params::ModioUIModTagSelector_GetAllowHiddenTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIModTagSelector.GetAllowLockedTags
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioUIModTagSelector::GetAllowLockedTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModTagSelector", "GetAllowLockedTags");

	Params::ModioUIModTagSelector_GetAllowLockedTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIModTagSelector.GetSelectedTags
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> IModioUIModTagSelector::GetSelectedTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModTagSelector", "GetSelectedTags");

	Params::ModioUIModTagSelector_GetSelectedTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIModTagSelector.RemoveTagSelectionChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void()>&                Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIModTagSelector::RemoveTagSelectionChangedHandler(const TDelegate<void()>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModTagSelector", "RemoveTagSelectionChangedHandler");

	Params::ModioUIModTagSelector_RemoveTagSelectionChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModTagSelector.SetAvailableTagsFromBoundModTagOptions
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TScriptInterface<class IModioModTagOptionsUIDetails>&InOptions                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIModTagSelector::SetAvailableTagsFromBoundModTagOptions(const TScriptInterface<class IModioModTagOptionsUIDetails>& InOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModTagSelector", "SetAvailableTagsFromBoundModTagOptions");

	Params::ModioUIModTagSelector_SetAvailableTagsFromBoundModTagOptions Parms{};

	Parms.InOptions = InOptions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModTagSelector.SetAvailableTagsFromModTagOptions
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FModioModTagOptions&       InOptions                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIModTagSelector::SetAvailableTagsFromModTagOptions(const struct FModioModTagOptions& InOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIModTagSelector", "SetAvailableTagsFromModTagOptions");

	Params::ModioUIModTagSelector_SetAvailableTagsFromModTagOptions Parms{};

	Parms.InOptions = std::move(InOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIObjectListWidget.AddObjectWidgetCreatedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UWidget* ObjectWidget, class UObject* Object)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIObjectListWidget::AddObjectWidgetCreatedHandler(const TDelegate<void(class UWidget* ObjectWidget, class UObject* Object)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectListWidget", "AddObjectWidgetCreatedHandler");

	Params::ModioUIObjectListWidget_AddObjectWidgetCreatedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIObjectListWidget.GetFirstEntryWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* IModioUIObjectListWidget::GetFirstEntryWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectListWidget", "GetFirstEntryWidget");

	Params::ModioUIObjectListWidget_GetFirstEntryWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIObjectListWidget.GetObjects
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> IModioUIObjectListWidget::GetObjects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectListWidget", "GetObjects");

	Params::ModioUIObjectListWidget_GetObjects Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIObjectListWidget.RemoveObjectWidgetCreatedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UWidget* ObjectWidget, class UObject* Object)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIObjectListWidget::RemoveObjectWidgetCreatedHandler(const TDelegate<void(class UWidget* ObjectWidget, class UObject* Object)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectListWidget", "RemoveObjectWidgetCreatedHandler");

	Params::ModioUIObjectListWidget_RemoveObjectWidgetCreatedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIObjectListWidget.SetObjects
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class UObject*>&           InObjects                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void IModioUIObjectListWidget::SetObjects(const TArray<class UObject*>& InObjects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectListWidget", "SetObjects");

	Params::ModioUIObjectListWidget_SetObjects Parms{};

	Parms.InObjects = std::move(InObjects);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIObjectListWidget.GetObjectAt
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* IModioUIObjectListWidget::GetObjectAt(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectListWidget", "GetObjectAt");

	Params::ModioUIObjectListWidget_GetObjectAt Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIObjectSelector.AddSelectionChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* SelectedValue)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIObjectSelector::AddSelectionChangedHandler(const TDelegate<void(class UObject* SelectedValue)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "AddSelectionChangedHandler");

	Params::ModioUIObjectSelector_AddSelectionChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIObjectSelector.ClearSelectedValues
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUIObjectSelector::ClearSelectedValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "ClearSelectedValues");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIObjectSelector.GetLastSelectionIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IModioUIObjectSelector::GetLastSelectionIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "GetLastSelectionIndex");

	Params::ModioUIObjectSelector_GetLastSelectionIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIObjectSelector.GetMultiSelectionAllowed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioUIObjectSelector::GetMultiSelectionAllowed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "GetMultiSelectionAllowed");

	Params::ModioUIObjectSelector_GetMultiSelectionAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIObjectSelector.GetNumEntries
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IModioUIObjectSelector::GetNumEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "GetNumEntries");

	Params::ModioUIObjectSelector_GetNumEntries Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIObjectSelector.GetSelectedValues
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> IModioUIObjectSelector::GetSelectedValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "GetSelectedValues");

	Params::ModioUIObjectSelector_GetSelectedValues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIObjectSelector.GetSingleSelectedValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* IModioUIObjectSelector::GetSingleSelectedValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "GetSingleSelectedValue");

	Params::ModioUIObjectSelector_GetSingleSelectedValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIObjectSelector.GetSingleSelectionIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IModioUIObjectSelector::GetSingleSelectionIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "GetSingleSelectionIndex");

	Params::ModioUIObjectSelector_GetSingleSelectionIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIObjectSelector.RemoveSelectionChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* SelectedValue)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIObjectSelector::RemoveSelectionChangedHandler(const TDelegate<void(class UObject* SelectedValue)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "RemoveSelectionChangedHandler");

	Params::ModioUIObjectSelector_RemoveSelectionChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIObjectSelector.SetListEntryWidgetClass
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UWidget>              InNewEntryClass                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIObjectSelector::SetListEntryWidgetClass(TSubclassOf<class UWidget> InNewEntryClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "SetListEntryWidgetClass");

	Params::ModioUIObjectSelector_SetListEntryWidgetClass Parms{};

	Parms.InNewEntryClass = InNewEntryClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIObjectSelector.SetMultiSelectionAllowed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bMultiSelectionAllowed                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIObjectSelector::SetMultiSelectionAllowed(bool bMultiSelectionAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "SetMultiSelectionAllowed");

	Params::ModioUIObjectSelector_SetMultiSelectionAllowed Parms{};

	Parms.bMultiSelectionAllowed = bMultiSelectionAllowed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIObjectSelector.SetSelectedStateForIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewSelectionState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEmitSelectionEvent                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIObjectSelector::SetSelectedStateForIndex(int32 Index_0, bool bNewSelectionState, bool bEmitSelectionEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "SetSelectedStateForIndex");

	Params::ModioUIObjectSelector_SetSelectedStateForIndex Parms{};

	Parms.Index_0 = Index_0;
	Parms.bNewSelectionState = bNewSelectionState;
	Parms.bEmitSelectionEvent = bEmitSelectionEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIObjectSelector.SetSelectedStateForValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewSelectionState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEmitSelectionEvent                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIObjectSelector::SetSelectedStateForValue(class UObject* Value, bool bNewSelectionState, bool bEmitSelectionEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "SetSelectedStateForValue");

	Params::ModioUIObjectSelector_SetSelectedStateForValue Parms{};

	Parms.Value = Value;
	Parms.bNewSelectionState = bNewSelectionState;
	Parms.bEmitSelectionEvent = bEmitSelectionEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIObjectSelector.SetSingleSelectionByIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEmitSelectionEvent                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIObjectSelector::SetSingleSelectionByIndex(int32 Index_0, bool bEmitSelectionEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "SetSingleSelectionByIndex");

	Params::ModioUIObjectSelector_SetSingleSelectionByIndex Parms{};

	Parms.Index_0 = Index_0;
	Parms.bEmitSelectionEvent = bEmitSelectionEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIObjectSelector.SetSingleSelectionByValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEmitSelectionEvent                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIObjectSelector::SetSingleSelectionByValue(class UObject* Value, bool bEmitSelectionEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "SetSingleSelectionByValue");

	Params::ModioUIObjectSelector_SetSingleSelectionByValue Parms{};

	Parms.Value = Value;
	Parms.bEmitSelectionEvent = bEmitSelectionEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIObjectSelector.SetValues
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class UObject*>&           InValues                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void IModioUIObjectSelector::SetValues(const TArray<class UObject*>& InValues)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "SetValues");

	Params::ModioUIObjectSelector_SetValues Parms{};

	Parms.InValues = std::move(InValues);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIObjectSelector.GetIndexForValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IModioUIObjectSelector::GetIndexForValue(class UObject* Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "GetIndexForValue");

	Params::ModioUIObjectSelector_GetIndexForValue Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIObjectSelector.GetWidgetForValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* IModioUIObjectSelector::GetWidgetForValue(class UObject* Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIObjectSelector", "GetWidgetForValue");

	Params::ModioUIObjectSelector_GetWidgetForValue Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIProgressWidget.AddValueChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(float NewValue)>&  Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIProgressWidget::AddValueChangedHandler(const TDelegate<void(float NewValue)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIProgressWidget", "AddValueChangedHandler");

	Params::ModioUIProgressWidget_AddValueChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIProgressWidget.ClearColorOverride
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUIProgressWidget::ClearColorOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIProgressWidget", "ClearColorOverride");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIProgressWidget.GetProgress
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IModioUIProgressWidget::GetProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIProgressWidget", "GetProgress");

	Params::ModioUIProgressWidget_GetProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIProgressWidget.RemoveValueChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(float NewValue)>&  Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIProgressWidget::RemoveValueChangedHandler(const TDelegate<void(float NewValue)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIProgressWidget", "RemoveValueChangedHandler");

	Params::ModioUIProgressWidget_RemoveValueChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIProgressWidget.SetColorOverride
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLinearColor&              Override                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIProgressWidget::SetColorOverride(const struct FLinearColor& Override)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIProgressWidget", "SetColorOverride");

	Params::ModioUIProgressWidget_SetColorOverride Parms{};

	Parms.Override = std::move(Override);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIProgressWidget.SetMarquee
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewIsMarquee                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIProgressWidget::SetMarquee(bool bNewIsMarquee)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIProgressWidget", "SetMarquee");

	Params::ModioUIProgressWidget_SetMarquee Parms{};

	Parms.bNewIsMarquee = bNewIsMarquee;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIProgressWidget.SetProgress
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewProgressValue                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIProgressWidget::SetProgress(float NewProgressValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIProgressWidget", "SetProgress");

	Params::ModioUIProgressWidget_SetProgress Parms{};

	Parms.NewProgressValue = NewProgressValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISelectableWidget.AddSelectedStateChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* SelectionContext, bool bNewSelectedState)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUISelectableWidget::AddSelectedStateChangedHandler(const TDelegate<void(class UObject* SelectionContext, bool bNewSelectedState)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUISelectableWidget", "AddSelectedStateChangedHandler");

	Params::ModioUISelectableWidget_AddSelectedStateChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISelectableWidget.GetSelectable
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bIsSelectable                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUISelectableWidget::GetSelectable(bool* bIsSelectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUISelectableWidget", "GetSelectable");

	Params::ModioUISelectableWidget_GetSelectable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsSelectable != nullptr)
		*bIsSelectable = Parms.bIsSelectable;
}


// Function ModioUICore.ModioUISelectableWidget.GetSelectedState
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bCurrentSelectedState                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUISelectableWidget::GetSelectedState(bool* bCurrentSelectedState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUISelectableWidget", "GetSelectedState");

	Params::ModioUISelectableWidget_GetSelectedState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bCurrentSelectedState != nullptr)
		*bCurrentSelectedState = Parms.bCurrentSelectedState;
}


// Function ModioUICore.ModioUISelectableWidget.GetToggleable
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bIsToggleable                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUISelectableWidget::GetToggleable(bool* bIsToggleable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUISelectableWidget", "GetToggleable");

	Params::ModioUISelectableWidget_GetToggleable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsToggleable != nullptr)
		*bIsToggleable = Parms.bIsToggleable;
}


// Function ModioUICore.ModioUISelectableWidget.RemoveSelectedStateChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* SelectionContext, bool bNewSelectedState)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUISelectableWidget::RemoveSelectedStateChangedHandler(const TDelegate<void(class UObject* SelectionContext, bool bNewSelectedState)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUISelectableWidget", "RemoveSelectedStateChangedHandler");

	Params::ModioUISelectableWidget_RemoveSelectedStateChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISelectableWidget.SetSelectable
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewSelectableState                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUISelectableWidget::SetSelectable(bool bNewSelectableState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUISelectableWidget", "SetSelectable");

	Params::ModioUISelectableWidget_SetSelectable Parms{};

	Parms.bNewSelectableState = bNewSelectableState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISelectableWidget.SetSelectedState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewSelectedState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUISelectableWidget::SetSelectedState(bool bNewSelectedState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUISelectableWidget", "SetSelectedState");

	Params::ModioUISelectableWidget_SetSelectedState Parms{};

	Parms.bNewSelectedState = bNewSelectedState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISelectableWidget.SetToggleable
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewToggleableState                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUISelectableWidget::SetToggleable(bool bNewToggleableState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUISelectableWidget", "SetToggleable");

	Params::ModioUISelectableWidget_SetToggleable Parms{};

	Parms.bNewToggleableState = bNewToggleableState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISelectableWidget.ToggleSelectedState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUISelectableWidget::ToggleSelectedState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUISelectableWidget", "ToggleSelectedState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIStringInputWidget.AddTextChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* Context, const class FText& Text)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIStringInputWidget::AddTextChangedHandler(const TDelegate<void(class UObject* Context, const class FText& Text)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIStringInputWidget", "AddTextChangedHandler");

	Params::ModioUIStringInputWidget_AddTextChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIStringInputWidget.AddTextCommittedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* Context, const class FText& Text, ETextCommit CommitMethod)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIStringInputWidget::AddTextCommittedHandler(const TDelegate<void(class UObject* Context, const class FText& Text, ETextCommit CommitMethod)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIStringInputWidget", "AddTextCommittedHandler");

	Params::ModioUIStringInputWidget_AddTextCommittedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIStringInputWidget.GatherInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString IModioUIStringInputWidget::GatherInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIStringInputWidget", "GatherInput");

	Params::ModioUIStringInputWidget_GatherInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIStringInputWidget.RemoveTextChangedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* Context, const class FText& Text)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIStringInputWidget::RemoveTextChangedHandler(const TDelegate<void(class UObject* Context, const class FText& Text)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIStringInputWidget", "RemoveTextChangedHandler");

	Params::ModioUIStringInputWidget_RemoveTextChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIStringInputWidget.RemoveTextCommittedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(class UObject* Context, const class FText& Text, ETextCommit CommitMethod)>&Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIStringInputWidget::RemoveTextCommittedHandler(const TDelegate<void(class UObject* Context, const class FText& Text, ETextCommit CommitMethod)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIStringInputWidget", "RemoveTextCommittedHandler");

	Params::ModioUIStringInputWidget_RemoveTextCommittedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIStringInputWidget.SetHint
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      HintText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IModioUIStringInputWidget::SetHint(const class FText& HintText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIStringInputWidget", "SetHint");

	Params::ModioUIStringInputWidget_SetHint Parms{};

	Parms.HintText = std::move(HintText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIStringInputWidget.SetInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Input                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIStringInputWidget::SetInput(const class FString& Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIStringInputWidget", "SetInput");

	Params::ModioUIStringInputWidget_SetInput Parms{};

	Parms.Input = std::move(Input);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubscriptionsChangedReceiver.OnSubscriptionsChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FModioModID&               ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewSubscriptionState                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUISubscriptionsChangedReceiver::OnSubscriptionsChanged(const struct FModioModID& ModId, bool bNewSubscriptionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUISubscriptionsChangedReceiver", "OnSubscriptionsChanged");

	Params::ModioUISubscriptionsChangedReceiver_OnSubscriptionsChanged Parms{};

	Parms.ModId = std::move(ModId);
	Parms.bNewSubscriptionState = bNewSubscriptionState;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUISubscriptionsChangedReceiverLibrary.DeregisterSubscriptionsChangedReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToDeregister                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubscriptionsChangedReceiverLibrary::DeregisterSubscriptionsChangedReceiver(class UObject* ObjectToDeregister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUISubscriptionsChangedReceiverLibrary", "DeregisterSubscriptionsChangedReceiver");

	Params::ModioUISubscriptionsChangedReceiverLibrary_DeregisterSubscriptionsChangedReceiver Parms{};

	Parms.ObjectToDeregister = ObjectToDeregister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubscriptionsChangedReceiverLibrary.RegisterSubscriptionsChangedReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToRegister                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubscriptionsChangedReceiverLibrary::RegisterSubscriptionsChangedReceiver(class UObject* ObjectToRegister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUISubscriptionsChangedReceiverLibrary", "RegisterSubscriptionsChangedReceiver");

	Params::ModioUISubscriptionsChangedReceiverLibrary_RegisterSubscriptionsChangedReceiver Parms{};

	Parms.ObjectToRegister = ObjectToRegister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISupportsCustomNavigation.SetNavigationDelegate
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Context                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EUINavigation Navigation)>&ContentNavigationDelegate                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUISupportsCustomNavigation::SetNavigationDelegate(uint8 Context, const TDelegate<void(EUINavigation Navigation)>& ContentNavigationDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUISupportsCustomNavigation", "SetNavigationDelegate");

	Params::ModioUISupportsCustomNavigation_SetNavigationDelegate Parms{};

	Parms.Context = Context;
	Parms.ContentNavigationDelegate = ContentNavigationDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUITextValidator.AddTextValidationCompletedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(bool bIsValid)>&   Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUITextValidator::AddTextValidationCompletedHandler(const TDelegate<void(bool bIsValid)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUITextValidator", "AddTextValidationCompletedHandler");

	Params::ModioUITextValidator_AddTextValidationCompletedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUITextValidator.GetTextValidationRules
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FModioTextValidationRule>*Rules                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void IModioUITextValidator::GetTextValidationRules(TArray<struct FModioTextValidationRule>* Rules)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUITextValidator", "GetTextValidationRules");

	Params::ModioUITextValidator_GetTextValidationRules Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Rules != nullptr)
		*Rules = std::move(Parms.Rules);
}


// Function ModioUICore.ModioUITextValidator.RemoveTextValidationCompletedHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(bool bIsValid)>&   Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUITextValidator::RemoveTextValidationCompletedHandler(const TDelegate<void(bool bIsValid)>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUITextValidator", "RemoveTextValidationCompletedHandler");

	Params::ModioUITextValidator_RemoveTextValidationCompletedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUITextValidator.SetValidationError
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      ErrorText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IModioUITextValidator::SetValidationError(const class FText& ErrorText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUITextValidator", "SetValidationError");

	Params::ModioUITextValidator_SetValidationError Parms{};

	Parms.ErrorText = std::move(ErrorText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUITextValidator.ValidateText
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      inputText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText*                            ValidationMessageText                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioUITextValidator::ValidateText(const class FText& inputText, class FText* ValidationMessageText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUITextValidator", "ValidateText");

	Params::ModioUITextValidator_ValidateText Parms{};

	Parms.inputText = std::move(inputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ValidationMessageText != nullptr)
		*ValidationMessageText = std::move(Parms.ValidationMessageText);

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIInputValidationLibrary.DefaultValidateText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TScriptInterface<class IModioUITextValidator>TargetObject                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      inputText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText*                            ValidationMessageText                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::DefaultValidateText(TScriptInterface<class IModioUITextValidator> TargetObject, const class FText& inputText, class FText* ValidationMessageText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "DefaultValidateText");

	Params::ModioUIInputValidationLibrary_DefaultValidateText Parms{};

	Parms.TargetObject = TargetObject;
	Parms.inputText = std::move(inputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ValidationMessageText != nullptr)
		*ValidationMessageText = std::move(Parms.ValidationMessageText);

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIInputValidationLibrary.ValidateAllLetters
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateAllLetters(const class FText& TextToValidate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateAllLetters");

	Params::ModioUIInputValidationLibrary_ValidateAllLetters Parms{};

	Parms.TextToValidate = std::move(TextToValidate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIInputValidationLibrary.ValidateAllNumeric
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateAllNumeric(const class FText& TextToValidate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateAllNumeric");

	Params::ModioUIInputValidationLibrary_ValidateAllNumeric Parms{};

	Parms.TextToValidate = std::move(TextToValidate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIInputValidationLibrary.ValidateAlphanumeric
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateAlphanumeric(const class FText& TextToValidate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateAlphanumeric");

	Params::ModioUIInputValidationLibrary_ValidateAlphanumeric Parms{};

	Parms.TextToValidate = std::move(TextToValidate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIInputValidationLibrary.ValidateEmailAddress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateEmailAddress(const class FText& TextToValidate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateEmailAddress");

	Params::ModioUIInputValidationLibrary_ValidateEmailAddress Parms{};

	Parms.TextToValidate = std::move(TextToValidate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIInputValidationLibrary.ValidateLength
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   DesiredMaximumLength                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DesiredMinimumLength                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateLength(const class FText& TextToValidate, int32 DesiredMaximumLength, int32 DesiredMinimumLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateLength");

	Params::ModioUIInputValidationLibrary_ValidateLength Parms{};

	Parms.TextToValidate = std::move(TextToValidate);
	Parms.DesiredMaximumLength = DesiredMaximumLength;
	Parms.DesiredMinimumLength = DesiredMinimumLength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIInputValidationLibrary.ValidateNotBlank
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateNotBlank(const class FText& TextToValidate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateNotBlank");

	Params::ModioUIInputValidationLibrary_ValidateNotBlank Parms{};

	Parms.TextToValidate = std::move(TextToValidate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIInputValidationLibrary.ValidateNotEmpty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateNotEmpty(const class FText& TextToValidate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateNotEmpty");

	Params::ModioUIInputValidationLibrary_ValidateNotEmpty Parms{};

	Parms.TextToValidate = std::move(TextToValidate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIInputValidationLibrary.ValidateNoWhitespace
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateNoWhitespace(const class FText& TextToValidate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateNoWhitespace");

	Params::ModioUIInputValidationLibrary_ValidateNoWhitespace Parms{};

	Parms.TextToValidate = std::move(TextToValidate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIInputValidationLibrary.ValidateUsingRule
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FModioTextValidationRule&  Rule                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText*                            ValidationMessageText                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateUsingRule(const struct FModioTextValidationRule& Rule, const class FText& TextToValidate, class FText* ValidationMessageText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateUsingRule");

	Params::ModioUIInputValidationLibrary_ValidateUsingRule Parms{};

	Parms.Rule = std::move(Rule);
	Parms.TextToValidate = std::move(TextToValidate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ValidationMessageText != nullptr)
		*ValidationMessageText = std::move(Parms.ValidationMessageText);

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUITokenPackListInterface.SetTokenPackSelectionByID
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FModioTokenPackID&         TokenPackID                                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUITokenPackListInterface::SetTokenPackSelectionByID(const struct FModioTokenPackID& TokenPackID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUITokenPackListInterface", "SetTokenPackSelectionByID");

	Params::ModioUITokenPackListInterface_SetTokenPackSelectionByID Parms{};

	Parms.TokenPackID = std::move(TokenPackID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUITokenPackListInterface.SetTokenPacksFromTokenPackArray
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FModioTokenPack>&   inArray                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bAddToExisting                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUITokenPackListInterface::SetTokenPacksFromTokenPackArray(const TArray<struct FModioTokenPack>& inArray, bool bAddToExisting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUITokenPackListInterface", "SetTokenPacksFromTokenPackArray");

	Params::ModioUITokenPackListInterface_SetTokenPacksFromTokenPackArray Parms{};

	Parms.inArray = std::move(inArray);
	Parms.bAddToExisting = bAddToExisting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUITokenPackListInterface.SetTokenPacksFromTokenPackList
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FModioTokenPackList&       InList                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddToExisting                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUITokenPackListInterface::SetTokenPacksFromTokenPackList(const struct FModioTokenPackList& InList, bool bAddToExisting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUITokenPackListInterface", "SetTokenPacksFromTokenPackList");

	Params::ModioUITokenPackListInterface_SetTokenPacksFromTokenPackList Parms{};

	Parms.InList = std::move(InList);
	Parms.bAddToExisting = bAddToExisting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUITokenPackReceiver.OnListAllTokenPacksRequestCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FModioErrorCode&           ErrorCode                                              (Parm, NativeAccessSpecifierPublic)
// const struct FModioOptionalTokenPackList&List                                                   (Parm, NativeAccessSpecifierPublic)

void IModioUITokenPackReceiver::OnListAllTokenPacksRequestCompleted(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalTokenPackList& List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUITokenPackReceiver", "OnListAllTokenPacksRequestCompleted");

	Params::ModioUITokenPackReceiver_OnListAllTokenPacksRequestCompleted Parms{};

	Parms.ErrorCode = std::move(ErrorCode);
	Parms.List = std::move(List);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUITokenPackReceiver.OnTokenPackRequestCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FModioTokenPackID&         TokenPackID                                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FModioErrorCode&           ErrorCode                                              (Parm, NativeAccessSpecifierPublic)
// const struct FModioOptionalTokenPack&   Info                                                   (Parm, NativeAccessSpecifierPublic)

void IModioUITokenPackReceiver::OnTokenPackRequestCompleted(const struct FModioTokenPackID& TokenPackID, const struct FModioErrorCode& ErrorCode, const struct FModioOptionalTokenPack& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUITokenPackReceiver", "OnTokenPackRequestCompleted");

	Params::ModioUITokenPackReceiver_OnTokenPackRequestCompleted Parms{};

	Parms.TokenPackID = std::move(TokenPackID);
	Parms.ErrorCode = std::move(ErrorCode);
	Parms.Info = std::move(Info);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUITokenPackReceiverLibrary.DeregisterTokenPackReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToDeregister                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioUITokenPackEventType              EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUITokenPackReceiverLibrary::DeregisterTokenPackReceiver(class UObject* ObjectToDeregister, EModioUITokenPackEventType EventType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUITokenPackReceiverLibrary", "DeregisterTokenPackReceiver");

	Params::ModioUITokenPackReceiverLibrary_DeregisterTokenPackReceiver Parms{};

	Parms.ObjectToDeregister = ObjectToDeregister;
	Parms.EventType = EventType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUITokenPackReceiverLibrary.RegisterTokenPackReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToRegister                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioUITokenPackEventType              EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUITokenPackReceiverLibrary::RegisterTokenPackReceiver(class UObject* ObjectToRegister, EModioUITokenPackEventType EventType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUITokenPackReceiverLibrary", "RegisterTokenPackReceiver");

	Params::ModioUITokenPackReceiverLibrary_RegisterTokenPackReceiver Parms{};

	Parms.ObjectToRegister = ObjectToRegister;
	Parms.EventType = EventType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIUserAvatarDownloadCompletedReceiver.OnUserAvatarDownloadCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FModioErrorCode&           ErrorCode                                              (Parm, NativeAccessSpecifierPublic)
// const struct FModioOptionalImage&       Image                                                  (Parm, NativeAccessSpecifierPublic)

void IModioUIUserAvatarDownloadCompletedReceiver::OnUserAvatarDownloadCompleted(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalImage& Image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIUserAvatarDownloadCompletedReceiver", "OnUserAvatarDownloadCompleted");

	Params::ModioUIUserAvatarDownloadCompletedReceiver_OnUserAvatarDownloadCompleted Parms{};

	Parms.ErrorCode = std::move(ErrorCode);
	Parms.Image = std::move(Image);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIUserAvatarDownloadCompletedReceiverLibrary.DeregisterUserAvatarDownloadCompletedReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToDeregister                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIUserAvatarDownloadCompletedReceiverLibrary::DeregisterUserAvatarDownloadCompletedReceiver(class UObject* ObjectToDeregister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIUserAvatarDownloadCompletedReceiverLibrary", "DeregisterUserAvatarDownloadCompletedReceiver");

	Params::ModioUIUserAvatarDownloadCompletedReceiverLibrary_DeregisterUserAvatarDownloadCompletedReceiver Parms{};

	Parms.ObjectToDeregister = ObjectToDeregister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIUserAvatarDownloadCompletedReceiverLibrary.RegisterUserAvatarDownloadCompletedReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToRegister                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIUserAvatarDownloadCompletedReceiverLibrary::RegisterUserAvatarDownloadCompletedReceiver(class UObject* ObjectToRegister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIUserAvatarDownloadCompletedReceiverLibrary", "RegisterUserAvatarDownloadCompletedReceiver");

	Params::ModioUIUserAvatarDownloadCompletedReceiverLibrary_RegisterUserAvatarDownloadCompletedReceiver Parms{};

	Parms.ObjectToRegister = ObjectToRegister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIUserChangedReceiver.OnUserChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FModioOptionalUser&        NewUser                                                (Parm, NativeAccessSpecifierPublic)

void IModioUIUserChangedReceiver::OnUserChanged(const struct FModioOptionalUser& NewUser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIUserChangedReceiver", "OnUserChanged");

	Params::ModioUIUserChangedReceiver_OnUserChanged Parms{};

	Parms.NewUser = std::move(NewUser);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIUserChangedReceiverLibrary.DeregisterUserChangedReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToDeregister                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIUserChangedReceiverLibrary::DeregisterUserChangedReceiver(class UObject* ObjectToDeregister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIUserChangedReceiverLibrary", "DeregisterUserChangedReceiver");

	Params::ModioUIUserChangedReceiverLibrary_DeregisterUserChangedReceiver Parms{};

	Parms.ObjectToDeregister = ObjectToDeregister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIUserChangedReceiverLibrary.RegisterUserChangedReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToRegister                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIUserChangedReceiverLibrary::RegisterUserChangedReceiver(class UObject* ObjectToRegister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIUserChangedReceiverLibrary", "RegisterUserChangedReceiver");

	Params::ModioUIUserChangedReceiverLibrary_RegisterUserChangedReceiver Parms{};

	Parms.ObjectToRegister = ObjectToRegister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIWalletBalanceUpdatedEventReceiver.OnWalletBalanceUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FModioUnsigned64&          WalletBalance                                          (Parm, NoDestructor, NativeAccessSpecifierPublic)

void IModioUIWalletBalanceUpdatedEventReceiver::OnWalletBalanceUpdated(const struct FModioUnsigned64& WalletBalance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUIWalletBalanceUpdatedEventReceiver", "OnWalletBalanceUpdated");

	Params::ModioUIWalletBalanceUpdatedEventReceiver_OnWalletBalanceUpdated Parms{};

	Parms.WalletBalance = std::move(WalletBalance);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIWalletBalanceUpdatedEventReceiverLibrary.DeregisterWalletBalanceUpdatedEventReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToDeregister                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIWalletBalanceUpdatedEventReceiverLibrary::DeregisterWalletBalanceUpdatedEventReceiver(class UObject* ObjectToDeregister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIWalletBalanceUpdatedEventReceiverLibrary", "DeregisterWalletBalanceUpdatedEventReceiver");

	Params::ModioUIWalletBalanceUpdatedEventReceiverLibrary_DeregisterWalletBalanceUpdatedEventReceiver Parms{};

	Parms.ObjectToDeregister = ObjectToDeregister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIWalletBalanceUpdatedEventReceiverLibrary.RegisterWalletBalanceUpdatedEventReceiver
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToRegister                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIWalletBalanceUpdatedEventReceiverLibrary::RegisterWalletBalanceUpdatedEventReceiver(class UObject* ObjectToRegister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIWalletBalanceUpdatedEventReceiverLibrary", "RegisterWalletBalanceUpdatedEventReceiver");

	Params::ModioUIWalletBalanceUpdatedEventReceiverLibrary_RegisterWalletBalanceUpdatedEventReceiver Parms{};

	Parms.ObjectToRegister = ObjectToRegister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUserUIDetails.GetFullUser
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioUser                       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FModioUser IModioUserUIDetails::GetFullUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUserUIDetails", "GetFullUser");

	Params::ModioUserUIDetails_GetFullUser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUserUIDetails.GetUserID
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioUserID                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioUserID IModioUserUIDetails::GetUserID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioUserUIDetails", "GetUserID");

	Params::ModioUserUIDetails_GetUserID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModRatingStateProvider.QueryModRating
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   ModId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioRating                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EModioRating IModRatingStateProvider::QueryModRating(int64 ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModRatingStateProvider", "QueryModRating");

	Params::ModRatingStateProvider_QueryModRating Parms{};

	Parms.ModId = ModId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModRatingStateProvider.RequestModRatingChange
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioRating                            NewRating                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModRatingStateProvider::RequestModRatingChange(int64 ID, EModioRating NewRating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModRatingStateProvider", "RequestModRatingChange");

	Params::ModRatingStateProvider_RequestModRatingChange Parms{};

	Parms.ID = ID;
	Parms.NewRating = NewRating;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.LinearColorRefLibrary.AddColorChangeHandler
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const TDelegate<void()>&                Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULinearColorRefLibrary::AddColorChangeHandler(const TDelegate<void()>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LinearColorRefLibrary", "AddColorChangeHandler");

	Params::LinearColorRefLibrary_AddColorChangeHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.LinearColorRefLibrary.GetValidColorKeys
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> ULinearColorRefLibrary::GetValidColorKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LinearColorRefLibrary", "GetValidColorKeys");

	Params::LinearColorRefLibrary_GetValidColorKeys Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.LinearColorRefLibrary.RemoveColorChangeHandler
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const TDelegate<void()>&                Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULinearColorRefLibrary::RemoveColorChangeHandler(const TDelegate<void()>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LinearColorRefLibrary", "RemoveColorChangeHandler");

	Params::LinearColorRefLibrary_RemoveColorChangeHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.LinearColorRefLibrary.Resolve
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLinearColorRef&           Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bResolved                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor ULinearColorRefLibrary::Resolve(const struct FLinearColorRef& Target, bool* bResolved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LinearColorRefLibrary", "Resolve");

	Params::LinearColorRefLibrary_Resolve Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bResolved != nullptr)
		*bResolved = Parms.bResolved;

	return Parms.ReturnValue;
}


// Function ModioUICore.LinearColorRefLibrary.ResolveOverride
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FLinearColorRefOverride&   Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor ULinearColorRefLibrary::ResolveOverride(const struct FLinearColorRefOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LinearColorRefLibrary", "ResolveOverride");

	Params::LinearColorRefLibrary_ResolveOverride Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.LinearColorRefLibrary.ResolveOverrideAsExec
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FLinearColorRefOverride&   Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bOverrideSet                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor ULinearColorRefLibrary::ResolveOverrideAsExec(const struct FLinearColorRefOverride& Target, bool* bOverrideSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LinearColorRefLibrary", "ResolveOverrideAsExec");

	Params::LinearColorRefLibrary_ResolveOverrideAsExec Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOverrideSet != nullptr)
		*bOverrideSet = Parms.bOverrideSet;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioCommandEntry.HandleInnerButtonClicked
// (Final, Native, Protected)
// Parameters:
// class UObject*                          ClickContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioCommandEntry::HandleInnerButtonClicked(class UObject* ClickContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioCommandEntry", "HandleInnerButtonClicked");

	Params::ModioCommandEntry_HandleInnerButtonClicked Parms{};

	Parms.ClickContext = ClickContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioCommandEntry.GetClickableWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioCommandEntry::GetClickableWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioCommandEntry", "GetClickableWidget");

	Params::ModioCommandEntry_GetClickableWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioCommandEntry.GetIconWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIImageDisplayWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIImageDisplayWidget> UModioCommandEntry::GetIconWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioCommandEntry", "GetIconWidget");

	Params::ModioCommandEntry_GetIconWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioCommandEntry.GetLabelWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioCommandEntry::GetLabelWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioCommandEntry", "GetLabelWidget");

	Params::ModioCommandEntry_GetLabelWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioCommandMenu.OnCommandSelected
// (Final, Native, Protected)
// Parameters:
// class UObject*                          SelectedCommandObject                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioCommandMenu::OnCommandSelected(class UObject* SelectedCommandObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioCommandMenu", "OnCommandSelected");

	Params::ModioCommandMenu_OnCommandSelected Parms{};

	Parms.SelectedCommandObject = SelectedCommandObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioCommandMenu.GetSelectorWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIObjectSelector>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIObjectSelector> UModioCommandMenu::GetSelectorWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioCommandMenu", "GetSelectorWidget");

	Params::ModioCommandMenu_GetSelectorWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioCurrentUserAvatarWidget.GetAvatarImageWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIImageDisplayWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIImageDisplayWidget> UModioCurrentUserAvatarWidget::GetAvatarImageWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioCurrentUserAvatarWidget", "GetAvatarImageWidget");

	Params::ModioCurrentUserAvatarWidget_GetAvatarImageWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioDefaultCheckBox.HandleOnCheckStateChanged
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioDefaultCheckBox::HandleOnCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultCheckBox", "HandleOnCheckStateChanged");

	Params::ModioDefaultCheckBox_HandleOnCheckStateChanged Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioDefaultCheckBox.SetHovered
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHovered                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioDefaultCheckBox::SetHovered(bool bHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultCheckBox", "SetHovered");

	Params::ModioDefaultCheckBox_SetHovered Parms{};

	Parms.bHovered = bHovered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioDefaultCheckBox.SetLabel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      InLabelText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UModioDefaultCheckBox::SetLabel(const class FText& InLabelText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultCheckBox", "SetLabel");

	Params::ModioDefaultCheckBox_SetLabel Parms{};

	Parms.InLabelText = std::move(InLabelText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioDefaultCheckBox.GetCheckboxContentPadding
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FMargin                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMargin UModioDefaultCheckBox::GetCheckboxContentPadding() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultCheckBox", "GetCheckboxContentPadding");

	Params::ModioDefaultCheckBox_GetCheckboxContentPadding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioDefaultCheckBox.GetLabel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UModioDefaultCheckBox::GetLabel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultCheckBox", "GetLabel");

	Params::ModioDefaultCheckBox_GetLabel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioDefaultCheckBox.GetLabelTextBlockText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UModioDefaultCheckBox::GetLabelTextBlockText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultCheckBox", "GetLabelTextBlockText");

	Params::ModioDefaultCheckBox_GetLabelTextBlockText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioDefaultCodeInputTextBox.GetValidationErrorWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioDefaultCodeInputTextBox::GetValidationErrorWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultCodeInputTextBox", "GetValidationErrorWidget");

	Params::ModioDefaultCodeInputTextBox_GetValidationErrorWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioDefaultTextButton.GetLabelWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioDefaultTextButton::GetLabelWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultTextButton", "GetLabelWidget");

	Params::ModioDefaultTextButton_GetLabelWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioDefaultIconButton.GetImageWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIImageDisplayWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIImageDisplayWidget> UModioDefaultIconButton::GetImageWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultIconButton", "GetImageWidget");

	Params::ModioDefaultIconButton_GetImageWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioDefaultModTile.GetSelectedStateEx
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioDefaultModTile::GetSelectedStateEx()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultModTile", "GetSelectedStateEx");

	Params::ModioDefaultModTile_GetSelectedStateEx Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioDefaultModTile.NotifyClicked
// (Final, Native, Protected, BlueprintCallable)

void UModioDefaultModTile::NotifyClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultModTile", "NotifyClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioDefaultModTile.NotifyHoverStateChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bNewHoveredState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioDefaultModTile::NotifyHoverStateChanged(bool bNewHoveredState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultModTile", "NotifyHoverStateChanged");

	Params::ModioDefaultModTile_NotifyHoverStateChanged Parms{};

	Parms.bNewHoveredState = bNewHoveredState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioDefaultModTile.PopulateExtraOptionsCommands
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>*                 Commands                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioDefaultModTile::PopulateExtraOptionsCommands(TArray<class UObject*>* Commands, class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultModTile", "PopulateExtraOptionsCommands");

	Params::ModioDefaultModTile_PopulateExtraOptionsCommands Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Commands != nullptr)
		*Commands = std::move(Parms.Commands);
}


// Function ModioUICore.ModioDefaultModTile.GetMoreOptionsMenuWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUICommandMenu>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUICommandMenu> UModioDefaultModTile::GetMoreOptionsMenuWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultModTile", "GetMoreOptionsMenuWidget");

	Params::ModioDefaultModTile_GetMoreOptionsMenuWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioDefaultObjectSelector.OnEntryWidgetClicked
// (Final, Native, Protected)
// Parameters:
// class UObject*                          Widget                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioDefaultObjectSelector::OnEntryWidgetClicked(class UObject* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultObjectSelector", "OnEntryWidgetClicked");

	Params::ModioDefaultObjectSelector_OnEntryWidgetClicked Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioDefaultObjectSelector.GetEntryWidgetFromItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    Item                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UModioDefaultObjectSelector::GetEntryWidgetFromItem(const class UObject* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultObjectSelector", "GetEntryWidgetFromItem");

	Params::ModioDefaultObjectSelector_GetEntryWidgetFromItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioDefaultScrollBox.HandleCustomBoundaryNavigation
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UModioDefaultScrollBox::HandleCustomBoundaryNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultScrollBox", "HandleCustomBoundaryNavigation");

	Params::ModioDefaultScrollBox_HandleCustomBoundaryNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioDefaultScrollBox.OnUserScrolledHandle
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentOffset                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioDefaultScrollBox::OnUserScrolledHandle(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultScrollBox", "OnUserScrolledHandle");

	Params::ModioDefaultScrollBox_OnUserScrolledHandle Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioDefaultScrollBox.UpdateNavigationData
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PendingScrollOffset                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioDefaultScrollBox::UpdateNavigationData(int32 PendingScrollOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultScrollBox", "UpdateNavigationData");

	Params::ModioDefaultScrollBox_UpdateNavigationData Parms{};

	Parms.PendingScrollOffset = PendingScrollOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioDefaultTagWidget.GetLabelWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioDefaultTagWidget::GetLabelWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultTagWidget", "GetLabelWidget");

	Params::ModioDefaultTagWidget_GetLabelWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioDefaultTokenPackTile.GetSelectedStateEx
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioDefaultTokenPackTile::GetSelectedStateEx()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultTokenPackTile", "GetSelectedStateEx");

	Params::ModioDefaultTokenPackTile_GetSelectedStateEx Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioDefaultTokenPackTile.NotifyClicked
// (Final, Native, Protected, BlueprintCallable)

void UModioDefaultTokenPackTile::NotifyClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultTokenPackTile", "NotifyClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioDefaultTokenPackTile.NotifyHoverStateChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bNewHoveredState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioDefaultTokenPackTile::NotifyHoverStateChanged(bool bNewHoveredState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDefaultTokenPackTile", "NotifyHoverStateChanged");

	Params::ModioDefaultTokenPackTile_NotifyHoverStateChanged Parms{};

	Parms.bNewHoveredState = bNewHoveredState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioDialogButtonUIDetails.GetDialogButtonInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioDialogButtonInfo           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FModioDialogButtonInfo IModioDialogButtonUIDetails::GetDialogButtonInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ModioDialogButtonUIDetails", "GetDialogButtonInfo");

	Params::ModioDialogButtonUIDetails_GetDialogButtonInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioDropdownAnchor.ModioHandleMenuOpenChanged
// (Native, Protected)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioDropdownAnchor::ModioHandleMenuOpenChanged(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDropdownAnchor", "ModioHandleMenuOpenChanged");

	Params::ModioDropdownAnchor_ModioHandleMenuOpenChanged Parms{};

	Parms.bIsOpen = bIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIComponentStatics.GetAllComponentMetadata
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TMap<EModioUIComponentID, struct FModioUIComponentMetadata>ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TMap<EModioUIComponentID, struct FModioUIComponentMetadata> UModioUIComponentStatics::GetAllComponentMetadata()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIComponentStatics", "GetAllComponentMetadata");

	Params::ModioUIComponentStatics_GetAllComponentMetadata Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIComponentStatics.GetMetadataForComponent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EModioUIComponentID                     ComponentType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bComponentTypeFound                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FModioUIComponentMetadata  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FModioUIComponentMetadata UModioUIComponentStatics::GetMetadataForComponent(EModioUIComponentID ComponentType, bool* bComponentTypeFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIComponentStatics", "GetMetadataForComponent");

	Params::ModioUIComponentStatics_GetMetadataForComponent Parms{};

	Parms.ComponentType = ComponentType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bComponentTypeFound != nullptr)
		*bComponentTypeFound = Parms.bComponentTypeFound;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioEnumSelector.InternalSelectionChangedHandler
// (Final, Native, Protected)
// Parameters:
// class UObject*                          SelectedObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioEnumSelector::InternalSelectionChangedHandler(class UObject* SelectedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEnumSelector", "InternalSelectionChangedHandler");

	Params::ModioEnumSelector_InternalSelectionChangedHandler Parms{};

	Parms.SelectedObject = SelectedObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioEnumSelector.NotifySelectionChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                          SelectedObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioEnumSelector::NotifySelectionChanged(class UObject* SelectedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEnumSelector", "NotifySelectionChanged");

	Params::ModioEnumSelector_NotifySelectionChanged Parms{};

	Parms.SelectedObject = SelectedObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioEnumSelector.GetMenuToggleClickableWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioEnumSelector::GetMenuToggleClickableWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEnumSelector", "GetMenuToggleClickableWidget");

	Params::ModioEnumSelector_GetMenuToggleClickableWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioEnumSelector.GetSelectorMenuWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIObjectSelector>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIObjectSelector> UModioEnumSelector::GetSelectorMenuWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEnumSelector", "GetSelectorMenuWidget");

	Params::ModioEnumSelector_GetSelectorMenuWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioEnumSelectorEntry.InternalClickHandler
// (Final, Native, Protected)
// Parameters:
// class UObject*                          ClickContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioEnumSelectorEntry::InternalClickHandler(class UObject* ClickContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEnumSelectorEntry", "InternalClickHandler");

	Params::ModioEnumSelectorEntry_InternalClickHandler Parms{};

	Parms.ClickContext = ClickContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioEnumSelectorEntry.InternalSelectionChangedHandler
// (Final, Native, Protected)
// Parameters:
// class UObject*                          SelectionContext                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewSelectedState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioEnumSelectorEntry::InternalSelectionChangedHandler(class UObject* SelectionContext, bool bNewSelectedState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEnumSelectorEntry", "InternalSelectionChangedHandler");

	Params::ModioEnumSelectorEntry_InternalSelectionChangedHandler Parms{};

	Parms.SelectionContext = SelectionContext;
	Parms.bNewSelectedState = bNewSelectedState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioEnumSelectorEntry.NotifyClicked
// (Final, Native, Protected, BlueprintCallable)

void UModioEnumSelectorEntry::NotifyClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEnumSelectorEntry", "NotifyClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioEnumSelectorEntry.NotifySelectionChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bNewSelectedState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioEnumSelectorEntry::NotifySelectionChanged(bool bNewSelectedState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEnumSelectorEntry", "NotifySelectionChanged");

	Params::ModioEnumSelectorEntry_NotifySelectionChanged Parms{};

	Parms.bNewSelectedState = bNewSelectedState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioEnumSelectorEntry.GetClickableWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioEnumSelectorEntry::GetClickableWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEnumSelectorEntry", "GetClickableWidget");

	Params::ModioEnumSelectorEntry_GetClickableWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioEnumSelectorEntry.GetLabelWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioEnumSelectorEntry::GetLabelWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEnumSelectorEntry", "GetLabelWidget");

	Params::ModioEnumSelectorEntry_GetLabelWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioEnumSelectorEntry.GetSelectableWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUISelectableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUISelectableWidget> UModioEnumSelectorEntry::GetSelectableWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEnumSelectorEntry", "GetSelectableWidget");

	Params::ModioEnumSelectorEntry_GetSelectableWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioEnumSelectorMenu.InternalSelectionChangedHandler
// (Final, Native, Protected)
// Parameters:
// class UObject*                          SelectedObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioEnumSelectorMenu::InternalSelectionChangedHandler(class UObject* SelectedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEnumSelectorMenu", "InternalSelectionChangedHandler");

	Params::ModioEnumSelectorMenu_InternalSelectionChangedHandler Parms{};

	Parms.SelectedObject = SelectedObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioEnumSelectorMenu.NotifySelectionChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                          SelectedObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioEnumSelectorMenu::NotifySelectionChanged(class UObject* SelectedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEnumSelectorMenu", "NotifySelectionChanged");

	Params::ModioEnumSelectorMenu_NotifySelectionChanged Parms{};

	Parms.SelectedObject = SelectedObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioEnumSelectorMenu.GetSelectorWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIObjectSelector>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIObjectSelector> UModioEnumSelectorMenu::GetSelectorWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEnumSelectorMenu", "GetSelectorWidget");

	Params::ModioEnumSelectorMenu_GetSelectorWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioFilterCounterButton.GetFilterCounterWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IModioUIDataSourceWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIDataSourceWidget> UModioFilterCounterButton::GetFilterCounterWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFilterCounterButton", "GetFilterCounterWidget");

	Params::ModioFilterCounterButton_GetFilterCounterWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioFilterPanel.AddTagSelectionChangedHandler
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void()>&                Handler                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioFilterPanel::AddTagSelectionChangedHandler(const TDelegate<void()>& Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFilterPanel", "AddTagSelectionChangedHandler");

	Params::ModioFilterPanel_AddTagSelectionChangedHandler Parms{};

	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioFilterPanel.ClearSelectedTags
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UModioFilterPanel::ClearSelectedTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFilterPanel", "ClearSelectedTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioFilterPanel.GetSelectedTags
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UModioFilterPanel::GetSelectedTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFilterPanel", "GetSelectedTags");

	Params::ModioFilterPanel_GetSelectedTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioFilterPanel.GetBackgroundButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioFilterPanel::GetBackgroundButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFilterPanel", "GetBackgroundButtonWidget");

	Params::ModioFilterPanel_GetBackgroundButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioFilterPanel.GetClearButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioFilterPanel::GetClearButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFilterPanel", "GetClearButtonWidget");

	Params::ModioFilterPanel_GetClearButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioFilterPanel.GetTagSelectorWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIModTagSelector>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIModTagSelector> UModioFilterPanel::GetTagSelectorWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFilterPanel", "GetTagSelectorWidget");

	Params::ModioFilterPanel_GetTagSelectorWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioImageGallery.Refresh
// (Final, Native, Protected, BlueprintCallable)

void UModioImageGallery::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioImageGallery", "Refresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioImageGallery.GetDecrementSelectionButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioImageGallery::GetDecrementSelectionButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioImageGallery", "GetDecrementSelectionButtonWidget");

	Params::ModioImageGallery_GetDecrementSelectionButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioImageGallery.GetImageSelectorWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIObjectSelector>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIObjectSelector> UModioImageGallery::GetImageSelectorWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioImageGallery", "GetImageSelectorWidget");

	Params::ModioImageGallery_GetImageSelectorWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioImageGallery.GetImageWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIImageDisplayWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIImageDisplayWidget> UModioImageGallery::GetImageWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioImageGallery", "GetImageWidget");

	Params::ModioImageGallery_GetImageWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioImageGallery.GetIncrementSelectionButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioImageGallery::GetIncrementSelectionButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioImageGallery", "GetIncrementSelectionButtonWidget");

	Params::ModioImageGallery_GetIncrementSelectionButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.DoFilterParamsIncludeUserId
// (Final, Native, Static, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FModioFilterParams&        Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioModBrowser::DoFilterParamsIncludeUserId(const struct FModioFilterParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioModBrowser", "DoFilterParamsIncludeUserId");

	Params::ModioModBrowser_DoFilterParamsIncludeUserId Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.DecrementPresetFilterSelection
// (Final, Native, Protected, BlueprintCallable)

void UModioModBrowser::DecrementPresetFilterSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "DecrementPresetFilterSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModBrowser.IncrementPresetFilterSelection
// (Final, Native, Protected, BlueprintCallable)

void UModioModBrowser::IncrementPresetFilterSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "IncrementPresetFilterSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModBrowser.InitializeLibraryTagData
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                          InTagData                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModBrowser::InitializeLibraryTagData(class UObject* InTagData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "InitializeLibraryTagData");

	Params::ModioModBrowser_InitializeLibraryTagData Parms{};

	Parms.InTagData = InTagData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModBrowser.InitializeTagData
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                          InTagData                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModBrowser::InitializeTagData(class UObject* InTagData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "InitializeTagData");

	Params::ModioModBrowser_InitializeTagData Parms{};

	Parms.InTagData = InTagData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModBrowser.GetClearSearchButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModBrowser::GetClearSearchButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "GetClearSearchButtonWidget");

	Params::ModioModBrowser_GetClearSearchButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.GetCloseBrowserButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModBrowser::GetCloseBrowserButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "GetCloseBrowserButtonWidget");

	Params::ModioModBrowser_GetCloseBrowserButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.GetFilterButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModBrowser::GetFilterButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "GetFilterButtonWidget");

	Params::ModioModBrowser_GetFilterButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.GetLibraryViewButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModBrowser::GetLibraryViewButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "GetLibraryViewButtonWidget");

	Params::ModioModBrowser_GetLibraryViewButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.GetModTileViewWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIModListViewInterface>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIModListViewInterface> UModioModBrowser::GetModTileViewWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "GetModTileViewWidget");

	Params::ModioModBrowser_GetModTileViewWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.GetPresetFilterSelectorWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIObjectSelector>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIObjectSelector> UModioModBrowser::GetPresetFilterSelectorWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "GetPresetFilterSelectorWidget");

	Params::ModioModBrowser_GetPresetFilterSelectorWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.GetSearchButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModBrowser::GetSearchButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "GetSearchButtonWidget");

	Params::ModioModBrowser_GetSearchButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.GetSearchEditableTextBoxWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIStringInputWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIStringInputWidget> UModioModBrowser::GetSearchEditableTextBoxWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "GetSearchEditableTextBoxWidget");

	Params::ModioModBrowser_GetSearchEditableTextBoxWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.GetSearchTextWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioModBrowser::GetSearchTextWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "GetSearchTextWidget");

	Params::ModioModBrowser_GetSearchTextWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.GetTabLeftButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModBrowser::GetTabLeftButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "GetTabLeftButtonWidget");

	Params::ModioModBrowser_GetTabLeftButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.GetTabRightButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModBrowser::GetTabRightButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "GetTabRightButtonWidget");

	Params::ModioModBrowser_GetTabRightButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.GetViewDescriptionImageWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIImageDisplayWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIImageDisplayWidget> UModioModBrowser::GetViewDescriptionImageWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "GetViewDescriptionImageWidget");

	Params::ModioModBrowser_GetViewDescriptionImageWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.GetViewDescriptionTextWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioModBrowser::GetViewDescriptionTextWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "GetViewDescriptionTextWidget");

	Params::ModioModBrowser_GetViewDescriptionTextWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.GetWalletButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModBrowser::GetWalletButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "GetWalletButtonWidget");

	Params::ModioModBrowser_GetWalletButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.SearchLibraryWithStoredParams
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FModioModInfo>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FModioModInfo> UModioModBrowser::SearchLibraryWithStoredParams() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "SearchLibraryWithStoredParams");

	Params::ModioModBrowser_SearchLibraryWithStoredParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.SearchPurchasesWithStoredParams
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FModioModInfo>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FModioModInfo> UModioModBrowser::SearchPurchasesWithStoredParams() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "SearchPurchasesWithStoredParams");

	Params::ModioModBrowser_SearchPurchasesWithStoredParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowser.SearchSubscriptionsAndInstallsWithStoredParams
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FModioModInfo>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FModioModInfo> UModioModBrowser::SearchSubscriptionsAndInstallsWithStoredParams() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowser", "SearchSubscriptionsAndInstallsWithStoredParams");

	Params::ModioModBrowser_SearchSubscriptionsAndInstallsWithStoredParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.IsModPurchased
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioModDetailsDialog::IsModPurchased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "IsModPurchased");

	Params::ModioModDetailsDialog_IsModPurchased Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.IsUserSubscribed
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioModDetailsDialog::IsUserSubscribed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "IsUserSubscribed");

	Params::ModioModDetailsDialog_IsUserSubscribed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.PopulateExtraOptionsCommands
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>*                 Commands                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModDetailsDialog::PopulateExtraOptionsCommands(TArray<class UObject*>* Commands, class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "PopulateExtraOptionsCommands");

	Params::ModioModDetailsDialog_PopulateExtraOptionsCommands Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Commands != nullptr)
		*Commands = std::move(Parms.Commands);
}


// Function ModioUICore.ModioModDetailsDialog.GetCloseDialogButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModDetailsDialog::GetCloseDialogButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetCloseDialogButtonWidget");

	Params::ModioModDetailsDialog_GetCloseDialogButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.GetExpandDescriptionButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModDetailsDialog::GetExpandDescriptionButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetExpandDescriptionButtonWidget");

	Params::ModioModDetailsDialog_GetExpandDescriptionButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.GetModAuthorDisplayWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIDataSourceWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIDataSourceWidget> UModioModDetailsDialog::GetModAuthorDisplayWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetModAuthorDisplayWidget");

	Params::ModioModDetailsDialog_GetModAuthorDisplayWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.GetModDependenciesButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModDetailsDialog::GetModDependenciesButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetModDependenciesButtonWidget");

	Params::ModioModDetailsDialog_GetModDependenciesButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.GetModImageGalleryWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIMediaDownloadCompletedReceiver>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIMediaDownloadCompletedReceiver> UModioModDetailsDialog::GetModImageGalleryWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetModImageGalleryWidget");

	Params::ModioModDetailsDialog_GetModImageGalleryWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.GetModNameTextWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioModDetailsDialog::GetModNameTextWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetModNameTextWidget");

	Params::ModioModDetailsDialog_GetModNameTextWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.GetModPropertiesWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIDataSourceWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIDataSourceWidget> UModioModDetailsDialog::GetModPropertiesWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetModPropertiesWidget");

	Params::ModioModDetailsDialog_GetModPropertiesWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.GetModStatusWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIDataSourceWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIDataSourceWidget> UModioModDetailsDialog::GetModStatusWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetModStatusWidget");

	Params::ModioModDetailsDialog_GetModStatusWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.GetModSummaryShortTextWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioModDetailsDialog::GetModSummaryShortTextWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetModSummaryShortTextWidget");

	Params::ModioModDetailsDialog_GetModSummaryShortTextWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.GetMoreOptionsMenuWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUICommandMenu>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUICommandMenu> UModioModDetailsDialog::GetMoreOptionsMenuWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetMoreOptionsMenuWidget");

	Params::ModioModDetailsDialog_GetMoreOptionsMenuWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.GetPurchaseButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModDetailsDialog::GetPurchaseButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetPurchaseButtonWidget");

	Params::ModioModDetailsDialog_GetPurchaseButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.GetRateDownButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModDetailsDialog::GetRateDownButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetRateDownButtonWidget");

	Params::ModioModDetailsDialog_GetRateDownButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.GetRateUpButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModDetailsDialog::GetRateUpButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetRateUpButtonWidget");

	Params::ModioModDetailsDialog_GetRateUpButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.GetSubscribeButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModDetailsDialog::GetSubscribeButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetSubscribeButtonWidget");

	Params::ModioModDetailsDialog_GetSubscribeButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.GetTagDisplayWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIDataSourceWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIDataSourceWidget> UModioModDetailsDialog::GetTagDisplayWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetTagDisplayWidget");

	Params::ModioModDetailsDialog_GetTagDisplayWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModDetailsDialog.GetWalletButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioModDetailsDialog::GetWalletButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsDialog", "GetWalletButtonWidget");

	Params::ModioModDetailsDialog_GetWalletButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModInstallationStatusWidget.QueryProgressValueForState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EModioModProgressState                  ProgressState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UModioModInstallationStatusWidget::QueryProgressValueForState(EModioModProgressState ProgressState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModInstallationStatusWidget", "QueryProgressValueForState");

	Params::ModioModInstallationStatusWidget_QueryProgressValueForState Parms{};

	Parms.ProgressState = ProgressState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModPropCollectionVisualizer.GetModPropertyVisualizerWidgets
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TScriptInterface<class IModioUIDataSourceWidget>>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TScriptInterface<class IModioUIDataSourceWidget>> UModioModPropCollectionVisualizer::GetModPropertyVisualizerWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModPropCollectionVisualizer", "GetModPropertyVisualizerWidgets");

	Params::ModioModPropCollectionVisualizer_GetModPropertyVisualizerWidgets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModRatingDisplay.GetRatingDescriptionLabelWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioModRatingDisplay::GetRatingDescriptionLabelWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModRatingDisplay", "GetRatingDescriptionLabelWidget");

	Params::ModioModRatingDisplay_GetRatingDescriptionLabelWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModRatingDisplay.GetRatingPercentageLabelWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioModRatingDisplay::GetRatingPercentageLabelWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModRatingDisplay", "GetRatingPercentageLabelWidget");

	Params::ModioModRatingDisplay_GetRatingPercentageLabelWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagDisplay.GetTagContainerWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIObjectListWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIObjectListWidget> UModioModTagDisplay::GetTagContainerWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagDisplay", "GetTagContainerWidget");

	Params::ModioModTagDisplay_GetTagContainerWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagSelectorCategory.GetCategoryTagListWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIObjectSelector>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIObjectSelector> UModioModTagSelectorCategory::GetCategoryTagListWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagSelectorCategory", "GetCategoryTagListWidget");

	Params::ModioModTagSelectorCategory_GetCategoryTagListWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagSelectorCategory.GetTagCategoryLabel
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioModTagSelectorCategory::GetTagCategoryLabel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagSelectorCategory", "GetTagCategoryLabel");

	Params::ModioModTagSelectorCategory_GetTagCategoryLabel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagSelectorMenu.GetAllowedTags
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TScriptInterface<class IModioModTagCategoryUIDetails>>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TScriptInterface<class IModioModTagCategoryUIDetails>> UModioModTagSelectorMenu::GetAllowedTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagSelectorMenu", "GetAllowedTags");

	Params::ModioModTagSelectorMenu_GetAllowedTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModTagSelectorMenu.NotifySelectionChanged
// (Final, Native, Protected, BlueprintCallable)

void UModioModTagSelectorMenu::NotifySelectionChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagSelectorMenu", "NotifySelectionChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModTagSelectorMenu.OnCategoryEntrySelectionChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          NewlySelectedEntry                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModTagSelectorMenu::OnCategoryEntrySelectionChanged(class UObject* NewlySelectedEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagSelectorMenu", "OnCategoryEntrySelectionChanged");

	Params::ModioModTagSelectorMenu_OnCategoryEntrySelectionChanged Parms{};

	Parms.NewlySelectedEntry = NewlySelectedEntry;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModTagSelectorMenu.OnCategoryWidgetCreated
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UWidget*                          CategoryWidget                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          CategoryDataSource                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModTagSelectorMenu::OnCategoryWidgetCreated(class UWidget* CategoryWidget, class UObject* CategoryDataSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagSelectorMenu", "OnCategoryWidgetCreated");

	Params::ModioModTagSelectorMenu_OnCategoryWidgetCreated Parms{};

	Parms.CategoryWidget = CategoryWidget;
	Parms.CategoryDataSource = CategoryDataSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModTagSelectorMenu.GetCategoryContainerWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIObjectListWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIObjectListWidget> UModioModTagSelectorMenu::GetCategoryContainerWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTagSelectorMenu", "GetCategoryContainerWidget");

	Params::ModioModTagSelectorMenu_GetCategoryContainerWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioOperationTracker.HandleOperationComplete
// (Native, Event, Protected, BlueprintEvent)

void UModioOperationTracker::HandleOperationComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioOperationTracker", "HandleOperationComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioOperationTracker.RefreshQueueData
// (Native, Event, Protected, BlueprintEvent)

void UModioOperationTracker::RefreshQueueData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioOperationTracker", "RefreshQueueData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioOperationTracker.GetDownloadSizeTextWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioOperationTracker::GetDownloadSizeTextWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioOperationTracker", "GetDownloadSizeTextWidget");

	Params::ModioOperationTracker_GetDownloadSizeTextWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioOperationTracker.GetDownloadSpeedTextWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioOperationTracker::GetDownloadSpeedTextWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioOperationTracker", "GetDownloadSpeedTextWidget");

	Params::ModioOperationTracker_GetDownloadSpeedTextWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioOperationTracker.GetOperationTypeIconWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIImageDisplayWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIImageDisplayWidget> UModioOperationTracker::GetOperationTypeIconWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioOperationTracker", "GetOperationTypeIconWidget");

	Params::ModioOperationTracker_GetOperationTypeIconWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioOperationTracker.GetPercentProgressTextWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioOperationTracker::GetPercentProgressTextWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioOperationTracker", "GetPercentProgressTextWidget");

	Params::ModioOperationTracker_GetPercentProgressTextWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioOperationTracker.GetQueueCountIconWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIImageDisplayWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIImageDisplayWidget> UModioOperationTracker::GetQueueCountIconWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioOperationTracker", "GetQueueCountIconWidget");

	Params::ModioOperationTracker_GetQueueCountIconWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioOperationTracker.GetQueueCountTextWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioOperationTracker::GetQueueCountTextWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioOperationTracker", "GetQueueCountTextWidget");

	Params::ModioOperationTracker_GetQueueCountTextWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioOperationTracker.GetQueueLabelTextWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioOperationTracker::GetQueueLabelTextWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioOperationTracker", "GetQueueLabelTextWidget");

	Params::ModioOperationTracker_GetQueueLabelTextWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioOperationTracker.GetRadialProgressWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIProgressWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIProgressWidget> UModioOperationTracker::GetRadialProgressWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioOperationTracker", "GetRadialProgressWidget");

	Params::ModioOperationTracker_GetRadialProgressWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioPopupCommandMenu.ConstructCommandMenuWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UModioPopupCommandMenu::ConstructCommandMenuWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioPopupCommandMenu", "ConstructCommandMenuWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioPopupCommandMenu.GetCommandMenuWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUICommandMenu>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUICommandMenu> UModioPopupCommandMenu::GetCommandMenuWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioPopupCommandMenu", "GetCommandMenuWidget");

	Params::ModioPopupCommandMenu_GetCommandMenuWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioPresetFilterSelector.GetFilterPresets
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TScriptInterface<class IModioModFilterUIDetails>>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TScriptInterface<class IModioModFilterUIDetails>> UModioPresetFilterSelector::GetFilterPresets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioPresetFilterSelector", "GetFilterPresets");

	Params::ModioPresetFilterSelector_GetFilterPresets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioPresetFilterSelector.GetPresetListWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIObjectSelector>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIObjectSelector> UModioPresetFilterSelector::GetPresetListWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioPresetFilterSelector", "GetPresetListWidget");

	Params::ModioPresetFilterSelector_GetPresetListWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioSearchBar.GetButtonWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIClickableWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIClickableWidget> UModioSearchBar::GetButtonWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioSearchBar", "GetButtonWidget");

	Params::ModioSearchBar_GetButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioSearchBar.GetSearchBoxWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIStringInputWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIStringInputWidget> UModioSearchBar::GetSearchBoxWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioSearchBar", "GetSearchBoxWidget");

	Params::ModioSearchBar_GetSearchBoxWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioStorageTracker.RefreshData
// (Final, Native, Protected, BlueprintCallable)

void UModioStorageTracker::RefreshData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioStorageTracker", "RefreshData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioStorageTracker.GetStorageUsedTextWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IModioUIHasTextWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IModioUIHasTextWidget> UModioStorageTracker::GetStorageUsedTextWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioStorageTracker", "GetStorageUsedTextWidget");

	Params::ModioStorageTracker_GetStorageUsedTextWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.ApplyTextPropertyOverridesHelper
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSlateFontInfoOverride&    FontPropertiesOverride                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FHAlignOverride&           TextJustificationOverride                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FTextTransformOverride&    TextTransformOverride                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUICommonFunctionLibrary::ApplyTextPropertyOverridesHelper(const struct FSlateFontInfoOverride& FontPropertiesOverride, const struct FHAlignOverride& TextJustificationOverride, const struct FTextTransformOverride& TextTransformOverride, class UObject* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "ApplyTextPropertyOverridesHelper");

	Params::ModioUICommonFunctionLibrary_ApplyTextPropertyOverridesHelper Parms{};

	Parms.FontPropertiesOverride = std::move(FontPropertiesOverride);
	Parms.TextJustificationOverride = std::move(TextJustificationOverride);
	Parms.TextTransformOverride = std::move(TextTransformOverride);
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.AsObjectArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<int32>&                    TargetArray                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> UModioUICommonFunctionLibrary::AsObjectArray(const TArray<int32>& TargetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "AsObjectArray");

	Params::ModioUICommonFunctionLibrary_AsObjectArray Parms{};

	Parms.TargetArray = std::move(TargetArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.CheckLogoDownloadEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FModioModID&               EventModID                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioLogoSize                          EventLogoSize                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FModioModID&               RequestedModID                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioLogoSize                          RequestedSize                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUICommonFunctionLibrary::CheckLogoDownloadEvent(const struct FModioModID& EventModID, EModioLogoSize EventLogoSize, const struct FModioModID& RequestedModID, EModioLogoSize RequestedSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "CheckLogoDownloadEvent");

	Params::ModioUICommonFunctionLibrary_CheckLogoDownloadEvent Parms{};

	Parms.EventModID = std::move(EventModID);
	Parms.EventLogoSize = EventLogoSize;
	Parms.RequestedModID = std::move(RequestedModID);
	Parms.RequestedSize = RequestedSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.CheckLogoDownloadEventForDataSource
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FModioModID&               EventModID                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioLogoSize                          EventLogoSize                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          DataSource                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioLogoSize                          RequestedSize                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUICommonFunctionLibrary::CheckLogoDownloadEventForDataSource(const struct FModioModID& EventModID, EModioLogoSize EventLogoSize, class UObject* DataSource, EModioLogoSize RequestedSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "CheckLogoDownloadEventForDataSource");

	Params::ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource Parms{};

	Parms.EventModID = std::move(EventModID);
	Parms.EventLogoSize = EventLogoSize;
	Parms.DataSource = DataSource;
	Parms.RequestedSize = RequestedSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableEnum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const uint8                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      InText                                                 (ConstParm, Parm, NativeAccessSpecifierPublic)
// class UModioEnumEntryUI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UModioEnumEntryUI* UModioUICommonFunctionLibrary::CreateBindableEnum(const uint8 InValue, const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "CreateBindableEnum");

	Params::ModioUICommonFunctionLibrary_CreateBindableEnum Parms{};

	Parms.InValue = InValue;
	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModDependency
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FModioModDependency&       InModDependency                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UModioModDependencyUI*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UModioModDependencyUI* UModioUICommonFunctionLibrary::CreateBindableModDependency(const struct FModioModDependency& InModDependency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "CreateBindableModDependency");

	Params::ModioUICommonFunctionLibrary_CreateBindableModDependency Parms{};

	Parms.InModDependency = std::move(InModDependency);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModDependencyArrayFromArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FModioModDependency>&InModDependencyArray                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UModioModDependencyUI*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UModioModDependencyUI*> UModioUICommonFunctionLibrary::CreateBindableModDependencyArrayFromArray(const TArray<struct FModioModDependency>& InModDependencyArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "CreateBindableModDependencyArrayFromArray");

	Params::ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromArray Parms{};

	Parms.InModDependencyArray = std::move(InModDependencyArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModDependencyArrayFromList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FModioModDependencyList&   InModDependencyList                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UModioModDependencyUI*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UModioModDependencyUI*> UModioUICommonFunctionLibrary::CreateBindableModDependencyArrayFromList(const struct FModioModDependencyList& InModDependencyList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "CreateBindableModDependencyArrayFromList");

	Params::ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromList Parms{};

	Parms.InModDependencyList = std::move(InModDependencyList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FModioModTagLocalizationData&InTagLocalizationData                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UModioModTagUI*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UModioModTagUI* UModioUICommonFunctionLibrary::CreateBindableModTag(const struct FModioModTagLocalizationData& InTagLocalizationData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "CreateBindableModTag");

	Params::ModioUICommonFunctionLibrary_CreateBindableModTag Parms{};

	Parms.InTagLocalizationData = std::move(InTagLocalizationData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModTagArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FModioModTag>&      InTags                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UModioModTagUI*>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UModioModTagUI*> UModioUICommonFunctionLibrary::CreateBindableModTagArray(const TArray<struct FModioModTag>& InTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "CreateBindableModTagArray");

	Params::ModioUICommonFunctionLibrary_CreateBindableModTagArray Parms{};

	Parms.InTags = std::move(InTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModTagInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FModioModTagInfo&          InRawTagInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UModioModTagInfoUI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UModioModTagInfoUI* UModioUICommonFunctionLibrary::CreateBindableModTagInfo(const struct FModioModTagInfo& InRawTagInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "CreateBindableModTagInfo");

	Params::ModioUICommonFunctionLibrary_CreateBindableModTagInfo Parms{};

	Parms.InRawTagInfo = std::move(InRawTagInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModTagOptions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FModioModTagOptions&       InRawOptions                                           (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UModioModTagOptionsUI*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UModioModTagOptionsUI* UModioUICommonFunctionLibrary::CreateBindableModTagOptions(const struct FModioModTagOptions& InRawOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "CreateBindableModTagOptions");

	Params::ModioUICommonFunctionLibrary_CreateBindableModTagOptions Parms{};

	Parms.InRawOptions = std::move(InRawOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModTagRawValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FModioModTag&              InTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UModioModTagUI*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UModioModTagUI* UModioUICommonFunctionLibrary::CreateBindableModTagRawValue(const struct FModioModTag& InTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "CreateBindableModTagRawValue");

	Params::ModioUICommonFunctionLibrary_CreateBindableModTagRawValue Parms{};

	Parms.InTag = std::move(InTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableReportTypeEnumArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class UModioEnumEntryUI*>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UModioEnumEntryUI*> UModioUICommonFunctionLibrary::CreateBindableReportTypeEnumArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "CreateBindableReportTypeEnumArray");

	Params::ModioUICommonFunctionLibrary_CreateBindableReportTypeEnumArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableUser
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FModioUser&                InRawUser                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UModioUserUI*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UModioUserUI* UModioUICommonFunctionLibrary::CreateBindableUser(const struct FModioUser& InRawUser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "CreateBindableUser");

	Params::ModioUICommonFunctionLibrary_CreateBindableUser Parms{};

	Parms.InRawUser = std::move(InRawUser);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.FormatNumberWithSIUnit
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      FormatText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UModioUICommonFunctionLibrary::FormatNumberWithSIUnit(int64 Value, const class FText& FormatText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "FormatNumberWithSIUnit");

	Params::ModioUICommonFunctionLibrary_FormatNumberWithSIUnit Parms{};

	Parms.Value = Value;
	Parms.FormatText = std::move(FormatText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.FormatTimespan
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTimespan&                 Timespan                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      YearFormat                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      MonthFormat                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      DaysFormat                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      TodayFormat                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UModioUICommonFunctionLibrary::FormatTimespan(const struct FTimespan& Timespan, const class FText& YearFormat, const class FText& MonthFormat, const class FText& DaysFormat, const class FText& TodayFormat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "FormatTimespan");

	Params::ModioUICommonFunctionLibrary_FormatTimespan Parms{};

	Parms.Timespan = std::move(Timespan);
	Parms.YearFormat = std::move(YearFormat);
	Parms.MonthFormat = std::move(MonthFormat);
	Parms.DaysFormat = std::move(DaysFormat);
	Parms.TodayFormat = std::move(TodayFormat);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.GetLocalizedTagCategory
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FModioModTagInfo&          InTagInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UModioUICommonFunctionLibrary::GetLocalizedTagCategory(const struct FModioModTagInfo& InTagInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "GetLocalizedTagCategory");

	Params::ModioUICommonFunctionLibrary_GetLocalizedTagCategory Parms{};

	Parms.InTagInfo = std::move(InTagInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.GetLocalizedTagValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FModioModTagLocalizationData&InTagLocalizationData                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UModioUICommonFunctionLibrary::GetLocalizedTagValue(const struct FModioModTagLocalizationData& InTagLocalizationData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "GetLocalizedTagValue");

	Params::ModioUICommonFunctionLibrary_GetLocalizedTagValue Parms{};

	Parms.InTagLocalizationData = std::move(InTagLocalizationData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.GetModioText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             StringKey                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UModioUICommonFunctionLibrary::GetModioText(class FName StringKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "GetModioText");

	Params::ModioUICommonFunctionLibrary_GetModioText Parms{};

	Parms.StringKey = StringKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.IsDesignTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                          Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUICommonFunctionLibrary::IsDesignTime(class UWidget* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "IsDesignTime");

	Params::ModioUICommonFunctionLibrary_IsDesignTime Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.IsDesignTimeAsExec
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUICommonFunctionLibrary::IsDesignTimeAsExec(class UWidget* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "IsDesignTimeAsExec");

	Params::ModioUICommonFunctionLibrary_IsDesignTimeAsExec Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.MapValueIntoRangeIndex
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FInt32Range>&       ValueRanges                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutIndex                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUICommonFunctionLibrary::MapValueIntoRangeIndex(const TArray<struct FInt32Range>& ValueRanges, int32 Value, int32* OutIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "MapValueIntoRangeIndex");

	Params::ModioUICommonFunctionLibrary_MapValueIntoRangeIndex Parms{};

	Parms.ValueRanges = std::move(ValueRanges);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutIndex != nullptr)
		*OutIndex = Parms.OutIndex;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUICommonFunctionLibrary.ValidateWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IInterface>      TargetWidget                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UModioUICommonFunctionLibrary::ValidateWidget(TScriptInterface<class IInterface> TargetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommonFunctionLibrary", "ValidateWidget");

	Params::ModioUICommonFunctionLibrary_ValidateWidget Parms{};

	Parms.TargetWidget = TargetWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIDisplayFilteredModsCommand.SetDisplayStringKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InDisplayStringKey                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIDisplayFilteredModsCommand::SetDisplayStringKey(const class FName& InDisplayStringKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIDisplayFilteredModsCommand", "SetDisplayStringKey");

	Params::ModioUIDisplayFilteredModsCommand_SetDisplayStringKey Parms{};

	Parms.InDisplayStringKey = InDisplayStringKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIDisplayFilteredModsCommand.SetFilterParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FModioFilterParams&        FilterParams                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UModioUIDisplayFilteredModsCommand::SetFilterParams(const struct FModioFilterParams& FilterParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIDisplayFilteredModsCommand", "SetFilterParams");

	Params::ModioUIDisplayFilteredModsCommand_SetFilterParams Parms{};

	Parms.FilterParams = std::move(FilterParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

