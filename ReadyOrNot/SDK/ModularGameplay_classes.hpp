#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModularGameplay

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class ModularGameplay.GameFrameworkComponent
// 0x0000 (0x00A0 - 0x00A0)
class UGameFrameworkComponent : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameFrameworkComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameFrameworkComponent")
	}
	static class UGameFrameworkComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFrameworkComponent>();
	}
};
DUMPER7_ASSERTS_UGameFrameworkComponent;

// Class ModularGameplay.ControllerComponent
// 0x0000 (0x00A0 - 0x00A0)
class UControllerComponent final : public UGameFrameworkComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ControllerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ControllerComponent")
	}
	static class UControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControllerComponent>();
	}
};
DUMPER7_ASSERTS_UControllerComponent;

// Class ModularGameplay.GameFrameworkComponentManager
// 0x0208 (0x0238 - 0x0030)
class UGameFrameworkComponentManager final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x208];                                     // 0x0030(0x0208)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddReceiver(class AActor* Receiver, bool bAddOnlyInGameWorlds);
	bool RegisterAndCallForActorInitState(class AActor* Actor, class FName FeatureName, const struct FGameplayTag& RequiredState, TDelegate<void(const struct FActorInitStateChangedParams& Params)> Delegate, bool bCallImmediately);
	bool RegisterAndCallForClassInitState(TSoftClassPtr<class UClass> ActorClass, class FName FeatureName, const struct FGameplayTag& RequiredState, TDelegate<void(const struct FActorInitStateChangedParams& Params)> Delegate, bool bCallImmediately);
	void RemoveReceiver(class AActor* Receiver);
	void SendExtensionEvent(class AActor* Receiver, class FName EventName, bool bOnlyInGameWorlds);
	bool UnregisterActorInitStateDelegate(class AActor* Actor, TDelegate<void(const struct FActorInitStateChangedParams& Params)> DelegateToRemove);
	bool UnregisterClassInitStateDelegate(TSoftClassPtr<class UClass> ActorClass, TDelegate<void(const struct FActorInitStateChangedParams& Params)> DelegateToRemove);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameFrameworkComponentManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameFrameworkComponentManager")
	}
	static class UGameFrameworkComponentManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFrameworkComponentManager>();
	}
};
DUMPER7_ASSERTS_UGameFrameworkComponentManager;

// Class ModularGameplay.GameFrameworkInitStateInterface
// 0x0000 (0x0000 - 0x0000)
class IGameFrameworkInitStateInterface final
{
public:
	bool RegisterAndCallForInitStateChange(const struct FGameplayTag& RequiredState, TDelegate<void(const struct FActorInitStateChangedParams& Params)> Delegate, bool bCallImmediately);
	bool UnregisterInitStateDelegate(TDelegate<void(const struct FActorInitStateChangedParams& Params)> Delegate);

	class FName GetFeatureName() const;
	struct FGameplayTag GetInitState() const;
	bool HasReachedInitState(const struct FGameplayTag& DesiredState) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameFrameworkInitStateInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameFrameworkInitStateInterface")
	}
	static class IGameFrameworkInitStateInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGameFrameworkInitStateInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGameFrameworkInitStateInterface;

// Class ModularGameplay.GameStateComponent
// 0x0000 (0x00A0 - 0x00A0)
class UGameStateComponent : public UGameFrameworkComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameStateComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameStateComponent")
	}
	static class UGameStateComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameStateComponent>();
	}
};
DUMPER7_ASSERTS_UGameStateComponent;

// Class ModularGameplay.PawnComponent
// 0x0000 (0x00A0 - 0x00A0)
class UPawnComponent final : public UGameFrameworkComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PawnComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PawnComponent")
	}
	static class UPawnComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPawnComponent>();
	}
};
DUMPER7_ASSERTS_UPawnComponent;

// Class ModularGameplay.PlayerStateComponent
// 0x0000 (0x00A0 - 0x00A0)
class UPlayerStateComponent final : public UGameFrameworkComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerStateComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerStateComponent")
	}
	static class UPlayerStateComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerStateComponent>();
	}
};
DUMPER7_ASSERTS_UPlayerStateComponent;

}

