#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ObjectPooler

#include "Basic.hpp"

#include "ObjectPooler_classes.hpp"
#include "ObjectPooler_parameters.hpp"


namespace SDK
{

// Function ObjectPooler.AsyncRetrieveActorFromPool.AsyncRetrieveActorFromPool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObjectPoolBase*                  InObjectPool                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAsyncRetrieveActorFromPool*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncRetrieveActorFromPool* UAsyncRetrieveActorFromPool::AsyncRetrieveActorFromPool(class UObject* WorldContextObject, class UObjectPoolBase* InObjectPool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncRetrieveActorFromPool", "AsyncRetrieveActorFromPool");

	Params::AsyncRetrieveActorFromPool_AsyncRetrieveActorFromPool Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InObjectPool = InObjectPool;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.AsyncRetrieveActorFromPool_Comp.AsyncRetrieveActorFromPool_Component
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObjectPoolComponent*             InObjectPoolComponent                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAsyncRetrieveActorFromPool_Comp* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncRetrieveActorFromPool_Comp* UAsyncRetrieveActorFromPool_Comp::AsyncRetrieveActorFromPool_Component(class UObject* WorldContextObject, class UObjectPoolComponent* InObjectPoolComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncRetrieveActorFromPool_Comp", "AsyncRetrieveActorFromPool_Component");

	Params::AsyncRetrieveActorFromPool_Comp_AsyncRetrieveActorFromPool_Component Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InObjectPoolComponent = InObjectPoolComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolBase.AddActorToPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APooledActor*                     NewPooledActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UObjectPoolBase::AddActorToPool(class APooledActor* NewPooledActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolBase", "AddActorToPool");

	Params::ObjectPoolBase_AddActorToPool Parms{};

	Parms.NewPooledActor = NewPooledActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.ObjectPoolBase.EmptyPool
// (Final, Native, Public, BlueprintCallable)

void UObjectPoolBase::EmptyPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolBase", "EmptyPool");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.ObjectPoolBase.FillPool
// (Final, Native, Public, BlueprintCallable)

void UObjectPoolBase::FillPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolBase", "FillPool");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.ObjectPoolBase.GetActorFromPool
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EObjectPoolRetrieveActorResult*         Results                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APooledActor*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APooledActor* UObjectPoolBase::GetActorFromPool(EObjectPoolRetrieveActorResult* Results)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolBase", "GetActorFromPool");

	Params::ObjectPoolBase_GetActorFromPool Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Results != nullptr)
		*Results = Parms.Results;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolBase.AreAllActorsInUse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UObjectPoolBase::AreAllActorsInUse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolBase", "AreAllActorsInUse");

	Params::ObjectPoolBase_AreAllActorsInUse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolBase.GetPooledActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APooledActor*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class APooledActor*> UObjectPoolBase::GetPooledActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolBase", "GetPooledActors");

	Params::ObjectPoolBase_GetPooledActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolBase.GetPoolName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UObjectPoolBase::GetPoolName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolBase", "GetPoolName");

	Params::ObjectPoolBase_GetPoolName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolBase.GetPoolSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UObjectPoolBase::GetPoolSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolBase", "GetPoolSize");

	Params::ObjectPoolBase_GetPoolSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolBase.GetReuseSetting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EObjectPoolReuseSetting                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EObjectPoolReuseSetting UObjectPoolBase::GetReuseSetting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolBase", "GetReuseSetting");

	Params::ObjectPoolBase_GetReuseSetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolBase.IsPoolEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UObjectPoolBase::IsPoolEmpty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolBase", "IsPoolEmpty");

	Params::ObjectPoolBase_IsPoolEmpty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolBase.IsWarmUpComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UObjectPoolBase::IsWarmUpComplete() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolBase", "IsWarmUpComplete");

	Params::ObjectPoolBase_IsWarmUpComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolComponent.AddActorToPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APooledActor*                     NewPooledActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UObjectPoolComponent::AddActorToPool(class APooledActor* NewPooledActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolComponent", "AddActorToPool");

	Params::ObjectPoolComponent_AddActorToPool Parms{};

	Parms.NewPooledActor = NewPooledActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.ObjectPoolComponent.EmptyPool
// (Final, Native, Public, BlueprintCallable)

void UObjectPoolComponent::EmptyPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolComponent", "EmptyPool");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.ObjectPoolComponent.FillPool
// (Final, Native, Public, BlueprintCallable)

void UObjectPoolComponent::FillPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolComponent", "FillPool");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.ObjectPoolComponent.GetActorFromPool
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EObjectPoolRetrieveActorResult*         Results                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APooledActor*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APooledActor* UObjectPoolComponent::GetActorFromPool(EObjectPoolRetrieveActorResult* Results)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolComponent", "GetActorFromPool");

	Params::ObjectPoolComponent_GetActorFromPool Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Results != nullptr)
		*Results = Parms.Results;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolComponent.AreAllActorsInUse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UObjectPoolComponent::AreAllActorsInUse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolComponent", "AreAllActorsInUse");

	Params::ObjectPoolComponent_AreAllActorsInUse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolComponent.GetPoolName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UObjectPoolComponent::GetPoolName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolComponent", "GetPoolName");

	Params::ObjectPoolComponent_GetPoolName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolComponent.GetPoolSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UObjectPoolComponent::GetPoolSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolComponent", "GetPoolSize");

	Params::ObjectPoolComponent_GetPoolSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolComponent.IsPoolEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UObjectPoolComponent::IsPoolEmpty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolComponent", "IsPoolEmpty");

	Params::ObjectPoolComponent_IsPoolEmpty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolComponent.IsWarmUpComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UObjectPoolComponent::IsWarmUpComplete() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolComponent", "IsWarmUpComplete");

	Params::ObjectPoolComponent_IsWarmUpComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolerWorldSubsystem.DestroyObjectPools
// (Final, Native, Public, BlueprintCallable)

void UObjectPoolerWorldSubsystem::DestroyObjectPools()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolerWorldSubsystem", "DestroyObjectPools");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.ObjectPoolerWorldSubsystem.InitializeObjectPools
// (Final, Native, Public, BlueprintCallable)

void UObjectPoolerWorldSubsystem::InitializeObjectPools()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPoolerWorldSubsystem", "InitializeObjectPools");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.ObjectPoolFunctionLibrary.DestroyAllObjectPools
// (Final, Native, Static, Public, BlueprintCallable)

void UObjectPoolFunctionLibrary::DestroyAllObjectPools()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ObjectPoolFunctionLibrary", "DestroyAllObjectPools");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.ObjectPoolFunctionLibrary.DoesObjectPoolExist
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             PoolName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UObjectPoolFunctionLibrary::DoesObjectPoolExist(class FName PoolName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ObjectPoolFunctionLibrary", "DoesObjectPoolExist");

	Params::ObjectPoolFunctionLibrary_DoesObjectPoolExist Parms{};

	Parms.PoolName = PoolName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolFunctionLibrary.GetActivePooledActorCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UObjectPoolFunctionLibrary::GetActivePooledActorCount(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ObjectPoolFunctionLibrary", "GetActivePooledActorCount");

	Params::ObjectPoolFunctionLibrary_GetActivePooledActorCount Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolFunctionLibrary.GetAllObjectPoolClassesFromManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ManagerName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<TSubclassOf<class UObjectPoolBase>>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSubclassOf<class UObjectPoolBase>> UObjectPoolFunctionLibrary::GetAllObjectPoolClassesFromManager(class FName ManagerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ObjectPoolFunctionLibrary", "GetAllObjectPoolClassesFromManager");

	Params::ObjectPoolFunctionLibrary_GetAllObjectPoolClassesFromManager Parms{};

	Parms.ManagerName = ManagerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolFunctionLibrary.GetAllObjectPools
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UObjectPoolBase*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObjectPoolBase*> UObjectPoolFunctionLibrary::GetAllObjectPools(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ObjectPoolFunctionLibrary", "GetAllObjectPools");

	Params::ObjectPoolFunctionLibrary_GetAllObjectPools Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolFunctionLibrary.GetNumOfObjectPoolsInWorld
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UObjectPoolFunctionLibrary::GetNumOfObjectPoolsInWorld(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ObjectPoolFunctionLibrary", "GetNumOfObjectPoolsInWorld");

	Params::ObjectPoolFunctionLibrary_GetNumOfObjectPoolsInWorld Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolFunctionLibrary.GetObjectPool
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PoolName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObjectPoolBase*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObjectPoolBase* UObjectPoolFunctionLibrary::GetObjectPool(class UObject* WorldContext, class FName PoolName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ObjectPoolFunctionLibrary", "GetObjectPool");

	Params::ObjectPoolFunctionLibrary_GetObjectPool Parms{};

	Parms.WorldContext = WorldContext;
	Parms.PoolName = PoolName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolFunctionLibrary.GetPooledActorCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UObjectPoolFunctionLibrary::GetPooledActorCount(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ObjectPoolFunctionLibrary", "GetPooledActorCount");

	Params::ObjectPoolFunctionLibrary_GetPooledActorCount Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolFunctionLibrary.GetUnactivePooledActorCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UObjectPoolFunctionLibrary::GetUnactivePooledActorCount(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ObjectPoolFunctionLibrary", "GetUnactivePooledActorCount");

	Params::ObjectPoolFunctionLibrary_GetUnactivePooledActorCount Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolFunctionLibrary.IsActorInUse
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APooledActor*                     InPooledActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UObjectPoolFunctionLibrary::IsActorInUse(class APooledActor* InPooledActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ObjectPoolFunctionLibrary", "IsActorInUse");

	Params::ObjectPoolFunctionLibrary_IsActorInUse Parms{};

	Parms.InPooledActor = InPooledActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.ObjectPoolFunctionLibrary.MarkActorInUse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APooledActor*                     InPooledActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UObjectPoolFunctionLibrary::MarkActorInUse(class APooledActor* InPooledActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ObjectPoolFunctionLibrary", "MarkActorInUse");

	Params::ObjectPoolFunctionLibrary_MarkActorInUse Parms{};

	Parms.InPooledActor = InPooledActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.ObjectPoolFunctionLibrary.MarkActorNotInUse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APooledActor*                     InPooledActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UObjectPoolFunctionLibrary::MarkActorNotInUse(class APooledActor* InPooledActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ObjectPoolFunctionLibrary", "MarkActorNotInUse");

	Params::ObjectPoolFunctionLibrary_MarkActorNotInUse Parms{};

	Parms.InPooledActor = InPooledActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.PooledActor.ActivateAllComponents
// (Final, Native, Protected, BlueprintCallable)

void APooledActor::ActivateAllComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PooledActor", "ActivateAllComponents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.PooledActor.DeactivateAllComponents
// (Final, Native, Protected, BlueprintCallable)

void APooledActor::DeactivateAllComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PooledActor", "DeactivateAllComponents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.PooledActor.MarkInUse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bBroadcast                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APooledActor::MarkInUse(bool bBroadcast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PooledActor", "MarkInUse");

	Params::PooledActor_MarkInUse Parms{};

	Parms.bBroadcast = bBroadcast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.PooledActor.MarkNotInUse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bBroadcast                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APooledActor::MarkNotInUse(bool bBroadcast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PooledActor", "MarkNotInUse");

	Params::PooledActor_MarkNotInUse Parms{};

	Parms.bBroadcast = bBroadcast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.PooledActor.OnLifeSpanExpired
// (Native, Event, Protected, BlueprintEvent)

void APooledActor::OnLifeSpanExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PooledActor", "OnLifeSpanExpired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.PooledActor.PooledActor_BeginPlay
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APooledActor::PooledActor_BeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PooledActor", "PooledActor_BeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.PooledActor.PooledActor_EndPlay
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APooledActor::PooledActor_EndPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PooledActor", "PooledActor_EndPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.PooledActor.SetActive
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APooledActor::SetActive(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PooledActor", "SetActive");

	Params::PooledActor_SetActive Parms{};

	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ObjectPooler.PooledActor.IsInUse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APooledActor::IsInUse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PooledActor", "IsInUse");

	Params::PooledActor_IsInUse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ObjectPooler.PooledActor.IsNotInUse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APooledActor::IsNotInUse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PooledActor", "IsNotInUse");

	Params::PooledActor_IsNotInUse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

