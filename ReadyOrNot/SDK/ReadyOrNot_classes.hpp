#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ReadyOrNot

#include "Basic.hpp"

#include "ObjectPooler_classes.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "CommonUI_classes.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "DynamicCoverSystem_structs.hpp"
#include "DynamicCoverSystem_classes.hpp"
#include "ReadyOrNot_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "EnhancedInput_classes.hpp"
#include "UMG_classes.hpp"
#include "ModularGameplay_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "LevelSequence_classes.hpp"
#include "DeveloperSettings_classes.hpp"
#include "Slate_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "FMODStudio_classes.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "CommonInput_structs.hpp"
#include "CommonInput_classes.hpp"
#include "InputRemapping_structs.hpp"
#include "InputCore_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "PhysicsCore_classes.hpp"
#include "OnlineSubsystemUtils_structs.hpp"
#include "AimAssistSystem_classes.hpp"
#include "Gauntlet_classes.hpp"
#include "NavigationSystem_classes.hpp"


namespace SDK
{

// Class ReadyOrNot.SquadActionGate
// 0x0000 (0x0028 - 0x0028)
class USquadActionGate : public UObject
{
public:
	bool CanOpen(const struct FSquadActionDecisionContext& Context) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SquadActionGate")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SquadActionGate")
	}
	static class USquadActionGate* GetDefaultObj()
	{
		return GetDefaultObjImpl<USquadActionGate>();
	}
};
DUMPER7_ASSERTS_USquadActionGate;

// Class ReadyOrNot.SAGNumberOfSquadMembersAlive
// 0x0008 (0x0030 - 0x0028)
class USAGNumberOfSquadMembersAlive final : public USquadActionGate
{
public:
	int32                                         NumberAlive;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SAGNumberOfSquadMembersAlive")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SAGNumberOfSquadMembersAlive")
	}
	static class USAGNumberOfSquadMembersAlive* GetDefaultObj()
	{
		return GetDefaultObjImpl<USAGNumberOfSquadMembersAlive>();
	}
};
DUMPER7_ASSERTS_USAGNumberOfSquadMembersAlive;

// Class ReadyOrNot.AccountPrivileges
// 0x00B0 (0x00E0 - 0x0030)
class UAccountPrivileges final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0xB0];                                      // 0x0030(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AccountPrivileges")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AccountPrivileges")
	}
	static class UAccountPrivileges* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAccountPrivileges>();
	}
};
DUMPER7_ASSERTS_UAccountPrivileges;

// Class ReadyOrNot.DeployableDepot
// 0x0018 (0x02B0 - 0x0298)
class ADeployableDepot final : public AActor
{
public:
	TArray<class UDeployableSpawnComponent*>      SpawnedDeployableComponents;                       // 0x0298(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	class FName                                   DepotLabel;                                        // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Multicast_OnSuccessfulSpawn();
	void OnGameStarted();
	void OnSuccessfulSpawn();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DeployableDepot")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DeployableDepot")
	}
	static class ADeployableDepot* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADeployableDepot>();
	}
};
DUMPER7_ASSERTS_ADeployableDepot;

// Class ReadyOrNot.AchievementSubsystem
// 0x0430 (0x0460 - 0x0030)
class UAchievementSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EAchievementStats, struct FUniversalStat> AchievementStats;                                 // 0x0040(0x0050)(Protected, NativeAccessSpecifierProtected)
	TMap<class FString, struct FCompletedMissionStats> CompletedMissionScores;                       // 0x0090(0x0050)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_E0[0x228];                                     // 0x00E0(0x0228)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class ABaseItem*>                        UsedItemsInCurrentMission;                         // 0x0308(0x0050)(UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_358[0x60];                                     // 0x0358(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	class ULocalAchievements*                     LocalAchievements;                                 // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C0[0xA0];                                     // 0x03C0(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static TArray<EAchievement> GetAllAchievements();

	void BeginMission();
	void C2Detonated(class UWorld* WorldContextObject, class AReadyOrNotCharacter* Breacher, class AActor* Target);
	void CharacterKilled(class UObject* WorldContextObject, class AReadyOrNotCharacter* KilledCharacter, class AReadyOrNotCharacter* KilledBy, bool bWasActiveBeforeDeath);
	void DrankBeverage(const class FString& Beverage);
	void EndMission(class UObject* WorldContextObject);
	bool HasNotUsedAnyOtherItems(const TArray<EItemCategory>& Categories);
	void HelicopterCameraUpdate(class UObject* WorldContextObject, class UTrackingCameraComponent* CameraComponent, float DeltaTime);
	void IndicateUserAchievementProgress(EAchievement Achievement, int32 Progress, int32 MaxProgress);
	void QueryAchievementsAndStatsFailure(int32 SteamErrorOutput);
	void QueryAchievementsAndStatsSuccess(int32 SteamErrorOutput);
	void StoreStatsAndAchievementsFailure(int32 SteamErrorOutput);
	void StoreStatsAndAchievementsSuccess(int32 SteamErrorOutput);
	void UsedItem(class ABaseItem* Item);
	void UserAchievementProgressFailure(int32 SteamErrorOutput);
	void UserAchievementProgressSuccess(int32 SteamErrorOutput);

	TArray<struct FAchievementStatus> GetAchievementStatuses() const;
	class ULocalAchievements* GetLocalAchievements() const;
	TArray<EAchievement> GetLockedAchievements() const;
	TArray<EAchievement> GetUnlockedAchievements() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AchievementSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AchievementSubsystem")
	}
	static class UAchievementSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAchievementSubsystem>();
	}
};
DUMPER7_ASSERTS_UAchievementSubsystem;

// Class ReadyOrNot.AchievementStatics
// 0x0000 (0x0028 - 0x0028)
class UAchievementStatics final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AchievementStatics")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AchievementStatics")
	}
	static class UAchievementStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAchievementStatics>();
	}
};
DUMPER7_ASSERTS_UAchievementStatics;

// Class ReadyOrNot.ReadyOrNotEvidenceSettings
// 0x0028 (0x0060 - 0x0038)
class UReadyOrNotEvidenceSettings final : public UDeveloperSettings
{
public:
	TSoftClassPtr<class UClass>                   DefaultCollectedEvidenceActor;                     // 0x0038(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotEvidenceSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotEvidenceSettings")
	}
	static class UReadyOrNotEvidenceSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotEvidenceSettings>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotEvidenceSettings;

// Class ReadyOrNot.LocalAchievements
// 0x00D0 (0x00F8 - 0x0028)
class ULocalAchievements final : public USaveGame
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EAchievement>                          Achievements;                                      // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<EAchievementStats, struct FUniversalStat> Stats;                                            // 0x0048(0x0050)(NativeAccessSpecifierPrivate)
	TMap<class FString, struct FCompletedMissionStats> CompletedMissionScores;                       // 0x0098(0x0050)(NativeAccessSpecifierPrivate)
	TArray<class FName>                           UnlockedTraits;                                    // 0x00E8(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LocalAchievements")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LocalAchievements")
	}
	static class ULocalAchievements* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULocalAchievements>();
	}
};
DUMPER7_ASSERTS_ULocalAchievements;

// Class ReadyOrNot.SquadRulesData
// 0x0060 (0x0090 - 0x0030)
class USquadRulesData final : public UDataAsset
{
public:
	TMap<EAIAwarenessState, EAIAwarenessState>    AwarenessStateShareMap;                            // 0x0030(0x0050)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FSquadActivityRules>            SquadActivityData;                                 // 0x0080(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SquadRulesData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SquadRulesData")
	}
	static class USquadRulesData* GetDefaultObj()
	{
		return GetDefaultObjImpl<USquadRulesData>();
	}
};
DUMPER7_ASSERTS_USquadRulesData;

// Class ReadyOrNot.ActivatableBaseWidget
// 0x0028 (0x0440 - 0x0418)
class UActivatableBaseWidget : public UCommonActivatableWidget
{
public:
	struct FVector2D                              MouseAxisDeltaThreshold;                           // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              GamepadAxisDeltaThreshold;                         // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotGameState*                   RONGS;                                             // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	struct FVector2D GetCenterScreenPosition();
	void HideWidget();
	bool IsBlockingAnimationPlaying();
	bool IsGamepadAxisBeyondThreshold(const struct FVector2D& InGamepadAxis);
	bool IsMouseAxisBeyondThreshold(const struct FVector2D& InMouseDelta);
	void PauseWidgetAnimation_Internal(class UWidgetAnimation* InWidgetAnimation);
	void PlaySoundEffect(class UFMODEvent* SoundEffectToPlay);
	void PlayWidgetAnimation_Internal(class UWidgetAnimation* InWidgetAnimation, bool bRestartIfAlreadyPlaying);
	void ShowWidget(bool bNotHitTestable);
	void StopWidgetAnimation_Internal(class UWidgetAnimation* InWidgetAnimation);
	void ToggleWidgetVisibility(bool bNotHitTestable);
	bool UpdateDebugInfo();

	struct FVector2D GetMouseDelta() const;
	struct FVector2D GetMousePosition() const;
	bool HasMouseMoved() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActivatableBaseWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActivatableBaseWidget")
	}
	static class UActivatableBaseWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivatableBaseWidget>();
	}
};
DUMPER7_ASSERTS_UActivatableBaseWidget;

// Class ReadyOrNot.BaseActivity
// 0x01C8 (0x01F0 - 0x0028)
class UBaseActivity : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UBaseActivity* Activity, class ACyberneticController* Controller)> OnStartActivity; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UBaseActivity* Activity, class ACyberneticController* Controller, float DeltaTime)> OnPerformActivity; // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UBaseActivity* Activity, class ACyberneticController* Controller)> OnFinishActivity; // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UBaseActivity* Activity, class ACyberneticController* Controller)> OnFinishActivity_NoOwner; // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x18];                                      // 0x0070(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ActivityName;                                      // 0x0088(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         MaxActivityTime;                                   // 0x00A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActivityStartDelay;                                // 0x00A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bNoResetDataOnFinish : 1;                          // 0x00A8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MoveAcceptanceRadius;                              // 0x00B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OverrideMoveAcceptanceRadius;                      // 0x00B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GlobalCooldown;                                    // 0x00C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bGlobalCooldownRandomRange : 1;                    // 0x00C4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              GlobalCooldownRange;                               // 0x00C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIsProgressActivity : 1;                           // 0x00D8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bFinishActivityWhenOverriden : 1;                  // 0x00D8(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAbortMoveWhenActivityFinished : 1;                // 0x00D8(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAbortMoveWhenActivityOverriden : 1;               // 0x00D8(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAbortActivityIfCannotReachLocation : 1;           // 0x00D8(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAbortActivityIfProjectedLocationFailed : 1;       // 0x00D8(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAbortIfTrackingEnemy : 1;                         // 0x00D8(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPauseIfTrackingEnemy : 1;                         // 0x00D8(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPauseIfRecentlyInCombat : 1;                      // 0x00D9(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RecentCombatTimeThreshold;                         // 0x00DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAllowWhileArrested : 1;                           // 0x00E0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bNoMoveActivity : 1;                               // 0x00E0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsSquadsRoleActivity : 1;                         // 0x00E0(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bResetStateMachineWhenActivityResumed : 1;         // 0x00E0(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowPartialMove : 1;                             // 0x00E0(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowRePathOnInvalidation : 1;                    // 0x00E0(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAbortIfNotMovingForAWhile : 1;                    // 0x00E0(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAlwaysRequestMove : 1;                            // 0x00E0(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAbortIfSurrendered : 1;                           // 0x00E1(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_E2[0x1E];                                      // 0x00E2(0x001E)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElapsedActivityTime;                               // 0x0100(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeNotMoving;                                     // 0x0104(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                Location;                                          // 0x0108(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   ProgressState;                                     // 0x0120(0x0018)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                         TimeSinceLastAsyncMove;                            // 0x0138(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LastRequestedLocation;                             // 0x0140(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_158[0x5C];                                     // 0x0158(0x005C)(Fixing Size After Last Property [ Dumper-7 ])
	EActivityStatus                               ActivityStatus;                                    // 0x01B4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B5[0x5];                                      // 0x01B5(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         BitPad_1BA_0 : 1;                                  // 0x01BA(0x0001)(Fixing Bit-Field Size Between Bits [ Dumper-7 ])
	uint8                                         bSearchingPath : 1;                                // 0x01BA(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bLastRequestedLocationWaitingForRepath : 1;        // 0x01BA(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_1BB[0x15];                                     // 0x01BB(0x0015)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LastPathLength;                                    // 0x01D0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACyberneticController*                  OwningController;                                  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACyberneticCharacter*                   OwningCharacter;                                   // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UActivityFiniteStateMachine*            ActivityStateMachine;                              // 0x01E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void EquipItem(EItemCategory InItemCategory);
	void EquipItemOfClass(TSubclassOf<class ABaseItem> InItemClass);
	void EquipSpecificItem(class ABaseItem* Item);
	void EquipWeapon();
	void FinishedActivity_Blueprint(bool bSuccess);
	void OnIncapacitated(class AReadyOrNotCharacter* IncapacitatedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
	void OnKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	bool OverrideFocalPoint_Blueprint(struct FVector* FocalPoint);
	void PerformActivity_Blueprint(float DeltaTime);
	void ResetData();
	void SetLocation(const struct FVector& NewLocation, bool bRequestMove, const struct FVector& CustomExtent);
	void StartActivity_Blueprint(class AAIController* Owner);

	bool CanBePushed() const;
	bool CanOverrideActivity() const;
	int32 GetActiveStateID() const;
	class FString GetActiveStateName() const;
	float GetActiveStateUptime() const;
	EActivityStatus GetActivityStatus() const;
	class ACyberneticCharacter* GetCharacter() const;
	struct FVector GetLocation() const;
	class FName GetMoveStyleOverride() const;
	class ACyberneticController* GetOwningController() const;
	class FText GetProgressState() const;
	bool HasReachedLocation(float Tolerance) const;
	bool HasReachedLocation_Custom(const struct FVector& CustomLocation, float Tolerance) const;
	bool HasStartedActivity() const;
	bool IsActivityComplete() const;
	bool IsActivityInitialized() const;
	bool IsActivityPaused() const;
	bool IsNoMoveActivity() const;
	bool IsProgressActivity() const;
	bool IsSquadsRoleActivity() const;
	bool ShouldForceNoStrafe() const;
	bool ShouldForceStrafe() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseActivity")
	}
	static class UBaseActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseActivity>();
	}
};
DUMPER7_ASSERTS_UBaseActivity;

// Class ReadyOrNot.DeployItemAtLocationActivity
// 0x0020 (0x0210 - 0x01F0)
class UDeployItemAtLocationActivity : public UBaseActivity
{
public:
	TSubclassOf<class ABaseItem>                  DeployItemClass;                                   // 0x01F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                DeployLocation;                                    // 0x01F8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Blueprint_EnterDeployStage();
	void Blueprint_ExitDeployStage();
	void Blueprint_TickDeployStage(float DeltaTime, float Uptime);
	void EnterDeployStage();
	void EnterMoveToStage();
	void ExitDeployStage();
	void ExitMoveToStage();
	void TickDeployStage(float DeltaTime, float Uptime);
	void TickMoveToStage(float DeltaTime, float Uptime);

	bool CanDeploy() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DeployItemAtLocationActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DeployItemAtLocationActivity")
	}
	static class UDeployItemAtLocationActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployItemAtLocationActivity>();
	}
};
DUMPER7_ASSERTS_UDeployItemAtLocationActivity;

// Class ReadyOrNot.DeployGrenadeAtLocationActivity
// 0x0000 (0x0210 - 0x0210)
class UDeployGrenadeAtLocationActivity final : public UDeployItemAtLocationActivity
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DeployGrenadeAtLocationActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DeployGrenadeAtLocationActivity")
	}
	static class UDeployGrenadeAtLocationActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployGrenadeAtLocationActivity>();
	}
};
DUMPER7_ASSERTS_UDeployGrenadeAtLocationActivity;

// Class ReadyOrNot.ActivityData
// 0x0108 (0x0138 - 0x0030)
class UActivityData final : public UDataAsset
{
public:
	EActivity                                     Activity;                                          // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSwatCommandData                       SwatCommandData;                                   // 0x0038(0x0038)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTutorialWidgetData                    WidgetData;                                        // 0x0070(0x0080)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          ForceEnableAllSwatCommands;                        // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ActionsRequired;                                   // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeRequired;                                      // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UActivityData* ActivityData)> OnComplete;                    // 0x0100(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x0110(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_118[0x10];                                     // 0x0118(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotCharacter*>           CharactersKilled;                                  // 0x0128(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	void CompleteActivity();
	void OnAttachmentLightToggled();
	void OnCantedSightToggled(bool bUsingCantedSight);
	void OnCharacterArrested(class AReadyOrNotCharacter* Character, class AReadyOrNotCharacter* ArrestedBy);
	void OnCharacterKilled(class AReadyOrNotCharacter* Character, class AReadyOrNotCharacter* KilledBy);
	void OnCharacterMovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity);
	void OnChemlightThrown(class APlayerCharacter* DelegatePlayerCharacter);
	void OnDoorKicked(class ADoor* Door, class AReadyOrNotCharacter* InstigatorCharacter, bool bSuccess);
	void OnEvidenceCollected(class AActor* Evidence);
	void OnExfiltrateMission();
	void OnInteract(class UInteractableComponent* InteractableComponent);
	void OnItemEquipped(class ABaseItem* Item);
	void OnItemHolstered(class ABaseItem* Item);
	void OnItemUseCompleted(class ABaseItem* Item);
	void OnItemUseStart(class ABaseItem* Item);
	void OnNightVisionGogglesToggled(class AReadyOrNotCharacter* Character, bool bOn);
	void OnSwatCommandIssued(const ESwatCommand SwatCommand, const ETeamType TeamType, class AActor* ContextActor);
	void OnSwatCommandIssuedGamepad(const ESwatCommand SwatCommand, const ETeamType TeamType, class AActor* ContextActor);
	void OnSwatCommandQueued(const struct FQueuedSwatCommand& QueuedSwatCommand, const ETeamType TeamType);
	void OnSwatCommandQueuedGamepad(const struct FQueuedSwatCommand& QueuedSwatCommand, const ETeamType TeamType);
	void OnSwatElementChanged(ETeamType TeamType);
	void OnSwatElementChangedGamepad(ETeamType TeamType);
	void OnTabletOpened();
	void OnTargetHit(class ATrainingTarget* Target);
	void OnTeamViewSet(class AReadyOrNotCharacter* NewViewCharacter);
	void OnWeaponFire(class AReadyOrNotCharacter* Character, class ABaseMagazineWeapon* Weapon, const struct FVector& fireDirection);
	void OnWeaponFireModeChanged(class APlayerCharacter* DelegatePlayerCharacter, EFireMode newFireMode, EFireMode LastFireMode);
	void OnWeaponReload(class APlayerCharacter* DelegatePlayerCharacter);
	void OnWeaponSwitchAmmoType(class APlayerCharacter* DelegatePlayerCharacter);
	void OnWeaponTacticalReload(class APlayerCharacter* DelegatePlayerCharacter);

	bool IsComplete() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActivityData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActivityData")
	}
	static class UActivityData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivityData>();
	}
};
DUMPER7_ASSERTS_UActivityData;

// Class ReadyOrNot.ActivityState
// 0x0070 (0x0098 - 0x0028)
class UActivityState final : public UObject
{
public:
	uint8                                         Pad_28[0x30];                                      // 0x0028(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name_0;                                            // 0x0058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ID;                                                // 0x0068(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Uptime;                                            // 0x006C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActivityFiniteStateMachine*            StateMachineOwner;                                 // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FActivityStateTransition>       StateTransitions;                                  // 0x0078(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	uint8                                         Pad_88[0x10];                                      // 0x0088(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UActivityState* CreateTransition(const struct FActivityStateTransition& InStateTransition);
	class UActivityState* RemoveTransitionByID(const int32 InID);
	class UActivityState* RemoveTransitionByName(const class FString& InName);

	TArray<struct FActivityStateTransition> GetTransitions() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActivityState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActivityState")
	}
	static class UActivityState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivityState>();
	}
};
DUMPER7_ASSERTS_UActivityState;

// Class ReadyOrNot.PostProcessRequirement
// 0x0010 (0x0038 - 0x0028)
class UPostProcessRequirement : public UObject
{
public:
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 DamageCauser;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool EnablePostProcessEffect();
	void Initialize(class APlayerCharacter* InPlayerCharacter, class AActor* InDamageCauser);

	class AActor* GetDamageCauser() const;
	class APlayerCharacter* GetPlayerCharacter() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PostProcessRequirement")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PostProcessRequirement")
	}
	static class UPostProcessRequirement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPostProcessRequirement>();
	}
};
DUMPER7_ASSERTS_UPostProcessRequirement;

// Class ReadyOrNot.ActivityFiniteStateMachine
// 0x0020 (0x0048 - 0x0028)
class UActivityFiniteStateMachine final : public UObject
{
public:
	TArray<class UActivityState*>                 States;                                            // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UActivityState*                         ActiveState;                                       // 0x0038(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bMachineInitialized : 1;                           // 0x0040(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UActivityState* AddState(const class FString& NewStateName, const TArray<struct FActivityStateTransition>& Transitions);
	class UActivityState* GetActiveState();

	class UActivityState* GetStateByID(int32 InStateID) const;
	class UActivityState* GetStateByName(const class FString& InStateName) const;
	bool IsMachineInitialized() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActivityFiniteStateMachine")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActivityFiniteStateMachine")
	}
	static class UActivityFiniteStateMachine* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivityFiniteStateMachine>();
	}
};
DUMPER7_ASSERTS_UActivityFiniteStateMachine;

// Class ReadyOrNot.Projectile
// 0x0050 (0x02E8 - 0x0298)
class AProjectile : public AActor
{
public:
	class UBulletProjectileMovementComponent*     MovementComp;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       CollisionComp;                                     // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A8[0x20];                                     // 0x02A8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             ProjectileHitSound;                                // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D0[0x8];                                      // 0x02D0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AImpactEffect>              ImpactEffectsClass;                                // 0x02D8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRunHitLogicOnLocalOnlyProjectile;                 // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Multicast_SpawnImpactEffects(const struct FHitResult& Hit, TSubclassOf<class AImpactEffect> EffectsClass, float DecalScale, bool bExitImpact, bool bArmorImpact);
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Projectile")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Projectile")
	}
	static class AProjectile* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProjectile>();
	}
};
DUMPER7_ASSERTS_AProjectile;

// Class ReadyOrNot.DamageProjectile
// 0x0030 (0x0318 - 0x02E8)
class ADamageProjectile : public AProjectile
{
public:
	uint8                                         Pad_2E8[0x18];                                     // 0x02E8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Damage;                                            // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UDamageType>                DamageType;                                        // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             HitMarker;                                         // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DamageProjectile")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DamageProjectile")
	}
	static class ADamageProjectile* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADamageProjectile>();
	}
};
DUMPER7_ASSERTS_ADamageProjectile;

// Class ReadyOrNot.ActivityManager
// 0x0070 (0x00B0 - 0x0040)
class UActivityManager final : public UTickableWorldSubsystem
{
public:
	TMulticastInlineDelegate<void(class UBaseActivity* Activity, class ACyberneticController* Controller)> OnStartActivity; // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UBaseActivity*>                  AllActivities;                                     // 0x0050(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class UBaseActivity>, float> ActivityClassGlobalCooldownMap;                    // 0x0060(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UBaseActivity* CreateActivity(class UObject* ContextObject, TSubclassOf<class UBaseActivity> InActivityClass, const class FText& InActivityName, float InActivityStartDelay);
	static bool GiveActivityTo(class UBaseActivity* InActivity, class ACyberneticCharacter* InCharacter, bool bOverrideCurrentActivity, bool bClearActivityList);

	bool IsActivityClassOnCooldown(TSubclassOf<class UBaseActivity> Class_0) const;
	bool IsActivityClassOnCooldown_WithTimeRemaining(TSubclassOf<class UBaseActivity> Class_0, float* TimeRemaining) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActivityManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActivityManager")
	}
	static class UActivityManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivityManager>();
	}
};
DUMPER7_ASSERTS_UActivityManager;

// Class ReadyOrNot.ActivityTriggerVolume
// 0x00B0 (0x0350 - 0x02A0)
class AActivityTriggerVolume : public ATriggerBox
{
public:
	TArray<struct FActivityEvent>                 ActivationEvents;                                  // 0x02A0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FActivityEvent>                 OnEnterEvents;                                     // 0x02B0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UActivityData*>                  Activities;                                        // 0x02C0(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FActivityEvent>                 OnLeaveEvents;                                     // 0x02D0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FActivityEvent>                 CompletionEvents;                                  // 0x02E0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class AActivityTriggerVolume>  NextTransitionVolume;                              // 0x02F0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TransitionDelay;                                   // 0x0318(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bStartActive;                                      // 0x031C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ActivityDelay;                                     // 0x0320(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bTriggerEventsWhileInactive;                       // 0x0324(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bDrawDebug;                                        // 0x0325(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bRequireSingeplayerOrHost;                         // 0x0326(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_327[0x1];                                      // 0x0327(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x0328(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                           ActivateDelayTimerHandle;                          // 0x0330(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AActivityTriggerVolume* TriggerVolume)> OnAllActivitiesComplete; // 0x0340(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void Activate();
	void Deactivate();
	void OnActivityComplete(class UActivityData* Activity);
	void OnPlayerBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnPlayerEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnSpawnedAiKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void Reactivate(float ReactivateDelay);
	void ResetAllProgress();

	bool AllActivitiesComplete() const;
	TArray<class UActivityData*> GetActivities() const;
	bool IsActive() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActivityTriggerVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActivityTriggerVolume")
	}
	static class AActivityTriggerVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AActivityTriggerVolume>();
	}
};
DUMPER7_ASSERTS_AActivityTriggerVolume;

// Class ReadyOrNot.AttachmentSlot_V2
// 0x0048 (0x0338 - 0x02F0)
class UAttachmentSlot_V2 final : public UCommonUserWidget
{
public:
	EWeaponAttachmentType                         AttachmentType;                                    // 0x02F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ItemImage;                                         // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             EmptyImage;                                        // 0x0300(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   ItemName;                                          // 0x0308(0x0018)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                             ItemType;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponAttachment*                      Attachment;                                        // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          Equipped;                                          // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TSubclassOf<class UWeaponAttachment> GetAttachment();
	EWeaponAttachmentType GetAttachmentType();
	bool GetEquipped();
	void OnEquipped();
	void RefreshAttachmentInfo();
	void SetAttachment(class UWeaponAttachment* WeaponAttachment);
	void SetAttachmentType(EWeaponAttachmentType Type);
	void SetEquipped(bool IsEquipped);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AttachmentSlot_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AttachmentSlot_V2")
	}
	static class UAttachmentSlot_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAttachmentSlot_V2>();
	}
};
DUMPER7_ASSERTS_UAttachmentSlot_V2;

// Class ReadyOrNot.ActorSpawnPoint
// 0x0018 (0x02B0 - 0x0298)
class AActorSpawnPoint : public AActor
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0298(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    BillboardComponent;                                // 0x02A0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bHasVisited : 1;                                   // 0x02A8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActorSpawnPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActorSpawnPoint")
	}
	static class AActorSpawnPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<AActorSpawnPoint>();
	}
};
DUMPER7_ASSERTS_AActorSpawnPoint;

// Class ReadyOrNot.PreMissionPlanningMapLevel
// 0x0008 (0x02D0 - 0x02C8)
class UPreMissionPlanningMapLevel : public UUserWidget
{
public:
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool HasDrawPermission(int32 PlayerPlanningNumber);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PreMissionPlanningMapLevel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PreMissionPlanningMapLevel")
	}
	static class UPreMissionPlanningMapLevel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPreMissionPlanningMapLevel>();
	}
};
DUMPER7_ASSERTS_UPreMissionPlanningMapLevel;

// Class ReadyOrNot.AdminGameControls
// 0x0000 (0x02C8 - 0x02C8)
class UAdminGameControls final : public UUserWidget
{
public:
	void GetKickablePlayers(TArray<class APlayerState*>* KickablePlayers);
	bool IsAdmin();
	void KickPlayer(class APlayerState* KickingPlayerState, const class FText& Reason);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AdminGameControls")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AdminGameControls")
	}
	static class UAdminGameControls* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAdminGameControls>();
	}
};
DUMPER7_ASSERTS_UAdminGameControls;

// Class ReadyOrNot.ThrownEvidenceActor
// 0x0058 (0x02F0 - 0x0298)
class AThrownEvidenceActor final : public AActor
{
public:
	uint8                                         Pad_298[0x10];                                     // 0x0298(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          BoxComponent;                                      // 0x02A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABaseItem*                              OwningItem;                                        // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Rep_Location;                                      // 0x02B8(0x0018)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rep_Rotation;                                      // 0x02D0(0x0018)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnBoxHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ThrownEvidenceActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ThrownEvidenceActor")
	}
	static class AThrownEvidenceActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AThrownEvidenceActor>();
	}
};
DUMPER7_ASSERTS_AThrownEvidenceActor;

// Class ReadyOrNot.BaseItem
// 0x09E8 (0x0C80 - 0x0298)
#pragma pack(push, 0x1)
class alignas(0x10) ABaseItem : public AActor
{
public:
	uint8                                         Pad_298[0x40];                                     // 0x0298(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ItemName;                                          // 0x02D8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ItemIcon;                                          // 0x02F0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ItemDescription;                                   // 0x0318(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	EItemClass                                    ItemClass;                                         // 0x0330(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemType                                     ItemType;                                          // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_332[0x2];                                      // 0x0332(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        CategoryFlags;                                     // 0x0334(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LoadoutPriority;                                   // 0x0338(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowInLoadout;                                    // 0x033C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsEmptyItem;                                      // 0x033D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33E[0x2];                                      // 0x033E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CustomizationTag;                                  // 0x0340(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemsPerSlot;                                      // 0x0348(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LookupTableIdx;                                    // 0x034C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ItemWeight;                                        // 0x0354(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MovementSpeedMultiplier;                           // 0x0358(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HolsterPlayRate;                                   // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DrawPlayRate;                                      // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanOffset;                                        // 0x0364(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisallowKicking;                                  // 0x0368(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFreelookEnabled;                                  // 0x0369(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLowReady;                                      // 0x036A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36B[0x1];                                      // 0x036B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PushbackRange;                                     // 0x036C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LowReadyRange;                                     // 0x0370(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LowReadyRangeSightsModifier;                       // 0x0374(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableTickWhenNotEquipped;                       // 0x0378(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableKinematicPhysicsWhenEquipped;              // 0x0379(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37A[0x6];                                      // 0x037A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EGameVersionRestriction>               LockedToDLC;                                       // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FItemVisualData                        Visuals;                                           // 0x0390(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UTexture2D*                             HudOutline;                                        // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraBobScaleH;                                   // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraBobScaleV;                                   // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraBobSpeedScaleH;                              // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraBobSpeedScaleV;                              // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraBobAmplitudeBaseSpeed;                       // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraBobIntensitySprintScale;                     // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraBobAmplitudeWalkScale;                       // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraBobAmplitudeSprintScale;                     // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponBobScaleH;                                   // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponBobScaleV;                                   // 0x03EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponBobScaleInjured;                             // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponBobSpeedScaleH;                              // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponBobSpeedScaleV;                              // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponBobSpeedScaleInjured;                        // 0x03FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponBobCrouchModifier;                           // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponBobADSModifier;                              // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponBobRotPitchScale;                            // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponBobRotRollScale;                             // 0x040C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponBobRotPitchSpeed;                            // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponBobRotRollSpeed;                             // 0x0414(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponBobRotCrouchModifier;                        // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponBobRotADSModifier;                           // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        SceneComp;                                         // 0x0420(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 ItemMesh;                                          // 0x0428(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                          InteractionBox;                                    // 0x0430(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODAudioComponent*                    FMODAudioComp;                                     // 0x0438(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractableComponent*                 InteractableComponent;                             // 0x0440(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScoringComponent*                      ScoringComponent;                                  // 0x0448(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEvidenceComponent*                     EvidenceComponent;                                 // 0x0450(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_458[0x18];                                     // 0x0458(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             PhysicsImpact;                                     // 0x0470(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_478[0x10];                                     // 0x0478(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AThrownItem>                ThrownItemClass;                                   // 0x0488(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_490[0x74];                                     // 0x0490(0x0074)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bAttachOnDrawComplete;                             // 0x0504(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_505[0x3];                                      // 0x0505(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          Rep_CustomItemMeshFromAttachment;                  // 0x0508(0x0008)(Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCustomizationSkin>      DefaultSkin;                                       // 0x0510(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomizationSkin*                     Skin;                                              // 0x0538(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         SkinActors;                                        // 0x0540(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_550[0x1];                                      // 0x0550(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bInInventory;                                      // 0x0551(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldTickAnimBPWhenNotEquipped;                  // 0x0552(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_553[0x5];                                      // 0x0553(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Server_ReplicatedPhysicsLocation;                  // 0x0558(0x0018)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetWorldScale;                                  // 0x0570(0x0018)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetWorldScaleInterpSpeed;                       // 0x0588(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58C[0x1];                                      // 0x058C(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsClearable;                                      // 0x058D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasBeenCleared;                                   // 0x058E(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58F[0x9];                                      // 0x058F(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UDamageType>>        BlockAnyDamageFrom;                                // 0x0598(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UDamageType>>        BlockDirectHitsFrom;                               // 0x05A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bTaserDamageBlocked;                               // 0x05B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5B9[0x7];                                      // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<TSubclassOf<class UDamageType>, float>   MultiplyStunDamageFrom;                            // 0x05C0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class UDamageType>, struct FWeightStunMultiplier> MultiplyStunDamageByWeight;   // 0x0610(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>       Dynamic1PMaterialInstances;                        // 0x0660(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_670[0x8];                                      // 0x0670(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       DynamicWeaponFovMats;                              // 0x0678(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class USkinnedAsset*, struct FMeshFOVMaterials> SkeletalMeshToFOVMats;                      // 0x0688(0x0050)(NativeAccessSpecifierPublic)
	TMap<class UStaticMesh*, struct FMeshFOVMaterials> StaticMeshToFOVMats;                          // 0x06D8(0x0050)(NativeAccessSpecifierPublic)
	uint8                                         Pad_728[0x8];                                      // 0x0728(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       FP_SkinMaterials;                                  // 0x0730(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>       TP_SkinMaterials;                                  // 0x0740(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 MasterPoseRep;                                     // 0x0750(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowStaticMeshOnBody;                             // 0x0758(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_759[0x3];                                      // 0x0759(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   WeaponWheelCategoryName;                           // 0x075C(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_764[0x4];                                      // 0x0764(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ABaseItem* Item)> OnItemUseCompleted;                        // 0x0768(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_778[0x18];                                     // 0x0778(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bCanReloadSameMagazine;                            // 0x0790(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_791[0x7];                                      // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           LastReloadAnim_3P;                                 // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanMultiplier;                               // 0x07A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FreeLeanMultiplier;                                // 0x07A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWeaponType                                   WeaponType;                                        // 0x07A8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableMeshspaceMovement;                         // 0x07A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7AA[0x6];                                      // 0x07AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             MeshspaceTransform_Default;                        // 0x07B0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             MeshspaceTransform_Aiming;                         // 0x0810(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             MeshspaceTransform_Back;                           // 0x0870(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InertiaDragAimRotation;                            // 0x08D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InertiaDragAimLocation;                            // 0x08D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InertiaDragStrafeRotation;                         // 0x08D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InertiaDragStrafeLocation;                         // 0x08DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MovementSpeedScale;                                // 0x08E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               MovementSpeedRotationScalePitchYawRoll;            // 0x08F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         MeshSpaceAimInterp;                                // 0x0910(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_914[0xC];                                      // 0x0914(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             MeshspaceTransform_OnDraw;                         // 0x0920(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OnDrawMeshspaceInterp;                             // 0x0980(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_984[0xC];                                      // 0x0984(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             MeshspaceTransform_OnHolster;                      // 0x0990(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OnHolsterMeshspaceInterp;                          // 0x09F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BodySocket;                                        // 0x09F4(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   HandsSocket;                                       // 0x09FC(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AnimationIndex1P;                                  // 0x0A04(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A08[0x4];                                      // 0x0A08(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AnimationIndex3P;                                  // 0x0A0C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A10[0x4];                                      // 0x0A10(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bDeployable;                                       // 0x0A14(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldEquipToHands;                               // 0x0A15(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A16[0x2];                                      // 0x0A16(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EItemCategory>                         ItemCategories;                                    // 0x0A18(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_A28[0x10];                                     // 0x0A28(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ABaseItem* Item)> OnItemDrawComplete;                        // 0x0A38(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_A48[0x8];                                      // 0x0A48(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ULegacyCameraShake>         Reload_CameraShake;                                // 0x0A50(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         ReloadEmpty_CameraShake;                           // 0x0A58(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         DrawCameraShake;                                   // 0x0A60(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         HolsterCameraShake;                                // 0x0A68(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotCharacter*                   PreviousOwner;                                     // 0x0A70(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A78[0x38];                                     // 0x0A78(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    LastFPAnimInstanceClass;                           // 0x0AB0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AB8[0x38];                                     // 0x0AB8(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    LastTPAnimInstanceClass;                           // 0x0AF0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDropping;                                         // 0x0AF8(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AF9[0xF];                                      // 0x0AF9(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bDisableAnimInstanceWhenNotEquipped;               // 0x0B08(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B09[0xF];                                      // 0x0B09(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UReadyOrNotWeaponAnimData> AnimationData;                                   // 0x0B18(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Net, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotWeaponAnimData*              LoadedAnimationData;                               // 0x0B40(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UReadyOrNotWeaponAnimData> DefaultAnimationData;                            // 0x0B48(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotWeaponAnimData*              LoadedDefaultAnimationData;                        // 0x0B70(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UReadyOrNotWeaponAnimData> GripAnimationData;                               // 0x0B78(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotWeaponAnimData*              LoadedGripAnimationData;                           // 0x0BA0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UReadyOrNotWeaponAnimData> ShieldRaisedAnimationData;                       // 0x0BA8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotWeaponAnimData*              LoadedShieldRaisedAnimationData;                   // 0x0BD0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UReadyOrNotWeaponAnimData> ShieldLoweredAnimationData;                      // 0x0BD8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotWeaponAnimData*              LoadedShieldLoweredAnimationData;                  // 0x0C00(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FreeAimLimit;                                      // 0x0C08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FreeAimLimitADS;                                   // 0x0C0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LazySpringStrength;                                // 0x0C10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LazySpringStrengthADS;                             // 0x0C14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FreeAimInterpSpeed;                                // 0x0C18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FreeAimInterpADSModifier;                          // 0x0C1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FreeAimInterpHipModifier;                          // 0x0C20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FreeAimSlowMoveModifier;                           // 0x0C24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FreeAimSlowMoveTolerance;                          // 0x0C28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C2C[0x4];                                      // 0x0C2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ULegacyCameraShake>         MeleeUserCameraShake;                              // 0x0C30(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bADSCountsAsAbuse;                                 // 0x0C38(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C39[0x3];                                      // 0x0C39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HesitationBoostMultiplier;                         // 0x0C3C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAimingDownSights;                               // 0x0C40(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C41[0x3];                                      // 0x0C41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LowReadyPitchThreshold;                            // 0x0C44(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponSound*                           SoundData;                                         // 0x0C48(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideBreathingEvent;                           // 0x0C50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C51[0x7];                                      // 0x0C51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             BreathingAudioOverride;                            // 0x0C58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEasyPickup;                                       // 0x0C60(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNoPickup;                                         // 0x0C61(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bScriptedFPHidden;                                 // 0x0C62(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMotionBlockType                              ActiveMotionBlock;                                 // 0x0C63(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsOneHandedItem;                                  // 0x0C64(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C65[0x3];                                      // 0x0C65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FP_ADS_Motion_Weight;                              // 0x0C68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C6C[0xC];                                      // 0x0C6C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AttachStatic();
	void BP_AttachmentRep();
	void CancelCurrentReloadAction(bool bCancel);
	bool CanShowActionSlot1(class AReadyOrNotCharacter* PC);
	void Client_OnItemPickedUp(class AActor* NewOwner, bool bEquipped);
	void Client_PlayFPMontage(class UAnimMontage* NewMontage, float PlayRate);
	void Client_PlayItemAnimation(const struct FWeaponAnim& InWeaponAnim, bool bRestartIfAlreadyPlaying, bool bOnlyLocal, bool bOnlyTP);
	void Client_SetFPModelVisibility(bool bVisibility);
	void Client_StopItemAnimation(const struct FWeaponAnim& InWeaponAnim, bool bOnlyTP);
	void ClientPlayDraw(bool bDrawFirst);
	void DetachStatic();
	void DisableOrEnableAnimation();
	void DisableOutline();
	void DrawOutline();
	void EndStunWhileEquipped();
	class UAnimMontage* GetCurrentFPMontage();
	class UAnimMontage* GetCurrentTPMontage();
	class FName GetEquipSocket();
	float GetLowReadyRange();
	float GetWeight();
	void InterpToTargetScale(const struct FVector& NewScale, float InterpSpeed);
	bool IsLocallyControlled();
	bool IsMontagePlaying(class UAnimMontage* Montage, bool bIncludeFP, bool bIncludeTP);
	bool IsPlayingStunnedAnimation();
	bool IsPlayingStunnedEndAnimation();
	void LastStunTick(EStunType StunType);
	void MarkAsEvidence(bool bMarkAsEvidence);
	void Multicast_PlayTPMontage(class UAnimMontage* NewMontage, float PlayRate);
	void NextFireMode();
	void OnAddedToInventory(class AReadyOrNotCharacter* NewOwner);
	void OnEvidenceStateChanged(EEvidenceActorState NewState);
	void OnItemEndUse();
	void OnItemPrimaryUse();
	void OnItemPrimaryUseEnd();
	void OnItemUseComplete();
	void OnItemUsed();
	void OnMeshComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnOwnerPossessed();
	void OnPhysicsImpact(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnRep_AttachmentRep();
	void OnRep_IsDropping();
	void OnRep_MasterPoseComponent();
	void OnRep_Skin();
	void OnThrownFromInventory(class AReadyOrNotCharacter* Thrower, bool bMarkAsEvidence);
	void PlayButtonPushAnimation();
	void PlayDoorPushAnimation();
	bool PlayDraw(bool bDrawFirst);
	void PlayFMODAudio(class UFMODEvent* Event);
	void PlayFPMontage(class UAnimMontage* NewMontage, float PlayRate);
	void PlayTPMontage(class UAnimMontage* NewMontage, float PlayRate);
	void PlayWeaponCleaning();
	void Server_ApplyPointDamage(class AActor* DamagedActor, float BaseDamage, const struct FVector& HitFromDirection, const struct FHitResult& HitInfo, class AController* EventInstigator, class AActor* DamageCauser, TSubclassOf<class UDamageType> DamageTypeClass);
	void Server_PlayTPMontage(class UAnimMontage* NewMontage, float PlayRate);
	void Server_SetMasterPoseComponent(class USkeletalMeshComponent* Mesh);
	void SetupBaseEvents();
	bool ShouldHideInPictureInPictureScopes();
	void SpawnThrownItemAtTransform(const struct FTransform& Transform, const struct FVector& ThrowDirection, const struct FVector& ThrowLocation);
	void StopFPMontage(class UAnimMontage* AnimMontage);
	void StopTPMontage(class UAnimMontage* AnimMontage);
	void StunnedWhileEquipped();
	void StunTick(EStunType StunType);

	bool CanEquip(class AReadyOrNotCharacter* ToCharacter) const;
	bool ContainsItemCategory(EItemCategory TestCategory) const;
	class USkeletalMeshComponent* GetItemMesh() const;
	bool HasButtonPushAnimation() const;
	bool HasDoorPushAnimation() const;
	bool IsBlockingAnimationPlaying(const TArray<EBlockingAnimationExclusion>& Exclusions) const;
	bool IsButtonPushAnimationPlaying() const;
	bool IsCollidesWhileNotEquipped() const;
	bool IsCurrentlyReloading() const;
	bool IsDepleted() const;
	bool IsDoorPushAnimationPlaying() const;
	bool IsEquipped() const;
	bool IsPlayingDraw() const;
	bool IsPlayingHolster() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseItem")
	}
	static class ABaseItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseItem>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_ABaseItem;

// Class ReadyOrNot.C2Explosive
// 0x0110 (0x0D90 - 0x0C80)
class AC2Explosive : public ABaseItem
{
public:
	bool                                          bIsValidPlacement;                                 // 0x0C78(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C79[0x7];                                      // 0x0C79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             LastGoodPlacement;                                 // 0x0C80(0x00E8)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class APlacedC2Explosive*                     LastPlacedC2Explosive;                             // 0x0D68(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxPlacementDistance;                              // 0x0D70(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D74[0x4];                                      // 0x0D74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CurrentActorPlacement;                             // 0x0D78(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class APlacedC2Explosive>         PlacedC2Class;                                     // 0x0D80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D88[0x8];                                      // 0x0D88(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Client_C2PlacementFinished();
	void Multicast_StartPlaceC2Explosive();
	void OnRep_LastPlacedC2Explosive();
	void Server_FinishC2Placement();
	void Server_StartC2Placement(class AActor* Actor);

	void EquipDetonator(bool bFromExplosives) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("C2Explosive")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"C2Explosive")
	}
	static class AC2Explosive* GetDefaultObj()
	{
		return GetDefaultObjImpl<AC2Explosive>();
	}
};
DUMPER7_ASSERTS_AC2Explosive;

// Class ReadyOrNot.AIAction
// 0x0030 (0x0058 - 0x0028)
class UAIAction : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Tags;                                              // 0x0030(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class ACyberneticController*                  OwningController;                                  // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_48[0x4];                                       // 0x0048(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastMoveRequestPathID;                             // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         LastMoveRequestMoveID;                             // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAbortActionOnPathingError;                        // 0x0054(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AbortAction();
	void BeginAction_Blueprint();
	void EndAction_Blueprint();
	void InitAction_Blueprint(class ACyberneticController* Controller);
	void OnCreate_Blueprint(class ACyberneticController* Controller);
	void OnFailedToConsider_Blueprint();
	void OnMoveComplete(class AAIController* Controller, int32 RequestID);
	void OnMoveComplete_Blueprint(class AAIController* Controller, int32 RequestID);
	void OnPathFound(int32 PathId, ERonNavigationQueryResult Result);
	void OnPathFound_Blueprint(int32 PathId, ERonNavigationQueryResult Result);
	void OnSucceededToConsider_Blueprint();
	void OnTakenDamage_Blueprint(float Damage, class AReadyOrNotCharacter* Instigator);
	void RequestMove(const struct FVector& Location, float AcceptanceRadius);
	bool ShouldForcePerformAction();
	void Tick_Blueprint(float DeltaTime);

	class FString GatherDebugInfo() const;
	struct FAIActionData GetActionData() const;
	int32 GetActionRunCount() const;
	class ACyberneticCharacter* GetCharacter() const;
	class FName GetMoveStyleOverride() const;
	bool HasTag(const class FName Tag) const;
	bool ShouldPerformAction() const;
	bool WantsAbort() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AIAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AIAction")
	}
	static class UAIAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIAction>();
	}
};
DUMPER7_ASSERTS_UAIAction;

// Class ReadyOrNot.AIActionConsideration
// 0x00B0 (0x00D8 - 0x0028)
class UAIActionConsideration : public UObject
{
public:
	uint8                                         bManualCurveEdit : 1;                              // 0x0028(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bCustomCurveFunction : 1;                          // 0x0028(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	EEasingFunc                                   CurveType;                                         // 0x0029(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bInverseX : 1;                                     // 0x002A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bInverseY : 1;                                     // 0x002A(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bClamp : 1;                                        // 0x002A(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     Curve;                                             // 0x0030(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                         bCustomRange : 1;                                  // 0x00B8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinRange;                                          // 0x00BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxRange;                                          // 0x00C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OffsetX;                                           // 0x00C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OffsetY;                                           // 0x00C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Exponent;                                          // 0x00CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         SubStep;                                           // 0x00D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ERichCurveInterpMode                          InterpMode;                                        // 0x00D4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ERichCurveTangentMode                         TangentMode;                                       // 0x00D5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float CalculateCurve(float X) const;
	float EvaluateResponseCurve(float Score_0) const;
	float Score(const struct FAIActionDecisionContext& Context, bool* bSuccess) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AIActionConsideration")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AIActionConsideration")
	}
	static class UAIActionConsideration* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIActionConsideration>();
	}
};
DUMPER7_ASSERTS_UAIActionConsideration;

// Class ReadyOrNot.TargetingComponent
// 0x0580 (0x0620 - 0x00A0)
class UTargetingComponent final : public UActorComponent
{
public:
	struct FVector                                ThreatTrackingIgnoredDirection;                    // 0x00A0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ADoor*>                          AllowedTrackingDoors;                              // 0x00B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	class UAnimMontage*                           MontageFocalAnim;                                  // 0x00C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MontageFocalPoint;                                 // 0x00D0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CustomFocusLocation;                               // 0x00E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 CustomFocusActor;                                  // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AInterestOverrideZone*                  CurrentInterestZone;                               // 0x0108(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HeadTrackingLocation;                              // 0x0110(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Threat;                                            // 0x0128(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Tension;                                           // 0x012C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AThreatAwarenessActor*                  ThreatLookPoint;                                   // 0x0130(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExposedToNoise                        LastHeardAggressiveNoise;                          // 0x0140(0x0040)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	TMap<class FName, struct FExposedToNoise>     HeardNoises;                                       // 0x0180(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)
	struct FExposedToNoise                        LastHeardNoiseStimulus;                            // 0x01D0(0x0040)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_210[0x18];                                     // 0x0210(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AReadyOrNotCharacter*, float>      CharactersSeen;                                    // 0x0228(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	ETargetingCompTracking                        TrackingType;                                      // 0x0278(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotCharacter*>           KnownFriendlies;                                   // 0x0280(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotCharacter*>           KnownNeutrals;                                     // 0x0290(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotCharacter*>           KnownEnemies;                                      // 0x02A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FVector                                LastKnownTargetPosition;                           // 0x02B0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LastKnownTargetPositionInLOS;                      // 0x02C8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LastSeenKnownTargetFrom;                           // 0x02E0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F8[0x8];                                      // 0x02F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSinceLastSeenTarget;                           // 0x0300(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeSinceLastSeenEnemy;                            // 0x0304(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeSinceLastSeenNeutral;                          // 0x0308(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeSinceLastSeenFriendly;                         // 0x030C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PreviousTimeNotSeenTarget;                         // 0x0310(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PreviousTimeNotSeenEnemy;                          // 0x0314(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PreviousTimeNotSeenFriendly;                       // 0x0318(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PreviousTimeNotSeenNeutral;                        // 0x031C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeTrackingTarget;                                // 0x0320(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeTrackingEnemy;                                 // 0x0324(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeTrackingNeutral;                               // 0x0328(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeTrackingFriendly;                              // 0x032C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeSinceLastFriendlyDeath;                        // 0x0330(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeSinceLastFriendlyTookDamage;                   // 0x0334(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeSinceLastFriendlyStunned;                      // 0x0338(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeSinceLastEnemyDeath;                           // 0x033C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeSinceLastEnemyTookDamage;                      // 0x0340(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeSinceLastEnemyStunned;                         // 0x0344(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         EngagementTimeUntilReachedLastBoneZone;            // 0x0348(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BoneRetargetingRate;                               // 0x034C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeSinceLastBoneRetarget;                         // 0x0350(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LastKnownTrackingTime;                             // 0x0354(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AReadyOrNotCharacter*>           AITrackingMe;                                      // 0x0358(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         bHasLOSToTarget : 1;                               // 0x0368(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bCanSeeTarget : 1;                                 // 0x0368(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bHasLOSToLastTarget : 1;                           // 0x0368(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bCanSeeLastTarget : 1;                             // 0x0368(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bHasLOSToLastKnownTargetPosition : 1;              // 0x0368(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         CurrentBoneTargetZoneIndex;                        // 0x0369(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         PreviousBoneTargetZoneIndex;                       // 0x036A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_36B[0x1];                                      // 0x036B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TargetedBone;                                      // 0x036C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           BonesToTarget;                                     // 0x0378(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_388[0x10];                                     // 0x0388(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseGrenade*                           SmokeGrenadeBetweenTarget;                         // 0x0398(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ExposureFromEnemy;                                 // 0x03A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         EnemyExposureFromUs;                               // 0x03A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RequiredTimeTrackingTarget;                        // 0x03A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeTrackingHead;                                  // 0x03AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotCharacter*                   TrackedTarget;                                     // 0x03B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotCharacter*                   LastTrackedTarget;                                 // 0x03B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotCharacter*                   LastKnownEnemy;                                    // 0x03C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                LastMoveVectorFocalPoint;                          // 0x03C8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADoor*                                  LastTrackedDoor;                                   // 0x03E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeSinceLastHeardNoiseStimulus;                   // 0x03E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LatestNoiseLocation;                               // 0x03F0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AThreatAwarenessActor*                  LastThreatAwarenessActor;                          // 0x0408(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSearchingPathAwareness;                           // 0x0410(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSinceGotLastThreatAwarenessActor;              // 0x0414(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeUntilFinishedCheckingThreat;                   // 0x0418(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FIntVector                             LastLookAtPoint;                                   // 0x041C(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<EPathedAwareness, struct FPathAwarenessInfo> LatestPathedAwareness;                         // 0x0428(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<EPathedAwareness, struct FVector>        LastSearchedPathedAwareness;                       // 0x0478(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<EPathedAwareness, float>                 PathAwarenessSearchTimeout;                        // 0x04C8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<uint32, EPathedAwareness>                PathedAwarenessQueryType;                          // 0x0518(0x0050)(Edit, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class AReadyOrNotCharacter*>           AllKnownCharacters;                                // 0x0568(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_578[0x8];                                      // 0x0578(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AThreatAwarenessActor*                  NearestThreat;                                     // 0x0580(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AThreatAwarenessActor*                  NearestExtremeThreat;                              // 0x0588(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_590[0x90];                                     // 0x0590(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddCharacterToSeenMap(class AReadyOrNotCharacter* InCharacter);
	void AddKnownEnemy(class AReadyOrNotCharacter* Enemy, bool bForce);
	void AddKnownFriendly(class AReadyOrNotCharacter* Friendly);
	void AddKnownNeutral(class AReadyOrNotCharacter* Neutral);
	void ConfigureBoneTargetZones();
	struct FExposedToNoise GetLastNoiseByTag(class FName Tag);
	TArray<class FName> GetLastNoisesTags();
	int32 GetVisibleKnownFriendlies();
	bool IsLookingAtFocalPoint(float Tolerance);
	bool IsTrackedByKnownFriendly(class AReadyOrNotCharacter* Target);
	void OnTrackedTargetExitedSurrender(class ACyberneticCharacter* Character, ESurrenderExitType ExitType);
	void OnTrackedTargetIncapacitated(class AReadyOrNotCharacter* IncapacitatedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
	void OnTrackedTargetKilled(class AReadyOrNotCharacter* Instigator, class AReadyOrNotCharacter* KilledCharacter);
	void OnTrackedTargetStartedReloading(class APlayerCharacter* Character);
	void SetLastTrackedTarget(class AReadyOrNotCharacter* Target);

	bool AnyAITrackingMe() const;
	bool CanActorBeSeen(class AActor* InActor) const;
	bool CanCharacterBeSeen(class AReadyOrNotCharacter* InCharacter) const;
	bool CanSeeLastTrackedTarget() const;
	bool CanSeeTrackedTarget() const;
	int32 GetKnownFriendlyCount() const;
	struct FVector GetLastHeardAggressiveNoiseLocation() const;
	struct FVector GetLastHeardNoiseLocation() const;
	class AReadyOrNotCharacter* GetLastKnownEnemy() const;
	struct FVector GetLastKnownEnemyPosition() const;
	float GetLastKnownTrackingTimeConfig() const;
	struct FVector GetLastSeenKnownEnemyFrom() const;
	class AReadyOrNotCharacter* GetLastTrackedTarget() const;
	class AThreatAwarenessActor* GetNearestExtremeThreat() const;
	class AThreatAwarenessActor* GetNearestThreat() const;
	float GetRequiredTrackingTime() const;
	class FName GetTargetedBone() const;
	float GetTimeSinceLastSeenEnemy() const;
	float GetTimeSinceLastSeenFriendly() const;
	float GetTimeSinceLastSeenNeutral() const;
	float GetTimeSinceLastSeenTarget() const;
	float GetTimeTrackingHead() const;
	float GetTimeTrackingTarget() const;
	class AReadyOrNotCharacter* GetTrackedTarget() const;
	ETargetingCompTracking GetTrackingType() const;
	bool HasLineOfSightToLastKnownTargetPosition() const;
	bool HasLineOfSightToLastTrackedTarget() const;
	bool HasLineOfSightToTrackedTarget() const;
	bool HasSeenCharacterFor(class AReadyOrNotCharacter* InCharacter, float Seconds) const;
	bool HasTargetOfType(const TArray<ETargetType>& TargetType, bool bAllowLastTrackedTarget) const;
	bool IsTrackedInKnownEnemies(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool IsTrackedInKnownFriendlies(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool IsTrackedInKnownNeutrals(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool IsTrackingMontagePosition() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetingComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetingComponent")
	}
	static class UTargetingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetingComponent>();
	}
};
DUMPER7_ASSERTS_UTargetingComponent;

// Class ReadyOrNot.BulletDamageType
// 0x0030 (0x0070 - 0x0040)
class UBulletDamageType : public UDamageType
{
public:
	TSubclassOf<class UUserWidget>                HitVisuals;                                        // 0x0040(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         HitShake;                                          // 0x0048(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bArmorPiercing;                                    // 0x0050(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNonLethal;                                        // 0x0051(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AggressionChangeInAI;                              // 0x0054(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeadDamageMultiplier;                              // 0x0058(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpperBodyDamageMultiplier;                         // 0x005C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LowerBodyDamageMultiplier;                         // 0x0060(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ArmDamageMultiplier;                               // 0x0064(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LegDamageMultiplier;                               // 0x0068(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootDamageMultiplier;                              // 0x006C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BulletDamageType")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BulletDamageType")
	}
	static class UBulletDamageType* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBulletDamageType>();
	}
};
DUMPER7_ASSERTS_UBulletDamageType;

// Class ReadyOrNot.ACNumberOfNearbyAI
// 0x0010 (0x00E8 - 0x00D8)
class UACNumberOfNearbyAI : public UAIActionConsideration
{
public:
	ETeamType                                     TeamType;                                          // 0x00D8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SearchRange;                                       // 0x00DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bMustBeVisible;                                    // 0x00E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bMustBeActive;                                     // 0x00E1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ACNumberOfNearbyAI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ACNumberOfNearbyAI")
	}
	static class UACNumberOfNearbyAI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UACNumberOfNearbyAI>();
	}
};
DUMPER7_ASSERTS_UACNumberOfNearbyAI;

// Class ReadyOrNot.ProgressionComponent
// 0x0010 (0x00B0 - 0x00A0)
class UProgressionComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x10];                                      // 0x00A0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddExperience(float XP);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ProgressionComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ProgressionComponent")
	}
	static class UProgressionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProgressionComponent>();
	}
};
DUMPER7_ASSERTS_UProgressionComponent;

// Class ReadyOrNot.AC_Health
// 0x0000 (0x00D8 - 0x00D8)
class UAC_Health : public UAIActionConsideration
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AC_Health")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AC_Health")
	}
	static class UAC_Health* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_Health>();
	}
};
DUMPER7_ASSERTS_UAC_Health;

// Class ReadyOrNot.AspectRatioConstraintBox
// 0x0018 (0x01B8 - 0x01A0)
class UAspectRatioConstraintBox final : public UContentWidget
{
public:
	bool                                          bUseFixedConstraint;                               // 0x01A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FixedAspectRatio;                                  // 0x01A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A8[0x10];                                     // 0x01A8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisableConstraint();
	void EnableConstraint();
	void OnSettingsUpdated();
	void SetFixedAspectRatio(float NewAspectRatio);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AspectRatioConstraintBox")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AspectRatioConstraintBox")
	}
	static class UAspectRatioConstraintBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAspectRatioConstraintBox>();
	}
};
DUMPER7_ASSERTS_UAspectRatioConstraintBox;

// Class ReadyOrNot.AC_TargetHealth
// 0x0000 (0x00D8 - 0x00D8)
class UAC_TargetHealth : public UAIActionConsideration
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AC_TargetHealth")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AC_TargetHealth")
	}
	static class UAC_TargetHealth* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_TargetHealth>();
	}
};
DUMPER7_ASSERTS_UAC_TargetHealth;

// Class ReadyOrNot.AC_IncapacitationHealth
// 0x0000 (0x00D8 - 0x00D8)
class UAC_IncapacitationHealth : public UAIActionConsideration
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AC_IncapacitationHealth")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AC_IncapacitationHealth")
	}
	static class UAC_IncapacitationHealth* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_IncapacitationHealth>();
	}
};
DUMPER7_ASSERTS_UAC_IncapacitationHealth;

// Class ReadyOrNot.WeaponTriggerPressed
// 0x0000 (0x0050 - 0x0050)
class UWeaponTriggerPressed final : public UInputTrigger
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponTriggerPressed")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponTriggerPressed")
	}
	static class UWeaponTriggerPressed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponTriggerPressed>();
	}
};
DUMPER7_ASSERTS_UWeaponTriggerPressed;

// Class ReadyOrNot.BaseArmour
// 0x0070 (0x0CF0 - 0x0C80)
#pragma pack(push, 0x1)
class alignas(0x10) ABaseArmour : public ABaseItem
{
public:
	bool                                          bIsHeavy;                                          // 0x0C78(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C79[0x3];                                      // 0x0C79(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScaleLensFlare;                                    // 0x0C7C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USkeletalMesh*>                  Variations;                                        // 0x0C80(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class UParticleSystem*                        ArmourHitParticle;                                 // 0x0C90(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             ArmourHitSound;                                    // 0x0C98(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             ArmourHitSoundFirstPerson;                         // 0x0CA0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             PaperdollTexture;                                  // 0x0CA8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             PaperdollTexture_Crouch;                           // 0x0CB0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             PaperdollTexture_Carry;                            // 0x0CB8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             PaperdollTexture_Carry_Crouch;                     // 0x0CC0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         InterceptShakeFront;                               // 0x0CC8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         InterceptShakeBack;                                // 0x0CD0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         InterceptShakeLeft;                                // 0x0CD8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         InterceptShakeRight;                               // 0x0CE0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	float GetDurabilityPercentage() const;
	bool HasRemainingProtection() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseArmour")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseArmour")
	}
	static class ABaseArmour* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseArmour>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_ABaseArmour;

// Class ReadyOrNot.AC_Ammo
// 0x0000 (0x00D8 - 0x00D8)
class UAC_Ammo : public UAIActionConsideration
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AC_Ammo")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AC_Ammo")
	}
	static class UAC_Ammo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_Ammo>();
	}
};
DUMPER7_ASSERTS_UAC_Ammo;

// Class ReadyOrNot.PropagationTestactor
// 0x0028 (0x02C0 - 0x0298)
class APropagationTestactor final : public AActor
{
public:
	float                                         TickInterval;                                      // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Event;                                             // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebugMode;                                        // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBillboardComponent*                    BillBoard;                                         // 0x02B0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOcclusionType                                OcclusionType;                                     // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPropagationType                              PropagationType;                                   // 0x02B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PropagationTestactor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PropagationTestactor")
	}
	static class APropagationTestactor* GetDefaultObj()
	{
		return GetDefaultObjImpl<APropagationTestactor>();
	}
};
DUMPER7_ASSERTS_APropagationTestactor;

// Class ReadyOrNot.AC_Armor
// 0x0000 (0x00D8 - 0x00D8)
class UAC_Armor final : public UAIActionConsideration
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AC_Armor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AC_Armor")
	}
	static class UAC_Armor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_Armor>();
	}
};
DUMPER7_ASSERTS_UAC_Armor;

// Class ReadyOrNot.AC_Morale
// 0x0000 (0x00D8 - 0x00D8)
class UAC_Morale : public UAIActionConsideration
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AC_Morale")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AC_Morale")
	}
	static class UAC_Morale* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_Morale>();
	}
};
DUMPER7_ASSERTS_UAC_Morale;

// Class ReadyOrNot.AC_Stress
// 0x0000 (0x00D8 - 0x00D8)
class UAC_Stress : public UAIActionConsideration
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AC_Stress")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AC_Stress")
	}
	static class UAC_Stress* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_Stress>();
	}
};
DUMPER7_ASSERTS_UAC_Stress;

// Class ReadyOrNot.Objective
// 0x0088 (0x0320 - 0x0298)
class AObjective : public AInfo
{
public:
	class UScoringComponent*                      ScoringComponent;                                  // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AObjective* Objective)> OnObjectiveUpdated;                  // 0x02A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFMODEvent*                             ObjectiveCompleteAudio;                            // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             ObjectiveFailedAudio;                              // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ObjectiveName;                                     // 0x02C0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   ObjectiveDescription;                              // 0x02D8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	ECOOPMode                                     LockedToMode;                                      // 0x02F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFailureEndsMission;                               // 0x02F1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHiddenObjective;                                  // 0x02F2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowCompletionWhileHidden;                       // 0x02F3(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHiddenObjectiveUnlockMethod                  UnlockMethod;                                      // 0x02F4(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AReportableActor>           UnlockingReportableClass;                          // 0x02F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AObjective>                 UnlockingObjectiveClass;                           // 0x0300(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReportableActor*                       UnlockingReportable;                               // 0x0308(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AObjective*                             UnlockingObjective;                                // 0x0310(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EObjectiveStatus                              ObjectiveStatus;                                   // 0x0318(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void CompleteObjectivesOfClass(const class UObject* WorldContextObject, TSubclassOf<class AObjective> ObjectiveClass);
	static void FailObjectivesOfClass(const class UObject* WorldContextObject, TSubclassOf<class AObjective> ObjectiveClass);
	static TArray<class AObjective*> GetObjectivesOfClass(const class UObject* WorldContextObject, TSubclassOf<class AObjective> ObjectiveClass);

	class FText GetFormattedDescription();
	class FText GetFormattedName();
	void Multicast_UnlockObjective();
	void ObjectiveCompleted();
	void ObjectiveFailed();
	void OnObjectiveCompleted();
	void OnObjectiveCreated();
	void OnObjectiveFailed();
	void OnRep_ObjectiveStatus();
	void OnUnlockingObjectiveUpdated(class AObjective* Objective);
	void OnUnlockingReportableReported(class AReportableActor* ReportableActor, class AReadyOrNotCharacter* Reporter);
	void TickObjective_BP();

	EObjectiveStatus GetObjectiveStatus() const;
	bool IsObjectiveCompleted() const;
	bool IsObjectiveFailed() const;
	bool IsObjectiveInProgress() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Objective")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Objective")
	}
	static class AObjective* GetDefaultObj()
	{
		return GetDefaultObjImpl<AObjective>();
	}
};
DUMPER7_ASSERTS_AObjective;

// Class ReadyOrNot.ArrestXSuspects
// 0x0008 (0x0328 - 0x0320)
class AArrestXSuspects final : public AObjective
{
public:
	int32                                         RequiredArrests;                                   // 0x0320(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ArrestXSuspects")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ArrestXSuspects")
	}
	static class AArrestXSuspects* GetDefaultObj()
	{
		return GetDefaultObjImpl<AArrestXSuspects>();
	}
};
DUMPER7_ASSERTS_AArrestXSuspects;

// Class ReadyOrNot.AC_SquadMembersAlive
// 0x0008 (0x00E0 - 0x00D8)
class UAC_SquadMembersAlive final : public UAIActionConsideration
{
public:
	bool                                          bOnlyActive;                                       // 0x00D8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AC_SquadMembersAlive")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AC_SquadMembersAlive")
	}
	static class UAC_SquadMembersAlive* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_SquadMembersAlive>();
	}
};
DUMPER7_ASSERTS_UAC_SquadMembersAlive;

// Class ReadyOrNot.NavArea_SwatCharlie
// 0x0000 (0x0048 - 0x0048)
class UNavArea_SwatCharlie final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_SwatCharlie")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_SwatCharlie")
	}
	static class UNavArea_SwatCharlie* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_SwatCharlie>();
	}
};
DUMPER7_ASSERTS_UNavArea_SwatCharlie;

// Class ReadyOrNot.AC_SquadMembersKilled
// 0x0008 (0x00E0 - 0x00D8)
class UAC_SquadMembersKilled final : public UAIActionConsideration
{
public:
	bool                                          bIncludeIncapacitated;                             // 0x00D8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AC_SquadMembersKilled")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AC_SquadMembersKilled")
	}
	static class UAC_SquadMembersKilled* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_SquadMembersKilled>();
	}
};
DUMPER7_ASSERTS_UAC_SquadMembersKilled;

// Class ReadyOrNot.BanManagerProfile
// 0x0050 (0x0078 - 0x0028)
class UBanManagerProfile final : public USaveGame
{
public:
	TMap<class FString, struct FPlayerBanInfo>    BannedPlayers;                                     // 0x0028(0x0050)(Edit, EditConst, Protected, NativeAccessSpecifierProtected)

public:
	void AddBannedPlayer(const class FString& UniquePlayerId, const class FString& DisplayName, const EBanType BanType);
	TMap<class FString, struct FPlayerBanInfo> GetBannedPlayers();
	void RemoveBannedPlayer(const class FString& UniquePlayerId);

	bool IsPlayerBanned(const class FString& UniquePlayerId) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BanManagerProfile")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BanManagerProfile")
	}
	static class UBanManagerProfile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBanManagerProfile>();
	}
};
DUMPER7_ASSERTS_UBanManagerProfile;

// Class ReadyOrNot.AC_SquadMembersArrested
// 0x0000 (0x00D8 - 0x00D8)
class UAC_SquadMembersArrested final : public UAIActionConsideration
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AC_SquadMembersArrested")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AC_SquadMembersArrested")
	}
	static class UAC_SquadMembersArrested* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_SquadMembersArrested>();
	}
};
DUMPER7_ASSERTS_UAC_SquadMembersArrested;

// Class ReadyOrNot.AC_SquadMembersWithTarget
// 0x0018 (0x00F0 - 0x00D8)
class UAC_SquadMembersWithTarget final : public UAIActionConsideration
{
public:
	TArray<ETargetType>                           TargetTypes;                                       // 0x00D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	bool                                          bAllowLastTrackedTarget;                           // 0x00E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AC_SquadMembersWithTarget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AC_SquadMembersWithTarget")
	}
	static class UAC_SquadMembersWithTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_SquadMembersWithTarget>();
	}
};
DUMPER7_ASSERTS_UAC_SquadMembersWithTarget;

// Class ReadyOrNot.Tablet
// 0x0060 (0x0CE0 - 0x0C80)
class ATablet : public ABaseItem
{
public:
	uint8                                         Pad_C78[0x10];                                     // 0x0C78(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetComponent*                       WidgetComponent;                                   // 0x0C88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTabletAwake;                                    // 0x0C90(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C91[0x7];                                      // 0x0C91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               FocusedCameraRotation;                             // 0x0C98(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               FocusedItemRotation;                               // 0x0CB0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         FocusedMinimumHorizontalFov;                       // 0x0CC8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FocusedTargetVerticalFov;                          // 0x0CCC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TabletFocusInterpSpeed;                            // 0x0CD0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CD4[0xC];                                      // 0x0CD4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HolsterScreen();
	void OnMissionSelected();
	void PlayNotificationEvent();
	void PlaySoundEvent(class UFMODEvent* Event);
	void PlayVibrationEvent();
	void SleepScreen();
	void WakeScreen();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Tablet")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Tablet")
	}
	static class ATablet* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATablet>();
	}
};
DUMPER7_ASSERTS_ATablet;

// Class ReadyOrNot.BaseWeapon
// 0x0700 (0x1380 - 0x0C80)
class ABaseWeapon : public ABaseItem
{
public:
	bool                                          bPistolGrip;                                       // 0x0C78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFireMode                                     FiremodeBeforeSafe;                                // 0x0C79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C7A[0x6];                                      // 0x0C7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmmoTypeData                          CurrentAmmoType;                                   // 0x0C80(0x0178)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_DF8[0x8];                                      // 0x0DF8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             AmmoDataTable;                                     // 0x0E00(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                           AmmunitionTypes;                                   // 0x0E08(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UReadyOrNotLoadoutManager*              LoadoutFunctionLibrary;                            // 0x0E18(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        BulletSpawn;                                       // 0x0E20(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        ShellSpawn;                                        // 0x0E28(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               ShellParticle;                                     // 0x0E30(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpotLightComponent*                    Flashlight;                                        // 0x0E38(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScopedWeaponAttachment*                ScopeAttachment;                                   // 0x0E40(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponAttachment*                      MuzzleAttachment;                                  // 0x0E48(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponAttachment*                      UnderbarrelAttachment;                             // 0x0E50(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponAttachment*                      OverbarrelAttachment;                              // 0x0E58(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponAttachment*                      StockAttachment;                                   // 0x0E60(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponAttachment*                      GripAttachment;                                    // 0x0E68(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponAttachment*                      IlluminatorAttachment;                             // 0x0E70(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponAttachment*                      AmmunitionAttachment;                              // 0x0E78(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttachmentPoints;                                  // 0x0E80(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSupressed;                                        // 0x0E84(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E85[0x3];                                      // 0x0E85(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               AimAssistRotation;                                 // 0x0E88(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_EA0[0x8];                                      // 0x0EA0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EFireMode newFireMode)> OnFireModeChanged;                         // 0x0EA8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	EFireMode                                     CurrentFireMode;                                   // 0x0EB8(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFireMode                                     DefaultFireMode;                                   // 0x0EB9(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EBA[0x6];                                      // 0x0EBA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EFireMode>                             AvailableFireModes;                                // 0x0EC0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         BurstBulletCount;                                  // 0x0ED0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasSafeMode;                                      // 0x0ED4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_ED5[0x3];                                      // 0x0ED5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AddedMagazineCountFromAttachments;                 // 0x0ED8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Optics_UI_Socket;                                  // 0x0EDC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Grip_UI_Socket;                                    // 0x0EE4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Muzzle_UI_Socket;                                  // 0x0EEC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Stock_UI_Socket;                                   // 0x0EF4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Magazine_UI_Socket;                                // 0x0EFC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ADSZoom;                                           // 0x0F04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ADSZoomInSpeed;                                    // 0x0F08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ADSZoomOutSpeed;                                   // 0x0F0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageType>                DefaultDamageType;                                 // 0x0F10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageType>                DamageType;                                        // 0x0F18(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         FireCameraShake;                                   // 0x0F20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraShakeBase*                       FireCameraShakeInst;                               // 0x0F28(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     DamageOverRange;                                   // 0x0F30(0x0088)(Edit, NativeAccessSpecifierPublic)
	float                                         Damage;                                            // 0x0FB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageSeverityMultiplier;                          // 0x0FBC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageSeverityChance;                              // 0x0FC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BleedoutDamageMultiplier;                          // 0x0FC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BleedoutDamageChance;                              // 0x0FC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultDamage;                                     // 0x0FCC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FireRate;                                          // 0x0FD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BulletsFiredUntilFullyAccurate;                    // 0x0FD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ProjectileMovementSpeed;                           // 0x0FD8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bArmorPiercing;                                    // 0x0FDC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FDD[0x3];                                      // 0x0FDD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   ImpactEffects;                                     // 0x0FE0(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AImpactEffect>              LoadedImpactEffects;                               // 0x1008(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   ExitEffects;                                       // 0x1010(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AImpactEffect>              LoadedExitEffects;                                 // 0x1038(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   RicochetEffects;                                   // 0x1040(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AImpactEffect>              LoadedRicochetEffects;                             // 0x1068(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        RicochetParticleSystem;                            // 0x1070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             RicochetEvent;                                     // 0x1078(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     SpallingDecal;                                     // 0x1080(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        SpallingParticleSystem;                            // 0x1088(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SpallingEvent;                                     // 0x1090(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Wobble;                                            // 0x1098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InitialWobbleDelay;                                // 0x109C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAttachBulletOnHit;                                // 0x10A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10A1[0x3];                                     // 0x10A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BulletPhysicsImpulseMultiplier;                    // 0x10A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDestroyBulletOnHit;                               // 0x10A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10A9[0x7];                                     // 0x10A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          BulletProjectileMesh;                              // 0x10B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            FakeProjectileMeshStatic;                          // 0x10B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            BulletProjectileMeshStatic;                        // 0x10C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                BulletProjectileScale;                             // 0x10C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ABaseShell>                 ShellClass;                                        // 0x10E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            ShellMesh;                                         // 0x10E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRotator>                       RecoilPattern;                                     // 0x10F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1100[0x4];                                     // 0x1100(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BulletDrag;                                        // 0x1104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoilInterpSpeed;                                 // 0x1108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ADSRecoilMultiplier;                               // 0x110C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ADSSpreadMultiplier;                               // 0x1110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoilReturnRate;                                  // 0x1114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreAmmoTypeSpread;                             // 0x1118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1119[0x7];                                     // 0x1119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               SpreadPattern;                                     // 0x1120(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1138[0x4];                                     // 0x1138(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpreadReturnRate;                                  // 0x113C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               PendingSpread;                                     // 0x1140(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               fireDirection;                                     // 0x1158(0x0018)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         GlimmerIntensity;                                  // 0x1170(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SpawnProjectileCount;                              // 0x1174(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FirstShotRecoil;                                   // 0x1178(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FirstShotSpread;                                   // 0x117C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FirstShotResetTime;                                // 0x1180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VelocitySpreadMultiplier;                          // 0x1184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VelocityRecoilMultiplier;                          // 0x1188(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoilMultiplierPitch;                             // 0x118C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoilMultiplierYaw;                               // 0x1190(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RefireDelay;                                       // 0x1194(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoilReturnPercentage;                            // 0x1198(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoilReturnInterpSpeed;                           // 0x119C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11A0[0x2A];                                    // 0x11A0(0x002A)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bAcceptsScopeAttachments;                          // 0x11CA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAcceptsMuzzleAttachments;                         // 0x11CB(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAcceptsUnderbarrelAttachments;                    // 0x11CC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAcceptsOverbarrelAttachments;                     // 0x11CD(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAcceptsStockAttachments;                          // 0x11CE(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAcceptsGripAttachments;                           // 0x11CF(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAcceptsIlluminatorAttachments;                    // 0x11D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAcceptsAmmunitionAttachments;                     // 0x11D1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11D2[0x6];                                     // 0x11D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           AvailableScopeAttachments;                         // 0x11D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           AvailableMuzzleAttachments;                        // 0x11E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           AvailableUnderbarrelAttachments;                   // 0x11F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           AvailableOverbarrelAttachments;                    // 0x1208(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           AvailableStockAttachments;                         // 0x1218(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           AvailableGripAttachments;                          // 0x1228(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           AvailableIlluminatorAttachments;                   // 0x1238(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           AvailableAmmunitionAttachments;                    // 0x1248(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bCalculateProcRecoil;                              // 0x1258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1259[0x3];                                     // 0x1259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RecoilDampStrength;                                // 0x125C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoilFireTime;                                    // 0x1260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoilFireStrength;                                // 0x1264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoilFireStrengthFirst;                           // 0x1268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoilAngleStrength;                               // 0x126C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoilRandomness;                                  // 0x1270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoilFireADSModifier;                             // 0x1274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoilAngleADSModifier;                            // 0x1278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_127C[0x4];                                     // 0x127C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RecoilRotationBuildup;                             // 0x1280(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                RecoilPositionBuildup;                             // 0x1298(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoilBuildupADSModifier;                          // 0x12B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RecoilHasBuildup;                                  // 0x12B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12B5[0x3];                                     // 0x12B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RecoilBuildupDampStrength;                         // 0x12B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12BC[0x4C];                                    // 0x12BC(0x004C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ProcRecoil_Trans;                                  // 0x1308(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               ProcRecoil_Rot;                                    // 0x1320(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                ProcRecoil_Trans_Buildup;                          // 0x1338(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               ProcRecoil_Rot_Buildup;                            // 0x1350(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         CurrentHighTimer;                                  // 0x1368(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReloadHighTimer;                                   // 0x136C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FireHighTimer;                                     // 0x1370(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EquipHighTimer;                                    // 0x1374(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseScopeMask;                                     // 0x1378(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         TriggerEffectStartPosition;                        // 0x1379(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         TriggerEffectEndPosition;                          // 0x137A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         TriggerEffectStrength;                             // 0x137B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayFireSelectPartAnims;                          // 0x137C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_137D[0x3];                                     // 0x137D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddAttachment(class UClass* Class_0, bool bReplicateAttachment);
	void AddMagazineCountFromAttachments(float AddAmount);
	bool CanAddAttachment(class UClass* AttachmentClass);
	bool CanReload();
	void DisableGlimmer();
	void EnableGlimmer();
	class ULaserAttachment* GetLaserAttachment();
	class ULightAttachment* GetLightAttachment();
	struct FRotator GetRecoil();
	struct FRotator GetSpread();
	void OnAimDownSights(bool bWasAiming);
	void OnEndAimDownSights(bool bWasAiming);
	void OnFireAtBulletSpawn();
	void OnWeaponFired(const struct FRotator& fireDirection_0);
	void OnWeaponFiredEnd();
	void OnWeaponReloadComplete();
	void OnWeaponReloadStarted();
	void PlayFiringModeAnimation();
	void RemoveAttachment(bool bScopedAttachment, bool bMuzzleAttachment, bool bUnderbarrelAttachment, bool bOverbarrelAttachment, bool bStockAttachment, bool bGripAttachment, bool bIlluminatorAttachment, bool bAmmunitionAttachment);
	void ResetRecoilSettingsToDefault();
	void UpdateStoredAttachments(TSubclassOf<class UWeaponAttachment> Attachment);

	EWeaponUnderbarrelAnimationType GetUnderbarrelAnimationType() const;
	bool IsLessLethalWeapon() const;
	bool IsLethalWeapon() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseWeapon")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseWeapon")
	}
	static class ABaseWeapon* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseWeapon>();
	}
};
DUMPER7_ASSERTS_ABaseWeapon;

// Class ReadyOrNot.BaseMagazineWeapon
// 0x0530 (0x18B0 - 0x1380)
class ABaseMagazineWeapon : public ABaseWeapon
{
public:
	uint8                                         Pad_1380[0x8];                                     // 0x1380(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               MuzzleFlashParticleComponent;                      // 0x1388(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               MuzzleSmokeParticleComponent;                      // 0x1390(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               HeatSmokeParticleComponent;                        // 0x1398(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               RicochetParticleComponent;                         // 0x13A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               RicochetParticleComponents[0x5];                   // 0x13A8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13D0[0x38];                                    // 0x13D0(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    FiringAudioComp;                                   // 0x1408(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CartridgeText;                                     // 0x1410(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RPMText;                                           // 0x1420(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BarrelLengthText;                                  // 0x1430(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CapacityText;                                      // 0x1440(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MuzzleVelocityText;                                // 0x1450(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SupressionStrength;                                // 0x1460(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1464[0x4];                                     // 0x1464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ULegacyCameraShake>         SupressionCameraShake;                             // 0x1468(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpawnNoTrail;                                     // 0x1470(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1471[0x7];                                     // 0x1471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABulletTracer*>                  BulletTracers;                                     // 0x1478(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ABaseShell*>                     SpawnedShells;                                     // 0x1488(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABaseMagazineWeapon* Weapon, bool bServer)> OnWeaponFire;    // 0x1498(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABaseMagazineWeapon* Weapon, bool bServer)> OnWeaponDryFire; // 0x14A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_14B8[0x20];                                    // 0x14B8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bBufferFireInput;                                  // 0x14D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14D9[0x3];                                     // 0x14D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BufferFireMinRefireTime;                           // 0x14DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseBufferFireMinRefireTime;                       // 0x14E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14E1[0x13];                                    // 0x14E1(0x0013)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bReloading;                                        // 0x14F4(0x0001)(Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCancelReloading;                                  // 0x14F5(0x0001)(Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHitScan;                                          // 0x14F6(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpawnTracer;                                      // 0x14F7(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNoSpawnTracerForFiringPlayer;                     // 0x14F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14F9[0xB];                                     // 0x14F9(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MuzzleFlashParticleSocket;                         // 0x1504(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MuzzleSmokeParticleSocket;                         // 0x150C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1514[0x4];                                     // 0x1514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           GunTails_Handle;                                   // 0x1518(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowParticlesWhenFiring;                          // 0x1520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1521[0x7];                                     // 0x1521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UDamageType>                ArmorPiercingDamageType;                           // 0x1528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        ProjectileAttachedParticle;                        // 0x1530(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDrawBlood;                                        // 0x1538(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1539[0x3];                                     // 0x1539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MuzzleFlashChance;                                 // 0x153C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1540[0x8];                                     // 0x1540(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   FakeBulletProjectile;                              // 0x1548(0x0028)(Edit, BlueprintVisible, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ABulletProjectile>          LoadedFakeBulletProjectile;                        // 0x1570(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   BulletProjectile;                                  // 0x1578(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ABulletProjectile>          LoadedBulletProjectile;                            // 0x15A0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   ArmorPiercingBulletProjectile;                     // 0x15A8(0x0028)(Edit, BlueprintVisible, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ABulletProjectile>          LoadedArmorPiercingBulletProjectile;               // 0x15D0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PenetrationDistance;                               // 0x15D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15DC[0x4];                                     // 0x15DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            BreachShell;                                       // 0x15E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            BeanbagShell;                                      // 0x15E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            BuckShotShell;                                     // 0x15F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            SlugShell;                                         // 0x15F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MagazineSocket;                                    // 0x1600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMagazine>                      Magazines;                                         // 0x1608(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         MagIndex;                                          // 0x1618(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NextMagIndex;                                      // 0x161C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   HideBoneWhenNotReloading;                          // 0x1620(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DesiredAmmoType;                                   // 0x1628(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bInfiniteAmmo : 1;                                 // 0x162C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_162D[0x3];                                     // 0x162D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         QueuedAmmoType;                                    // 0x1630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBulletInChamberOnReload;                          // 0x1634(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTacReloadWhenEmpty;                               // 0x1635(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1636[0x2];                                     // 0x1636(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AmmoMax;                                           // 0x1638(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LockIntegrityMinDamage;                            // 0x163C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LockIntegrityMaxDamage;                            // 0x1640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoseMagOnReload;                                  // 0x1644(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpawnShell;                                       // 0x1645(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1646[0x2];                                     // 0x1646(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpawnShellDelay;                                   // 0x1648(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_164C[0x4];                                     // 0x164C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             ShellBounceFMODAudio;                              // 0x1650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1658[0x14];                                    // 0x1658(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ImpactDecalScale;                                  // 0x166C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AImpactEffect*                          ImpactEffects_Instance;                            // 0x1670(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AImpactEffect*>                  SpawnedImpactEffects;                              // 0x1678(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class FName                                   Magazine_HandSocket;                               // 0x1688(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowAmmoTypesOnHUD;                               // 0x1690(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1691[0x7];                                     // 0x1691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MoraleHighReloadTableOverride;                     // 0x1698(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MoraleMediumReloadTableOverride;                   // 0x16A8(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MoraleLowReloadTableOverride;                      // 0x16B8(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16C8[0x8];                                     // 0x16C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class ABulletProjectile*                      LastSpawnedProjectile;                             // 0x16D0(0x0008)(Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16D8[0x8];                                     // 0x16D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MagCheckOverrideSocket;                            // 0x16E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasVisibleMags;                                   // 0x16E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16E9[0x3];                                     // 0x16E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Mag_01_Socket;                                     // 0x16EC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Mag_01_Bullets_Socket;                             // 0x16F4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Mag_01_Extra_Socket;                               // 0x16FC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1704[0x4];                                     // 0x1704(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   Mag_01_Comp;                                       // 0x1708(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   Mag_01_Comp_TPOnly;                                // 0x1710(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowBulletsWhenEmpty;                             // 0x1718(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1719[0x7];                                     // 0x1719(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   Mag_01_Bullets_Comp;                               // 0x1720(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   Mag_01_Extra_Comp;                                 // 0x1728(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   Mag_ReloadInterpFix_Comp;                          // 0x1730(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1738[0x70];                                    // 0x1738(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Mag_01_Static;                                     // 0x17A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            Mag_01_FMJ_Bullets_Static;                         // 0x17B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            Mag_01_HP_Bullets_Static;                          // 0x17B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            Mag_01_Extra_Static;                               // 0x17C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Mag_02_Socket;                                     // 0x17C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Mag_02_Bullets_Socket;                             // 0x17D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Mag_02_Extra_Socket;                               // 0x17D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   Mag_02_Comp;                                       // 0x17E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   Mag_02_Bullets_Comp;                               // 0x17E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   Mag_02_Extra_Comp;                                 // 0x17F0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            Mag_02_Static;                                     // 0x17F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            Mag_02_FMJ_Bullets_Static;                         // 0x1800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            Mag_02_HP_Bullets_Static;                          // 0x1808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            Mag_02_Extra_Static;                               // 0x1810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseFireLoopAnims;                                 // 0x1818(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1819[0x7];                                     // 0x1819(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             MagCheckIcon_Empty;                                // 0x1820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             MagCheckIcon_Full;                                 // 0x1828(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                              MagCheckMaterialOverride;                          // 0x1830(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             DroppedMagazineHitEvent;                           // 0x1838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeatPerShot;                                       // 0x1840(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeatThreshold;                                     // 0x1844(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeatMax;                                           // 0x1848(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeatDissipation;                                   // 0x184C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentHeat;                                       // 0x1850(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeatMinimumTime;                                   // 0x1854(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeatTime;                                          // 0x1858(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHeatEffectPlayed;                                 // 0x185C(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_185D[0x3];                                     // 0x185D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MagazineWeightFull;                                // 0x1860(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MagazineWeightEmpty;                               // 0x1864(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MagazineCountDefault;                              // 0x1868(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MagazineCountMin;                                  // 0x186C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MagazineCountMax;                                  // 0x1870(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1874[0x4];                                     // 0x1874(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MagazineLabel;                                     // 0x1878(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasBeenDisassembled;                              // 0x1880(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1881[0x3];                                     // 0x1881(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GunshotOcclusionMultiplier;                        // 0x1884(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GunshotFullOcclusionDepth;                         // 0x1888(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShootingYellBias;                                  // 0x188C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bTwoHandedPistol;                                  // 0x1890(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHeavyRifle;                                       // 0x1891(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1892[0x2];                                     // 0x1892(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RagdollImpulseMultiplier;                          // 0x1894(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                   ForceFeedbackEffect;                               // 0x1898(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundSource*                           AutoFireSound;                                     // 0x18A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_18A8[0x8];                                     // 0x18A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Client_HitscanDebug(bool bSuccess, const struct FVector& Center, const struct FVector& Extent, const struct FVector& ImpactPoint);
	void FindNextMagIndex();
	float GetAmmoWeight(int32 Count);
	int32 GetMagazineCount();
	void GivenAmmoFromAmmoBag();
	void Multicast_HandleSupression(const struct FVector_NetQuantize100& DirectionNet, const struct FVector_NetQuantize100& SpawnLoc);
	void Multicast_OnFire(const struct FVector_NetQuantize100& DirectionNet, const struct FVector_NetQuantize100& SpawnLoc, int32 Seed);
	void Multicast_PerformHitscan(const struct FHitscanShot& HitscanShot, bool bLocalOnly, int32 Seed);
	void Multicast_SimulateFireForViewTargets(const struct FVector_NetQuantize100& DirectionNet, const struct FVector_NetQuantize100& SpawnLoc, int32 Seed);
	void Multicast_SpawnParticleEffects(bool bSkipAuthority, bool bSkipLocalOwner);
	void Multicast_SpawnShell(bool bOnlyLocallyControlled, bool bSkipLocallyControlled);
	void OnFire(const struct FRotator& Direction, const struct FVector& SpawnLoc);
	void OnNewFireModeAnimEvent(EFireMode newFireMode);
	void OnReloadAnimEvent(EReloadAnimEvent Type);
	void PlayBulletWhizz(float Pan);
	void PlaySound(class USoundCue* Cue);
	float RemoveAmmo(float Value);
	void ReplenishAmmo();
	void Server_AddMagazine(const struct FMagazine& Magazine);
	void Server_HitscanHit(const struct FHitResult& HitResult, float Time, const struct FVector& TraceBegin, float Distance, float Penetration, int32 AmmoTypeIndex, int32 Seed);
	void Server_NextMagazine();
	void Server_OnFire(const struct FRotator& Direction, const struct FVector& SpawnLoc, int32 Seed);
	void Server_SetCancelReloading(bool bNewValue);
	void Server_SetDesiredAmmoTypeIndex(int32 Index_0);
	void Server_SetReloading(bool bIsReloading);
	void Server_SetTacticalReload(bool bIsTacticalReload);
	void SetMagazineCount(int32 Count, const TArray<class FName>& AmmoTypes);

	bool AllMagsEmpty() const;
	float GetAmmo() const;
	float GetAmmoInMagazine(int32 Index_0) const;
	float GetCurrentAmmoPercentage() const;
	struct FMagazine GetCurrentMagazine() const;
	float GetMagazineAmmoPercentage(int32 MagazineIndex) const;
	class FText GetMagazineScreenName(const struct FMagazine& Magazine) const;
	float GetNextAmmo() const;
	bool HasAmmo() const;
	bool HasAnyAmmo() const;
	bool HasAnyAmmoOfType(class FName AmmoType) const;
	bool InBurstMode() const;
	bool InFullAutoMode() const;
	bool InSafeMode() const;
	bool InSingleMode() const;
	bool IsPistolWithShield() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseMagazineWeapon")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseMagazineWeapon")
	}
	static class ABaseMagazineWeapon* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseMagazineWeapon>();
	}
};
DUMPER7_ASSERTS_ABaseMagazineWeapon;

// Class ReadyOrNot.AC_SquadMemberThreat
// 0x0000 (0x00D8 - 0x00D8)
class UAC_SquadMemberThreat final : public UAIActionConsideration
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AC_SquadMemberThreat")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AC_SquadMemberThreat")
	}
	static class UAC_SquadMemberThreat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_SquadMemberThreat>();
	}
};
DUMPER7_ASSERTS_UAC_SquadMemberThreat;

// Class ReadyOrNot.NavArea_CivilianC
// 0x0000 (0x0048 - 0x0048)
class UNavArea_CivilianC final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_CivilianC")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_CivilianC")
	}
	static class UNavArea_CivilianC* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_CivilianC>();
	}
};
DUMPER7_ASSERTS_UNavArea_CivilianC;

// Class ReadyOrNot.AC_RecentlyStunned
// 0x0008 (0x00E0 - 0x00D8)
class UAC_RecentlyStunned final : public UAIActionConsideration
{
public:
	EStunType                                     StunType;                                          // 0x00D8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AC_RecentlyStunned")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AC_RecentlyStunned")
	}
	static class UAC_RecentlyStunned* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_RecentlyStunned>();
	}
};
DUMPER7_ASSERTS_UAC_RecentlyStunned;

// Class ReadyOrNot.BaseCombatMoveActivity
// 0x0040 (0x0230 - 0x01F0)
class UBaseCombatMoveActivity : public UBaseActivity
{
public:
	class UBaseCombatActivity*                    OwningCombatActivity;                              // 0x01F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FailureCount;                                      // 0x01F8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LastSuccessTime;                                   // 0x01FC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LastFailTime;                                      // 0x0200(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBaseActivity*                          InterruptActivity;                                 // 0x0208(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_210[0x18];                                     // 0x0210(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bRequireMagazineWeapon;                            // 0x0228(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FinishCombatMove(bool bSuccess);
	void GenerateNavigablePoints(const struct FVector& GenAroundLoc, const struct FNavGenerationParameters& NavGenerationParameters, TArray<struct FVector>* OutLocations);
	void RequestCombatMove_Blueprint(float DeltaTime);

	class UBaseActivity* GetInterruptActivity() const;
	bool HasAnyOtherCombatMoveGotLocation(const struct FVector& TestLocation, float Tolerance) const;
	bool HasLOSToEnemy() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseCombatMoveActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseCombatMoveActivity")
	}
	static class UBaseCombatMoveActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseCombatMoveActivity>();
	}
};
DUMPER7_ASSERTS_UBaseCombatMoveActivity;

// Class ReadyOrNot.AIActionGate
// 0x0000 (0x0028 - 0x0028)
class UAIActionGate : public UObject
{
public:
	bool CanOpen(const struct FAIActionDecisionContext& Context) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AIActionGate")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AIActionGate")
	}
	static class UAIActionGate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIActionGate>();
	}
};
DUMPER7_ASSERTS_UAIActionGate;

// Class ReadyOrNot.AGValidTarget
// 0x0008 (0x0030 - 0x0028)
class UAGValidTarget : public UAIActionGate
{
public:
	bool                                          bAllowFriendly;                                    // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowEnemy;                                       // 0x0029(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowNeutral;                                     // 0x002A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowLastTrackedTarget;                           // 0x002B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AGValidTarget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AGValidTarget")
	}
	static class UAGValidTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAGValidTarget>();
	}
};
DUMPER7_ASSERTS_UAGValidTarget;

// Class ReadyOrNot.BaseDeployableGear
// 0x0000 (0x0C80 - 0x0C80)
#pragma pack(push, 0x1)
class alignas(0x10) ABaseDeployableGear : public ABaseItem
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseDeployableGear")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseDeployableGear")
	}
	static class ABaseDeployableGear* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseDeployableGear>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_ABaseDeployableGear;

// Class ReadyOrNot.BallisticsShield
// 0x0040 (0x0CC0 - 0x0C80)
class ABallisticsShield : public ABaseDeployableGear
{
public:
	class UMaterialInstanceDynamic*               GlassMaterialInstance;                             // 0x0C78(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABaseMagazineWeapon*                    PistolEquippedWithShield;                          // 0x0C80(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C88[0x8];                                      // 0x0C88(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             ShieldHitEvent;                                    // 0x0C90(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Damage;                                            // 0x0C98(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlassPhaseParam;                                   // 0x0C9C(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CA0[0x2];                                      // 0x0CA0(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bLowered;                                          // 0x0CA2(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CA3[0x5];                                      // 0x0CA3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ULegacyCameraShake>         ShieldHitCameraShake;                              // 0x0CA8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CB0[0x10];                                     // 0x0CB0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Client_SetPistol(class ABaseItem* newPistol);
	void Server_SetLowered(bool bShouldLower);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallisticsShield")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallisticsShield")
	}
	static class ABallisticsShield* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABallisticsShield>();
	}
};
DUMPER7_ASSERTS_ABallisticsShield;

// Class ReadyOrNot.AGAnyNearbyAI
// 0x0010 (0x0038 - 0x0028)
class UAGAnyNearbyAI final : public UAIActionGate
{
public:
	ETeamType                                     TeamType;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SearchRange;                                       // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMustBeVisible;                                    // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AGAnyNearbyAI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AGAnyNearbyAI")
	}
	static class UAGAnyNearbyAI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAGAnyNearbyAI>();
	}
};
DUMPER7_ASSERTS_UAGAnyNearbyAI;

// Class ReadyOrNot.NavArea_SuspectB
// 0x0000 (0x0048 - 0x0048)
class UNavArea_SuspectB final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_SuspectB")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_SuspectB")
	}
	static class UNavArea_SuspectB* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_SuspectB>();
	}
};
DUMPER7_ASSERTS_UNavArea_SuspectB;

// Class ReadyOrNot.AGNumActiveAI
// 0x0008 (0x0030 - 0x0028)
class UAGNumActiveAI : public UAIActionGate
{
public:
	ETeamType                                     Team;                                              // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         NumAI;                                             // 0x0029(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EComparisonOp                                 ComparisonType;                                    // 0x002A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AGNumActiveAI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AGNumActiveAI")
	}
	static class UAGNumActiveAI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAGNumActiveAI>();
	}
};
DUMPER7_ASSERTS_UAGNumActiveAI;

// Class ReadyOrNot.BaseGrenade
// 0x05F0 (0x1270 - 0x0C80)
class ABaseGrenade : public ABaseItem
{
public:
	uint8                                         Pad_C78[0x8];                                      // 0x0C78(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   DetonationLight;                                   // 0x0C80(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URadialForceComponent*                  DetonationRadialForce;                             // 0x0C88(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODAudioComponent*                    FMODBounceSoundComponent;                          // 0x0C90(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAIPerceptionStimuliSourceComponent*    DetonationStimuliComp;                             // 0x0C98(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GrenadeBounciness;                                 // 0x0CA0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDetonationTriggersStimuli;                        // 0x0CA4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CA5[0x3];                                      // 0x0CA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DetonationSoundMaxRange;                           // 0x0CA8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DetonationLoudness;                                // 0x0CAC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DetonationTag;                                     // 0x0CB0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ThrownTag;                                         // 0x0CB8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BounceTag;                                         // 0x0CC0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CC8[0x8];                                      // 0x0CC8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AThrownGrenade*                         Thrown;                                            // 0x0CD0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bUsedFixedThrowTrajectory : 1;                     // 0x0CD8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_CD9[0x7];                                      // 0x0CD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        FirstBouncePath;                                   // 0x0CE0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FHitResult                             FirstBounceHit;                                    // 0x0CF0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_DD8[0x8];                                      // 0x0DD8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        SecondBouncePath;                                  // 0x0DE0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FHitResult                             SecondBounceHit;                                   // 0x0DF0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_ED8[0x8];                                      // 0x0ED8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        ThirdBouncePath;                                   // 0x0EE0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FHitResult                             ThirdBounceHit;                                    // 0x0EF0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_FD8[0x8];                                      // 0x0FD8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector_NetQuantize>            CompletePath;                                      // 0x0FE0(0x0010)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	uint8                                         Pad_FF0[0x18];                                     // 0x0FF0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BouncePt1;                                         // 0x1008(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BouncePt2;                                         // 0x100C(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BouncePt3;                                         // 0x1010(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1014[0x4];                                     // 0x1014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DeployGrenadeVoiceLine;                            // 0x1018(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GrenadeSpeed;                                      // 0x1028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_102C[0x8];                                     // 0x102C(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BounceSoundMinImpulse;                             // 0x1034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USoundBase*>                     BounceSoundEffects;                                // 0x1038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               ActivationEffect;                                  // 0x1048(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        GrenadeBounceEffect;                               // 0x1050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             ActivationSound;                                   // 0x1058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActivationTime;                                    // 0x1060(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActivationElapsedTime;                             // 0x1064(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActivated;                                        // 0x1068(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayDetonationEffectsExactlyOnce;                 // 0x1069(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDetonationEffectsPlayed;                          // 0x106A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_106B[0x1];                                     // 0x106B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSinceUsed;                                     // 0x106C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSinceDetonate;                                 // 0x1070(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1074[0x1];                                     // 0x1074(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	EDrawDebugTrace                               DrawDebugType;                                     // 0x1075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bThrowAsQuickThrow;                                // 0x1076(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFastThrowOnceEquipped;                            // 0x1077(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFastThrowing;                                     // 0x1078(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGrenadeReleased;                                  // 0x1079(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_107A[0x6];                                     // 0x107A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ThrowImpulse;                                      // 0x1080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpImpulse;                                         // 0x1084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggersActionMusic;                              // 0x1088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanThrowGrenade;                                  // 0x1089(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_108A[0x2];                                     // 0x108A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DetonationTime;                                    // 0x108C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncreaseDamageRadiusOverTime;                     // 0x1090(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1091[0x7];                                     // 0x1091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UnderarmForceScale;                                // 0x1098(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Drag;                                              // 0x109C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DragAppliedPerBounce;                              // 0x10A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DetonationFlashIntensitiy;                         // 0x10A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DetonationFlashInterp;                             // 0x10A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReDetonationTime;                                  // 0x10AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerSFXOnRedetonate;                           // 0x10B0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10B1[0x3];                                     // 0x10B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ThrowDistance;                                     // 0x10B4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RedotonateCount;                                   // 0x10B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bNoMoraleDamage : 1;                               // 0x10BC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_10BD[0x3];                                     // 0x10BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ListenerTriggerDistance;                           // 0x10C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C4[0xC];                                     // 0x10C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MaxRandomizedForceOnDetonation;                    // 0x10D0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                FixedForceOnDetonation;                            // 0x10E8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFXSystemAsset*>                 DetonationParticles;                               // 0x1100(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UFXSystemComponent*>             SpawnedParticles;                                  // 0x1110(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FRotator                               ParticleSpawnRotation;                             // 0x1120(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UFMODEvent*                             DetonationFMODEvent;                               // 0x1138(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                              DetonationEvent;                                   // 0x1140(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideGrenadeOnDetonate;                            // 0x1148(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGrenadeType                                  Type;                                              // 0x1149(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_114A[0x6];                                     // 0x114A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ABaseGrenade* Grenade)> OnGrenadeDetonated;                  // 0x1150(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABaseGrenade* ThrownGrenade)> OnGrenadeThrown;               // 0x1160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         RedrawDelayAfterThrow;                             // 0x1170(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsed;                                             // 0x1174(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1175[0x3];                                     // 0x1175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   ThrownBy;                                          // 0x1178(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1180[0x10];                                    // 0x1180(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGrenadeDamage>                 DetonationDamage;                                  // 0x1190(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bUseScreenShake;                                   // 0x11A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11A1[0x7];                                     // 0x11A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ULegacyCameraShake>         ExplosionScreenShake;                              // 0x11A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraShakeRadius;                                 // 0x11B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDetonationDecal;                               // 0x11B4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11B5[0x3];                                     // 0x11B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DetonationDecalTraceDistance;                      // 0x11B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11BC[0x4];                                     // 0x11BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     DetonationDecal;                                   // 0x11C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                DetonationDecalSize;                               // 0x11C8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           HideBonesOnUsed;                                   // 0x11E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         BounceActivationRadius;                            // 0x11F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11F4[0x4];                                     // 0x11F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             FMODGrenadeBounce;                                 // 0x11F8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1200[0x8];                                     // 0x1200(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GrenadeOcclusionMultiplier;                        // 0x1208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GrenadeFullOcclusionDepth;                         // 0x120C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                   ForceFeedbackEffect;                               // 0x1210(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackAttenuation*              ForceFeedbackAttenuation;                          // 0x1218(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDistanceDifference;                             // 0x1220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         InterpStrength;                                    // 0x1224(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ClientReplicationFrequency;                        // 0x1228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_122C[0x44];                                    // 0x122C(0x0044)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Detonate();
	void DoThrowFast();
	bool IsOutside();
	void Multicast_AddImpulse(const struct FVector& Impulse, const struct FVector& FromLocation);
	void Multicast_DetonationEffects(const struct FVector& CalculatedForce);
	void Multicast_GrenadeThrow(bool bOverarmThrow, const struct FVector& ThrowDirection, const struct FVector& ThrowStart);
	void Multicast_OnDeadDropped();
	void OnGrenadeBounceSoundStopped();
	void OnRep_GrenadePath();
	void OnRep_GrenadeUsed();
	void Server_SetThrowOverarm(bool bThrowOverarm, bool bQuickThrow);
	void Server_StartFastThrow();
	void Server_ThrowGrenade(bool bOverarmThrow, const struct FVector& ThrowDirection, const struct FVector& ThrowStart);
	void Server_UpdateThrowPosition(const struct FVector& Position, const struct FRotator& Rotation, const struct FVector& Velocity);
	void SetFullyPrimed();
	void Throw(bool bLocalOnly, bool bOverarmThrow, const struct FVector& ThrowDirection, const struct FVector& ThrowStart);
	void UpdateServerPath(const TArray<struct FVector_NetQuantize>& Path, int32 Bounce1, int32 Bounce2, int32 Bounce3);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseGrenade")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseGrenade")
	}
	static class ABaseGrenade* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseGrenade>();
	}
};
DUMPER7_ASSERTS_ABaseGrenade;

// Class ReadyOrNot.BaseGasGrenade
// 0x0040 (0x12B0 - 0x1270)
class ABaseGasGrenade : public ABaseGrenade
{
public:
	int32                                         MaxGasPoints;                                      // 0x1270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1274[0x14];                                    // 0x1274(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LocationRecordingRate;                             // 0x1288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecordDistanceThreshold;                           // 0x128C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1290[0x20];                                    // 0x1290(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RecordLocation();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseGasGrenade")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseGasGrenade")
	}
	static class ABaseGasGrenade* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseGasGrenade>();
	}
};
DUMPER7_ASSERTS_ABaseGasGrenade;

// Class ReadyOrNot.AG_HasEquippedItem
// 0x0000 (0x0028 - 0x0028)
class UAG_HasEquippedItem : public UAIActionGate
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_HasEquippedItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_HasEquippedItem")
	}
	static class UAG_HasEquippedItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_HasEquippedItem>();
	}
};
DUMPER7_ASSERTS_UAG_HasEquippedItem;

// Class ReadyOrNot.AG_HasSecondaryRangedItem
// 0x0000 (0x0028 - 0x0028)
class UAG_HasSecondaryRangedItem : public UAIActionGate
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_HasSecondaryRangedItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_HasSecondaryRangedItem")
	}
	static class UAG_HasSecondaryRangedItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_HasSecondaryRangedItem>();
	}
};
DUMPER7_ASSERTS_UAG_HasSecondaryRangedItem;

// Class ReadyOrNot.BaseSquadsActivity
// 0x0080 (0x00A8 - 0x0028)
class UBaseSquadsActivity final : public UObject
{
public:
	struct FGameplayTag                           ActivityTag;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Cooldown;                                          // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRunTime;                                        // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSquadActionGateData>           Gates;                                             // 0x0038(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FSquadRolesData>                ActivityRoles;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FCyberneticCharacterArrayContainer> RoleAssignmentMap;          // 0x0058(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseSquadsActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseSquadsActivity")
	}
	static class UBaseSquadsActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseSquadsActivity>();
	}
};
DUMPER7_ASSERTS_UBaseSquadsActivity;

// Class ReadyOrNot.AG_HasAnotherGunWithAmmo
// 0x0000 (0x0028 - 0x0028)
class UAG_HasAnotherGunWithAmmo final : public UAIActionGate
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_HasAnotherGunWithAmmo")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_HasAnotherGunWithAmmo")
	}
	static class UAG_HasAnotherGunWithAmmo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_HasAnotherGunWithAmmo>();
	}
};
DUMPER7_ASSERTS_UAG_HasAnotherGunWithAmmo;

// Class ReadyOrNot.NavArea_CSGas
// 0x0000 (0x0048 - 0x0048)
class UNavArea_CSGas final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_CSGas")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_CSGas")
	}
	static class UNavArea_CSGas* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_CSGas>();
	}
};
DUMPER7_ASSERTS_UNavArea_CSGas;

// Class ReadyOrNot.AG_HasMeleeSecondaryItem
// 0x0000 (0x0028 - 0x0028)
class UAG_HasMeleeSecondaryItem final : public UAIActionGate
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_HasMeleeSecondaryItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_HasMeleeSecondaryItem")
	}
	static class UAG_HasMeleeSecondaryItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_HasMeleeSecondaryItem>();
	}
};
DUMPER7_ASSERTS_UAG_HasMeleeSecondaryItem;

// Class ReadyOrNot.BaseWidget
// 0x0028 (0x02F0 - 0x02C8)
class UBaseWidget : public UUserWidget
{
public:
	struct FVector2D                              MouseAxisDeltaThreshold;                           // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              GamepadAxisDeltaThreshold;                         // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotGameState*                   RONGS;                                             // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	struct FVector2D GetCenterScreenPosition();
	void HideWidget();
	bool IsBlockingAnimationPlaying();
	bool IsGamepadAxisBeyondThreshold(const struct FVector2D& InGamepadAxis);
	bool IsMouseAxisBeyondThreshold(const struct FVector2D& InMouseDelta);
	void PauseWidgetAnimation_Internal(class UWidgetAnimation* InWidgetAnimation);
	void PlaySoundEffect(class UFMODEvent* SoundEffectToPlay);
	void PlayWidgetAnimation_Internal(class UWidgetAnimation* InWidgetAnimation, bool bRestartIfAlreadyPlaying);
	void ShowWidget(bool bNotHitTestable);
	void StopWidgetAnimation_Internal(class UWidgetAnimation* InWidgetAnimation);
	void ToggleWidgetVisibility(bool bNotHitTestable);
	bool UpdateDebugInfo();

	struct FVector2D GetMouseDelta() const;
	struct FVector2D GetMousePosition() const;
	bool HasMouseMoved() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseWidget")
	}
	static class UBaseWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseWidget>();
	}
};
DUMPER7_ASSERTS_UBaseWidget;

// Class ReadyOrNot.RadialWidgetBase
// 0x01A0 (0x0490 - 0x02F0)
class URadialWidgetBase : public UBaseWidget
{
public:
	TMulticastInlineDelegate<void()>              OnRadialMenuOpened_Delegate;                       // 0x02F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnRadialMenuClosed_Delegate;                       // 0x0300(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                         CurrentSelectionIndex;                             // 0x0310(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         PreviousSelectionIndex;                            // 0x0314(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Angle;                                             // 0x0318(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AngleSpread;                                       // 0x031C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PercentageWithoutGap;                              // 0x0320(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PercentageWithGap;                                 // 0x0324(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bIsWheelCreated : 1;                               // 0x0328(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bIsWheelRefreshed : 1;                             // 0x0328(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bNavigatingWithGamepad : 1;                        // 0x0328(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              RadialCursorPosition;                              // 0x0330(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                 Angles;                                            // 0x0340(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class URadialSectorWidget*>            Sectors;                                           // 0x0350(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UPanelWidget*                           RadialWheel;                                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 RadialWheelCursor;                                 // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerController*                      OwningPlayer;                                      // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APawn*                                  OwningPawn;                                        // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerCharacter*                       OwningPlayerCharacter;                             // 0x0380(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         NumOfSectors;                                      // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OpenDelay;                                         // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CloseDelay;                                        // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinWheelSize;                                      // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxWheelSize;                                      // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinCursorAngle;                                    // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxCursorAngle;                                    // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ERadialCursorBehaviour                        RadialCursorBehaviour;                             // 0x03A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class URadialSectorWidget>        RadialSectorWidgetClass;                           // 0x03A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bAlwaysHideRadialWheelCursor : 1;                  // 0x03B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bCanMoveWhileMenuIsOpened : 1;                     // 0x03B0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bCanPerformActionsWhileMenuIsOpened : 1;           // 0x03B0(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bCanAimWhileMenuIsOpened : 1;                      // 0x03B0(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bShowDebugMessages : 1;                            // 0x03B0(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bShowMouseCursor : 1;                              // 0x03B0(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StartingSectorIndex;                               // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         StartingSectorAngle;                               // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         IconSize;                                          // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         IconPadding;                                       // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SectorInnerRadius;                                 // 0x03C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SectorOuterRadius;                                 // 0x03C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         GapSize;                                           // 0x03CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WheelSize;                                         // 0x03D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WheelCursorDistanceFromCenterWheel;                // 0x03D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bHideRadialWheelCursorOnMenuOpened : 1;            // 0x03D8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           SelectedColor;                                     // 0x03DC(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           UnselectedColor;                                   // 0x03EC(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           UnselectableColor;                                 // 0x03FC(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFont*                                  Font;                                              // 0x0410(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             SelectionSound;                                    // 0x0418(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             MenuOpenSound;                                     // 0x0420(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             MenuCloseSound;                                    // 0x0428(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             MenuCloseSound_NoSelection;                        // 0x0430(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URadialWidgetThemeData*                 RadialWidgetTheme;                                 // 0x0438(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              MousePosition;                                     // 0x0440(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              MouseAxisDelta;                                    // 0x0450(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MouseWheelDelta;                                   // 0x0460(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MouseAngle;                                        // 0x0464(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         GamepadXAxis;                                      // 0x0468(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         GamepadYAxis;                                      // 0x046C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         GamepadAngle;                                      // 0x0470(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         GlobalTimeDilation;                                // 0x0474(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_478[0x18];                                     // 0x0478(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BeginCloseWheel();
	void BeginOpenWheel();
	struct FVector2D CalculatePositionOnCircleFromWidget(class UPanelWidget* PanelWidget, const struct FVector2D& Origin, const struct FVector2D& InPadding, float InAngle);
	bool CloseWheel(bool bExecuteRadial, bool bRemoveFromParent, bool bHideMouseCursor, ERadialMenuCloseReason CloseReason);
	void CloseWheel_Internal(bool bExecuteRadial, bool bRemoveFromParent, bool bHideMouseCursor, ERadialMenuCloseReason CloseReason);
	bool CreateWheel();
	bool CreateWheelSector(class UPanelWidget* PanelWidget, float InAngle, float InSectorInnerRadius, float InSectorOuterRadius, class UMaterialInterface* InSectorMaterial, bool bCreateGap);
	bool Deselect(int32 Index_0);
	bool DeselectAll();
	void DetermineInputDevice();
	bool DetermineSelectedSector(float InAngle);
	bool ExecuteRadial();
	float GetCorrectAngle();
	struct FLinearColor GetCorrectSelectionColor();
	float GetDirectionToGamepadAxis();
	float GetDirectionToMouse(const struct FVector2D& MidWidgetCoordinates);
	struct FVector2D GetPixelPositionOfWidget(class UWidget* InWidget, const struct FVector2D& InCoordinates);
	struct FVector2D GetPixelPositionOfWidgetCenter(class UWidget* InWidget);
	struct FVector2D GetViewportPositionOfWidget(class UWidget* InWidget, const struct FVector2D& InCoordinates);
	struct FVector2D GetViewportPositionOfWidgetCenter(class UWidget* InWidget);
	void HideMouseCursor();
	bool HideWheel();
	bool InitializeMenu(int32 Index_0);
	bool InitializeMenuProperties();
	bool IsMenuClosing();
	bool IsMenuOpening();
	bool IsWheelClosed();
	bool IsWheelCursorVisible();
	bool IsWheelOpen();
	bool Next();
	void OnRadialMenuClosed();
	void OnRadialMenuCreated();
	bool OnRadialMenuInitialized();
	void OnRadialMenuOpened();
	bool OnRadialSectorCreated(int32 Index_0, float InAngle);
	void OnSectorDeselected(int32 DeselectedIndex);
	void OnSectorSelected(int32 SelectedIndex);
	bool OpenWheel(bool bForceRefresh);
	void OpenWheel_Internal(bool bForceRefresh);
	bool Previous();
	bool RefreshWheel(int32 InStartingSectorIndex);
	void RestoreMousePosition();
	void SaveMousePosition();
	bool Select(int32 Index_0);
	void SetCloseDelay(float NewDelay);
	void SetGamepadXAxis(float InGamepadXAxis);
	void SetGamepadXYAxis(float InGamepadXAxis, float InGamepadYAxis);
	void SetGamepadYAxis(float InGamepadYAxis);
	void SetMousePosition(const struct FVector2D& NewMousePosition);
	void SetMousePositionToCenterScreen();
	void SetMouseWheelDelta(float InDelta);
	void Setup(const struct FRadialWidgetSpawnProperties& RadialWidgetSpawnProperties);
	void ShowMouseCursor();
	bool ShowWheel();
	void UpdateGamepadSelectionLogic(class UWidget* RadialCursorWidget);
	void UpdateMouseSelectionLogic(class UWidget* RadialCursorWidget);
	void UpdateSectorColor(int32 SectorIndex, const struct FLinearColor& SectorColor);
	void UseGamepadControl();
	void UseMouseControl();

	ERadialMenuCloseReason GetLastClosedReason() const;
	bool WasForceClosed() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RadialWidgetBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RadialWidgetBase")
	}
	static class URadialWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<URadialWidgetBase>();
	}
};
DUMPER7_ASSERTS_URadialWidgetBase;

// Class ReadyOrNot.WeaponWheelWidget
// 0x0010 (0x04A0 - 0x0490)
class UWeaponWheelWidget : public URadialWidgetBase
{
public:
	TArray<class FName>                           Categories;                                        // 0x0490(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	bool RemoveNullItemsFromAllCategories();
	bool RemoveNullItemsFromCategory(const class FName& WeaponWheelCategoryName);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponWheelWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponWheelWidget")
	}
	static class UWeaponWheelWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponWheelWidget>();
	}
};
DUMPER7_ASSERTS_UWeaponWheelWidget;

// Class ReadyOrNot.BaseMagPouch
// 0x0020 (0x0CA0 - 0x0C80)
class ABaseMagPouch final : public ABaseItem
{
public:
	class USkeletalMeshComponent*                 MagazineMesh;                                      // 0x0C78(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimationAsset*                        OpenPouchAnim;                                     // 0x0C80(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimationAsset*                        ClosedPouchAnim;                                   // 0x0C88(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   MagSocket;                                         // 0x0C90(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C98[0x8];                                      // 0x0C98(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClosePouch();
	void HideMagazine();
	void OpenPouch();
	void ShowMagazine();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseMagPouch")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseMagPouch")
	}
	static class ABaseMagPouch* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseMagPouch>();
	}
};
DUMPER7_ASSERTS_ABaseMagPouch;

// Class ReadyOrNot.AG_HasValidPickupWeapon
// 0x0008 (0x0030 - 0x0028)
class UAG_HasValidPickupWeapon final : public UAIActionGate
{
public:
	float                                         SearchRadius;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_HasValidPickupWeapon")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_HasValidPickupWeapon")
	}
	static class UAG_HasValidPickupWeapon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_HasValidPickupWeapon>();
	}
};
DUMPER7_ASSERTS_UAG_HasValidPickupWeapon;

// Class ReadyOrNot.AG_HasValidAmmoCache
// 0x0008 (0x0030 - 0x0028)
class UAG_HasValidAmmoCache final : public UAIActionGate
{
public:
	float                                         SearchRadius;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_HasValidAmmoCache")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_HasValidAmmoCache")
	}
	static class UAG_HasValidAmmoCache* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_HasValidAmmoCache>();
	}
};
DUMPER7_ASSERTS_UAG_HasValidAmmoCache;

// Class ReadyOrNot.BaseGasEmitter
// 0x0028 (0x02C0 - 0x0298)
class ABaseGasEmitter final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   Mesh;                                              // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Lifetime;                                          // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAffectsNavigation;                                // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAppliesStunDamage;                                // 0x02B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B2[0xE];                                      // 0x02B2(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void StartGas();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseGasEmitter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseGasEmitter")
	}
	static class ABaseGasEmitter* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseGasEmitter>();
	}
};
DUMPER7_ASSERTS_ABaseGasEmitter;

// Class ReadyOrNot.AG_HasEquippedWeapon
// 0x0000 (0x0028 - 0x0028)
class UAG_HasEquippedWeapon : public UAIActionGate
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_HasEquippedWeapon")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_HasEquippedWeapon")
	}
	static class UAG_HasEquippedWeapon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_HasEquippedWeapon>();
	}
};
DUMPER7_ASSERTS_UAG_HasEquippedWeapon;

// Class ReadyOrNot.ReadyOrNotAimAssistWeightConfig
// 0x00C0 (0x00F0 - 0x0030)
class UReadyOrNotAimAssistWeightConfig final : public UDataAsset
{
public:
	TMap<class FName, float>                      MoveStyleWeights;                                  // 0x0030(0x0050)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           MoveStylesToIgnore;                                // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, float>                      ActionWeights;                                     // 0x0090(0x0050)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           ActionsToIgnore;                                   // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	bool GetWeightByAction(class FName ActionName, float* Weight);
	bool GetWeightByMoveStyle(class FName ActionName, float* Weight);

	bool ShouldBeConsidered(class FName ActionName) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotAimAssistWeightConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotAimAssistWeightConfig")
	}
	static class UReadyOrNotAimAssistWeightConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotAimAssistWeightConfig>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotAimAssistWeightConfig;

// Class ReadyOrNot.AG_HasWeaponForHostage
// 0x0000 (0x0028 - 0x0028)
class UAG_HasWeaponForHostage final : public UAIActionGate
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_HasWeaponForHostage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_HasWeaponForHostage")
	}
	static class UAG_HasWeaponForHostage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_HasWeaponForHostage>();
	}
};
DUMPER7_ASSERTS_UAG_HasWeaponForHostage;

// Class ReadyOrNot.ShotDetectionVolume
// 0x0008 (0x02A0 - 0x0298)
class AShotDetectionVolume final : public AActor
{
public:
	class UBoxComponent*                          Bounds;                                            // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnShotFired(class ABaseWeapon* FiringWeapon, class APlayerCharacter* FiringPlayer);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShotDetectionVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShotDetectionVolume")
	}
	static class AShotDetectionVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AShotDetectionVolume>();
	}
};
DUMPER7_ASSERTS_AShotDetectionVolume;

// Class ReadyOrNot.AG_IsSurrendered
// 0x0008 (0x0030 - 0x0028)
class UAG_IsSurrendered : public UAIActionGate
{
public:
	float                                         Time;                                              // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_IsSurrendered")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_IsSurrendered")
	}
	static class UAG_IsSurrendered* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_IsSurrendered>();
	}
};
DUMPER7_ASSERTS_UAG_IsSurrendered;

// Class ReadyOrNot.AG_HasUsedZoneAtPriorityLevel
// 0x0010 (0x0038 - 0x0028)
class UAG_HasUsedZoneAtPriorityLevel final : public UAIActionGate
{
public:
	TArray<EZonePriority>                         PriorityList;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ExposeOnSpawn, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_HasUsedZoneAtPriorityLevel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_HasUsedZoneAtPriorityLevel")
	}
	static class UAG_HasUsedZoneAtPriorityLevel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_HasUsedZoneAtPriorityLevel>();
	}
};
DUMPER7_ASSERTS_UAG_HasUsedZoneAtPriorityLevel;

// Class ReadyOrNot.BlockListData
// 0x0028 (0x02F0 - 0x02C8)
class UBlockListData final : public UUserWidget
{
public:
	class FString                                 DisplayName;                                       // 0x02C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PlayerId;                                          // 0x02D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            BlockList;                                         // 0x02E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BlockListData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BlockListData")
	}
	static class UBlockListData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlockListData>();
	}
};
DUMPER7_ASSERTS_UBlockListData;

// Class ReadyOrNot.AG_HasMissionEventFired
// 0x0010 (0x0038 - 0x0028)
class UAG_HasMissionEventFired final : public UAIActionGate
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DelayAfterEventFired;                              // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_HasMissionEventFired")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_HasMissionEventFired")
	}
	static class UAG_HasMissionEventFired* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_HasMissionEventFired>();
	}
};
DUMPER7_ASSERTS_UAG_HasMissionEventFired;

// Class ReadyOrNot.ReadyOrNotAnimInstance
// 0x0250 (0x05A0 - 0x0350)
#pragma pack(push, 0x1)
class alignas(0x10) UReadyOrNotAnimInstance : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Velocity;                                          // 0x0350(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Speed;                                             // 0x0368(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedHorizontal;                                   // 0x036C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedVertical;                                     // 0x0370(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSpeed;                                          // 0x0374(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Direction;                                         // 0x0378(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ViewPitch;                                         // 0x037C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ViewYaw;                                           // 0x0380(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsMoving;                                         // 0x0384(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInAir;                                          // 0x0385(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_386[0x2];                                      // 0x0386(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               HeadLookRotation;                                  // 0x0388(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                             ActorTransform;                                    // 0x03A0(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                VelocityLocalNormalized;                           // 0x0400(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMoveDirection                                CurrentDirection;                                  // 0x0418(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 WalkSpeedDatabase;                                 // 0x0420(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 JogSpeedDatabase;                                  // 0x0430(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 CrouchWalkSpeedDatabase;                           // 0x0440(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         DirDegreesPerSecond;                               // 0x0450(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForwardDirAngle;                                   // 0x0454(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BackwardDirAngle;                                  // 0x0458(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftDirAngle;                                      // 0x045C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RightDirAngle;                                     // 0x0460(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForwardDirDeg;                                     // 0x0464(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BackwardDirDeg;                                    // 0x0468(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftDirDeg;                                        // 0x046C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RightDirDeg;                                       // 0x0470(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrafeForwardDir;                                  // 0x0474(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrafeBackwardDir;                                 // 0x0478(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrafeLeftDir;                                     // 0x047C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrafeRightDir;                                    // 0x0480(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MovementAlpha;                                     // 0x0484(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MovementJogAlpha;                                  // 0x0488(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MovementJogThreshold;                              // 0x048C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LeftFootIKLocation;                                // 0x0490(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RightFootIKLocation;                               // 0x04A8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               LeftFootIKRotation;                                // 0x04C0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               RightFootIKRotation;                               // 0x04D8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                HipOffsetVector;                                   // 0x04F0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCrouching;                                        // 0x0508(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsStopping;                                       // 0x0509(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_50A[0x6];                                      // 0x050A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               HeadRotation;                                      // 0x0510(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FCarryArrestedAnimState                CarryArrestedAnimState;                            // 0x0528(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsCarried;                                        // 0x0530(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCarrying;                                       // 0x0531(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMotionBlockType                              CurMotionBlock;                                    // 0x0532(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFalling;                                        // 0x0533(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasPrelanded;                                     // 0x0534(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bJumpRecoveryActive;                               // 0x0535(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_536[0x2];                                      // 0x0536(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         JumpRecoveryAnimTime;                              // 0x0538(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         JumpRecoveryStrength;                              // 0x053C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         JumpRecoveryTime;                                  // 0x0540(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_544[0xC];                                      // 0x0544(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DirAngle;                                          // 0x0550(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DirAngleDegrees;                                   // 0x0554(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMoveDirectionExt                             CurrentDirectionExt;                               // 0x0558(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTeamMLO;                                        // 0x0559(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_55A[0x2];                                      // 0x055A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LeftHandIKAlpha;                                   // 0x055C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SprintAlpha;                                       // 0x0560(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDeployableEquipped;                             // 0x0564(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPistol;                                         // 0x0565(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRifle;                                          // 0x0566(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsItem;                                           // 0x0567(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bItemOneHanded;                                    // 0x0568(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsC2Charge;                                       // 0x0569(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLevel1MovementTrigger;                            // 0x056A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLevel2MovementTrigger;                            // 0x056B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLevel3MovementTrigger;                            // 0x056C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCrouchLevel1MovementTrigger;                      // 0x056D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRotationRateReached;                              // 0x056E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_56F[0x1];                                      // 0x056F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaRotation;                                     // 0x0570(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_574[0x1C];                                     // 0x0574(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SprintFPAlpha;                                     // 0x0590(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PelvisMovementBobAlpha;                            // 0x0594(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	EMoveDirectionExt GetCurrentDirectionExtFromYawAngle(float YawAngle);
	struct FRotator GetLookAtRotation();
	EMoveDirectionExt GetOppositeDirectionExt(EMoveDirectionExt CurrentDir);
	float GetWeightFromSlot(class FName SlotName);
	float GetWeightFromSlotInversed(class FName SlotName);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotAnimInstance")
	}
	static class UReadyOrNotAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotAnimInstance>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_UReadyOrNotAnimInstance;

// Class ReadyOrNot.AG_WorldActionIsAvailable
// 0x0000 (0x0028 - 0x0028)
class UAG_WorldActionIsAvailable final : public UAIActionGate
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_WorldActionIsAvailable")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_WorldActionIsAvailable")
	}
	static class UAG_WorldActionIsAvailable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_WorldActionIsAvailable>();
	}
};
DUMPER7_ASSERTS_UAG_WorldActionIsAvailable;

// Class ReadyOrNot.ReadyOrNotCharacter
// 0x1450 (0x1AD0 - 0x0680)
class AReadyOrNotCharacter : public ACharacter
{
public:
	uint8                                         Pad_678[0x78];                                     // 0x0678(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CustomizationFaceMesh;                             // 0x06F0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        CustomizationHelmet;                               // 0x06F8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USkeletalMeshComponent*>         CustomizationSkeletalMeshes;                       // 0x0700(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UStaticMeshComponent*>           CustomizationStaticMeshes;                         // 0x0710(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         CustomizationActors;                               // 0x0720(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FSavedCustomization                    Customization;                                     // 0x0730(0x0140)(Net, RepNotify, NativeAccessSpecifierPublic)
	uint8                                         Pad_870[0x68];                                     // 0x0870(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 MeshGearSlot;                                      // 0x08D8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 InteractableComponent;                             // 0x08E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObjectiveMarkerComponent*              PlayerMarkerComponent;                             // 0x08E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 FaceMesh;                                          // 0x08F0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioPropagationComponent*         FMODAudioPropagationComp;                          // 0x08F8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioComponent*                    FMODVoiceAudioComp;                                // 0x0900(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterHealthComponent*              CharacterHealth;                                   // 0x0908(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryComponent*                    InventoryComp;                                     // 0x0910(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIPerceptionStimuliSourceComponent*    PerceptionStimuliComp;                             // 0x0918(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGibComponent*                          GibComponent;                                      // 0x0920(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhysicalAnimationComponent*            PhysicalAnimationComp;                             // 0x0928(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkinnedDecalSampler*                   SkinnedDecalSampler;                               // 0x0930(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URagdollComponent*                      RagdollComponent;                                  // 0x0938(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*               BloodEntryParticleComponent;                       // 0x0940(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                      BloodEntryParticleComponentNiagara;                // 0x0948(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*               ArmourImpactParticleComponent;                     // 0x0950(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UDecalComponent*>                BloodSplatterDecalComponents;                      // 0x0958(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_968[0x8];                                      // 0x0968(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UUASAimAssistTargetComponent*           AimAssistTargetComponent;                          // 0x0970(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_978[0x70];                                     // 0x0978(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ReplicatedControlRotation;                         // 0x09E8(0x0018)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter)> OnCharacterKilled; // 0x0A00(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* IncapacitatedCharacter, class AReadyOrNotCharacter* InstigatorCharacter)> OnCharacterIncapacitated; // 0x0A10(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* Character, class ABaseMagazineWeapon* Weapon, const struct FVector& fireDirection)> OnWeaponFire; // 0x0A20(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* Character, class ABaseMagazineWeapon* Weapon, const struct FVector& fireDirection)> OnWeaponDryFire; // 0x0A30(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* DownedCharacter, class AReadyOrNotCharacter* InstigatorCharacter)> OnPlayerDowned; // 0x0A40(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float Damage, class AActor* Causer, class ACharacter* InstigatorCharacter, class ACharacter* HitCharacter, const class UBulletDamageType* DamageEvent)> OnPointDamageReceived; // 0x0A50(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float Damage, class AActor* Causer, class ACharacter* InstigatorCharacter, class ACharacter* HitCharacter, const class UStunDamage* DamageEvent)> OnStunDamageReceived; // 0x0A60(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ACharacter* Freed, class ACharacter* Freer)> OnPlayerFreed;  // 0x0A70(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float Damage, class FName HitBone)> OnPlayerHit;                   // 0x0A80(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float Damage, class FName HitBone)> OnPlayerArmorHit;              // 0x0A90(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ABaseItem*                              ThrownItem;                                        // 0x0AA0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnGetupComplete;                                   // 0x0AA8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABaseItem* InThrownItem)> OnItemThrown_FromAnimNotify;       // 0x0AB8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDoorLockPickBegin_FromAnimNotify;                // 0x0AC8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDoorLockPickEnd_FromAnimNotify;                  // 0x0AD8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDoorChecked_FromAnimNotify;                      // 0x0AE8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnC2Placed_FromAnimNotify;                         // 0x0AF8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnC2Detonate_FromAnimNotify;                       // 0x0B08(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnTrapDisarmBegin_FromAnimNotify;                  // 0x0B18(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnTrapDisarmEnd_FromAnimNotify;                    // 0x0B28(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnMirrorDoorStarted_FromAnimNotify;                // 0x0B38(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnMirrorDoorFinished_FromAnimNotify;               // 0x0B48(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnStartDoorWedgePlacement_FromAnimNotify;          // 0x0B58(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnEndDoorWedgePlacement_FromAnimNotify;            // 0x0B68(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_B78[0x30];                                     // 0x0B78(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterDamageEvent                  LastDamageEvent;                                   // 0x0BA8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)
	uint8                                         Pad_BD0[0x2];                                      // 0x0BD0(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bBulletForceTransferred;                           // 0x0BD2(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BD3[0x1];                                      // 0x0BD3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinimumBodyFallImpulse;                            // 0x0BD4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxRagdollSounds;                                  // 0x0BD8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RagdollSoundsPlayed;                               // 0x0BDC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BE0[0x110];                                    // 0x0BE0(0x0110)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             BodyFallEvent;                                     // 0x0CF0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CF8[0x8];                                      // 0x0CF8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundSource*                           BodyFallSoundSource;                               // 0x0D00(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCapsuleCollisionRagdolled;                        // 0x0D08(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCapsuleFloorAngleRagdolled;                       // 0x0D09(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D0A[0x2];                                      // 0x0D0A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CapsuleCollisionRagdollTriggerThreshold;           // 0x0D0C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CapsuleFloorAngleRagdollTriggerThreshold;          // 0x0D10(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CapsuleFloorAngleRagdollDelayThreshold;            // 0x0D14(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBlendingAnim2Ragdoll;                             // 0x0D18(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D19[0xF];                                      // 0x0D19(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Anim2RagdollPelvisWakeUpTime;                      // 0x0D28(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D2C[0xC];                                      // 0x0D2C(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundSource*                           VoiceSoundSource;                                  // 0x0D38(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D40[0x1D8];                                    // 0x0D40(0x01D8)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bBlendInPhysics;                                   // 0x0F18(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStartBlendInIncapacitation;                       // 0x0F19(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBlendInIncapacitation;                            // 0x0F1A(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1B[0x1];                                      // 0x0F1B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IncapacitationBlendTime;                           // 0x0F1C(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IncapacitationBlendOutTime;                        // 0x0F20(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F24[0x4];                                      // 0x0F24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          IncapacitationLoopAnim;                            // 0x0F28(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendInterpAmount;                                 // 0x0F30(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F34[0xC];                                      // 0x0F34(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FinalBlendInTime;                                  // 0x0F40(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F44[0x4];                                      // 0x0F44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendInAfterStartOfAnim;                           // 0x0F48(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIsPreviewCharacter : 1;                           // 0x0F4C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_F4D[0xB];                                      // 0x0F4D(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   ArrestedBy;                                        // 0x0F58(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotCharacter*                   KilledBy;                                          // 0x0F60(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotCharacter*                   IncapacitatedBy;                                   // 0x0F68(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterDeathReason                         DeathReason;                                       // 0x0F70(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F71[0x7];                                      // 0x0F71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining)> OnCharacterTakeDamage; // 0x0F78(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EStunType StunType, bool bIsImmune)> OnAIStunnedPlaySound;         // 0x0F88(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser)> OnStunnedEvent; // 0x0F98(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EStunType StunType)> OnStunnedEndedEvent;                          // 0x0FA8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* InstigatorCharacter)> OnMeleeHitTaken; // 0x0FB8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class FName>                           HeadBones;                                         // 0x0FC8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           UpperBody;                                         // 0x0FD8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_FE8[0x10];                                     // 0x0FE8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           LowerBody;                                         // 0x0FF8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           R_Leg;                                             // 0x1008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           L_Leg;                                             // 0x1018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           L_Foot;                                            // 0x1028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           R_Foot;                                            // 0x1038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           L_Arm;                                             // 0x1048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           R_Arm;                                             // 0x1058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           L_Hand;                                            // 0x1068(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           R_Hand;                                            // 0x1078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bLowReadyPointUp;                                  // 0x1088(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLowReadyPointDown;                                // 0x1089(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_108A[0x2];                                     // 0x108A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LowReadyDistance;                                  // 0x108C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1090[0x8];                                     // 0x1090(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCapsuleComponent*>              LowReadyIgnoredCapsules;                           // 0x1098(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         bIsCrouching : 1;                                  // 0x10A8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_10A9[0x3];                                     // 0x10A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         QuickLeanAmount;                                   // 0x10AC(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanIntensity;                                // 0x10B0(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanInterpSpeed;                              // 0x10B4(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FreeLeanX;                                         // 0x10B8(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FreeLeanZ;                                         // 0x10BC(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFreeLeaning;                                      // 0x10C0(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLeaning;                                        // 0x10C1(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeaningLeft;                                      // 0x10C2(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeaningRight;                                     // 0x10C3(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeaningUp;                                        // 0x10C4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeaningDown;                                      // 0x10C5(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C6[0xE];                                     // 0x10C6(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bLeanLeftToggle;                                   // 0x10D4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLeanRightToggle;                                  // 0x10D5(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_10D6[0x2];                                     // 0x10D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    LeanAudioComponent;                                // 0x10D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             LeanAudioEvent;                                    // 0x10E0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LeanMovementValue;                                 // 0x10E8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_10EC[0x4];                                     // 0x10EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LeanPos_CurrentFrame;                              // 0x10F0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                LeanPos_LastFrame;                                 // 0x1108(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESquadPosition                                SquadPosition;                                     // 0x1120(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ETeamType                                     DefaultTeam;                                       // 0x1121(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1122[0x6];                                     // 0x1122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             FPMeleeImpactFMODEvent;                            // 0x1128(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             TPMeleeImpactFMODEvent;                            // 0x1130(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                        MeleeImpactParticle;                               // 0x1138(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ULegacyCameraShake>         MeleeCameraShake;                                  // 0x1140(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MeleeRange;                                        // 0x1148(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MeleeDamage;                                       // 0x114C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   MeleeDamageType;                                   // 0x1150(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* ArrestedCharacter, class AReadyOrNotCharacter* InstigatorCharacter)> OnPlayerArrested; // 0x1178(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* ArrestedCharacter, class AReadyOrNotCharacter* InstigatorCharacter)> OnPlayerArrestStart; // 0x1188(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* ArrestedCharacter, class AReadyOrNotCharacter* InstigatorCharacter)> OnPlayerArrestedCanceled; // 0x1198(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AReadyOrNotCharacter*                   PendingAutoReport;                                 // 0x11A8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* Character)> OnArrested;                // 0x11B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FCarryArrestedAnimState                Rep_CarryArrestedAnimState;                        // 0x11C0(0x0008)(BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bPreArrested;                                      // 0x11C8(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11C9[0x7];                                     // 0x11C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AStaticMeshActor*                       PreArrestCuffsActor;                               // 0x11D0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSurrendered;                                      // 0x11D8(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSurrenderComplete;                                // 0x11D9(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11DA[0x16];                                    // 0x11DA(0x0016)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bOrderedToRotateForArrest : 1;                     // 0x11F0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_11F1[0x7];                                     // 0x11F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlacedZipcuffs*                        PlacedZipcuffs;                                    // 0x11F8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APlacedZipcuffs>            SpawnedZipcuffsClass;                              // 0x1200(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APlacedZipcuffs>            SpawnedFPZipcuffsClass;                            // 0x1208(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   ZipcuffBone;                                       // 0x1210(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsBeingCarried;                                   // 0x1218(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCarryingDead;                                     // 0x1219(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_121A[0x6];                                     // 0x121A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   CarriedByCharacter;                                // 0x1220(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotCharacter*                   ThrownByCharacter;                                 // 0x1228(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotCharacter*                   PendingCarryCharacter;                             // 0x1230(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotCharacter*                   CurrentCarryCharacter;                             // 0x1238(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASkeletalMeshActor*                     FakeCarryCharacterMesh;                            // 0x1240(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CurrentCarryConfirmTime;                           // 0x1248(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_124C[0x4];                                     // 0x124C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CarryMasterIdleLoop;                               // 0x1250(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                          CarrySlaveIdleLoop;                                // 0x1258(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxCarryConfirmTime;                               // 0x1260(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxRagdollArrestConfirmTime;                       // 0x1264(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CurrentRagdollArrestConfirmTime;                   // 0x1268(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_126C[0x4];                                     // 0x126C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   PendingRagdollArrestCharacter;                     // 0x1270(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotCharacter*                   CurrentRagdollArrestCharacter;                     // 0x1278(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotCharacter*                   LastCharacterMakingArrest;                         // 0x1280(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotCharacter*                   CurrentlyArresting;                                // 0x1288(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBeingArrested;                                  // 0x1290(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bArrestComplete;                                   // 0x1291(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bArrestedAsRagdoll;                                // 0x1292(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bArrestedAsRagdoll_Flipped;                        // 0x1293(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPairedInteractionPlaying;                       // 0x1294(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNoTeamDamage;                                     // 0x1295(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableInteraction;                               // 0x1296(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrimed;                                           // 0x1297(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverarmThrow;                                     // 0x1298(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1299[0x7];                                     // 0x1299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* Character, class ABaseItem* LastItemBeforeQuickThrow, class ABaseItem* QuickThrowGrenade)> OnQuickThrowStart; // 0x12A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABaseItem* QuickThrowGrenade)> OnQuickThrowEnd;              // 0x12B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCarryingChanged;                                 // 0x12C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_12D0[0x1];                                     // 0x12D0(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsStrafing;                                       // 0x12D1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12D2[0x6];                                     // 0x12D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class UAnimMontage*>      PlayedTableMontageMap3P;                           // 0x12D8(0x0050)(UObjectWrapper, NativeAccessSpecifierPublic)
	class FString                                 LastTableMontagePlayed;                            // 0x1328(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1338[0x78];                                    // 0x1338(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterLookOverride                 CharacterLookOverride;                             // 0x13B0(0x00D0)(Edit, EditConst, NativeAccessSpecifierPublic)
	class FString                                 Rep_CharacterLookOverride;                         // 0x1480(0x0010)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<TSubclassOf<class ABaseArmour>, class USkeletalMesh*> ArmorOverrideMapTP;                   // 0x1490(0x0050)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class USkeletalMesh*                          Rep_BodyMesh;                                      // 0x14E0(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                          Rep_FaceMesh;                                      // 0x14E8(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                          Rep_FPMesh;                                        // 0x14F0(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class UAnimMontage*, float>              AnimMontageCooldown;                               // 0x14F8(0x0050)(Protected, NativeAccessSpecifierProtected)
	class UPoseAsset*                             CurrentFaceROM;                                    // 0x1548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AnimationBlockingTime;                             // 0x1550(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1554[0x24];                                    // 0x1554(0x0024)(Fixing Size After Last Property [ Dumper-7 ])
	class ATOCManager*                            TOCManager;                                        // 0x1578(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ULegacyCameraShake>         ReportToTOC_PVP_CameraShake;                       // 0x1580(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 TOCLine;                                           // 0x1588(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 SpeechCharacterName;                               // 0x1598(0x0010)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVoiceModifierData*                     VoiceModifier;                                     // 0x15A8(0x0008)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_15B0[0x8];                                     // 0x15B0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bHasBeenReported;                                  // 0x15B8(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15B9[0x3];                                     // 0x15B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpeakCooldown;                                     // 0x15BC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             ReportPlayerDeadFMODEvent;                         // 0x15C0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             ReportPlayerArrestedFMODEvent;                     // 0x15C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             ReportPlayerGeneralFMODEvent;                      // 0x15D0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* Speaker)> OnVoiceAudioStoppedDelegate; // 0x15D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_15E8[0x18];                                    // 0x15E8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, float>                    SpeechCooldownMap;                                 // 0x1600(0x0050)(Protected, NativeAccessSpecifierProtected)
	class UFMODEvent*                             FMODVoiceLine2D;                                   // 0x1650(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             FMODVoiceLineSpatalized;                           // 0x1658(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1660[0x8];                                     // 0x1660(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FSuppressionData>    BoneSuppressionAmount;                             // 0x1668(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bHeadDamaged, bool bBodyDamaged, bool bLeftArmDamaged, bool bRightArmDamaged, bool bLeftLegDamaged, bool bRightLegDamaged, bool bLeftFootDamaged, bool bRightFootDamaged)> OnBodyPartDamaged; // 0x16B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         bBodyHit : 1;                                      // 0x16C8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bRightFootHit : 1;                                 // 0x16C8(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bLeftFootHit : 1;                                  // 0x16C8(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bBlockedByBodyArmor : 1;                           // 0x16C8(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bBlockedByHeadArmor : 1;                           // 0x16C8(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	bool                                          bAllowDeadDismemberment;                           // 0x16C9(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16CA[0x26];                                    // 0x16CA(0x0026)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EGibAreas, float>                        DismembermentDamageMap;                            // 0x16F0(0x0050)(Edit, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<class FName>                           DamageExcludedBones;                               // 0x1740(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	uint8                                         Pad_1750[0x10];                                    // 0x1750(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GasDamageAccumulated;                              // 0x1760(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GasDamageDecay;                                    // 0x1764(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1768[0x8];                                     // 0x1768(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bGodMode : 1;                                      // 0x1770(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	bool                                          bNoTarget;                                         // 0x1771(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1772[0x6];                                     // 0x1772(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        ArmorImpactEffect;                                 // 0x1778(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBloodData*                             Blood;                                             // 0x1780(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABaseWeapon*>                    DamagedByWeapons;                                  // 0x1788(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_1798[0x8];                                     // 0x1798(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bRepStunned;                                       // 0x17A0(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EStunType                                     RepStunnedWith;                                    // 0x17A1(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_17A2[0x56];                                    // 0x17A2(0x0056)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bHasEverBeenStunned : 1;                           // 0x17F8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_17F9[0x17];                                    // 0x17F9(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotCharacter*>           AITrackingMe;                                      // 0x1810(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotCharacter*>           DamagedByCharacters;                               // 0x1820(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FVector                                OriginalSpawnLocation;                             // 0x1830(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* Evidence)> OnEvidenceCollected;                      // 0x1848(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1858[0x8];                                     // 0x1858(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 PendingEvidence;                                   // 0x1860(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsCollectingEvidence;                             // 0x1868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCollectionAnimHasTriggered;                       // 0x1869(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_186A[0x6];                                     // 0x186A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CollectingLoopAnim1P;                              // 0x1870(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           CollectingLoopAnim3P;                              // 0x1878(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             Reward;                                            // 0x1880(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECharacterEmotion                             CurrentEmotion;                                    // 0x1888(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1889[0x3];                                     // 0x1889(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FacialAnimationOverrideTime;                       // 0x188C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FacialAnimationBlend;                              // 0x1890(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FacialAnimationBlendTarget;                        // 0x1894(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FacialAnimationBlendDecay;                         // 0x1898(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         FacialAnimationPriority;                           // 0x189C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAiming;                                           // 0x18A0(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMovementLocked;                                   // 0x18A1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLeaningLocked;                                    // 0x18A2(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAimLocked;                                        // 0x18A3(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bActionsLocked;                                    // 0x18A4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bItemSelectionLocked;                              // 0x18A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCommandMenuLocked;                                // 0x18A6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bGamepadCommandWheelLocked;                        // 0x18A7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCommandMenuHidden;                                // 0x18A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bItemMenuLocked;                                   // 0x18A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bWeaponAttachmentsLocked;                          // 0x18AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCantedSightLocked;                                // 0x18AB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bTabletLocked;                                     // 0x18AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bConsoleHotkeysHidden;                             // 0x18AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bConsoleHotkeysItemWheelHidden;                    // 0x18AE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOptiwandLocked;                                   // 0x18AF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bChemlightLocked;                                  // 0x18B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bGamepadTeamCameraLocked;                          // 0x18B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_18B2[0x6];                                     // 0x18B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADoor*                                  QueuedDoorToOpen;                                  // 0x18B8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADoor*                                  QueuedDoorToClose;                                 // 0x18C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADoor*                                  LastKickedDoor;                                    // 0x18C8(0x0008)(Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionsData*                      DoorKickInteractionFront;                          // 0x18D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionsData*                      DoorKickInteractionBack;                           // 0x18D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionsData*                      DoorKickFailureInteractionFront;                   // 0x18E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionsData*                      DoorKickFailureInteractionBack;                    // 0x18E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionsData*                      DoorKickBreakInteractionFront;                     // 0x18F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionsData*                      DoorKickBreakInteractionBack;                      // 0x18F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionsData*                      CarryArrestedInteractionData;                      // 0x1900(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionsData*                      DropArrestedInteractionData;                       // 0x1908(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionsData*                      ThrowArrestedInteractionData;                      // 0x1910(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* ItemOwner, class ABaseItem* Item)> Event_OnItemPrimaryUse; // 0x1918(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bNVGOn;                                            // 0x1928(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1929[0x7];                                     // 0x1929(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* Character, bool bOn)> OnNightVisionGogglesToggled; // 0x1930(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1940[0x28];                                    // 0x1940(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bShouldPlayFootstepFoley;                          // 0x1968(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bPlayEveryStep;                                    // 0x1969(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_196A[0x6];                                     // 0x196A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AImpactEffect>              FootstepImpactEffectFast;                          // 0x1970(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AImpactEffect>              FootstepImpactEffectSlow;                          // 0x1978(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             CurrentFootstepFoleyEvent;                         // 0x1980(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             CurrentFootstepFoleyEventRemote;                   // 0x1988(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             FootstepsLocal;                                    // 0x1990(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             FootstepsRemote;                                   // 0x1998(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             MovementFoley;                                     // 0x19A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   MovementFoleySocket;                               // 0x19A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhysicsAsset*                          DefaultRagdollPhysAsset;                           // 0x19B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhysicsAsset*                          DefaultAlivePhysAsset;                             // 0x19B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhysicsAsset*                          CuffedRagdollPhysAsset;                            // 0x19C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhysicsAsset*                          Rep_ActiveRagdollPhysAsset;                        // 0x19C8(0x0008)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsRelevant;                                       // 0x19D0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19D1[0x7];                                     // 0x19D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ANeutralizeSuspectByTag*                NeutralizeSuspectTag;                              // 0x19D8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UAnimMontage*>                   TorsoDeathAnims;                                   // 0x19E0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                   HeadDeathAnims;                                    // 0x19F0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                   LeftArmDeathAnims;                                 // 0x1A00(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                   RightArmDeathAnims;                                // 0x1A10(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                   LeftLegDeathAnims;                                 // 0x1A20(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                   RightLegDeathAnims;                                // 0x1A30(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UAnimMontage*                           CurrentDeathMontage;                               // 0x1A40(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bPlayingDeathMontage : 1;                          // 0x1A48(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bStartedPlayingDeath : 1;                          // 0x1A48(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	struct FRonReplicatedAcceleration             ReplicatedAcceleration;                            // 0x1A49(0x0003)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ReplicatedMaxSpeed;                                // 0x1A4C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBlendRagdollNotifyActive;                       // 0x1A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A51[0x3];                                     // 0x1A51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FootstepOcclusionMultiplier;                       // 0x1A54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootstepFullOcclusionDepth;                        // 0x1A58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A5C[0x4];                                     // 0x1A5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         AnimNotifyAttachments;                             // 0x1A60(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A70[0x8];                                     // 0x1A70(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCharacterSnapshot>             Snapshots;                                         // 0x1A78(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UAnimSequence*                          CurrentLipSyncAnimation;                           // 0x1A88(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A90[0x20];                                    // 0x1A90(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x1AB0(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static bool IsOnSameTeam(class AReadyOrNotCharacter* A, class AReadyOrNotCharacter* B);

	void ApplyDamageToBone(float* Damage, const class FName& HitBone, const struct FPointDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	void Arrest(class AReadyOrNotCharacter* PlayerMakingArrest);
	void ArrestComplete(class AReadyOrNotCharacter* PlayerMakingArrest, class AZipcuffs* Zipcuffs);
	void BeginEvidenceCollection_COOP(class AActor* InEvidenceActor, class UInteractableComponent* CollectionInteractableComp, float CollectionTime);
	void CalculateLeanMovement(float DeltaTime);
	void CancelArrest(class AReadyOrNotCharacter* PlayerMakingArrest);
	void Client_OnBodyPartDamaged(bool bInHeadHit, bool bInBodyHit, bool bInLeftArmHit, bool bInRightArmHit, bool bInLeftLegHit, bool bInRightLegHit, bool bInLeftFootHit, bool bInRightFootHit);
	void Client_Play1PMontage(class UAnimMontage* NewMontage, float PlayRate);
	void Client_PlayFMODEvent2D(class UFMODEvent* Event);
	void Client_PlayMeleeImpactEffects();
	void Client_PlayScreenShake(TSubclassOf<class ULegacyCameraShake> CameraShake);
	void Client_SetControlRotation(const struct FRotator& NewRotation);
	void CollectPendingEvidence();
	bool DamageHitHead(const struct FPointDamageEvent& DamageEvent);
	void DecreaseHealth(float Amount);
	void DepleteHealth();
	void DisableNightVisionGoggles();
	void DisableRagdoll();
	void EnableNightVisionGoggles();
	void EnableRagdoll(float Duration);
	void EndEvidenceCollection_COOP(class UInteractableComponent* CollectionInteractableComp);
	void EndPepperSprayed();
	void EndStun(EStunType StunType);
	void ForceMeshUsingOverride(class USkeletalMesh* InFPMesh, class USkeletalMesh* InTPMesh, class USkeletalMesh* InFaceMesh);
	bool GetConsoleHotkeysHidden();
	float GetDeltaRotationToCharacter(class AReadyOrNotCharacter* Character);
	void GetFMODFootstepParameters(class UPhysicalMaterial* FloorPhysicsMaterial, int32* Stance, int32* Speed, int32* Surface);
	float GetLeanAmount(const struct FVector& LeanDirection, float LeanAmount, float MaxLeanAmount);
	void HandleTeamChanged(ETeamType Team);
	void Incapacitate();
	void IncreaseHealth(float Amount);
	bool IsCurrentlyFlashed();
	bool IsCurrentlySprayed();
	bool IsCurrentlyStung();
	bool IsNotifyStateActiveByName(const class FString& NotifyClassName, const class FString& SlotName);
	bool IsOutside();
	bool IsPepperSprayedLocationValid(const struct FHitResult& Hit, class APepperspray* Pepperspray);
	void KickDoor(class ADoor* Door);
	void Kill();
	void Lean(float Val);
	void LeanRight(float Val);
	void LeanUp(float Val);
	void LockAim();
	void LockAllActions();
	void LockCantedSight();
	void LockCommandMenu();
	void LockItemMenu();
	void LockItemSelection();
	void LockLeaning();
	void LockMovement();
	void LockMovementAndActions();
	void LockTablet();
	void LockWeaponAttachments();
	void Multicast_AddMoveIgnoreActor(class AReadyOrNotCharacter* MoveIgnoreCharacter, bool bAdd);
	void Multicast_ChangeFaceEmotion(ECharacterEmotion NewEmotion, float OverrideTime, float Blend, float BlendDecay, int32 Priority);
	void Multicast_DisableRagdoll();
	void Multicast_EnableRagdoll(float Duration);
	void Multicast_EnableRagdollBlendIn();
	void Multicast_InflictSuppression(const struct FSuppressionData& SuppressionData, TSubclassOf<class ULegacyCameraShake> CameraShake, bool bLessLethal);
	void Multicast_InflictSuppression_NoLineOfSight(const struct FSuppressionData& SuppressionData, TSubclassOf<class ULegacyCameraShake> CameraShake, bool bLessLethal);
	void Multicast_OnExplosiveVestDetonation();
	void Multicast_OnIncapacitated(class FName LastBone);
	void Multicast_OnKilled(class FName LastBoneHit, class AActor* DamageCauser);
	void Multicast_OnTargetReported();
	void Multicast_PauseAllAnims(bool bPaused);
	void Multicast_Play3PMontage(class UAnimMontage* NewMontage, float StartTime, float PlayRate, bool bFromClient);
	void Multicast_PlayDeathAnimation(class UAnimMontage* Montage);
	void Multicast_PlayMeleeImpactEffects(class UFMODEvent* ImpactSound, class UParticleSystem* ImpactParticle);
	void Multicast_PlayNonLocal3PMontage(class UAnimMontage* NewMontage);
	void Multicast_PlayRawVO(const class FString& SpecificFileName, const class FString& OverrideSpeakerName, bool bIgnoreIfAlreadyPlaying);
	void Multicast_SavePoseSnapshot(const class FName& SnapshotName);
	void Multicast_SpawnArterialBloodEffects(const struct FHitResult& HitResult, class FName Artery);
	void Multicast_SpawnBloodEffects(const struct FHitResult& Hit, float WoundSize, class AController* HitInstigator);
	void Multicast_SpawnDismembermentEffects(EGibAreas GibArea, const struct FHitResult& HitResult);
	void Multicast_Stop1PMontage(class UAnimMontage* Montage, float BlendoutTime);
	void Multicast_Stop3PMontage(class UAnimMontage* Montage, float BlendoutTime);
	void Multicast_TakeDamage(float Damage, bool bIsPointDamage, TSubclassOf<class UDamageType> DamageTypeClass, class AReadyOrNotCharacter* InstigatorCharacter, class AActor* DamageCauser);
	void OnActorSpawned(class AActor* Actor);
	void OnArteryBleedParticleCollision(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction, const struct FVector& Normal, class FName BoneName, class UPhysicalMaterial* PhysMat);
	void OnBodyFallAudioStop();
	void OnCapsuleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnCarryDropComplete(class AActor* Driver, class AActor* Slave);
	void OnCarryDropComplete_Driver(class AActor* Driver);
	void OnCarryDropComplete_Slave(class AActor* Slave);
	void OnCarryPickupComplete(class AActor* Driver, class AActor* Slave);
	void OnCarryPickupComplete_Driver(class AActor* Driver);
	void OnCarryPickupComplete_Slave(class AActor* Slave);
	void OnCarryThrowComplete(class AActor* Driver, class AActor* Slave);
	void OnCarryThrowComplete_Driver(class AActor* Driver);
	void OnCarryThrowComplete_Slave(class AActor* Slave);
	void OnDeadHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnDismembermentParticleCollision(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction, const struct FVector& Normal, class FName BoneName, class UPhysicalMaterial* PhysMat);
	void OnEquippedWeaponDryFire(class ABaseMagazineWeapon* Weapon, bool bServer);
	void OnEquippedWeaponFire(class ABaseMagazineWeapon* Weapon, bool bServer);
	void OnEquippedWeaponMagCheck(class ABaseMagazineWeapon* Weapon);
	void OnHealthDepleted();
	void OnIncapacitated(class AReadyOrNotCharacter* InstigatorCharacter);
	void OnItemEquipped(class ABaseItem* NewEquippedItem);
	void OnItemHolstered(class ABaseItem* HolsteredItem);
	void OnKilled(class AReadyOrNotCharacter* InstigatorCharacter);
	void OnLeanEnd();
	void OnLeanStart();
	void OnMeshHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnRagdollBlendStop(class URagdollComponent* InRagdollComponent);
	void OnRagdollPhysBodyHit(class URagdollComponent* InRagdollComponent, const struct FVector& Impulse, const struct FHitResult& Hit);
	void OnRagdollStart(class URagdollComponent* InRagdollComponent);
	void OnRep_ActiveRagdollPhysAsset();
	void OnRep_CharacterLookOverride();
	void OnRep_ControlRotation();
	void OnRep_CurrentCarryCharacterChanged();
	void OnRep_CurrentRagdollArrestCharacterChanged();
	void OnRep_Customization();
	void OnRep_MeshReplicated();
	void OnRep_PreArrested();
	void OnRep_ReplicatedAcceleration();
	void OnRep_Surrendered();
	void OnVoiceAudioStopped();
	void OnYellExecute();
	bool OpenDoor(class ADoor* Door, bool bOpenDoor);
	void PickupEvidence(class AActor* InEvidence);
	void Play1PMontage(class UAnimMontage* NewMontage, float PlayRate);
	void Play1PMontageDeferred(class UAnimMontage* Montage, const class FString& AnimationName);
	void Play3PMontage(class UAnimMontage* NewMontage, float StartTime, float PlayRate);
	void Play3PMontageDeferred(class UAnimMontage* Montage, const class FString& AnimationName);
	class UAnimMontage* PlayMontageFromTable(const class FString& Animation);
	class UAnimMontage* PlayMontageFromTableWithIndex(const class FString& Animation, int32 Index_0);
	class APairedInteractionDriver* PlayPairedInteraction(class UInteractionsData* InteractionData, class AActor* Driver, class AActor* Slave, class ABaseItem* OptionalItem);
	void PlayRadioSelectAnimation();
	void PlayRandomDebugConversation();
	void PlayRandomDebugVoiceLine(const class FString& Line);
	bool PlayRawVO(const class FString& VoiceLine, const class FString& OverrideSpeakerName, bool bIgnoreIfAlreadyPlaying);
	void PlayRawVOWithCooldown(const class FString& VoiceLine, float Cooldown, const class FString& OverrideSpeakerName);
	void PlayReportSpeech(const class FString& VoiceLine, const class FString& InTOCLine);
	void PlayROEViolateTOCResponse();
	void PlaySpecificDebugVoiceLine(const class FString& Filename);
	void PlayTOCResponse(const class FString& Line, bool bIsNetworked, ETOCPriority Priority, bool bCanPrefix, float Delay);
	void RagdollArrestTarget(class AReadyOrNotCharacter* RagdollCharacter);
	void RequestAnim2RagdollBlend(float Duration);
	void ResetHealth();
	void ResetPhysicsAsset();
	void Server_ApplyPointDamage(class AActor* DamagedActor, float BaseDamage, const struct FVector& HitFromDirection, const struct FHitResult& HitInfo, class AController* EventInstigator, class AActor* DamageCauser, TSubclassOf<class UDamageType> DamageTypeClass);
	void Server_CarryArrestedTarget(class AReadyOrNotCharacter* ArrestedCharacter);
	void Server_ChangeTPMesh(class USkeletalMesh* Body, class USkeletalMesh* Face);
	void Server_DoMelee();
	void Server_DoubleTapInteract(class UObject* Interactable, class UInteractableComponent* InInteractableComponent);
	void Server_DropArrestedTarget(class AReadyOrNotCharacter* ArrestedCharacter);
	void Server_EndInteract(class UObject* Interactable, class UInteractableComponent* InInteractableComponent);
	void Server_EndInteract_PrimaryUse(class UObject* Interactable, class UInteractableComponent* InInteractableComponent);
	void Server_Incapacitate();
	void Server_Interact(class UObject* Interactable, class UInteractableComponent* InInteractableComponent);
	void Server_Interact_PrimaryUse(class UObject* Interactable, class UInteractableComponent* InInteractableComponent);
	void Server_KickBreakQueuedDoor();
	void Server_KickFailQueuedDoor();
	void Server_KickQueuedDoor();
	void Server_Kill();
	void Server_MeleeInteract(class UObject* Interactable, class UInteractableComponent* InInteractableComponent);
	void Server_Play3PMontage(class UAnimMontage* NewMontage, float StartTime, float PlayRate, bool bFromClient);
	void Server_PlayNonLocal3PMontage(class UAnimMontage* NewMontage);
	void Server_PlayTOCConversation();
	void Server_RepNVGOn(bool bIsOn);
	void Server_ReportTarget(class AActor* Character);
	void Server_ReportToTOC(class AActor* Actor, bool bPlayAnimation, bool bTocResponse);
	void Server_ThrowArrestedTarget(class AReadyOrNotCharacter* ArrestedCharacter);
	void Server_UpdateLean(float QuickLean, float newFreeLeanY, float NewFreeLeanZ);
	void Server_VoiceLine(const class FString& VO, const class FString& SpeakersName, bool bTeamPrefix);
	void Server_Yell();
	void SpawnBloodPool();
	void SpawnFootstepEffect();
	void StartBeingTasered(float PingStunDuration, class ATaser* WeaponUsed);
	void StartPepperSprayed(class APepperspray* PeppersprayUsed);
	void StartStun(EStunType StunType, class AActor* StunCauser);
	void StopFPAnimMontage(class UAnimMontage* AnimMontage, float BlendoutTime);
	void StopTPAnimMontage(class UAnimMontage* AnimMontage);
	void StopTPMontage(class UAnimMontage* AnimMontage, float BlendoutTime);
	void StopTPMontageFromTable(const class FString& Animation, float BlendoutTime);
	void TestPhysicalAnimationComponent();
	void ToggleFreeLean();
	void ToggleLeanLeft(bool bADSIsActive);
	void ToggleLeanRight(bool bADSIsActive);
	void ToggleNightvisionGoggles();
	void UnlockAim();
	void UnlockAllActions();
	void UnlockCantedSight();
	void UnlockCommandMenu();
	void UnlockItemMenu();
	void UnlockItemSelection();
	void UnlockLeaning();
	void UnlockMovement();
	void UnlockMovementAndActions();
	void UnlockTablet();
	void UnlockWeaponAttachments();
	void UpdateOverridesFromCharacterLookOverrideDataTable(const class FString& LookOverride);

	bool AnyBodyPartHit() const;
	bool CanArrest() const;
	bool CanArrestRagdoll() const;
	bool CanBePickedUp() const;
	bool CanCarryCharacter(class AReadyOrNotCharacter* CharacterToPickup) const;
	bool CanDropCharacter(class AReadyOrNotCharacter* CharacterToDrop) const;
	bool CanMelee() const;
	bool CanYell() const;
	bool DoesMontageFromTableExist(const class FString& Animation) const;
	TArray<class AActor*> GetCollisionIgnoredActors() const;
	TArray<class UPrimitiveComponent*> GetCollisionIgnoredComponents() const;
	float GetCurrentHealth() const;
	float GetCurrentReviveHealth() const;
	float GetCurrentReviveTime() const;
	float GetCurrentStunDuration() const;
	float GetCurrentStunTime() const;
	EAnimWeaponType GetCurrentWeaponAnimType() const;
	class ABaseItem* GetEquippedItem() const;
	class ABaseMagazineWeapon* GetEquippedWeapon() const;
	class UCharacterHealthComponent* GetHealthComponent() const;
	EPlayerHealthStatus GetHealthStatus() const;
	class FString GetLastTableMontagePlayed() const;
	struct FLimbHealthData GetLimbHealth(ELimbType Limb) const;
	float GetMaxHealth() const;
	int32 GetMontageAnimCountFromTable(const class FString& Animation) const;
	class UAnimMontage* GetMontageFromTable(const class FString& Animation) const;
	class UAnimMontage* GetMontageFromTableWithIndex(const class FString& Animation, int32 Index_0) const;
	TArray<class ABaseItem*> GetRemovedItems() const;
	float GetSpeakCooldown() const;
	class FString GetSpeechCharacterName() const;
	TArray<class FString> GetTableMontageQueue() const;
	ETeamType GetTeam() const;
	float GetTimeSinceLastBulletDamage() const;
	float GetTimeSinceLastStun() const;
	bool HasBeenReported() const;
	bool HasEverBeenStunned() const;
	bool HasLineOfSightTo(const struct FVector& Location) const;
	bool HasRecentlyTakenDamage(const float Tolerance) const;
	bool HasRecentlyTakenStunDamage(const float Tolerance) const;
	bool Is3PMontagePlaying(const class UAnimMontage* Montage) const;
	bool IsActive() const;
	bool IsActiveForMovement() const;
	bool IsAffectedByDamageType(const class UDamageType* DamageType) const;
	bool IsAffectedByDamageTypeClass(TSubclassOf<class UDamageType> DamageType) const;
	bool IsAnimationBlocking() const;
	bool IsAnyLimbHit() const;
	bool IsAnyTableMontagePlaying(class FString* OutMontage) const;
	bool IsArrested() const;
	bool IsArrestedAndDead() const;
	bool IsArrestedAndIncapacitated() const;
	bool IsArrestedOrSurrendered() const;
	bool IsBeingArrested() const;
	bool IsBeingCarried() const;
	bool IsBeingThrown() const;
	bool IsCarried() const;
	bool IsCarrying() const;
	bool IsCivilian() const;
	bool IsCurrentlyGassed() const;
	bool IsCurrentlyTased() const;
	bool IsDeadNotUnconscious() const;
	bool IsDeadOrUnconscious() const;
	bool IsDowned() const;
	bool IsDropping() const;
	bool IsFullBodyMontagePlaying() const;
	bool IsFullHealth() const;
	bool IsGettingUp() const;
	bool IsHalfHealth() const;
	bool IsHealthDepleted() const;
	bool IsIncapacitated() const;
	bool IsInjured() const;
	bool IsInRagdoll() const;
	bool IsLimbBroken(ELimbType Limb) const;
	bool IsLimbHit(ELimbType Limb) const;
	bool IsLoadingTableMontage() const;
	bool IsLocalPlayer() const;
	bool IsLowHealth() const;
	bool IsMontagePlayingWithTimeRemaining(const class UAnimMontage* Animation, float* TimeRemaining) const;
	bool IsMontageSlotPlaying(class FName SlotName) const;
	bool IsOnlyStunnedWithGas() const;
	bool IsOnSWATTeam() const;
	bool IsPepperSprayed() const;
	bool IsPlayingCarryAnims() const;
	bool IsPlayingNonInterruptibleMontage(const class FString& MontageNameTryingToBePlayed) const;
	bool IsPlayingRootMotionFromMontage() const;
	bool IsRagdollBlending() const;
	bool IsReloading() const;
	bool IsReviveHealthDepleted() const;
	bool IsSpeechTimerActive() const;
	bool IsStartling() const;
	bool IsStunned() const;
	bool IsStunnedWith(EStunType StunType) const;
	bool IsSurrenderComplete() const;
	bool IsSurrendered() const;
	bool IsSurrenderedFor(const float Seconds) const;
	bool IsSuspect() const;
	bool IsTableMontage(class UAnimMontage* Montage) const;
	bool IsTableMontagePlaying(const class FString& Animation) const;
	bool IsTableMontagePlayingWithTimeRemaining(const class FString& Animation, float* TimeRemaining) const;
	bool IsUnconsciousNotDead() const;
	bool IsUpperBodyMontagePlaying() const;
	bool UsingReviveSystem() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotCharacter")
	}
	static class AReadyOrNotCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReadyOrNotCharacter>();
	}
};
DUMPER7_ASSERTS_AReadyOrNotCharacter;

// Class ReadyOrNot.PlayerCharacter
// 0x14A0 (0x2F70 - 0x1AD0)
class APlayerCharacter : public AReadyOrNotCharacter
{
public:
	TArray<class UMeshComponent*>                 CustomizationFirstPersonMeshes;                    // 0x1AD0(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UMeshComponent*>                 CustomizationFirstPersonBodyMeshes;                // 0x1AE0(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>       CustomizationActorMaterials;                       // 0x1AF0(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bFirstPersonMeshesDirty;                           // 0x1B00(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B01[0x7];                                     // 0x1B01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       ThirdPersonCameraComponent;                        // 0x1B08(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpringArmComponent*                    ThirdPersonCameraArm;                              // 0x1B10(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 Mesh1P;                                            // 0x1B18(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 MeshBody1P;                                        // 0x1B20(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                       FirstPersonCameraComponent;                        // 0x1B28(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerPostProcessing*                  PlayerPostProcessingComp;                          // 0x1B30(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioComponent*                    FMODBreathingAudioComp;                            // 0x1B38(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBleedComponent*                        BleedComponent;                                    // 0x1B40(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScoringComponent*                      ScoringComponent;                                  // 0x1B48(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemVisualizationComponent*            PrimaryItemVisualizationComponent;                 // 0x1B50(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemVisualizationComponent*            SecondaryItemVisualizationComponent;               // 0x1B58(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemVisualizationComponent*            LongTacticalVisualizationComponent;                // 0x1B60(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemVisualizationComponent*            HelmetVisualizationComponent;                      // 0x1B68(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemVisualizationComponent*            ArmorVisualizationComponent;                       // 0x1B70(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemVisualizationComponent*            EquippedItemVisualizationComponent;                // 0x1B78(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCommandWheelActive;                               // 0x1B80(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bItemWheelActive;                                  // 0x1B81(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B82[0x6];                                     // 0x1B82(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsPawnLeavingGame;                                // 0x1B88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B89[0x7];                                     // 0x1B89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          Rep_FPBodyMesh;                                    // 0x1B90(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     LastSetMesh1PDynamicMaterial;                      // 0x1B98(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>       DynamicWeaponFovMats;                              // 0x1BA0(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_1BB0[0x10];                                    // 0x1BB0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         MeshComps;                                         // 0x1BC0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_1BD0[0x8];                                     // 0x1BD0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           LastKnownPlayerState;                              // 0x1BD8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BE0[0x8];                                     // 0x1BE0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ReplicatedFPMesh;                                  // 0x1BE8(0x0018)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C00[0x20];                                    // 0x1C00(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CurInputVector;                                    // 0x1C20(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                           PushOverlappingAI_Handle;                          // 0x1C38(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               Body1PMat;                                         // 0x1C40(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotCharacter*                   CurrentViewCharacter;                              // 0x1C48(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AHelicopter*                            CurrentViewHelicopter;                             // 0x1C50(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class APlayerCharacter* Issuer, ESwatCommand CommandIssued)> OnDefaultCommandIssued; // 0x1C58(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* NewViewCharacter)> OnTeamViewSet;      // 0x1C68(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                         CurrentTeamViewIndex;                              // 0x1C78(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C7C[0x4];                                     // 0x1C7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerViewActor*                       PlayerViewActor;                                   // 0x1C80(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class APlayerViewActor>           PlayerViewActorClass;                              // 0x1C88(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                           TH_TeamViewInput;                                  // 0x1C90(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TeamViewInputHoldTime;                             // 0x1C98(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         surfaceType;                                       // 0x1C9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         roomType;                                          // 0x1CA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1CA4[0x4];                                     // 0x1CA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PVPSpeakerName;                                    // 0x1CA8(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSwatCommandOpen;                                // 0x1CB8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1CB9[0x7];                                     // 0x1CB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USwatCommandWidget*                     SwatCommandWidget;                                 // 0x1CC0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1CC8[0x2];                                     // 0x1CC8(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bInCommandMenu;                                    // 0x1CCA(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInDevicesMenu;                                    // 0x1CCB(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInTabMenu;                                        // 0x1CCC(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFadeToGray;                                       // 0x1CCD(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1CCE[0x1E];                                    // 0x1CCE(0x001E)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Sensitivity;                                       // 0x1CEC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertYaw;                                        // 0x1CF0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertPitch;                                      // 0x1CF1(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1CF2[0x2];                                     // 0x1CF2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GamepadLookSensitivityVertical;                    // 0x1CF4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadLookSensitivityHorizontal;                  // 0x1CF8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadAimSensitivityVertical;                     // 0x1CFC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadAimSensitivityHorizontal;                   // 0x1D00(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadLookSensitivitySpeedUp;                     // 0x1D04(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadMovementInnerDeadzone;                      // 0x1D08(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadLookInnerDeadzone;                          // 0x1D0C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GyroVerticalLookSensitivity;                       // 0x1D10(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GyroHorizontalLookSensitivity;                     // 0x1D14(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GyroVerticalAimSensitivity;                        // 0x1D18(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GyroHorizontalAimSensitivity;                      // 0x1D1C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertGamepadHorizontal;                          // 0x1D20(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertGamepadVertical;                            // 0x1D21(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertGyroHorizontal;                             // 0x1D22(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertGyroVertical;                               // 0x1D23(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHoldCrouchGamepad;                                // 0x1D24(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bToggleADSGamepad;                                 // 0x1D25(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCommandMenuForGamepad;                         // 0x1D26(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertStickLayout;                                // 0x1D27(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRadialMenuUseLeftStick;                           // 0x1D28(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertButtonLayout;                               // 0x1D29(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertTriggersLayout;                             // 0x1D2A(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSwitchBumpersTriggersLayout;                      // 0x1D2B(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D2C[0x4];                                     // 0x1D2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 GyroActiveMode;                                    // 0x1D30(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AimAssistIntensity;                                // 0x1D40(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHumanCharacterHUD_V2*                  HumanCharacterWidget_V2;                           // 0x1D50(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            MagCheckUI;                                        // 0x1D58(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTeamViewWidget*                        TeamViewWidget;                                    // 0x1D60(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractableComponent*                 LastInteractableComponent;                         // 0x1D68(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingTrigger*                       LastBuildingEntered;                               // 0x1D70(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingTrigger*                       InsideCurrentBuilding;                             // 0x1D78(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADoor*                                  lastHighlightedDoor;                               // 0x1D80(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABaseItem*                              lastHighlightedEvidence;                           // 0x1D88(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APickupMagazineActor*                   lastHighlightedPickupMagazine;                     // 0x1D90(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExitWithFireSelect;                               // 0x1D98(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D99[0x7];                                     // 0x1D99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       PreviousPosessedCharacter;                         // 0x1DA0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AController* NewController)> OnClientPossessed;              // 0x1DA8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bWasHeadshot, float DamageTaken, float HealthRemaining, bool bBlockedByArmour, bool bBlockedByHelmet)> OnPlayerTakenDamageDetails; // 0x1DB8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFMODEvent*                             PushToTalkStartEvent;                              // 0x1DC8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             CriticalInjuredEvent;                              // 0x1DD0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             FlatlineEvent;                                     // 0x1DD8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             FlatlineEventPvP;                                  // 0x1DE0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             HeadshotEvent;                                     // 0x1DE8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SAPIPlateHitEvent;                                 // 0x1DF0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bMirroring : 1;                                    // 0x1DF8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1DF9[0x7];                                     // 0x1DF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bSpawnInventoryItemsOnPossess;                     // 0x1E00(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E01[0x7];                                     // 0x1E01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               FreeLookCache;                                     // 0x1E08(0x0018)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E20[0x1C];                                    // 0x1E20(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         YellOutEffectLength;                               // 0x1E3C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         YelloutEffectRadius;                               // 0x1E40(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowReadyStatus;                                  // 0x1E44(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E45[0x3];                                     // 0x1E45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerState*                 LastPlayerState;                                   // 0x1E48(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           HitBones;                                          // 0x1E50(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         Camera_Hit_Arm_L;                                  // 0x1E60(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         Camera_Hit_Arm_R;                                  // 0x1E68(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         Camera_Hit_Low;                                    // 0x1E70(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         Camera_Hit_Leg_L;                                  // 0x1E78(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         Camera_Hit_Leg_R;                                  // 0x1E80(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         Camera_Hit_Head_Front;                             // 0x1E88(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         Camera_Hit_Head_Back;                              // 0x1E90(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchHeight;                                      // 0x1E98(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E9C[0x4];                                     // 0x1E9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              BodyImpactGroundSound;                             // 0x1EA0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Camera_RotationRate;                               // 0x1EA8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EC0[0x18];                                    // 0x1EC0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CurrentlyPiloting;                                 // 0x1ED8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EE0[0xE8];                                    // 0x1EE0(0x00E8)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       RevivingPlayer;                                    // 0x1FC8(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerCharacter*                       BeingRevivedByPlayer;                              // 0x1FD0(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RevivingOperatingTime;                             // 0x1FD8(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StunMovementSpeedMultiplier;                       // 0x1FDC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStunAimLocked;                                    // 0x1FE0(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FE1[0x7];                                     // 0x1FE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              LastEquippedItemBeforeStun;                        // 0x1FE8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FF0[0x4];                                     // 0x1FF0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FirstPersonShakeAmount;                            // 0x1FF4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ViewBlendMultiplier;                               // 0x1FF8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FFC[0x4];                                     // 0x1FFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BlendedBone;                                       // 0x2000(0x0008)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2008[0x8];                                     // 0x2008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAnimInstance>              Replicated_3PAnimInstance;                         // 0x2010(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimInstance>              Replicated_1PAnimInstance;                         // 0x2018(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                   MontageQueue_3P;                                   // 0x2020(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                   MontageQueue_1P;                                   // 0x2030(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_2040[0x10];                                    // 0x2040(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bGamepadADSActive;                                 // 0x2050(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2051[0x3];                                     // 0x2051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HoldingUseTime;                                    // 0x2054(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHoldingUse;                                       // 0x2058(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLookingAtEvidenceItem;                            // 0x2059(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLookingAtDoor;                                    // 0x205A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLookingAtHuman;                                   // 0x205B(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLookingAtTarget;                                  // 0x205C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUserLowReady;                                     // 0x205D(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceLowReady;                                    // 0x205E(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_205F[0x5];                                     // 0x205F(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LowReadyTraceDistance;                             // 0x2064(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AEvidenceActor*                         LastCollectedEvidence;                             // 0x2068(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class ABaseArmour>, class USkeletalMesh*> ArmorOverrideMapFP;                   // 0x2070(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_20C0[0x8];                                     // 0x20C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class AActor>>             ChemlightClasses;                                  // 0x20C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UBasePlayerEffect*>              PlayerEffects;                                     // 0x20D8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UBasePlayerEffect*                      RecoilNerfEffect;                                  // 0x20E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bOverrideHeadwearPaperdollTexture : 1;             // 0x20F0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_20F1[0x7];                                     // 0x20F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             HeadwearPaperdollTexture_Override;                 // 0x20F8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             HeadwearPaperdollTexture_Crouch_Override;          // 0x2100(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLoadout                               DefaultItems;                                      // 0x2108(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         EquipIndex;                                        // 0x2128(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_212C[0x4];                                     // 0x212C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLoadout>                       RandomLoadoutSelection;                            // 0x2130(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         ForwardShake;                                      // 0x2140(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         RightShake;                                        // 0x2148(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class APlayerCharacter* PlayerCharacter, EFireMode newFireMode, EFireMode LastFireMode)> OnWeaponFireModeChanged; // 0x2150(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABaseWeapon* Weapon)> OnWeaponFired;                         // 0x2160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_2170[0x10];                                    // 0x2170(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class ABloodPool*                             BloodPool;                                         // 0x2180(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CameraRotationRateMeshSpaceMultiplier;             // 0x2188(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MeshspaceRecoilMovementMultiplier;                 // 0x21A0(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MeshSpaceMovementMultiplier1P;                     // 0x21B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21BC[0x4];                                     // 0x21BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MeshspaceRecoilMovementMinMax;                     // 0x21C0(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UInteractableComponent* InteractableComp)> OnInteract;       // 0x21D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_21E8[0x29];                                    // 0x21E8(0x0029)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bWeaponDown3P;                                     // 0x2211(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsWearingHeavyArmour;                             // 0x2212(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFireLoop;                                         // 0x2213(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2214[0x4];                                     // 0x2214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           FullAutoLoop_Handle;                               // 0x2218(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2220[0x8];                                     // 0x2220(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSinceAiming;                                   // 0x2228(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_222C[0xC];                                     // 0x222C(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bServerIsBlockingAnimationPlaying;                 // 0x2238(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2239[0x7];                                     // 0x2239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 GroupIndex, int32 CategoryIndex)> OnItemGroupSelection_Pressed; // 0x2240(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 GroupIndex, int32 CategoryIndex)> OnItemGroupSelection_Held; // 0x2250(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 GroupIndex, int32 CategoryIndex)> OnItemGroupSelection_Released; // 0x2260(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 GroupIndex, int32 CategoryIndex)> OnItemGroupSelection_ItemChanged; // 0x2270(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bItemGroupSelectionHeld;                           // 0x2280(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2281[0x7];                                     // 0x2281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnAttachmentLightToggled;                          // 0x2288(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnToggledSight;                                    // 0x2298(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnLowReadyToggled;                                 // 0x22A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_22B8[0x10];                                    // 0x22B8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnGamepadCommandsChanged;                          // 0x22C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnMelee;                                           // 0x22D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_22E8[0x14];                                    // 0x22E8(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BaseFoV;                                           // 0x22FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SprintFovFactor;                                   // 0x2300(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SprintFovInterpTime;                               // 0x2304(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultFovInterpTime;                              // 0x2308(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_230C[0x14];                                    // 0x230C(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class APlayerCharacter* PlayerCharacter)> OnWeaponSwitchAmmoType;  // 0x2320(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class APlayerCharacter* PlayerCharacter)> OnChemlightThrown;       // 0x2330(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_2340[0x8];                                     // 0x2340(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class APlacedC2Explosive*                     PendingC2Removal;                                  // 0x2348(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABaseGrenade*                           QuickThrowItem;                                    // 0x2350(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2358[0x1];                                     // 0x2358(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bQuickThrowing;                                    // 0x2359(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_235A[0x6];                                     // 0x235A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AimTime;                                           // 0x2360(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2364[0x6];                                     // 0x2364(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bReloadLoop;                                       // 0x236A(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_236B[0xD];                                     // 0x236B(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class APlayerCharacter* PlayerCharacter)> OnWeaponReload;          // 0x2378(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class APlayerCharacter* PlayerCharacter)> OnWeaponTacticalReload;  // 0x2388(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_2398[0x10];                                    // 0x2398(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ABaseMagazineWeapon* MagazineWeapon)> OnWeaponMagCheck;      // 0x23A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_23B8[0x4];                                     // 0x23B8(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ForwardStrafeSpeedMultiplier;                      // 0x23BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BackwardStrafeSpeedMultiplier;                     // 0x23C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SideStrafeSpeedMultiplier;                         // 0x23C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanSpeedMultiplier;                               // 0x23C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedPercentLossPerLegInjury;                      // 0x23CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedPercentLossWhenCarrying;                      // 0x23D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCameraFreelookSetting                 FreelookSetting;                                   // 0x23D4(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_23E4[0x4];                                     // 0x23E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             VaultTraceForward;                                 // 0x23E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FHitResult                             VaultTraceDownClose;                               // 0x24D0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FHitResult                             VaultTraceDownMiddle;                              // 0x25B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FHitResult                             VaultTraceDownFar;                                 // 0x26A0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bLedgeFound;                                       // 0x2788(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVaulting;                                         // 0x2789(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_278A[0x56];                                    // 0x278A(0x0056)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           LastPlayedVaultMontage;                            // 0x27E0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27E8[0x8];                                     // 0x27E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UReadyOrNotInputConfig*                 InputConfig;                                       // 0x27F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputMappingContext*                   DefaultMappingContext;                             // 0x27F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputMappingContext*                   InvertedMappingContext;                            // 0x2800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputMappingContext*                   DefaultTriggersMappingContext;                     // 0x2808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputMappingContext*                   InvertedTriggersMappingContext;                    // 0x2810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputMappingContext*                   SwitchedBumpersTriggersMappingContext;             // 0x2818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MappingPriority;                                   // 0x2820(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RunSpeed;                                          // 0x2824(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAcceleration;                                   // 0x2828(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedModifier_AimFocus;                            // 0x282C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedModifier_Aim;                                 // 0x2830(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedModifier_Crouch;                              // 0x2834(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedModifier_Sprint;                              // 0x2838(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedModifier_SprintMax;                           // 0x283C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedModifier_SprintTime;                          // 0x2840(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HitSpeedMultiplier;                                // 0x2844(0x0004)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         SlowDownSpeedMultiplier;                           // 0x2848(0x0004)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         WalkSpeedRampMultiplier;                           // 0x284C(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         SprintSpeedRampUpMultiplier;                       // 0x2850(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class URONGameplayStats>       GameplayStats;                                     // 0x2854(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CurrentRunSpeedPercent;                            // 0x285C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2860[0x4];                                     // 0x2860(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxRunSpeedPercent;                                // 0x2864(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxCrouchRunSpeedPercent;                          // 0x2868(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinWalkSpeedPercent;                               // 0x286C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2870[0x10];                                    // 0x2870(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LastSetRunSpeed;                                   // 0x2880(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WalkSpeedMultiplier;                               // 0x2884(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DeployableWalkSpeedMultiplier;                     // 0x2888(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHoldingFastWalk;                                  // 0x288C(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHoldingSprint;                                    // 0x288D(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_288E[0xE];                                     // 0x288E(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bDisableSprinting : 1;                             // 0x289C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	bool                                          bWalking;                                          // 0x289D(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowPlacement;                                   // 0x289E(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_289F[0xA9];                                    // 0x289F(0x00A9)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MeshspaceInterp;                                   // 0x2948(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VelocityCameraRollMultiplier;                      // 0x294C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               PendingRecoil;                                     // 0x2950(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2968[0x18];                                    // 0x2968(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RecoilSpeed;                                       // 0x2980(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2984[0xC];                                     // 0x2984(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Last1PMontage;                                     // 0x2990(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class UAnimMontage*>      PlayedTableMontageMap1P;                           // 0x2998(0x0050)(UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_29E8[0x8];                                     // 0x29E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             JumpStartSound;                                    // 0x29F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             JumpLandSound;                                     // 0x29F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODSnapshot*                          InMix;                                             // 0x2A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODSnapshot*                          OutMix;                                            // 0x2A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutMixPlaying;                                    // 0x2A10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A11[0x7];                                     // 0x2A11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             InjuredScreamPVP;                                  // 0x2A18(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A20[0x8];                                     // 0x2A20(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             DeathScreamPVP;                                    // 0x2A28(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODAudioComponent*                    InjuredScreamComponent;                            // 0x2A30(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A38[0x4];                                     // 0x2A38(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MovementRequiredPerSound;                          // 0x2A3C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationRequiredPerSound;                          // 0x2A40(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NegativeVelocityRequiredForLandingSound;           // 0x2A44(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A48[0x38];                                    // 0x2A48(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMovementSound>                 WalkSounds;                                        // 0x2A80(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   WalkSounds_Environmental;                          // 0x2A90(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMovementSound>                 RunSounds;                                         // 0x2AB8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   RunSounds_Environmental;                           // 0x2AC8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMovementSound>                 TurningSounds;                                     // 0x2AF0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMovementSound>                 LandingSounds;                                     // 0x2B00(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B10[0x10];                                    // 0x2B10(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HitDirectionForward;                               // 0x2B20(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HitDirectionRight;                                 // 0x2B24(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B28[0x10];                                    // 0x2B28(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             BreathingBaseEvent;                                // 0x2B38(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExhaustionLevel;                                   // 0x2B40(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExhaustionDissipationRate;                         // 0x2B44(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExhaustionIncreaseRate;                            // 0x2B48(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExhaustionThreshold;                               // 0x2B4C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FearLevel;                                         // 0x2B50(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B54[0x4];                                     // 0x2B54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FearDissipationRate;                               // 0x2B58(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FearSuppressionScale;                              // 0x2B5C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FearThreshold;                                     // 0x2B60(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSightTweakMode;                                 // 0x2B64(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B65[0x3];                                     // 0x2B65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UUserWidget>                SightTweakerWidgetTemplate;                        // 0x2B68(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            SightTweakerOverlay;                               // 0x2B70(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SightTweakerPosOffset;                             // 0x2B78(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               SightTweakerRotOffset;                             // 0x2B90(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BA8[0x10];                                    // 0x2BA8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpawnProtectionTime;                               // 0x2BB8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsThirdPerson;                                    // 0x2BBC(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BBD[0x3];                                     // 0x2BBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Server_BaseAimRotation;                            // 0x2BC0(0x0018)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               FreeAimCache;                                      // 0x2BD8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BF0[0x8];                                     // 0x2BF0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          IsPlayingInteraction;                              // 0x2BF8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BF9[0x9F];                                    // 0x2BF9(0x009F)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsStopping;                                       // 0x2C98(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C99[0x7];                                     // 0x2C99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALadderSnapZone*                        LadderPlacementZone;                               // 0x2CA0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CA8[0xC];                                     // 0x2CA8(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MoveForwardInput;                                  // 0x2CB4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MoveRightInput;                                    // 0x2CB8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CBC[0x34];                                    // 0x2CBC(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LeftFootSocketName;                                // 0x2CF0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RighttFootSocketName;                              // 0x2CF8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFootConstEnum                                LeftFootEnum;                                      // 0x2D00(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFootConstEnum                                RightFootEnum;                                     // 0x2D01(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D02[0x2];                                     // 0x2D02(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FootAdjustOffset;                                  // 0x2D04(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootInterpSpeed;                                   // 0x2D08(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootRotationInterpSpeed;                           // 0x2D0C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HipInterpSpeed;                                    // 0x2D10(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceDistance;                                     // 0x2D14(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceOffset;                                       // 0x2D18(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VelocityThreshold;                                 // 0x2D1C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedBubbleAmount;                                 // 0x2D20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D24[0x4];                                     // 0x2D24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CurrentMeshRot;                                    // 0x2D28(0x0018)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D40[0x2];                                     // 0x2D40(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIgnoreRotationOverride;                           // 0x2D42(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D43[0x25];                                    // 0x2D43(0x0025)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CameraBobTrans;                                    // 0x2D68(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WeaponBobTrans;                                    // 0x2D80(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               WeaponBobRot;                                      // 0x2D98(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               CameraBobRot;                                      // 0x2DB0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsSecondarySightActive;                           // 0x2DC8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2DC9[0x7];                                     // 0x2DC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bUsingCantedSight)> OnCantedSightToggled;                     // 0x2DD0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bCantedSightEnabled;                               // 0x2DE0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2DE1[0x7];                                     // 0x2DE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnTabletFocused;                                   // 0x2DE8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_2DF8[0x18];                                    // 0x2DF8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bUsingSecondarySight, class ABaseMagazineWeapon* Weapon)> OnSecondarySightToggled; // 0x2E10(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bIsPelvisFPMovementBobActive;                      // 0x2E20(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E21[0x3];                                     // 0x2E21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PelvisFPMovementDamping;                           // 0x2E24(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCopyTPMeshTransformsToFP;                         // 0x2E28(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E29[0x9F];                                    // 0x2E29(0x009F)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            ScoreboardWidget;                                  // 0x2EC8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2ED0[0x8];                                     // 0x2ED0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommandInterface*                      CommandInterface;                                  // 0x2ED8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2EE0[0x10];                                    // 0x2EE0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bItemWheelPressed;                                 // 0x2EF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2EF1[0x67];                                    // 0x2EF1(0x0067)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractionsData*                      Doorkick_Pistol;                                   // 0x2F58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractionsData*                      Doorkick_Rifle;                                    // 0x2F60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDoorKickSeqBasedOnActiveItem;                  // 0x2F68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F69[0x7];                                     // 0x2F69(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AdjustScopeOffsetHorizontal(float NewOffset);
	void AdjustScopeOffsetVertical(float NewOffset);
	void ApplyPlayerEffect(class UBasePlayerEffect* InPlayerEffect, bool bResettable);
	void ApplyPlayerEffectFor(class UBasePlayerEffect* InPlayerEffect, float Seconds);
	void C2Door(class ADoor* Door);
	bool CalculateStopLocation(struct FVector* OutStopLocation, const struct FVector& CurrentLocation, const struct FVector& Velocity, const struct FVector& Acceleration, float Friction, float BrakingDeceleration, float TimeStep, int32 MaxSimulationIterations);
	bool CanQuickThrow();
	void CaptureFPCamera(float DeltaTime);
	void Client_ApplyPlayerEffect(TSubclassOf<class UBasePlayerEffect> InPlayerEffectClass, bool bResettable, bool bMulticast);
	void Client_AutoSelectNewQuickthrowItem(class ABaseGrenade* CallingGrenade);
	void Client_BulletHit(const struct FHitResult& BulletImpact);
	void Client_OnBeginRemoveC2(class APlacedC2Explosive* C2);
	void Client_OnEndRemoveC2();
	void Client_OnPlayerDamage(bool bTakenDamage, float InDamage, class AReadyOrNotCharacter* InstigatorCharacter, class AActor* DamageCauser);
	void Client_OnTakenDamageDetail(bool bWasHeadshot, bool bTorsoShot, bool bLeftArm, bool bLeftLeg, bool bRightArm, bool bRightLeg, float DamageTaken, float RemainingHealth, bool bBlockedByArmour, bool bBlockedByHelmet);
	void Client_PlayPostProcessEffect(const class FName& InPostProcessEffect, class AActor* DamageCauser);
	void Client_PossessedBy(class AController* NewController);
	void Client_ResetPlayerEffect(TSubclassOf<class UBasePlayerEffect> InPlayerEffectClass);
	void Client_SetWalkSpeed(float newWalkSpeed, float newCrouchWalkSpeed);
	void Client_StartPepperSprayed(class APepperspray* Pepperspray, const struct FVector& DamageCauserLocation);
	void Client_StartStun(EStunType StunType, class AActor* StunCauser, const struct FVector& DamageCauserLocation);
	void ClosePlayerView();
	void CreateHUDWidget();
	void CreateTeamViewWidget();
	void CycleFireMode();
	void DebugDetachAllComponentsAndSubComponents();
	void DestroyNonDevelopmentComponents();
	void DrawPermanentMarker();
	void Drone_MoveForward(float Val);
	void Drone_Right(float Val);
	void Drone_Steady();
	void Drone_Throttle(float Val);
	void Drone_Yaw(float Val);
	void EndPrimaryUse();
	void EndQuickThrow();
	void EndSecondaryUse();
	void EquipBatteringRam();
	void EquipBreachingShotgun();
	void EquipC2();
	void EquipCSGas();
	void EquipDetonator();
	void EquipDoorJam();
	void EquipFlashbang();
	class ABaseItem* EquipItemFromGroup_Index(int32 GroupIndex, int32 ItemCategoryIndex);
	class ABaseItem* EquipItemFromGroup_Name(class FName GroupName, int32 ItemCategoryIndex);
	class ABaseItem* EquipItemOfType(EItemCategory ItemCategory, const bool bSaveToHotkey);
	void EquipLongTactical();
	void EquipMirrorgun();
	void EquipMultitool();
	bool EquippedWeaponHasFireModes();
	void EquipPepperspray();
	void EquipPrimaryItem();
	void EquipSecondaryItem();
	void EquipStinger();
	void EquipZipcuffs();
	void FadeToBlackDisable();
	void FadeToBlackEnable();
	void FireLaserEyes();
	void ForceFirstDraw();
	void ForceMaxLODs_Items();
	void ForceMaxLODs_Player();
	void GamepadADSPressed();
	void GamepadADSReleased();
	TArray<class APlayerCharacter*> GetAllOtherPlayerCharacters(ETeamType Team);
	class APlayerCharacter* GetClosestPlayerCharacter(ETeamType Team, float* OutClosestDistance, bool bExcludeArrested);
	EFireMode GetFiringMode();
	struct FHitResult GetHitFromCamera(float MaxDistance, const TArray<ECollisionChannel>& CollisionChannels, const struct FRotator& OffsetRotation, const struct FVector& OffsetVector, bool bDrawTrace);
	bool HasBSG();
	bool HasC2();
	bool HasLockpick();
	bool HasNVG();
	bool HasOptiwand();
	bool HasWedge();
	void HidePlayer();
	void IncrementalUse(float Val);
	void InitializeHudWidgetTrainingState();
	bool IsInLightSource(int32* VisibleLightSources, float MinimumLightLevel);
	void JamDoor(class ADoor* Door);
	void LocalArrestFeed(class APlayerCharacter* Arrester, class APlayerCharacter* Victim);
	void LocalDeathFeed(class AReadyOrNotPlayerController* PlayerController);
	void LocalFreeFeed(class APlayerCharacter* Freer, class APlayerCharacter* Victim);
	void LocalKillFeed(class APlayerCharacter* Killer, class APlayerCharacter* Victim, class ABaseItem* Weapon);
	void MagCheck();
	void Melee();
	void Multicast_HideThirdPerson();
	void Multicast_PlayArmourRelatedEffects(class ABaseArmour* Armour, class UParticleSystem* Particle, const struct FTransform& AtTransform);
	void Multicast_PlayInjuredScream();
	void Multicast_PlayPVPSpeech(const class FString& SpeechRowName, ETeamType TeamType);
	void Multicast_PlaySound(class USoundCue* Cue);
	void Multicast_ShowThirdPerson();
	void Multicast_ThrowChemlight();
	void OnBulletImpact(float DirectionForward, float DirectionRight);
	void OnChatPressed();
	void OnFullHealth();
	void OnItemPrimaryUse(class ABaseItem* Item);
	void OnItemPrimaryUseCompleted(class ABaseItem* Item);
	void OnItemSelectionStyleChanged(EItemSelectionInterfaceType NewItemSelectionInterface);
	void OnJumpLand();
	void OnJumpStart();
	void OnKilledOrGoneUnconciousBP();
	void OnLowHealth(float CurrentHealth);
	void OnLowReadyButtonDown();
	void OnLowReadyButtonUp();
	void OnPlayerEffectExpired(TSubclassOf<class UReadyOrNotGameplayEffect> InPlayerEffectClass);
	void OnRep_BaseAimRotation();
	void OnRep_RunSpeedUpdate();
	void OnRep_StartBoneBlend();
	void OnRep_UpdateAnimInstance();
	void OnSelectDevicePressed(const struct FKey& Key);
	void OnSelectDeviceReleased(const struct FKey& Key);
	void OnSupression(float Strength);
	void OnTabletEquipped(class ABaseItem* NewEquippedItem);
	void OnTeamChatPressed();
	void OnTurn();
	void Ping();
	void PlayVaultAnimation(const struct FVector& ledge, const struct FVector& ledgeWallNormal, const struct FVector& ledgeTraceDown, float ledgeZ, ELedgeWidth ledgeWidth, ELedgeHeight ledgeHeight);
	void PrimaryUse();
	void PrintItemAttachmentListToLog();
	void Reload();
	void ReloadOrMagCheck();
	void ReloadOrMagCheck_Released();
	void RemovePendingC2();
	void ReplenishAllGrenadeAmmo();
	void ReplenishAllMagazineAmmo();
	void ResetLODs_Items();
	void ResetLODS_Player();
	void RestoreInputConfig();
	void ScreenPositionToWeaponFOV(const struct FVector2D& ScreenPosition, struct FVector* WorldPosition, struct FVector* WorldDirection);
	void SecondaryUse();
	void Server_ApplyPlayerEffect(TSubclassOf<class UBasePlayerEffect> InPlayerEffectClass, bool bResettable, bool bMulticast);
	void Server_ApplyPlayerEffectFor(TSubclassOf<class UBasePlayerEffect> InPlayerEffectClass, float Seconds, bool bMulticast);
	void Server_ArrestfeedMessage(class APlayerCharacter* Arrester, class APlayerCharacter* Victim);
	void Server_ChangeFPMesh(class USkeletalMesh* NewFPMesh);
	void Server_ChangeMesh(class USkeletalMesh* FPMesh, class USkeletalMesh* TPMesh, class USkeletalMesh* TPHeadMesh);
	void Server_EndFastWalk();
	void Server_EndPrimaryUse();
	void Server_EquipMultitool(EMultitoolFunctions MultitoolFunction);
	void Server_FastWalk();
	void Server_FinishHealing();
	void Server_FreefeedMessage(class APlayerCharacter* Freer, class APlayerCharacter* Victim);
	void Server_GiveAIMoveTo(class ACyberneticCharacter* AI, const struct FVector& Location);
	void Server_GiveAIMoveToExit(class ACyberneticCharacter* AI);
	void Server_GiveAITurnAroundOrder(class ACyberneticCharacter* AI);
	void Server_InstantSurrenderTarget();
	void Server_InstaStartArrest(class APlayerCharacter* Target);
	void Server_InstaStartFree(class APlayerCharacter* Target);
	void Server_KillfeedMessage(class APlayerCharacter* Killer, class APlayerCharacter* Victim, class ABaseItem* Weapon);
	void Server_LockAim();
	void Server_LockAllActions();
	void Server_LockMovement();
	void Server_LockMovementAndActions();
	void Server_LockMovementAndAim();
	void Server_OnReloadComplete();
	void Server_OnReviveComplete(class APlayerCharacter* PlayerCharacter);
	void Server_Ping();
	void Server_PlayPVPSpeech(const class FString& SpeechRowName, ETeamType TeamType);
	void Server_PlaySound(class USoundCue* Cue);
	void Server_PlayVaultAnimation(const struct FVector& ledge, const struct FVector& legeWallNormal, const struct FVector& ledgeTraceDown, float ledgeZ, ELedgeWidth ledgeWidth, ELedgeHeight ledgeHeight);
	void Server_PrepareForHeal();
	void Server_PrimaryUse();
	void Server_RemoveLadder(class ATelescopicLadder* Ladder);
	void Server_ResetPlayerEffect(TSubclassOf<class UBasePlayerEffect> InPlayerEffectClass, bool bMulticast);
	void Server_SecondaryUse();
	void Server_SetLowReady(bool bUp, bool bLowReady, bool bIsUserLowReady);
	void Server_SetUserLowReady(bool bShouldUserLowReady);
	void Server_SetWalkSpeed(float newWalkSpeed, float newCrouchWalkSpeed);
	void Server_SpawnEjectedMagazine(const struct FTransform& SpawnTransform, class ABaseMagazineWeapon* Weapon);
	void Server_Sprint();
	void Server_StopAIMoveTo(class ACyberneticCharacter* AI);
	void Server_TakeDamage(float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	void Server_TeleportPlayerToLocation(const struct FVector& Location, const struct FVector& Direction);
	void Server_ThrowChemlight();
	void Server_ToggleFastMovement();
	void Server_ToggleGodMode();
	void Server_ToggleLaserLight(class ABaseWeapon* Weapon, bool bOn);
	void Server_ToggleNoTarget();
	void Server_ToggleWalk();
	void Server_UnlockAim();
	void Server_UnlockAllActions();
	void Server_UnlockMovement();
	void Server_UnlockMovementAndActions();
	void Server_UnlockMovementAndAim();
	void Server_UpdateADS(bool bADS);
	void Server_UpdateCameraRotationRate(const struct FRotator& NewCameraRotRate);
	void Server_UpdateFreeLookCache(const struct FRotator& NewFreeLookCache);
	void Server_UpdateIsBlockingAnimationPlaying(bool bIsBlockingAnimationPlaying);
	void Server_UpdateLastSetRunSpeed(float newRunSpeed);
	void Server_Walk();
	void SetAmmo(const class FString& AmmoType);
	void SetCantedSightEnabledByTrigger(bool Enabled);
	void SetCommandInterfaceActive(bool CommandInterfaceActive);
	void SetForceLowReady(bool bShouldForceLowReady);
	void SetFreelookPitchMax(float NewPitchMaxValue);
	void SetFreelookPitchMin(float NewPitchMinValue);
	void SetFreelookYawMax(float NewYawMaxValue);
	void SetFreelookYawMin(float NewYawMinValue);
	void SetHumanCharacterWidget_V2(class UHumanCharacterHUD_V2* NewHumanCharacterWidget);
	void SetMaxRunSpeed(float newMaxSpeed);
	void SetRunSpeed(float newRunSpeed);
	void SetTabletFocused(bool bFocused);
	void SetWeaponFov(float InFieldOfView);
	void ShowPlayer();
	void StartBleeding();
	void StartChemThrow();
	void StartFreeLook();
	void StartLockPicking(class AActor* Target);
	void StartQuickThrow();
	void StartUsingMultitool(class AActor* Target);
	void StopFPMontageFromTable(const class FString& Animation, float BlendoutTime);
	void StopFreeLook();
	void StopLockPicking(class AActor* Target);
	void StopUsingMultitool(class AActor* Target);
	void TeleportPlayerToLocation(const struct FVector& Location, const struct FVector& Direction);
	void ToggleCrosshairOverlay();
	void ToggleCrouch();
	void ToggleFastMovement();
	void ToggleFreeLook();
	void ToggleFreeThirdPerson();
	void ToggleGodMode();
	void ToggleHUD();
	void ToggleLowReady();
	void ToggleNoTarget();
	void ToggleSecondarySight();
	void ToggleSightTweaker();
	void ToggleSprint();
	void ToggleThirdPerson();
	void ToggleUnderbarrelAttachment();
	void TryNextPlayerView();
	void TryNextPlayerView_Released();
	void UpdateInputMethod(ECommonInputType InputType);
	void UpdateInputModifiers();
	void UpdatePictureInPictureVisibility();
	void UpdateSettings();

	bool CanPingActor(class AActor* Actor) const;
	bool CanUseIncrementalSystem() const;
	bool EquippedWeaponHasLaserAttachment() const;
	bool EquippedWeaponHasLightAttachment() const;
	bool EquippedWeaponHasSecondarySight() const;
	struct FRotator GetAimOffsets() const;
	TArray<class AReadyOrNotCharacter*> GetAvaliablePlayersForTeamView(const bool bIncludeDeadViews) const;
	int32 GetChemlightAmmo() const;
	struct FCameraFreelookSetting GetCurrentFreelookSettings() const;
	int32 GetQuickthrowGrenadeAmmo() const;
	float GetViewPitch() const;
	bool HasChemlightsInInventory() const;
	bool HasGrenadesInInventory() const;
	bool Is1PMontagePlaying(class UAnimMontage* Montage) const;
	bool IsAny1PMontagePlaying() const;
	bool IsFireModeSelectPlaying() const;
	bool IsFreelooking() const;
	bool IsHoldingFastWalk() const;
	bool IsHoldingSprint() const;
	bool IsInCinematicAnimation() const;
	bool IsMagCheckPlaying() const;
	bool IsMoving() const;
	bool IsMovingForward() const;
	bool IsSprinting() const;
	bool IsTabletFocused() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerCharacter")
	}
	static class APlayerCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerCharacter>();
	}
};
DUMPER7_ASSERTS_APlayerCharacter;

// Class ReadyOrNot.SniperCharacter
// 0x0040 (0x2FB0 - 0x2F70)
class ASniperCharacter final : public APlayerCharacter
{
public:
	int32                                         Designation;                                       // 0x2F70(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bADSLocked;                                        // 0x2F74(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F75[0x3];                                     // 0x2F75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ExitControlHandle;                                 // 0x2F78(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UScopedWeaponAttachment>    PrimaryScopeAttachment;                            // 0x2F80(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponAttachment>          PrimaryMuzzleAttachment;                           // 0x2F88(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponAttachment>          PrimaryUnderbarrelAttachment;                      // 0x2F90(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UScopedWeaponAttachment>    SecondaryScopeAttachment;                          // 0x2F98(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponAttachment>          SecondaryMuzzleAttachment;                         // 0x2FA0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponAttachment>          SecondaryUnderbarrelAttachment;                    // 0x2FA8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ExitControl();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SniperCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SniperCharacter")
	}
	static class ASniperCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASniperCharacter>();
	}
};
DUMPER7_ASSERTS_ASniperCharacter;

// Class ReadyOrNot.AG_SquadMemberHasTarget
// 0x0000 (0x0028 - 0x0028)
class UAG_SquadMemberHasTarget final : public UAIActionGate
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_SquadMemberHasTarget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_SquadMemberHasTarget")
	}
	static class UAG_SquadMemberHasTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_SquadMemberHasTarget>();
	}
};
DUMPER7_ASSERTS_UAG_SquadMemberHasTarget;

// Class ReadyOrNot.AG_IsRunningSquadRole
// 0x0020 (0x0048 - 0x0028)
class UAG_IsRunningSquadRole final : public UAIActionGate
{
public:
	struct FGameplayTagContainer                  SquadRolesToCheck;                                 // 0x0028(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_IsRunningSquadRole")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_IsRunningSquadRole")
	}
	static class UAG_IsRunningSquadRole* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_IsRunningSquadRole>();
	}
};
DUMPER7_ASSERTS_UAG_IsRunningSquadRole;

// Class ReadyOrNot.AG_IsSquadRunningActivity
// 0x0020 (0x0048 - 0x0028)
class UAG_IsSquadRunningActivity final : public UAIActionGate
{
public:
	struct FGameplayTagContainer                  SquadActivitiesToCheck;                            // 0x0028(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_IsSquadRunningActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_IsSquadRunningActivity")
	}
	static class UAG_IsSquadRunningActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_IsSquadRunningActivity>();
	}
};
DUMPER7_ASSERTS_UAG_IsSquadRunningActivity;

// Class ReadyOrNot.ReadyOrNotBackend
// 0x04C0 (0x04E8 - 0x0028)
class UReadyOrNotBackend final : public UObject
{
public:
	class FString                                 SteamId;                                           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 SteamName;                                         // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 Ticket;                                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 CachedDiscordOneTimeUseCode;                       // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_68[0x10];                                      // 0x0068(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         rgchToken[0x400];                                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_478[0x18];                                     // 0x0478(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnStatsStarted;                                    // 0x0490(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Filename, float Percentage)> OnStatsUploadProgress; // 0x04A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B0[0x10];                                     // 0x04B0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bWasSuccessful, const class FString& StatsName)> OnStatsSaved; // 0x04C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bProfileInProgress;                                // 0x04D0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D1[0x17];                                     // 0x04D1(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnFinishedCapturingProfile();
	void OnGameCrashedMetric(const class FString& InState);
	void OnGameFinishedMetric(const class FString& InMap, const class FString& InGameType, const class FString& InGameResult);
	void OnGameLaunchedMetric(const class FString& PlayerId);
	void OnGameStartedMetric(const class FString& InMap, const class FString& InGameType, const int32 InNumPlayers, const class FString& Difficulty, const TArray<class FString>& PlatformsArray);
	void OnPlayerGameFinishedMetric(const class FString& InMap, const class FString& InGameType, float InAverageFps);
	void StartCapturingProfile();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotBackend")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotBackend")
	}
	static class UReadyOrNotBackend* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotBackend>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotBackend;

// Class ReadyOrNot.AG_TimesInCompliance
// 0x0008 (0x0030 - 0x0028)
class UAG_TimesInCompliance final : public UAIActionGate
{
public:
	int32                                         MaxTimesInCompliance;                              // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_TimesInCompliance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_TimesInCompliance")
	}
	static class UAG_TimesInCompliance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_TimesInCompliance>();
	}
};
DUMPER7_ASSERTS_UAG_TimesInCompliance;

// Class ReadyOrNot.SWATManager
// 0x0D00 (0x0D40 - 0x0040)
class USWATManager final : public UTickableWorldSubsystem
{
public:
	uint8                                         Pad_40[0x90];                                      // 0x0040(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASWATCharacter*>                 SwatAI;                                            // 0x00D0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ATrailerSWATCharacter*>          SwatTrailers;                                      // 0x00E0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class ASWATCharacter*                         ClosestFallInSwat;                                 // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class ASWATCharacter*, float>            FallInSwat_PathFound;                              // 0x00F8(0x0050)(NativeAccessSpecifierPublic)
	TArray<class ASWATCharacter*>                 FallInSwat;                                        // 0x0148(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ASWATCharacter*>                 FallInSwat_FileA;                                  // 0x0158(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ASWATCharacter*>                 FallInSwat_FileB;                                  // 0x0168(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ASWATCharacter*>                 FallInSwat_Diamond;                                // 0x0178(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<ETeamType, struct FClearQueueInfo>       ClearingQueue;                                     // 0x0188(0x0050)(NativeAccessSpecifierPublic)
	TMap<struct FIntVector, class ASWATCharacter*> OccupiedLookAtPoints;                             // 0x01D8(0x0050)(UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class AActor*, class FString>            CallOutQueue;                                      // 0x0228(0x0050)(NativeAccessSpecifierPublic)
	TArray<class AActor*>                         CallOutHistory;                                    // 0x0278(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class AActor*, class ASWATCharacter*>    ReportQueue;                                       // 0x0288(0x0050)(UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D8[0x9B0];                                    // 0x02D8(0x09B0)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   SquadLeader;                                       // 0x0C88(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ETeamType, struct FQueuedSwatCommand>    QueuedSwatCommandMap;                              // 0x0C90(0x0050)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	ESwatCommand                                  CurrentDefaultCommand;                             // 0x0CE0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeamType                                     ActiveCommandTeam;                                 // 0x0CE1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CE2[0x5E];                                     // 0x0CE2(0x005E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<class ASWATCharacter*> GetSWATSortedByDistanceToLocation(const struct FVector& Location, ETeamType FilterTeam, class ADoor* StackUpDoor, bool bAscendingOrder);
	TArray<class ASWATCharacter*> GetSWATSortedByDistanceToLocationV2(const struct FVector& Location, const TArray<class ASWATCharacter*>& ExcludedSwat, ETeamType FilterTeam, bool bAscendingOrder);
	void GiveBreachAndClearCommand(class ADoor* Door, EDoorBreachType DoorBreachType, ETeamType TeamType, const struct FVector& CommandLocation, TSubclassOf<class ABaseItem> DoorBreachItemClass, TSubclassOf<class ABaseItem> DoorUseItemClass, bool bWithLeader, bool bWithLeaderItem, bool bAutoClear, bool bLastAutoClear, EStackUpStyle CustomStackUpStyle);
	void GiveCheckForContactsCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation, const struct FVector& CommandNormal);
	void GiveCheckForTrapsCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation, const struct FVector& CommandNormal);
	void GiveCloseDoorCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation);
	void GiveCollectEvidenceCommand(class AActor* Target, ETeamType TeamType);
	void GiveCoverAreaCommand(ETeamType TeamType, const struct FVector& CommandLocation);
	void GiveDeployGrenadeAtLocation(ETeamType TeamType, const struct FVector& CommandLocation, TSubclassOf<class ABaseGrenade> Grenade);
	void GiveDeployNonLethalItemAtTargetCommand(class AReadyOrNotCharacter* Target, ETeamType TeamType, EItemCategory Item);
	void GiveDeployShield(ETeamType TeamType);
	void GiveDisarmStandaloneTrapCommand(class AActor* Target, ETeamType TeamType);
	void GiveDisarmTrapOnDoorCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation);
	void GiveDropChemlightAtLocation(ETeamType TeamType, const struct FVector& CommandLocation);
	void GiveFallInCommand(ETeamType TeamType, EFallInPattern FallInPattern);
	void GiveHoldCommand(ETeamType TeamType);
	void GiveMoveCommand(ETeamType TeamType, const struct FVector& CommandLocation);
	void GiveOpenDoorCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation);
	void GivePickLockCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation);
	void GiveRemoveWedgeCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation, const struct FVector& CommandNormal);
	void GiveReportTargetCommand(class AActor* Target, ETeamType TeamType);
	void GiveRestrainCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation);
	void GiveScanDoorCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation, EDoorScanMethod ScanMethod);
	void GiveSearchAndSecureCommand(ETeamType TeamType, const struct FVector& CommandLocation, bool bOnlyCurrentRoom);
	void GiveSearchAndSecureCommand_Individual(class AActor* Target, const struct FVector& CommandLocation, bool bOnlyCurrentRoom);
	void GiveStackUpCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation, const struct FVector& CommandNormal, bool bCheckDoor, EStackUpStyle StackUpStyle);
	void GiveWedgeDoorCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation, const struct FVector& CommandNormal);
	void OnActivityStarted(class UBaseActivity* Activity, class ACyberneticController* OwningController);
	void OnLeaderToggledNightvision(class AReadyOrNotCharacter* Character, bool bOn);
	void OnSwatFinishedClearing(class UTeamBreachAndClearActivity* BreachAndClearActivity, bool bAuto);
	void OnSwatFinishedRoomSearch(class USearchAndSecureActivity* SearchAndSecureActivity, class ADoor* BreachedDoor);
	void OnTrailerSearchComplete(class UBaseActivity* Activity, class ACyberneticController* Controller);
	void PlaySwatCommandVoiceLine(const class FString& VoiceLine, const class FString& OverrideSpearkerName, bool bTeamPrefix);
	void RemoveHoldCommand(ETeamType TeamType);

	bool CanGiveActivityToSWAT(class ASWATCharacter* swat, ETeamType Team) const;
	struct FVector GetAverageSwatLocation() const;
	ESwatCommand GetQueuedSwatCommandForSquadPosition(ESquadPosition SquadPosition) const;
	class AReadyOrNotCharacter* GetSquadLeader() const;
	class ASWATCharacter* GetSwatCharacterAtSquadPosition(ESquadPosition InSquadPosition) const;
	uint8 GetSWATCount() const;
	TArray<class ASWATCharacter*> GetSwatTeam() const;
	bool IsCharacterKnownEnemy(class AReadyOrNotCharacter* InCharacter) const;
	bool IsSWATTeamDead(ETeamType Team) const;
	bool IsSWATTeamHoldingPosition(ETeamType Team) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SWATManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SWATManager")
	}
	static class USWATManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<USWATManager>();
	}
};
DUMPER7_ASSERTS_USWATManager;

// Class ReadyOrNot.BleedDamageType
// 0x0000 (0x0040 - 0x0040)
class UBleedDamageType final : public UDamageType
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BleedDamageType")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BleedDamageType")
	}
	static class UBleedDamageType* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBleedDamageType>();
	}
};
DUMPER7_ASSERTS_UBleedDamageType;

// Class ReadyOrNot.ReadyOrNotSoundSettings
// 0x0038 (0x0070 - 0x0038)
class UReadyOrNotSoundSettings final : public UDeveloperSettings
{
public:
	uint8                                         Pad_38[0x4];                                       // 0x0038(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DoorOcclusionAdditive;                             // 0x003C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WindowOcclusionAdditive;                           // 0x0040(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutsidePathOcclusionDistance;                      // 0x0044(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutsideOcclusionMultiplier;                        // 0x0048(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AngleOcclusionMultiplier;                          // 0x004C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ObstructionOcclusionAdditive;                      // 0x0050(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DoorReflectionAdditive;                            // 0x0054(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WindowReflectionAdditive;                          // 0x0058(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutsidePathReflectionDistance;                     // 0x005C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutsideReflectionMultiplier;                       // 0x0060(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AngleReflectionMultiplier;                         // 0x0064(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ObstructionReflectionAdditive;                     // 0x0068(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotSoundSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotSoundSettings")
	}
	static class UReadyOrNotSoundSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotSoundSettings>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotSoundSettings;

// Class ReadyOrNot.AG_NumberOfSquadMembersAlive
// 0x0008 (0x0030 - 0x0028)
class UAG_NumberOfSquadMembersAlive final : public UAIActionGate
{
public:
	int32                                         RequiredNumber;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyActive;                                       // 0x002C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_NumberOfSquadMembersAlive")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_NumberOfSquadMembersAlive")
	}
	static class UAG_NumberOfSquadMembersAlive* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_NumberOfSquadMembersAlive>();
	}
};
DUMPER7_ASSERTS_UAG_NumberOfSquadMembersAlive;

// Class ReadyOrNot.AG_NumberOfSquadMembersKilled
// 0x0008 (0x0030 - 0x0028)
class UAG_NumberOfSquadMembersKilled final : public UAIActionGate
{
public:
	int32                                         RequiredNumber;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeIncapacitated;                             // 0x002C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_NumberOfSquadMembersKilled")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_NumberOfSquadMembersKilled")
	}
	static class UAG_NumberOfSquadMembersKilled* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_NumberOfSquadMembersKilled>();
	}
};
DUMPER7_ASSERTS_UAG_NumberOfSquadMembersKilled;

// Class ReadyOrNot.ReadyOrNotSaveGame
// 0x0068 (0x0090 - 0x0028)
class UReadyOrNotSaveGame final : public USaveGame
{
public:
	class FString                                 SaveSlotName;                                      // 0x0028(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        UserIndex;                                         // 0x0038(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ETeamType, TSubclassOf<class USkinComponent>> SkinSaveMap;                                  // 0x0040(0x0050)(BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UReadyOrNotSaveGame* CreateDefaultSavegame(const class FString& LoadSlotName);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotSaveGame")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotSaveGame")
	}
	static class UReadyOrNotSaveGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotSaveGame>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotSaveGame;

// Class ReadyOrNot.AG_NumberOfSquadMembersArrested
// 0x0008 (0x0030 - 0x0028)
class UAG_NumberOfSquadMembersArrested final : public UAIActionGate
{
public:
	int32                                         RequiredNumber;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_NumberOfSquadMembersArrested")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_NumberOfSquadMembersArrested")
	}
	static class UAG_NumberOfSquadMembersArrested* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_NumberOfSquadMembersArrested>();
	}
};
DUMPER7_ASSERTS_UAG_NumberOfSquadMembersArrested;

// Class ReadyOrNot.ReadyOrNotCommonRichTextBlock
// 0x0010 (0x08F0 - 0x08E0)
class UReadyOrNotCommonRichTextBlock final : public UCommonRichTextBlock
{
public:
	uint8                                         Pad_8E0[0x10];                                     // 0x08E0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ResetTextScroll();
	void StartTextScroll();
	void SuspendTextScroll();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotCommonRichTextBlock")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotCommonRichTextBlock")
	}
	static class UReadyOrNotCommonRichTextBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotCommonRichTextBlock>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotCommonRichTextBlock;

// Class ReadyOrNot.AG_SquadMemberThreat
// 0x0008 (0x0030 - 0x0028)
class UAG_SquadMemberThreat final : public UAIActionGate
{
public:
	int32                                         RequiredThreat;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EComparisonOp                                 ComparisonType;                                    // 0x002C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AG_SquadMemberThreat")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AG_SquadMemberThreat")
	}
	static class UAG_SquadMemberThreat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAG_SquadMemberThreat>();
	}
};
DUMPER7_ASSERTS_UAG_SquadMemberThreat;

// Class ReadyOrNot.BlockList_Entry
// 0x0020 (0x0438 - 0x0418)
class UBlockList_Entry : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlockListData*                         ListData;                                          // 0x0420(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             PlayerName;                                        // 0x0428(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 Avatar;                                            // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnAvatarFetched(class UTexture2DDynamic* InTexture);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BlockList_Entry")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BlockList_Entry")
	}
	static class UBlockList_Entry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlockList_Entry>();
	}
};
DUMPER7_ASSERTS_UBlockList_Entry;

// Class ReadyOrNot.SoundPropagator
// 0x0078 (0x0310 - 0x0298)
class ASoundPropagator final : public AActor
{
public:
	TMap<class APropagationPoint*, float>         PropagationPoints;                                 // 0x0298(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	uint8                                         bStopPropagationIfClosestToSound : 1;              // 0x02E8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PathTracerRefreshRate;                             // 0x02EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NavCheckRefreshRate;                               // 0x02F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bEnableDebugSpheres : 1;                           // 0x02F4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnableDebugPathPoints : 1;                        // 0x02F4(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponent;                                    // 0x02F8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          PropagationSwitchEnter;                            // 0x0300(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          PropagationSwitchExit;                             // 0x0308(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnPropagationEnterOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnPropagationExitOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SoundPropagator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SoundPropagator")
	}
	static class ASoundPropagator* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASoundPropagator>();
	}
};
DUMPER7_ASSERTS_ASoundPropagator;

// Class ReadyOrNot.AIActionPresetData
// 0x02F0 (0x0320 - 0x0030)
class UAIActionPresetData final : public UDataAsset
{
public:
	struct FAIActionData                          Action;                                            // 0x0030(0x02F0)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AIActionPresetData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AIActionPresetData")
	}
	static class UAIActionPresetData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIActionPresetData>();
	}
};
DUMPER7_ASSERTS_UAIActionPresetData;

// Class ReadyOrNot.AIArchetypeData
// 0x0118 (0x0148 - 0x0030)
class UAIArchetypeData final : public UDataAsset
{
public:
	class FString                                 Name_0;                                            // 0x0030(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bEnableAlertActions : 1;                           // 0x0040(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAIActionDataContainer>         AlertActions;                                      // 0x0048(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         bEnableUnalertActions : 1;                         // 0x0058(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAIActionDataContainer>         UnalertActions;                                    // 0x0060(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         bEnableSuspiciousActions : 1;                      // 0x0070(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAIActionDataContainer>         SuspiciousActions;                                 // 0x0078(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         bEnableContinuousActions : 1;                      // 0x0088(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAIActionData_NameOnly>         ContinuousActions;                                 // 0x0090(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAIActionDataContainer>         ContinuousActionsCache;                            // 0x00A0(0x0010)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         bEnableCombatMoveActions : 1;                      // 0x00B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAIActionDataContainer>         CombatMoveActions;                                 // 0x00B8(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         bEnableTraitActions : 1;                           // 0x00C8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAITraitActionData>             TraitActions;                                      // 0x00D0(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         bEnableSquadActions : 1;                           // 0x00E0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAISquadActionDataContainer>    SquadActions;                                      // 0x00E8(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         bOverrideAimSettings : 1;                          // 0x00F8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FocalPointInterpSpeed;                             // 0x00FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAlphaBlendOption                             FocalPointInterpCurve;                             // 0x0100(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FocusTurnSpeed;                                    // 0x0104(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurnDegreesPerSecond;                              // 0x0108(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActorRotationInterpStandingSpeed;                  // 0x010C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActorRotationInterpMovingSpeed;                    // 0x0110(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AimOffsetInterpSpeed;                              // 0x0114(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIgnoreDamageHitReactions : 1;                     // 0x0118(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EAIAwarenessState>                     AllowCombatMoveInState;                            // 0x0120(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         bSuppressionRequiresLOSOnLastKnownEnemyPosition : 1; // 0x0130(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAccuracyOverride : 1;                             // 0x0130(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Accuracy;                                          // 0x0134(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bMoraleOverride : 1;                               // 0x0138(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinMorale;                                         // 0x013C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxMorale;                                         // 0x0140(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bDisableVO : 1;                                    // 0x0144(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AIArchetypeData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AIArchetypeData")
	}
	static class UAIArchetypeData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIArchetypeData>();
	}
};
DUMPER7_ASSERTS_UAIArchetypeData;

// Class ReadyOrNot.StunDamage
// 0x0770 (0x07B0 - 0x0040)
class UStunDamage : public UDamageType
{
public:
	bool                                          bProjectileStun;                                   // 0x0040(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ULegacyCameraShake>         StunShake;                                         // 0x0048(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPostProcessSettings                   PostProcessSettings;                               // 0x0050(0x06E0)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UAnimMontage*                           HitMontage_3P;                                     // 0x0730(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               CameraRotationOffset;                              // 0x0738(0x0018)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         AppliedSpeed;                                      // 0x0750(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxMovementSpeedWhenStunned;                       // 0x0754(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DoorDamageMultiplier;                              // 0x0758(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDamageAllDoorPiecesAtOnce;                        // 0x075C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanPushDoorWithForce;                             // 0x075D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_75E[0x2];                                      // 0x075E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DoorPushScale;                                     // 0x0760(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_764[0x4];                                      // 0x0764(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              ImpactSound;                                       // 0x0768(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStunType                                     StunType;                                          // 0x0770(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayAudioWhenHit;                                 // 0x0771(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_772[0x6];                                      // 0x0772(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             StunSoundEffect;                                   // 0x0778(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCauseHealthDamage;                                // 0x0780(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCausesSuppression;                                // 0x0781(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBreaksDestructibles;                              // 0x0782(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_783[0x1];                                      // 0x0783(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SuppressionAmount;                                 // 0x0784(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         SuppressionCameraShake;                            // 0x0788(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMustBeLookingAtDamageCauser;                      // 0x0790(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStunLocksAim;                                     // 0x0791(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_792[0x2];                                      // 0x0792(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StunSpeedMultiplier;                               // 0x0794(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponDownLengthOnStun;                            // 0x0798(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNonLethal;                                        // 0x079C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79D[0x3];                                      // 0x079D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LessThanLethalAmount;                              // 0x07A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AdditionalUpcloseDamageIncrease;                   // 0x07A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AdditionalHeadDamageIncrease;                      // 0x07A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSwatAIIsAbuse;                                    // 0x07AC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bChildAIIsAbuse;                                   // 0x07AD(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCompliantIsAbuse;                                 // 0x07AE(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bArrestedIsAbuse;                                  // 0x07AF(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ScriptedStunEvent(class AReadyOrNotCharacter* Victim, float* Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StunDamage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StunDamage")
	}
	static class UStunDamage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStunDamage>();
	}
};
DUMPER7_ASSERTS_UStunDamage;

// Class ReadyOrNot.BeanbagDamageType
// 0x0000 (0x07B0 - 0x07B0)
class UBeanbagDamageType : public UStunDamage
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BeanbagDamageType")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BeanbagDamageType")
	}
	static class UBeanbagDamageType* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBeanbagDamageType>();
	}
};
DUMPER7_ASSERTS_UBeanbagDamageType;

// Class ReadyOrNot.AICombatMovesWidget
// 0x0030 (0x02F8 - 0x02C8)
class UAICombatMovesWidget final : public UUserWidget
{
public:
	class UVerticalBox*                           CombatMoves_VerticalBox;                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             AIName_TextBlock;                                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                NextAI_Button;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACyberneticCharacter*                   CurrentAI;                                         // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAICombatMovesWidgetEntry>  WidgetEntryClass;                                  // 0x02E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                AIWorldWidgetClass;                                // 0x02F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnNextAIButtonClicked();
	void SetAIToFocus(class ACyberneticCharacter* CyberneticCharacter);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AICombatMovesWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AICombatMovesWidget")
	}
	static class UAICombatMovesWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAICombatMovesWidget>();
	}
};
DUMPER7_ASSERTS_UAICombatMovesWidget;

// Class ReadyOrNot.PlayerActionPromptWidget
// 0x0038 (0x0328 - 0x02F0)
class UPlayerActionPromptWidget : public UBaseWidget
{
public:
	uint8                                         Pad_2F0[0x10];                                     // 0x02F0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ActionText;                                        // 0x0300(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Anim_OnShow;                                       // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bInUse : 1;                                        // 0x0320(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClearText();
	void OnScalingSet(float Scale);
	void RefreshWidget();
	void SetUIScaling();
	void UpdateText(const class FText& InText, bool bAnimate, bool bLoopAnimation);

	class FText GetActionText() const;
	bool IsInUse() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerActionPromptWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerActionPromptWidget")
	}
	static class UPlayerActionPromptWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerActionPromptWidget>();
	}
};
DUMPER7_ASSERTS_UPlayerActionPromptWidget;

// Class ReadyOrNot.AICombatMovesWidgetEntry
// 0x0020 (0x02E8 - 0x02C8)
class UAICombatMovesWidgetEntry final : public UUserWidget
{
public:
	class UTextBlock*                             CombatAction_TextBlock;                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             SuccessfulConsiderations_TextBlock;                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             FailedConsiderations_TextBlock;                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             RunTime_TextBlock;                                 // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AICombatMovesWidgetEntry")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AICombatMovesWidgetEntry")
	}
	static class UAICombatMovesWidgetEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAICombatMovesWidgetEntry>();
	}
};
DUMPER7_ASSERTS_UAICombatMovesWidgetEntry;

// Class ReadyOrNot.TestInputBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UTestInputBlueprintFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void RonApplyInputAction(class UObject* Context, const class FName& ActionName, EInputEvent InputEventType);
	static void RonApplyInputAxis(class UObject* Context, const class FName& AxisName, float AxisValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TestInputBlueprintFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TestInputBlueprintFunctionLibrary")
	}
	static class UTestInputBlueprintFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTestInputBlueprintFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UTestInputBlueprintFunctionLibrary;

// Class ReadyOrNot.AIData
// 0x0000 (0x0030 - 0x0030)
class UAIData final : public UDataAsset
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AIData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AIData")
	}
	static class UAIData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIData>();
	}
};
DUMPER7_ASSERTS_UAIData;

// Class ReadyOrNot.AIFactionManager
// 0x0058 (0x02F0 - 0x0298)
class AAIFactionManager : public AActor
{
public:
	uint8                                         bGroupIntoTeams : 1;                               // 0x0298(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TeamsOf;                                           // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bAssignRandomTeamTactics : 1;                      // 0x02A0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFactionTeamTactics>            TacticsPool;                                       // 0x02A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFactionSuspectTeam>            SuspectTeams;                                      // 0x02B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class ACyberneticCharacter*>           Characters;                                        // 0x02C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class ACyberneticCharacter*>           Leaders;                                           // 0x02D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                         TeamBehaviourStrengthReductionSpeed;               // 0x02E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TeamBehaviourOverrideStrength;                     // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void AlertOtherSuspectsInTeam_Blueprint(class ASuspectCharacter* suspect, class AReadyOrNotCharacter* Enemy);
	bool GetSuspectsInTeam(class ASuspectCharacter* InSuspect, TArray<class ASuspectCharacter*>* OutSuspects, bool bIncludeSelf);
	void OnAIAdded_Blueprint(class ACyberneticCharacter* Character);
	void OnAISpottedEnemy(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Enemy);
	void OnAISpottedEnemy_Blueprint(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Enemy);
	void OnAISpottedFriendly(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Friendly);
	void OnAISpottedFriendly_Blueprint(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Friendly);
	void OnAISpottedNeutral(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Neutral);
	void OnAISpottedNeutral_Blueprint(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Neutral);
	void OnAllAISpawned_Blueprint();

	bool AreTeamSpotsAvailable(int32* OutIndex) const;
	class ASuspectCharacter* FindClosestSuspect(const TArray<class ASuspectCharacter*>& OtherSuspects, class ASuspectCharacter* suspect, float MaxDistance) const;
	TArray<class ACyberneticCharacter*> GetAllCharacters() const;
	TArray<class ACivilianCharacter*> GetAllCivilians() const;
	TArray<class ACyberneticCharacter*> GetAllLeaders() const;
	TArray<class ASuspectCharacter*> GetAllSuspects() const;
	int32 GetTeamIndex(class ASuspectCharacter* InSuspect) const;
	bool GetTeamTacticFor(class ASuspectCharacter* InSuspect, EAITeamTactic* OutTactic) const;
	bool IsSuspectInTeam(class ASuspectCharacter* InSuspect, struct FFactionSuspectTeam* OutTeam) const;
	bool IsTeamFull(const struct FFactionSuspectTeam& InTeam) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AIFactionManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AIFactionManager")
	}
	static class AAIFactionManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAIFactionManager>();
	}
};
DUMPER7_ASSERTS_AAIFactionManager;

// Class ReadyOrNot.ThrownItem
// 0x0360 (0x05F8 - 0x0298)
class AThrownItem : public AActor
{
public:
	class AReadyOrNotCharacter*                   ThrowInstigator;                                   // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ThrownInRoom;                                      // 0x02A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        SceneComponent;                                    // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIPerceptionStimuliSourceComponent*    PerceptionStimuliComp;                             // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TurnPhysicsOffDelay;                               // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ThrowDistance;                                     // 0x02C4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector>                        FirstBouncePath;                                   // 0x02C8(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FHitResult                             FirstBounceHit;                                    // 0x02D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C0[0x8];                                      // 0x03C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        SecondBouncePath;                                  // 0x03C8(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FHitResult                             SecondBounceHit;                                   // 0x03D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C0[0x8];                                      // 0x04C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        ThirdBouncePath;                                   // 0x04C8(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FHitResult                             ThirdBounceHit;                                    // 0x04D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_5C0[0x8];                                      // 0x05C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector_NetQuantize>            CompletePath;                                      // 0x05C8(0x0010)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	int32                                         BouncePt1;                                         // 0x05D8(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         BouncePt2;                                         // 0x05DC(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         BouncePt3;                                         // 0x05E0(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5E4[0x4];                                      // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ThrowSpeed;                                        // 0x05E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5EC[0x8];                                      // 0x05EC(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ThrowBounciness;                                   // 0x05F4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnRep_ThrowPath();
	void UpdateServerPath(const TArray<struct FVector_NetQuantize>& Path, int32 Bounce1, int32 Bounce2, int32 Bounce3);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ThrownItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ThrownItem")
	}
	static class AThrownItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<AThrownItem>();
	}
};
DUMPER7_ASSERTS_AThrownItem;

// Class ReadyOrNot.BriefingWidget
// 0x0080 (0x0370 - 0x02F0)
class UBriefingWidget final : public UBaseWidget
{
public:
	uint8                                         Pad_2F0[0x80];                                     // 0x02F0(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoesLevelHaveMissionAudio(const class FString& AudioName, bool* bHasMissionAudio);
	void GetBioDetails(const struct FCharacterBio& Bio, TArray<struct FCriminalRecord>* RapSheet, class UTexture2D** ProfileImage, class FString* OutDescription, class FString* OutBioText);
	void GetBios(EBioType BioType, TArray<struct FCharacterBio>* OutBios);
	void GetBriefing(struct FMissionAudio* OutBriefing);
	void GetLevelNickname(class FString* OutNickname);
	void GetWhiteboardObjectiveText(class FString* OutString);
	void GetWhiteboardTimelineAsString(class FString* OutString);
	void MoveCameraToMouseCursor(const struct FPointerEvent& PointerEvent);
	void PlayMissionAudio(const class FString& AudioName);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BriefingWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BriefingWidget")
	}
	static class UBriefingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBriefingWidget>();
	}
};
DUMPER7_ASSERTS_UBriefingWidget;

// Class ReadyOrNot.AimTrigger
// 0x0008 (0x0058 - 0x0050)
class UAimTrigger final : public UInputTrigger
{
public:
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AimTrigger")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AimTrigger")
	}
	static class UAimTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAimTrigger>();
	}
};
DUMPER7_ASSERTS_UAimTrigger;

// Class ReadyOrNot.PlayerHUD
// 0x0008 (0x0390 - 0x0388)
class APlayerHUD : public AHUD
{
public:
	class UUserWidget*                            PlayerHUD;                                         // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static void SetCanvasTranslationByMouseDelta(class APlayerController* Controller, class UCanvasPanel* Widget, float DeltaSeconds, float InterpSpeed, float InputScale, float ClampAt);
	static void SetWidgetTranslationByMouseDelta(class APlayerController* Controller, class UUserWidget* Widget, float DeltaSeconds, float InterpSpeed, float InputScale, float ClampAt);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerHUD")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerHUD")
	}
	static class APlayerHUD* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerHUD>();
	}
};
DUMPER7_ASSERTS_APlayerHUD;

// Class ReadyOrNot.AimTriggerPressed
// 0x0000 (0x0050 - 0x0050)
class UAimTriggerPressed final : public UInputTrigger
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AimTriggerPressed")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AimTriggerPressed")
	}
	static class UAimTriggerPressed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAimTriggerPressed>();
	}
};
DUMPER7_ASSERTS_UAimTriggerPressed;

// Class ReadyOrNot.ReadyOrNotModData
// 0x0038 (0x0060 - 0x0028)
class UReadyOrNotModData final : public USaveGame
{
public:
	class FString                                 SaveSlotName;                                      // 0x0028(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        UserIndex;                                         // 0x0038(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int64>                                 DisabledMods;                                      // 0x0040(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int64>                                 ErroredMods;                                       // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotModData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotModData")
	}
	static class UReadyOrNotModData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotModData>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotModData;

// Class ReadyOrNot.AISelectionDebugWidget
// 0x0008 (0x02D0 - 0x02C8)
class UAISelectionDebugWidget final : public UUserWidget
{
public:
	class UTextBlock*                             AIName_TextBlock;                                  // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AISelectionDebugWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AISelectionDebugWidget")
	}
	static class UAISelectionDebugWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAISelectionDebugWidget>();
	}
};
DUMPER7_ASSERTS_UAISelectionDebugWidget;

// Class ReadyOrNot.AISpawn
// 0x0120 (0x03B8 - 0x0298)
class AAISpawn final : public AActor
{
public:
	uint8                                         bEnabled : 1;                                      // 0x0298(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	bool                                          bAllowExplosiveVestSpawn;                          // 0x0299(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29A[0x2];                                      // 0x029A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpawnChance;                                       // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         GroupID;                                           // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x9F];                                     // 0x02A1(0x009F)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSpawnData>                     SpawnArray;                                        // 0x0340(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class ABaseWeapon>                GlobalWeaponOverride;                              // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAIArchetypeData*                       ArchetypeOverride;                                 // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACyberneticCharacter*                   SpawnedCharacter;                                  // 0x0360(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPassAIAnimDebugDataToCharacter;                   // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimDebugLocoInfo                     AIAnimDebugLocoInfo;                               // 0x0370(0x0038)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class USceneComponent*                        DefaultScene;                                      // 0x03A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                        SpawnDirection;                                    // 0x03B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static ETeamType GetSpawningTeamType(const struct FSpawnData& Sd);

	bool DoSpawn();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AISpawn")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AISpawn")
	}
	static class AAISpawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAISpawn>();
	}
};
DUMPER7_ASSERTS_AAISpawn;

// Class ReadyOrNot.BloodPool
// 0x0010 (0x02F0 - 0x02E0)
class ABloodPool : public APooledActor
{
public:
	class UDecalComponent*                        Decal;                                             // 0x02E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                          BoxComponent;                                      // 0x02E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BloodPool")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BloodPool")
	}
	static class ABloodPool* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABloodPool>();
	}
};
DUMPER7_ASSERTS_ABloodPool;

// Class ReadyOrNot.ResourceComponent
// 0x0058 (0x00F8 - 0x00A0)
class UResourceComponent : public UActorComponent
{
public:
	TMulticastInlineDelegate<void()>              OnFullResource;                                    // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float Resource)> OnLowResource;                                    // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDepletedResource;                                // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                   ResourceName;                                      // 0x00D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Resource;                                          // 0x00D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxResource;                                       // 0x00DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxResourceLimit;                                  // 0x00E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LowResourceThreshold;                              // 0x00E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OriginalMaxResource;                               // 0x00E8(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LowResource;                                       // 0x00EC(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PreviousResource;                                  // 0x00F0(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bUnlimited : 1;                                    // 0x00F4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DecreaseResource(const float Amount);
	void DecreaseResourceByRate(const float Rate);
	void DepleteResource();
	void DisableUnlimitedResource();
	void EnableUnlimitedResource();
	void IncreaseResource(const float Amount);
	void IncreaseResourceByRate(const float Rate);
	void ResetResource();
	void Server_DecreaseResource(float Amount);
	void Server_DepleteResource();
	void Server_DisableUnlimitedResource();
	void Server_EnableUnlimitedResource();
	void Server_IncreaseResource(float Amount);
	void Server_InitResource();
	void Server_ResetResource();
	void Server_SetCurrentResourceToMax();
	void Server_SetMaxResource(float NewMaxResource);
	void Server_SetResource(float NewResourceAmount);
	void Server_SetUnlimitedResource(bool bEnabled);
	void Server_ToggleUnlimitedResource();
	void Server_UpdatePreviousResource();
	void SetCurrentResourceToMax();
	void SetMaxResource(const float NewMaxResource);
	void SetResource(const float NewResourceAmount);
	void SetUnlimitedResource(const bool bEnabled);
	void ToggleUnlimitedResource();
	void UpdatePreviousResource();

	float DecreaseResource_Expression(float Amount) const;
	float GetCurrentResource() const;
	float GetHalfResource() const;
	float GetLowResource() const;
	float GetLowResourceThreshold() const;
	float GetMaxResource() const;
	float GetNormalizedResource() const;
	float GetOriginalMaxResource() const;
	float GetPreviousResource() const;
	class FName GetResourceName() const;
	bool HasResource() const;
	float IncreaseResource_Expression(float Amount) const;
	bool IsDepleted() const;
	bool IsFullResource() const;
	bool IsHalfResource() const;
	bool IsLowResource() const;
	bool IsResourceAbove(const float ResourceValue) const;
	bool IsResourceAt(const float ResourceValue) const;
	bool IsResourceAtOrAbove(const float ResourceValue) const;
	bool IsResourceAtOrBelow(const float ResourceValue) const;
	bool IsResourceBelow(const float ResourceValue) const;
	bool IsUnlimitedResourceEnabled() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ResourceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ResourceComponent")
	}
	static class UResourceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResourceComponent>();
	}
};
DUMPER7_ASSERTS_UResourceComponent;

// Class ReadyOrNot.PlayersList
// 0x0060 (0x0478 - 0x0418)
class UPlayersList : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnSuccess;                                         // 0x0420(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnFailure;                                         // 0x0430(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FLobbyPlayer& Player)> OnPlayerDetailsUpdated;        // 0x0440(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FLobbyPlayer>                   PlayersList;                                       // 0x0450(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnMuteStateDelegate;                               // 0x0460(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_470[0x8];                                      // 0x0470(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool CanChangeMutedState(const class FString& UniqueNetId);
	bool GetMutedState(const class FString& UniqueNetId);
	void GetPlayersList();
	class APlayerState* GetPlayerStateFromUniqueId(const class FString& UniqueID);
	void SetMutedState(const class FString& UniqueNetId, bool Value);
	void UpdatedMutedState();
	bool VivoxAvailable();

	bool EOSVoiceAvailable() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayersList")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayersList")
	}
	static class UPlayersList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayersList>();
	}
};
DUMPER7_ASSERTS_UPlayersList;

// Class ReadyOrNot.AmmoComponent
// 0x0008 (0x0100 - 0x00F8)
class UAmmoComponent final : public UResourceComponent
{
public:
	float                                         AmmoUsagePerSecond;                                // 0x00F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetAmmoUsagePerSecond() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AmmoComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AmmoComponent")
	}
	static class UAmmoComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAmmoComponent>();
	}
};
DUMPER7_ASSERTS_UAmmoComponent;

// Class ReadyOrNot.Shotgun
// 0x0070 (0x1920 - 0x18B0)
class AShotgun : public ABaseMagazineWeapon
{
public:
	uint8                                         bIsSawnOff : 1;                                    // 0x18B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_18B1[0x3];                                     // 0x18B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxShells;                                         // 0x18B4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 Shells;                                            // 0x18B8(0x0010)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	TArray<int32>                                 OriginalShellCounts;                               // 0x18C8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         MaxShellsInWeapon;                                 // 0x18D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ShellsPerSlot;                                     // 0x18DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShellWeight;                                       // 0x18E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18E4[0x4];                                     // 0x18E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CurrentShellMesh;                                  // 0x18E8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTapReload;                                        // 0x18F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18F1[0x7];                                     // 0x18F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FShotgunVisuals                        ShotgunVisuals;                                    // 0x18F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bBlockingFireAnimation;                            // 0x1908(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1909[0x3];                                     // 0x1909(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ShellsInRack;                                      // 0x190C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UShellRackShellComponent*>       ShellMeshComponents;                               // 0x1910(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	void CheckReloadSettings();
	void FinishedLoadingShellFromRack();
	void FinishShotgunReload();
	void LoadNextShellInRack();
	void OnRep_ShellsReplicated();
	void PlayReloadLoop();
	void RefreshEntireShellRack();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Shotgun")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Shotgun")
	}
	static class AShotgun* GetDefaultObj()
	{
		return GetDefaultObjImpl<AShotgun>();
	}
};
DUMPER7_ASSERTS_AShotgun;

// Class ReadyOrNot.BreachingShotgun
// 0x0000 (0x1920 - 0x1920)
class ABreachingShotgun : public AShotgun
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BreachingShotgun")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BreachingShotgun")
	}
	static class ABreachingShotgun* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABreachingShotgun>();
	}
};
DUMPER7_ASSERTS_ABreachingShotgun;

// Class ReadyOrNot.AmmoRefillBox
// 0x0010 (0x02A8 - 0x0298)
class AAmmoRefillBox final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableComponent*                 InteractableComponent;                             // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AmmoRefillBox")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AmmoRefillBox")
	}
	static class AAmmoRefillBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAmmoRefillBox>();
	}
};
DUMPER7_ASSERTS_AAmmoRefillBox;

// Class ReadyOrNot.AnimatedDecal
// 0x0098 (0x0378 - 0x02E0)
class AAnimatedDecal : public APooledActor
{
public:
	class UDecalComponent*                        Decal;                                             // 0x02E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimationTimescale;                                // 0x02E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     AnimationCurve;                                    // 0x02F0(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static float GetRuntimeFloatCurveValue(const struct FRuntimeFloatCurve& Curve, float Time);

	void SetAnimatedDecalMaterial(class UMaterialInterface* Material);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimatedDecal")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimatedDecal")
	}
	static class AAnimatedDecal* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAnimatedDecal>();
	}
};
DUMPER7_ASSERTS_AAnimatedDecal;

// Class ReadyOrNot.BulletProjectileMovementComponent
// 0x0000 (0x0260 - 0x0260)
class UBulletProjectileMovementComponent final : public UProjectileMovementComponent
{
public:
	bool                                          bReduceFrictionAfterFirstBounce;                   // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FrictionAfterFirstBounce;                          // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BulletProjectileMovementComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BulletProjectileMovementComponent")
	}
	static class UBulletProjectileMovementComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBulletProjectileMovementComponent>();
	}
};
DUMPER7_ASSERTS_UBulletProjectileMovementComponent;

// Class ReadyOrNot.AnimatedIconWidget
// 0x0100 (0x03C8 - 0x02C8)
class UAnimatedIconWidget : public UUserWidget
{
public:
	TArray<class UImage*>                         IconImages;                                        // 0x02C8(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                         CurrentIndex;                                      // 0x02D8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ElapsedTime;                                       // 0x02DC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bPaused : 1;                                       // 0x02E0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlay*                               InteractCircle_Overlay;                            // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                               InteractIcon_SizeBox;                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        IconSwitcher;                                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Frame_1;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Frame_2;                                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Frame_3;                                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Frame_4;                                           // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Frame_5;                                           // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Frame_6;                                           // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Frame_7;                                           // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Frame_8;                                           // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 FrameImages[0x8];                                  // 0x0340(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 ProgressCircle_Image;                              // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Anim_Interact;                                     // 0x0388(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Anim_Focus;                                        // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           InteractionInvalidTintColor;                       // 0x0398(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     ProgressCircleMaterial;                            // 0x03A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   ProgressParamName;                                 // 0x03B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 ParentComponent;                                   // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               MID_ProgressCircle;                                // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void PauseIconAnim();
	void PlayFocusAnim(bool bReverse);
	void PlayInteractAnim();
	void SetActiveIcon(int32 Index_0);
	void SetCurrentProgress(float Percent);
	void SetInteractIconSize(float InInteractCircleSize, float InInteractIconSize);
	void SetInteractState(bool bValid);
	void StopFocusAnim();
	void StopInteractAnim();
	void UnPauseIconAnim();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimatedIconWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimatedIconWidget")
	}
	static class UAnimatedIconWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimatedIconWidget>();
	}
};
DUMPER7_ASSERTS_UAnimatedIconWidget;

// Class ReadyOrNot.PolicePresenceTestActor
// 0x0018 (0x02B0 - 0x0298)
class APolicePresenceTestActor final : public AActor
{
public:
	class USceneComponent*                        Scene;                                             // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    Police;                                            // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    suspect;                                           // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PolicePresenceTestActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PolicePresenceTestActor")
	}
	static class APolicePresenceTestActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<APolicePresenceTestActor>();
	}
};
DUMPER7_ASSERTS_APolicePresenceTestActor;

// Class ReadyOrNot.AnimatedIconWidgetWithActionPrompt
// 0x0040 (0x0408 - 0x03C8)
class UAnimatedIconWidgetWithActionPrompt final : public UAnimatedIconWidget
{
public:
	class UVerticalBox*                           VerticalBox;                                       // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               InteractIcon_Overlay;                              // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               PlayerActionPrompt_Container;                      // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerActionPromptWidget*              PlayerActionPrompt_Widget;                         // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerActionPromptWidget*              PlayerActionPrompt_Widget2;                        // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerActionPromptWidget*              PlayerActionPrompt_Widget3;                        // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerActionPromptWidget*              PlayerActionPrompt_Widget4;                        // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 ActionPromptBackground_Image;                      // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimatedIconWidgetWithActionPrompt")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimatedIconWidgetWithActionPrompt")
	}
	static class UAnimatedIconWidgetWithActionPrompt* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimatedIconWidgetWithActionPrompt>();
	}
};
DUMPER7_ASSERTS_UAnimatedIconWidgetWithActionPrompt;

// Class ReadyOrNot.BuildingTrigger
// 0x0098 (0x0338 - 0x02A0)
class ABuildingTrigger : public ATriggerBox
{
public:
	int32                                         NumberOfFloors;                                    // 0x02A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bAuto : 1;                                         // 0x02A4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bUniformFloorSpacing : 1;                          // 0x02A4(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpacingBetweenFloors;                              // 0x02A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 SpacingPerFloor;                                   // 0x02B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FText                                   BuildingName;                                      // 0x02C0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TMap<int32, class FString>                    FloorNumberToFloorName;                            // 0x02D8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<struct FBuildingFloor>                 GeneratedFloors;                                   // 0x0328(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)

public:
	void GenerateFloors();
	void OnBuildingEnter(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnBuildingExit(class AActor* OverlappedActor, class AActor* OtherActor);

	struct FVector GetFloorLocation(int32 FloorNumber) const;
	int32 GetFloorNumberFromActorLocation(class AActor* Actor) const;
	bool IsActorOnFloor(class AActor* Actor, int32 FloorNumber) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BuildingTrigger")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BuildingTrigger")
	}
	static class ABuildingTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABuildingTrigger>();
	}
};
DUMPER7_ASSERTS_ABuildingTrigger;

// Class ReadyOrNot.AnimatedIconWidget_Imprint
// 0x0010 (0x02D8 - 0x02C8)
class UAnimatedIconWidget_Imprint : public UUserWidget
{
public:
	class UImage*                                 Icon_Image;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       ImprintAnimation;                                  // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void Init(const struct FVector& InWorldLocation, class UTexture2D* InIconImage);
	void SetIconImage(class UTexture2D* NewIconImage);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimatedIconWidget_Imprint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimatedIconWidget_Imprint")
	}
	static class UAnimatedIconWidget_Imprint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimatedIconWidget_Imprint>();
	}
};
DUMPER7_ASSERTS_UAnimatedIconWidget_Imprint;

// Class ReadyOrNot.AnimCharacterMovementLibrary
// 0x0000 (0x0028 - 0x0028)
class UAnimCharacterMovementLibrary final : public UBlueprintFunctionLibrary
{
public:
	static float CalculateDirAngle(const struct FVector& CurVel, const struct FRotator& CurActorRotation, const struct FRotator& DirRotation, float ClampMin, float ClampMax, float CurDirAngle);
	static EAnimCardinalDirection GetCardinalDirectionFromAngle(EAnimCardinalDirection PreviousCardinalDirection, float DirectionAngleInDegrees, float DeadZoneAngle);
	static struct FVector PredictGroundMovementPivotLocation(const struct FAnimCharacterMovementSnapshot& MovementSnapshot, float GroundFriction);
	static struct FVector PredictGroundMovementStopLocation(const struct FAnimCharacterMovementSnapshot& MovementSnapshot, const struct FAnimCharacterMovementPredictionSnapshot& PredictionSnapshot);
	static const class UAnimSequence* SelectAnimForCardinalDirection(EAnimCardinalDirection CardinalDirection, const struct FCardinalDirectionAnimSet& AnimSet);
	static void UpdateCharacterMovementSnapshot(const struct FTransform& WorldTransform, const struct FVector& WorldVelocity, const struct FVector& WorldAcceleration, bool bIsOnGround, float RootYawOffset, struct FAnimCharacterMovementSnapshot& Snapshot);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimCharacterMovementLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimCharacterMovementLibrary")
	}
	static class UAnimCharacterMovementLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimCharacterMovementLibrary>();
	}
};
DUMPER7_ASSERTS_UAnimCharacterMovementLibrary;

// Class ReadyOrNot.BpWidgetLib
// 0x0000 (0x0028 - 0x0028)
class UBpWidgetLib final : public UBlueprintFunctionLibrary
{
public:
	static class FText ChangeStringTableTextKey(const class FText& Target, const class FString& NewKey);
	static void DrawLinesWithCenteredOffset(struct FPaintContext& Context, const TArray<struct FVector2D>& Points, const struct FLinearColor& Tint, bool bAntiAlias, float Thickness, const struct FVector2D& Offset, const struct FVector2D& Center, float Scale);
	static void DrawLinesWithThickness(struct FPaintContext& Context, const TArray<struct FVector2D>& Points, const struct FLinearColor& Tint, bool bAntiAlias, float Thickness, const struct FVector2D& Offset);
	static void DrawLineWithCenteredOffset(struct FPaintContext& Context, const struct FVector2D& PositionA, const struct FVector2D& PositionB, const struct FLinearColor& Tint, bool bAntiAlias, float Thickness, const struct FVector2D& Offset, const struct FVector2D& Center, float Scale);
	static void DrawLineWithThickness(struct FPaintContext& Context, const struct FVector2D& PositionA, const struct FVector2D& PositionB, const struct FLinearColor& Tint, bool bAntiAlias, float Thickness, const struct FVector2D& Offset);
	static struct FVector2D GetNormalizedClick(const struct FGeometry& InGeometry, const struct FPointerEvent& InMouseEvent);
	static class ATablet* GetPlayerTablet(const class UObject* WorldContextObject);
	static bool IsWorldTearingDown(const class UObject* WorldContextObject);
	static void PlayEventFromTablet(const class UObject* WorldContextObject, class UFMODEvent* Event);
	static bool PostBugReport(const class FString& Summary, const class FString& Description, const class FString& Category);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BpWidgetLib")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BpWidgetLib")
	}
	static class UBpWidgetLib* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBpWidgetLib>();
	}
};
DUMPER7_ASSERTS_UBpWidgetLib;

// Class ReadyOrNot.AnimDebugLocoPoint
// 0x0000 (0x0298 - 0x0298)
class AAnimDebugLocoPoint final : public AActor
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimDebugLocoPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimDebugLocoPoint")
	}
	static class AAnimDebugLocoPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAnimDebugLocoPoint>();
	}
};
DUMPER7_ASSERTS_AAnimDebugLocoPoint;

// Class ReadyOrNot.ReadyOrNotLevelScript
// 0x09F0 (0x0C90 - 0x02A0)
class AReadyOrNotLevelScript : public ALevelScriptActor
{
public:
	EGenerationType                               WorldGenerationType;                               // 0x02A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              TAASharpenFilter;                                  // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlashlightIntensity;                               // 0x02B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlashlightIntensityBoost;                          // 0x02B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlashlightBouncedIntensityBoost;                   // 0x02B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABlockingVolume*>                BlockingVolumesInLevel;                            // 0x02C0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AVisibilityBlockingVolume*>      VisibilityBlockingVolumesInLevel;                  // 0x02D0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotTriggerVolume*>       TriggerVolumesInLevel;                             // 0x02E0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class AConversationManager*                   ConversationManager;                               // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ELightType, class FName>                 LightingScenarios;                                 // 0x02F8(0x0050)(Edit, NativeAccessSpecifierPublic)
	ELightType                                    LightingType;                                      // 0x0348(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDrawCoverDebug;                                   // 0x0349(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34A[0x6];                                      // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLevelDataLookupTable                  LevelData;                                         // 0x0350(0x0880)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class UMusicData*                             MusicData;                                         // 0x0BD0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UItemData*                              ItemData;                                          // 0x0BD8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundData*                             SoundData;                                         // 0x0BE0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              Delegate_OnOutOfBoundsTimeLimitEnded;              // 0x0BE8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         OutOfBounds_MaxTimeLimit;                          // 0x0BF8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutOfBoundsTimeRemaining;                          // 0x0BFC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C00[0x8];                                      // 0x0C00(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AAmbientSound*>                  AudioSourcesInLevel;                               // 0x0C08(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AFMODAmbientSound*>              FMODAudioSourcesInLevel;                           // 0x0C18(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_C28[0x10];                                     // 0x0C28(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotAudioVolume*>         AudioVolumes;                                      // 0x0C38(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ACyberneticCharacter*>           AIRequestingCover;                                 // 0x0C48(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bUseDarkness;                                      // 0x0C58(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C59[0x3];                                      // 0x0C59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinimumLightIntensityForSource;                    // 0x0C5C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DarknessSightRangeMultiplier;                      // 0x0C60(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeWorldLightsAsSources;                      // 0x0C64(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRaining;                                          // 0x0C65(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpawnSwat;                                        // 0x0C66(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C67[0x1];                                      // 0x0C67(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         LevelSequenceMVP;                                  // 0x0C68(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSequence*                         LevelSequenceTeam;                                 // 0x0C70(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSequencePlayer*                   LastPlayedSequence;                                // 0x0C78(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C80[0x10];                                     // 0x0C80(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisableOutOfBounds();
	void EnableOutOfBounds();
	class AConversationManager* GetConversationManager();
	void OnMVPSequenceFinished();
	void OnOutOfBoundsTimeLimitEnded();
	void OnPiracyCheckUpdate(bool bIsPirated, const class FString& ProgramDetected);
	void OnPiracyCheckUpdate_Private(bool bIsPirated, const class FString& ProgramDetected);
	void OnTeamSequenceFinished();
	void PlayMVPSequence();
	void Start3DAudioVisualizer();
	void StartOutOfBoundsCountdown();
	void Stop3DAudioVisualizer();
	void StopOutOfBoundsCountdown();

	bool AllAudioVolumesTicked() const;
	bool IsCountingDownForOutOfBounds() const;
	bool IsOutOfBoundsEnabled() const;
	bool IsVisualizingAudioSources() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotLevelScript")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotLevelScript")
	}
	static class AReadyOrNotLevelScript* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReadyOrNotLevelScript>();
	}
};
DUMPER7_ASSERTS_AReadyOrNotLevelScript;

// Class ReadyOrNot.AnimDistanceMatchingLibrary
// 0x0000 (0x0028 - 0x0028)
class UAnimDistanceMatchingLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void CalculateDistanceMatchingStates(float DeltaTime, class ACharacter* CurrentCharacter, class UCharacterMovementComponent* CurrentMovementComponent, EDistanceMatchingType* DistanceMatchingCurrentState, const struct FAnimCharacterMovementSnapshot& MovementSnapshot, const struct FAnimCharacterMovementPredictionSnapshot& PredictionSnapshot, class UWorld* TargetWorld, float MinPivotAngle, const TArray<class AActor*>& ActorsToIgnore, struct FVector* LastActorLocation, struct FCardinalDirectionSnapshot* PivotingCardinalDirSnapShot, struct FPredictionResult* StartMarker, struct FPredictionResult* StopMarker, struct FPredictionResult* PivotMarker, struct FPredictionResult* TakeOffMarker, struct FPredictionResult* ApexMarker, struct FPredictionResult* LandingMarker, bool* bSMStartRuleset, bool* bSMStopRuleset, bool bIsAICharacter, bool bShowDebug);
	static struct FSequencePlayerReference SetPlayrateToMatchSpeed(const struct FSequencePlayerReference& SequencePlayer, float SpeedToMatch, const struct FVector2D& PlayRateClamp);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimDistanceMatchingLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimDistanceMatchingLibrary")
	}
	static class UAnimDistanceMatchingLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimDistanceMatchingLibrary>();
	}
};
DUMPER7_ASSERTS_UAnimDistanceMatchingLibrary;

// Class ReadyOrNot.CommonButtonStyleFMOD
// 0x0010 (0x07D0 - 0x07C0)
class UCommonButtonStyleFMOD : public UCommonButtonStyle
{
public:
	class UFMODEvent*                             OnHoveredEvent;                                    // 0x07C0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             OnClickedEvent;                                    // 0x07C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonButtonStyleFMOD")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonButtonStyleFMOD")
	}
	static class UCommonButtonStyleFMOD* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonButtonStyleFMOD>();
	}
};
DUMPER7_ASSERTS_UCommonButtonStyleFMOD;

// Class ReadyOrNot.AnimInputCapsuleLocomotionBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UAnimInputCapsuleLocomotionBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void UpdateCapsuleLocomotionAnimInput(const class APawn* Pawn, struct FAnimInput_CapsuleLocomotion& CapsuleLocomotionAnimInput);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimInputCapsuleLocomotionBlueprintLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimInputCapsuleLocomotionBlueprintLibrary")
	}
	static class UAnimInputCapsuleLocomotionBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimInputCapsuleLocomotionBlueprintLibrary>();
	}
};
DUMPER7_ASSERTS_UAnimInputCapsuleLocomotionBlueprintLibrary;

// Class ReadyOrNot.AnimNotifyState_SpawnLight
// 0x0038 (0x0068 - 0x0030)
class UAnimNotifyState_SpawnLight final : public UAnimNotifyState
{
public:
	struct FLinearColor                           LightColor;                                        // 0x0030(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         StartIntensity;                                    // 0x0040(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MiddleIntensity;                                   // 0x0044(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         EndIntensity;                                      // 0x0048(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         InterpSpeed;                                       // 0x004C(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APointLight*                            PointLight;                                        // 0x0050(0x0008)(BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxDuration;                                       // 0x0058(0x0004)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CurrentDuration;                                   // 0x005C(0x0004)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   SocketName;                                        // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotifyState_SpawnLight")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotifyState_SpawnLight")
	}
	static class UAnimNotifyState_SpawnLight* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_SpawnLight>();
	}
};
DUMPER7_ASSERTS_UAnimNotifyState_SpawnLight;

// Class ReadyOrNot.CachedImagesSubsystem
// 0x0000 (0x0030 - 0x0030)
class UCachedImagesSubsystem final : public UGameInstanceSubsystem
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CachedImagesSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CachedImagesSubsystem")
	}
	static class UCachedImagesSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCachedImagesSubsystem>();
	}
};
DUMPER7_ASSERTS_UCachedImagesSubsystem;

// Class ReadyOrNot.AnimNotify_AIDoorBreachKick
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_AIDoorBreachKick final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_AIDoorBreachKick")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_AIDoorBreachKick")
	}
	static class UAnimNotify_AIDoorBreachKick* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_AIDoorBreachKick>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_AIDoorBreachKick;

// Class ReadyOrNot.NavArea_NoSuspects
// 0x0000 (0x0048 - 0x0048)
class UNavArea_NoSuspects final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_NoSuspects")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_NoSuspects")
	}
	static class UNavArea_NoSuspects* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_NoSuspects>();
	}
};
DUMPER7_ASSERTS_UNavArea_NoSuspects;

// Class ReadyOrNot.AnimNotify_AIDoorBreachRam
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_AIDoorBreachRam final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_AIDoorBreachRam")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_AIDoorBreachRam")
	}
	static class UAnimNotify_AIDoorBreachRam* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_AIDoorBreachRam>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_AIDoorBreachRam;

// Class ReadyOrNot.CommonIconButtonBase
// 0x0000 (0x15D0 - 0x15D0)
class UCommonIconButtonBase final : public UCommonBoundActionButton
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonIconButtonBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonIconButtonBase")
	}
	static class UCommonIconButtonBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonIconButtonBase>();
	}
};
DUMPER7_ASSERTS_UCommonIconButtonBase;

// Class ReadyOrNot.AnimNotify_AIDoorBreachShotgun
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_AIDoorBreachShotgun final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_AIDoorBreachShotgun")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_AIDoorBreachShotgun")
	}
	static class UAnimNotify_AIDoorBreachShotgun* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_AIDoorBreachShotgun>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_AIDoorBreachShotgun;

// Class ReadyOrNot.AnimNotify_AIThrowGrenade
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_AIThrowGrenade final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_AIThrowGrenade")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_AIThrowGrenade")
	}
	static class UAnimNotify_AIThrowGrenade* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_AIThrowGrenade>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_AIThrowGrenade;

// Class ReadyOrNot.SpectatorCharacterHUD
// 0x0000 (0x02F0 - 0x02F0)
class USpectatorCharacterHUD : public UBaseWidget
{
public:
	void ChatPressed();
	void OnActivate();
	void OnNewCharacterViewed(class AReadyOrNotCharacter* NewViewTarget);
	void TeamChatPressed();
	void VOIPTogglePressed(bool MutedState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpectatorCharacterHUD")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpectatorCharacterHUD")
	}
	static class USpectatorCharacterHUD* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpectatorCharacterHUD>();
	}
};
DUMPER7_ASSERTS_USpectatorCharacterHUD;

// Class ReadyOrNot.CommandWheel
// 0x0270 (0x0538 - 0x02C8)
class UCommandWheel : public UUserWidget
{
public:
	class UDataTable*                             CommandWheelIcons;                                 // 0x02C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotCommandFunctionLibrary*      CommandLibrary;                                    // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ABaseGrenade>               Flashbang;                                         // 0x02D8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ABaseGrenade>               Stinger;                                           // 0x02E0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ABaseGrenade>               CSGas;                                             // 0x02E8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           RedColor;                                          // 0x02F0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           BlueColor;                                         // 0x0300(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           GoldColor;                                         // 0x0310(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           WhiteColor;                                        // 0x0320(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CurrentIndex;                                      // 0x0330(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlay*                               QueueTextContainer;                                // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         QueueText;                                         // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            InnerWheel;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            OuterWheel;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         NameLabel;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         DescriptionLabel;                                  // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               HeaderOverlay;                                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           FreeViewInstructionsCanvasPanel;                   // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         QueueText_1;                                       // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGamepadButtonImage*                    NavigateBackImage;                                 // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<bool>                                  bCommandEnabled;                                   // 0x0388(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_398[0x1A0];                                    // 0x0398(0x01A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AnimateWheelUpdate();
	void CommandWheelDisabled();
	void CommandWheelEnabled();
	void DisableOuterWheel();
	void ForceSetInDeadzone(bool bInDeadzone);
	struct FLinearColor GetBlueColor();
	EWheelCardinalDirection GetDirectionFromIndex(int32 Index_0);
	struct FLinearColor GetGoldColor();
	struct FCommandWheelIconData GetIconData(const struct FSwatCommand& Command);
	struct FLinearColor GetRedColor();
	struct FLinearColor GetWhiteColor();
	void OnUpdateWheelColor(ETeamType Team);
	void SetInnerCommands(const TArray<struct FSwatCommand>& Options);
	void SetInnerSegments(int32 Num);
	void SetInnerWheelDirection(const struct FVector& Direction);
	void SetOuterSegments(int32 Num);
	void UpdateIconColors();
	void UpdateOuterWheel(const struct FVector& Direction, const TArray<struct FSwatCommand>& Options, const int32 SelectedIndex);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommandWheel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommandWheel")
	}
	static class UCommandWheel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommandWheel>();
	}
};
DUMPER7_ASSERTS_UCommandWheel;

// Class ReadyOrNot.AnimNotify_AIThrowGrenadeComplete
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_AIThrowGrenadeComplete final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_AIThrowGrenadeComplete")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_AIThrowGrenadeComplete")
	}
	static class UAnimNotify_AIThrowGrenadeComplete* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_AIThrowGrenadeComplete>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_AIThrowGrenadeComplete;

// Class ReadyOrNot.NavArea_LockedDoorSuspect
// 0x0000 (0x0048 - 0x0048)
class UNavArea_LockedDoorSuspect final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_LockedDoorSuspect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_LockedDoorSuspect")
	}
	static class UNavArea_LockedDoorSuspect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_LockedDoorSuspect>();
	}
};
DUMPER7_ASSERTS_UNavArea_LockedDoorSuspect;

// Class ReadyOrNot.AnimNotify_AIThrowPendingItem
// 0x00A8 (0x00E0 - 0x0038)
class UAnimNotify_AIThrowPendingItem final : public UAnimNotify
{
public:
	class FName                                   BoneToSpawnOn;                                     // 0x0038(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                LandingLocation;                                   // 0x0040(0x0018)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0060(0x0060)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bCustomThrowDirection : 1;                         // 0x00C0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ThrowDirection;                                    // 0x00C8(0x0018)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_AIThrowPendingItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_AIThrowPendingItem")
	}
	static class UAnimNotify_AIThrowPendingItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_AIThrowPendingItem>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_AIThrowPendingItem;

// Class ReadyOrNot.CachedImagesFetcher
// 0x0098 (0x00C0 - 0x0028)
class UCachedImagesFetcher final : public UObject
{
public:
	uint8                                         Pad_28[0x28];                                      // 0x0028(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FImageRequestData> Requests;                                          // 0x0050(0x0050)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UCachedImagesProvider*                  CachedImagesProviders;                             // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TDelegate<void(const class FString& InUrl, class UTexture2D* InTexture)> FetchResultCallback;    // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnableMemoryProvider;                             // 0x00B8(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnableDiskProvider;                               // 0x00B9(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnableDownloadProvider;                           // 0x00BA(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void CacheImage(const class FString& InUrl, class UTexture2D* InTexture);
	static void FetchImage(const class FString& InUrl, TDelegate<void(class UTexture2D* InTexture)> InImageFetchCallback);
	static bool IsCached(const class FString& InUrl);

	void OnImageFetchResult(const class FString& InUrl, class UTexture2D* InTexture);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CachedImagesFetcher")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CachedImagesFetcher")
	}
	static class UCachedImagesFetcher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCachedImagesFetcher>();
	}
};
DUMPER7_ASSERTS_UCachedImagesFetcher;

// Class ReadyOrNot.AnimNotify_ApplyArteryDamage
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_ApplyArteryDamage final : public UAnimNotify
{
public:
	class FName                                   ArteryBoneName;                                    // 0x0038(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_ApplyArteryDamage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_ApplyArteryDamage")
	}
	static class UAnimNotify_ApplyArteryDamage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_ApplyArteryDamage>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_ApplyArteryDamage;

// Class ReadyOrNot.AnimNotify_ApplyMeleeDamage
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_ApplyMeleeDamage final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_ApplyMeleeDamage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_ApplyMeleeDamage")
	}
	static class UAnimNotify_ApplyMeleeDamage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_ApplyMeleeDamage>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_ApplyMeleeDamage;

// Class ReadyOrNot.CanUse
// 0x0000 (0x0000 - 0x0000)
class ICanUse final
{
public:
	bool CanUse(class APlayerCharacter* User);
	void EndUse(class APlayerCharacter* User);
	class FText GetUseButtonPromptText();
	class USceneComponent* GetUseIconBoltComponent();
	TArray<class USceneComponent*> GetUseViewComponents();
	bool IsAvailableForUse();
	bool OverridesUseButtonPromptText();
	bool PlaysUseIconComplete();
	bool StartUse(class APlayerCharacter* User);
	bool UsesHoldButtonPrompt();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CanUse")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CanUse")
	}
	static class ICanUse* GetDefaultObj()
	{
		return GetDefaultObjImpl<ICanUse>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ICanUse;

// Class ReadyOrNot.AnimNotify_ArrestCancelComplete
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_ArrestCancelComplete final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_ArrestCancelComplete")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_ArrestCancelComplete")
	}
	static class UAnimNotify_ArrestCancelComplete* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_ArrestCancelComplete>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_ArrestCancelComplete;

// Class ReadyOrNot.NavArea_WallTraversalHole
// 0x0000 (0x0048 - 0x0048)
class UNavArea_WallTraversalHole final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_WallTraversalHole")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_WallTraversalHole")
	}
	static class UNavArea_WallTraversalHole* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_WallTraversalHole>();
	}
};
DUMPER7_ASSERTS_UNavArea_WallTraversalHole;

// Class ReadyOrNot.AnimNotify_ArrestComplete
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_ArrestComplete final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_ArrestComplete")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_ArrestComplete")
	}
	static class UAnimNotify_ArrestComplete* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_ArrestComplete>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_ArrestComplete;

// Class ReadyOrNot.CampaignSettings
// 0x0010 (0x0048 - 0x0038)
class UCampaignSettings final : public UDeveloperSettings
{
public:
	TArray<TSoftObjectPtr<class UCampaignData>>   Campaigns;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CampaignSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CampaignSettings")
	}
	static class UCampaignSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCampaignSettings>();
	}
};
DUMPER7_ASSERTS_UCampaignSettings;

// Class ReadyOrNot.AnimNotify_Breach_C2Detonate
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_Breach_C2Detonate final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_Breach_C2Detonate")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_Breach_C2Detonate")
	}
	static class UAnimNotify_Breach_C2Detonate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_Breach_C2Detonate>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_Breach_C2Detonate;

// Class ReadyOrNot.AnimNotify_Breach_C2Placed
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_Breach_C2Placed final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_Breach_C2Placed")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_Breach_C2Placed")
	}
	static class UAnimNotify_Breach_C2Placed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_Breach_C2Placed>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_Breach_C2Placed;

// Class ReadyOrNot.CachedImagesProvider
// 0x0018 (0x0040 - 0x0028)
class UCachedImagesProvider : public UObject
{
public:
	class UCachedImagesProvider*                  FallbackProvider;                                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& InUrl, class UTexture2D* InTexture)> OnResultCallback;       // 0x0030(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CachedImagesProvider")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CachedImagesProvider")
	}
	static class UCachedImagesProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCachedImagesProvider>();
	}
};
DUMPER7_ASSERTS_UCachedImagesProvider;

// Class ReadyOrNot.CachedImagesDiskProvider
// 0x00B0 (0x00F0 - 0x0040)
class UCachedImagesDiskProvider final : public UCachedImagesProvider
{
public:
	TMap<class FString, struct FDiskCachedImageEntry> CachedImages;                                  // 0x0040(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_90[0x54];                                      // 0x0090(0x0054)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxDiskCachedImages;                               // 0x00E4(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         MaxParallelTasks;                                  // 0x00E8(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FOnImageWriteComplete(bool bSuccess);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CachedImagesDiskProvider")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CachedImagesDiskProvider")
	}
	static class UCachedImagesDiskProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCachedImagesDiskProvider>();
	}
};
DUMPER7_ASSERTS_UCachedImagesDiskProvider;

// Class ReadyOrNot.AnimNotify_ChangeBodySocket
// 0x0010 (0x0048 - 0x0038)
class UAnimNotify_ChangeBodySocket final : public UAnimNotify
{
public:
	EItemCategory                                 ItemCategory;                                      // 0x0038(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Socket;                                            // 0x003C(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_ChangeBodySocket")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_ChangeBodySocket")
	}
	static class UAnimNotify_ChangeBodySocket* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_ChangeBodySocket>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_ChangeBodySocket;

// Class ReadyOrNot.RoNAnimInstance_HumanBase_V2
// 0x0800 (0x0B50 - 0x0350)
class URoNAnimInstance_HumanBase_V2 final : public UAnimInstance
{
public:
	class URoNMoveStyleComponent*                 MoveStyleComponent;                                // 0x0348(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_350[0xC];                                      // 0x0350(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsStrafing;                                       // 0x035C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRoNStyleSlotData                      ActiveMoveStyleSlot;                               // 0x0360(0x0258)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FRoNStyleIdleData                      IdleData_Default;                                  // 0x05B8(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRoNStyleTurnData                      TurnData_Default;                                  // 0x05C8(0x0050)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FRoNGaitTransitionData                 TransitionData_Default;                            // 0x0618(0x0120)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRoNGaitLocomotionData                 LocomotionData_Default;                            // 0x0738(0x00C0)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class UBlendSpace*                            StrafeBS_Default;                                  // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                            NonStrafeBS_Default;                               // 0x0800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlotBlendTime;                                     // 0x0808(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultSlotBlendTime;                              // 0x080C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AimOffsetAlpha;                                    // 0x0810(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrafeBlendTime;                                   // 0x0814(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlopeWarpingAlpha;                                 // 0x0818(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsMoveStyleSlotBActive;                           // 0x081C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81D[0x3];                                      // 0x081D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SlotIdx;                                           // 0x0820(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_824[0x4];                                      // 0x0824(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HeadLookLocation;                                  // 0x0828(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeadLookAlpha;                                     // 0x0840(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_844[0x1C];                                     // 0x0844(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lean;                                              // 0x0860(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanClamped;                                       // 0x0864(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanFactor;                                        // 0x0868(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanInterpSpeed;                                   // 0x086C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AdjustedPlayrate;                                  // 0x0870(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedScaling;                                      // 0x0874(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayrateClampMax;                                  // 0x0878(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentIdleIndex;                                  // 0x087C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_880[0x4];                                      // 0x0880(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StrafeDirectionAngle;                              // 0x0884(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              AimOffsetInterpolated;                             // 0x0888(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              AO_2DVector;                                       // 0x0898(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInRagdoll;                                        // 0x08A8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRecoveringFromRagdoll;                            // 0x08A9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDead;                                           // 0x08AA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlayingDeathAnim;                               // 0x08AB(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8AC[0x4];                                      // 0x08AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWorldBuildingAnimState                WorldBuildingAnimState;                            // 0x08B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCarryArrestedAnimState                CarryArrestAnimState;                              // 0x08C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FTakeHostageAnimState                  TakeHostageAnimState;                              // 0x08C8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	EAnimWeaponType                               CurWeaponType;                                     // 0x08E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8E1[0x7];                                      // 0x08E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          IncapacitationLoopAnim;                            // 0x08E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsArrested;                                       // 0x08F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsArrestedOrSurrendered;                          // 0x08F1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsArrestedAsRagdoll;                              // 0x08F2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBeingArrested;                                  // 0x08F3(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBeingArrestedAsRagdoll;                         // 0x08F4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSurrendered;                                      // 0x08F5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCarried;                                        // 0x08F6(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsGetUpPlaying;                                   // 0x08F7(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8F8[0x1];                                      // 0x08F8(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIncapacitated;                                    // 0x08F9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableIKProcess;                                  // 0x08FA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFemale;                                         // 0x08FB(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsUnarmed;                                        // 0x08FC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSWAT;                                           // 0x08FD(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCrouching;                                      // 0x08FE(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsArrestedAndDead;                                // 0x08FF(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCoverAnimStateMachineData             CoverAnimStateMachineData;                         // 0x0900(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FHidingAnimStateMachineData            HidingAnimStateMachineData;                        // 0x0918(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FHoleTraversalAnimStateMachineData     HoleTraversalAnimStateMachineData;                 // 0x0928(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	float                                         LeftArmIKAlpha;                                    // 0x0938(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RightArmIKAlpha;                                   // 0x093C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ArmsOnlySlotAlpha;                                 // 0x0940(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftArmOnlySlotAlpha;                              // 0x0944(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandAdditiveLockOverride;                          // 0x0948(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWeaponDown;                                       // 0x094C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPistolAndWeaponDown;                            // 0x094D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPistol;                                         // 0x094E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94F[0x9];                                      // 0x094F(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Calm_Override_Pose;                                // 0x0958(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Aiming_Override_Pose;                              // 0x0960(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Default_Calm_Override_Pose;                        // 0x0968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Default_Aiming_Override_Pose;                      // 0x0970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Weapon_Override_Pose_Low;                          // 0x0978(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Weapon_Override_Pose_Up;                           // 0x0980(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Default_Weapon_Override_Pose_Low;                  // 0x0988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Default_Weapon_Override_Pose_Up;                   // 0x0990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponOverridePoseAlpha;                           // 0x0998(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsReloading;                                      // 0x099C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99D[0x3];                                      // 0x099D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FinalAimOffsetAlpha;                               // 0x09A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableAimOffset;                                  // 0x09A4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAnyMontageIsActive;                               // 0x09A5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFullBodyMontagePlaying;                           // 0x09A6(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpperBodyMontagePlaying;                          // 0x09A7(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInteractionMontagePlaying;                        // 0x09A8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFullOrInteractionMontagePlaying;                  // 0x09A9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemOverrideRule                             CurOverrideRule;                                   // 0x09AA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLoweredSet;                                     // 0x09AB(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowTurnInPlace;                                 // 0x09AC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9AD[0x3];                                      // 0x09AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TurnInPlaceSpeedMultiplier;                        // 0x09B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         YawOffsetLimit;                                    // 0x09B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimTurnInPlaceAnimSet                TurnInPlaceAnimSet;                                // 0x09B8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FAnimTurnInPlaceState                  TurnInPlaceState;                                  // 0x09D0(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bExitTurnRecoveryIfMoving;                         // 0x0A30(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A31[0x3];                                      // 0x0A31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCachedAnimStateData                   TurnAnimStateData;                                 // 0x0A34(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsTurnInPlaceStateRelevant;                       // 0x0A50(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A51[0x3];                                      // 0x0A51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VelocityInterpTime;                                // 0x0A54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                VelocitySmoothed;                                  // 0x0A58(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableAdditiveOverrides;                         // 0x0A70(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A71[0x7];                                      // 0x0A71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         AdditiveDisableTagList;                            // 0x0A78(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         move_x;                                            // 0x0A88(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         move_y;                                            // 0x0A8C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHostageTaker;                                   // 0x0A90(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHostage;                                        // 0x0A91(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHostageOrHostageTaker;                          // 0x0A92(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A93[0x1];                                      // 0x0A93(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MoveStyleBlendCoolDown;                            // 0x0A94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A98[0x4];                                      // 0x0A98(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bMoveStyleChanging;                                // 0x0A9C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseUpperBodyIdleOverride;                         // 0x0A9D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTurnOnlyAffectsLowerBody;                         // 0x0A9E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9F[0x1];                                      // 0x0A9F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TurnLowerBodyOnlyWeight;                           // 0x0AA0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AA4[0x4];                                      // 0x0AA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CurUpperBodyIdleOverride;                          // 0x0AA8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpperBodyOverrideWeight;                           // 0x0AB0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeadLookAtClamp;                                   // 0x0AB4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AimAlpha;                                          // 0x0AB8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAimingAtTarget;                                   // 0x0ABC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEasingFunc                                   AimCurveFunction;                                  // 0x0ABD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_ABE[0x2];                                      // 0x0ABE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AimSpeed;                                          // 0x0AC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC4[0x4];                                      // 0x0AC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimInput_CapsuleLocomotion           AnimInputCapsule;                                  // 0x0AC8(0x0078)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	float                                         DefaultMoveStyleBlendTime;                         // 0x0B40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultAOIKBlendTime;                              // 0x0B44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlobalIKAOInterpSpeed;                             // 0x0B48(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B4C[0x4];                                      // 0x0B4C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ResetTurnInPlaceOffset();
	void SetMoveStyleDataFromComp(class URoNMoveStyleComponent* MoveStyleComp);
	void UpdateGaitDataFromComp(class URoNMoveStyleComponent* MoveStyleComp);
	void UpdateMoveStyleDataFromComp(class URoNMoveStyleComponent* MoveStyleComp);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RoNAnimInstance_HumanBase_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RoNAnimInstance_HumanBase_V2")
	}
	static class URoNAnimInstance_HumanBase_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<URoNAnimInstance_HumanBase_V2>();
	}
};
DUMPER7_ASSERTS_URoNAnimInstance_HumanBase_V2;

// Class ReadyOrNot.AnimNotify_CollectEvidence
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_CollectEvidence final : public UAnimNotify
{
public:
	uint8                                         bCollectFinished : 1;                              // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_CollectEvidence")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_CollectEvidence")
	}
	static class UAnimNotify_CollectEvidence* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_CollectEvidence>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_CollectEvidence;

// Class ReadyOrNot.CanIssueCommandOn
// 0x0000 (0x0000 - 0x0000)
class ICanIssueCommandOn final
{
public:
	bool CanIssueCommand() const;
	class AActor* GetCommandActor() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CanIssueCommandOn")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CanIssueCommandOn")
	}
	static class ICanIssueCommandOn* GetDefaultObj()
	{
		return GetDefaultObjImpl<ICanIssueCommandOn>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ICanIssueCommandOn;

// Class ReadyOrNot.AnimNotify_CompleteHeal
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_CompleteHeal final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_CompleteHeal")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_CompleteHeal")
	}
	static class UAnimNotify_CompleteHeal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_CompleteHeal>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_CompleteHeal;

// Class ReadyOrNot.AnimNotify_DisableWeaponFOV
// 0x0000 (0x0030 - 0x0030)
class UAnimNotify_DisableWeaponFOV final : public UAnimNotifyState
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_DisableWeaponFOV")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_DisableWeaponFOV")
	}
	static class UAnimNotify_DisableWeaponFOV* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_DisableWeaponFOV>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_DisableWeaponFOV;

// Class ReadyOrNot.PVPTriggerBox
// 0x0068 (0x0308 - 0x02A0)
class APVPTriggerBox : public ATriggerBox
{
public:
	class UTextRenderComponent*                   TextRender;                                        // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObjectiveMarkerComponent*              ObjectiveMarkerComponent;                          // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class APlayerCharacter*>               CharactersInTriggerBox;                            // 0x02B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                         TimeElapsed;                                       // 0x02C0(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PreviousTimeElapsed;                               // 0x02C4(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bEntered : 1;                                      // 0x02C8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeNeededToStay_Editor;                           // 0x02CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeNeededToStay;                                  // 0x02D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeNeededToStay_Active;                           // 0x02D4(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<ETeamType>                             OnlyAcceptTeams;                                   // 0x02D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           OnlyAcceptActorsWithTags;                          // 0x02E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         bLogDebugInfo : 1;                                 // 0x02F8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TH_TimerEventExpiry;                               // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void CancelTimerEvent();
	void HideObjectiveMarker();
	void OnBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnRep_CharactersInTriggerBoxUpdated();
	void OnTimerExpired();
	void PauseTimerEvent();
	void ResumeTimerEvent();
	void ShowObjectiveMarker();
	void StartTimerEvent();
	void ToggleObjectiveMarker();

	bool DoesActorHaveAnyAcceptedTags(class AActor* OtherActor) const;
	float GetCurrentElapsedTime() const;
	float GetLastElapsedTime() const;
	bool IsActorInTriggerBox(class AActor* InActor) const;
	bool IsPlayerOnAcceptedTeam(class APlayerCharacter* Player) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PVPTriggerBox")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PVPTriggerBox")
	}
	static class APVPTriggerBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<APVPTriggerBox>();
	}
};
DUMPER7_ASSERTS_APVPTriggerBox;

// Class ReadyOrNot.VIPTriggerBox
// 0x0000 (0x0308 - 0x0308)
class AVIPTriggerBox final : public APVPTriggerBox
{
public:
	bool IsVIPInTriggerBox(class APlayerCharacter** OutVIPCharacter) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VIPTriggerBox")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VIPTriggerBox")
	}
	static class AVIPTriggerBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVIPTriggerBox>();
	}
};
DUMPER7_ASSERTS_AVIPTriggerBox;

// Class ReadyOrNot.CharacterCustomizationPortal
// 0x0068 (0x0300 - 0x0298)
class ACharacterCustomizationPortal final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   CustomizationCharacter;                            // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractableComponent*                 InteractableComponent;                             // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBillboardComponent*                    BillboardComponent;                                // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UArrowComponent*                        CharacterSpawnPoint;                               // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C0[0x10];                                     // 0x02C0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CompsToOutline;                                    // 0x02D0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class ULightComponent*>                LightsToEnable;                                    // 0x02E0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	class FName                                   LightActorsOfTag;                                  // 0x02F0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bHasLocked;                                        // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void GetAllCompatibleBodies(class FName InHead, TArray<class FName>* OutBodies);
	static void GetAllCompatibleHeads(class FName InBody, TArray<class FName>* OutHeads);
	static bool GetCharacterLookOverride(class FName Head, class FName Body, struct FCharacterLookOverride* OutCharacterLookOverride);
	static bool GetCurrentCharacterLookOverride(class FName* OutHead, class FName* OutBody);
	static void GetCustomizationEntries(TArray<struct FCharacterPersonalizationData>* OutHeads, TArray<struct FCharacterPersonalizationData>* OutBodys);
	static bool IsDLCLocked(const struct FCharacterPersonalizationData& Data);
	static bool SaveCharacterLookOverride(class FName InHead, class FName InBody);

	void UpdateCharacterLookOverride(class FName Head, class FName Body);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterCustomizationPortal")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterCustomizationPortal")
	}
	static class ACharacterCustomizationPortal* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACharacterCustomizationPortal>();
	}
};
DUMPER7_ASSERTS_ACharacterCustomizationPortal;

// Class ReadyOrNot.GamepadStatics
// 0x0000 (0x0028 - 0x0028)
class UGamepadStatics final : public UBlueprintFunctionLibrary
{
public:
	static void DisableTriggerEffects(class ULocalPlayer* LocalPlayer);
	static void EnableLightBar();
	static void EnableTriggerEffects(class ULocalPlayer* LocalPlayer);
	static bool GetAimTriggerEffectsEnabled(class ULocalPlayer* LocalPlayer);
	static ESupportedControllerType GetControllerType(class ULocalPlayer* LocalPlayer);
	static bool GetFireTriggerEffectsEnabled(class ULocalPlayer* LocalPlayer);
	static bool GetIsTriggered(class ULocalPlayer* LocalPlayer, int32 ControllerId, bool RightTrigger);
	static bool GetIsTriggerStarted(class ULocalPlayer* LocalPlayer, int32 ControllerId, bool RightTrigger);
	static bool IsAnalogValueOutsideDeadZone(const float Magnitude);
	static bool IsUsingPlaystationController(class ULocalPlayer* LocalPlayer);
	static void ResetControllerOrientation(int32 ControllerId);
	static void ResetLightBar();
	static void SetLightBarColor(const struct FColor& Color);
	static bool ShouldUseAdaptiveAimTrigger(class ULocalPlayer* LocalPlayer);
	static bool ShouldUseAdaptiveWeaponTrigger(class ULocalPlayer* LocalPlayer);
	static void ToggleThumbstickUiNavigation(bool bEnableThumbstickNavigation);
	static void UpdateTriggerEffects(class ULocalPlayer* LocalPlayer, uint8 Start, uint8 End, uint8 Strength);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GamepadStatics")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GamepadStatics")
	}
	static class UGamepadStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadStatics>();
	}
};
DUMPER7_ASSERTS_UGamepadStatics;

// Class ReadyOrNot.AnimNotify_DisarmExplosiveVest
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_DisarmExplosiveVest final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_DisarmExplosiveVest")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_DisarmExplosiveVest")
	}
	static class UAnimNotify_DisarmExplosiveVest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_DisarmExplosiveVest>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_DisarmExplosiveVest;

// Class ReadyOrNot.RoNAnimInstance_PlayerTP_V3
// 0x1240 (0x17E0 - 0x05A0)
class URoNAnimInstance_PlayerTP_V3 : public UReadyOrNotAnimInstance
{
public:
	class UReadyOrNotWeaponAnimData*              LastAnimWeaponData;                                // 0x0598(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotWeaponAnimData*              EditorWeaponAnimData;                              // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowTurnInPlace;                                 // 0x05A8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A9[0x3];                                      // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         YawOffsetLimit;                                    // 0x05AC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurnInPlaceSpeedMultiplier;                        // 0x05B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5B4[0x4];                                      // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimTurnInPlaceAnimSet                TurnInPlaceAnimSet;                                // 0x05B8(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FAnimTurnInPlaceState                  TurnInPlaceState;                                  // 0x05D0(0x0060)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAnimTurnInPlaceAnimSet                StandRifAnimSet;                                   // 0x0630(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAnimTurnInPlaceAnimSet                CrouchRifAnimSet;                                  // 0x0648(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bIsAIControlled;                                   // 0x0660(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWeaponDown;                                       // 0x0661(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAiming;                                         // 0x0662(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsShieldEquipped;                                 // 0x0663(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AimingAlpha;                                       // 0x0664(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeanLeft;                                         // 0x0668(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeanRight;                                        // 0x0669(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_66A[0x2];                                      // 0x066A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         QuickLeanLeftAmount;                               // 0x066C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanRightAmount;                              // 0x0670(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanLeftAlpha;                                // 0x0674(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanRightAlpha;                               // 0x0678(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanIntensity;                                // 0x067C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanInterpSpeed;                              // 0x0680(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootIKValue;                                       // 0x0684(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootIKAlpha;                                       // 0x0688(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRagdoll;                                          // 0x068C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlayingDeathAnim;                               // 0x068D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bArrested;                                         // 0x068E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDead;                                           // 0x068F(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeathAnimEnd;                                     // 0x0690(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStunned;                                          // 0x0691(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTased;                                            // 0x0692(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnLadder;                                         // 0x0693(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LadderUpDownMovement;                              // 0x0694(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanAngleY;                                        // 0x0698(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanAngleZ;                                        // 0x069C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverLeft;                                        // 0x06A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverRight;                                       // 0x06A1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverMiddle;                                      // 0x06A2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverLeftLow;                                     // 0x06A3(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverRightLow;                                    // 0x06A4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverPeek;                                        // 0x06A5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A6[0x2];                                      // 0x06A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AimOffsetAlpha;                                    // 0x06A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6AC[0x4];                                      // 0x06AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              AimOffsets;                                        // 0x06B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bJumpStartTrigger;                                 // 0x06C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsNotFalling;                                     // 0x06C1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C2[0x2];                                      // 0x06C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SmoothMappedLeanToAnimStandLeft;                   // 0x06C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmoothMappedLeanToAnimStandRight;                  // 0x06C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmoothMappedLeanToAnimCrouchLeft;                  // 0x06CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmoothMappedLeanToAnimCrouchRight;                 // 0x06D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Speed_tp_rifle_stand_sprint_f;                     // 0x06D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Low_TP;                           // 0x06D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Up_TP;                            // 0x06E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Shld_TP;                          // 0x06E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Sights_TP;                        // 0x06F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Ret_TP;                           // 0x06F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Ovr_TP;                           // 0x0700(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Low_TP;                                  // 0x0708(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Up_TP;                                   // 0x0710(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Shld_TP;                                 // 0x0718(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Sights_TP;                               // 0x0720(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Ret_TP;                                  // 0x0728(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Ovr_TP;                                  // 0x0730(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_VFG_TP;                                  // 0x0738(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_AFG_TP;                                  // 0x0740(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_HSTOP_TP;                                // 0x0748(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_RK1_TP;                                  // 0x0750(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_CQR_TP;                                  // 0x0758(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeaningLeftNotCrouching;                          // 0x0760(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotLeaningLeftOrCrouching;                        // 0x0761(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotLeaningLeftOrNotCrouching;                     // 0x0762(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeaningRightNotCrouching;                         // 0x0763(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotLeaningRightOrCrouching;                       // 0x0764(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotLeaningRightOrNotCrouching;                    // 0x0765(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotLeaningRight;                                  // 0x0766(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotLeaningLeft;                                   // 0x0767(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCrouchingAndMoving;                               // 0x0768(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotCrouchingAndMoving;                            // 0x0769(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAimingAndNotDeployable;                           // 0x076A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_76B[0x1];                                      // 0x076B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WalkSpeedForward;                                  // 0x076C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WalkSpeedLeft;                                     // 0x0770(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WalkSpeedRight;                                    // 0x0774(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WalkSpeedBackward;                                 // 0x0778(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchWalkSpeedForward;                            // 0x077C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchWalkSpeedLeft;                               // 0x0780(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchWalkSpeedRight;                              // 0x0784(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchWalkSpeedBackward;                           // 0x0788(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RunSpeedForward;                                   // 0x078C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RunSpeedLeft;                                      // 0x0790(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RunSpeedRight;                                     // 0x0794(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RunSpeedBackward;                                  // 0x0798(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLessThanPointOneSecondOnRelevantAnim;             // 0x079C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInCombatOrAlerted;                              // 0x079D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMoving;                                           // 0x079E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAlerted;                                        // 0x079F(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AlertAlpha;                                        // 0x07A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInCombat;                                       // 0x07A4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSurrendering;                                   // 0x07A5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSprayed;                                          // 0x07A6(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStung;                                            // 0x07A7(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPseudoSpeedType                              CurPseudoSpeed;                                    // 0x07A8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFemale;                                           // 0x07A9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bChild;                                            // 0x07AA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasInjury;                                        // 0x07AB(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimSpeedFwdPlayrateSync;                          // 0x07AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimSpeedSidePlayrateSync;                         // 0x07B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimSpeedPlayrateSync;                             // 0x07B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RetentionAlpha;                                    // 0x07B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LoweredAlpha;                                      // 0x07BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C0[0x8];                                      // 0x07C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SightAlpha;                                        // 0x07C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LoweredCooldownTime;                               // 0x07CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsLoweredUp;                                       // 0x07D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7D1[0x13];                                     // 0x07D1(0x0013)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ArmsOnlySlotAlpha;                                 // 0x07E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftArmOnlySlotAlpha;                              // 0x07E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VelocityInterpTime;                                // 0x07EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                VelocitySmoothed;                                  // 0x07F0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimCharacterMovementSnapshot         CharMovementSnapshot;                              // 0x0808(0x00E8)(Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	float                                         PostPivotTriggerThreshold;                         // 0x08F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCardinalDirectionSnapshot             PivotingCardinalDirSnapShot;                       // 0x08F4(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_90C[0x1C];                                     // 0x090C(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   BaseCharacterRef;                                  // 0x0928(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerCharacter*                       CharacterRef;                                      // 0x0930(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACyberneticCharacter*                   CharacterAiRef;                                    // 0x0938(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDistanceMatching;                              // 0x0940(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDistanceMatchingType                         DistanceMatchingCurrentState;                      // 0x0941(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_942[0x6];                                      // 0x0942(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPredictionResult                      StartMarker;                                       // 0x0948(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      StopMarker;                                        // 0x0978(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      PivotMarker;                                       // 0x09A8(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      PostPivotMarker;                                   // 0x09D8(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      TakeOffMarker;                                     // 0x0A08(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      ApexMarker;                                        // 0x0A38(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      LandingMarker;                                     // 0x0A68(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	EMoveDirectionExt                             CurrentPivotDirectionExt;                          // 0x0A98(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPivotDirectionBroken;                             // 0x0A99(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanPivotInCurDirection;                           // 0x0A9A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSMPrePivotRuleset;                                // 0x0A9B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStartDirectionBroken;                             // 0x0A9C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9D[0x3];                                      // 0x0A9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReplicatedMaxSpeed;                                // 0x0AA0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSMStartRuleset;                                   // 0x0AA4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSMStopRuleset;                                    // 0x0AA5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDistanceMatchToTarget;                            // 0x0AA6(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AA7[0x1];                                      // 0x0AA7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DistanceCurveName;                                 // 0x0AA8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PelvisDefaultWorldPos;                             // 0x0AB0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CrouchedPelvisDefaultWorldPos;                     // 0x0AC8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CrouchedPelvisMovingWorldPos;                      // 0x0AE0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CrouchedPelvisCurrentWorldPos;                     // 0x0AF8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   IdleStateData;                                     // 0x0B10(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   StartStateData;                                    // 0x0B2C(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   MoveStateData;                                     // 0x0B48(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   StopStateData;                                     // 0x0B64(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   PrePivotStateData;                                 // 0x0B80(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   PostPivotStateData;                                // 0x0B9C(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   TurnInPlaceStateData;                              // 0x0BB8(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   LocalTurnInPlaceStateData;                         // 0x0BD4(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   LeanLeftStateData;                                 // 0x0BF0(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   LeanRightStateData;                                // 0x0C0C(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   StanceStandToCrouchStateData;                      // 0x0C28(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   StanceCrouchToStandStateData;                      // 0x0C44(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_C60[0x92];                                     // 0x0C60(0x0092)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bStartToCycleRuleSet;                              // 0x0CF2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerPivotARuleSet;                             // 0x0CF3(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerPivotBRuleSet;                             // 0x0CF4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrePivotToPostPivotRuleSet;                       // 0x0CF5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPostPivotToPrePivotRuleSet;                       // 0x0CF6(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPivotToCycleRuleSet;                              // 0x0CF7(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStopToIdleRuleSet;                                // 0x0CF8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanEnterPrePivotRuleSet;                          // 0x0CF9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CFA[0x6];                                      // 0x0CFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequence*>                  StandFastStartAnimations;                          // 0x0D00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  StandFastStopAnimations;                           // 0x0D10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  StandFastPivotAnimations;                          // 0x0D20(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  StandSlowStartAnimations;                          // 0x0D30(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  StandSlowStopAnimations;                           // 0x0D40(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  StandSlowPivotAnimations;                          // 0x0D50(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  CrouchFastStartAnimations;                         // 0x0D60(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  CrouchFastStopAnimations;                          // 0x0D70(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  CrouchFastPivotAnimations;                         // 0x0D80(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  CrouchSlowStartAnimations;                         // 0x0D90(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  CrouchSlowStopAnimations;                          // 0x0DA0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  CrouchSlowPivotAnimations;                         // 0x0DB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UAnimSequence*                          ActiveStopAnim;                                    // 0x0DC0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActiveStopAnimTime;                                // 0x0DC8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DCC[0x4];                                      // 0x0DCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          ActiveStartAnim;                                   // 0x0DD0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActiveStartAnimTime;                               // 0x0DD8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DDC[0x4];                                      // 0x0DDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          ActivePrePivotAnim;                                // 0x0DE0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActivePrePivotAnimTime;                            // 0x0DE8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DEC[0x4];                                      // 0x0DEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          ActivePostPivotAnim;                               // 0x0DF0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActivePostPivotAnimTime;                           // 0x0DF8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsIdleStateRelevant;                              // 0x0DFC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsStartStateRelevant;                             // 0x0DFD(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsStopStateRelevant;                              // 0x0DFE(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPrePivotStateRelevant;                          // 0x0DFF(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPostPivotStateRelevant;                         // 0x0E00(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsMoveStateRelevant;                              // 0x0E01(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTurnInPlaceStateRelevant;                       // 0x0E02(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsStartStateFullWeight;                           // 0x0E03(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPrePivotStateFullWeight;                        // 0x0E04(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPostPivotStateFullWeight;                       // 0x0E05(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLeanLeftStateRelevant;                          // 0x0E06(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLeanRightStateRelevant;                         // 0x0E07(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsStandToCrouchStateRelevant;                     // 0x0E08(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCrouchToStandStateRelevant;                     // 0x0E09(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E0A[0x2];                                      // 0x0E0A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeInStartState;                                  // 0x0E0C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeInPostPivotState;                              // 0x0E10(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReadDisableSpeedCurve;                            // 0x0E14(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E15[0x3];                                      // 0x0E15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DisableSpeedWarping;                               // 0x0E18(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedScaling;                                      // 0x0E1C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayrateClampMax;                                  // 0x0E20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E24[0x4];                                      // 0x0E24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              PlayRateClamp;                                     // 0x0E28(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              PlayRateClampCycle;                                // 0x0E38(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              PlayRateClampStartsPivots;                         // 0x0E48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrideWarpingBlendInStartOffset;                   // 0x0E58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrideWarpingBlendInDurationScaled;                // 0x0E5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrideWarpingStartAlpha;                           // 0x0E60(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrideWarpingPivotAlpha;                           // 0x0E64(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DirectionBlendTime;                                // 0x0E68(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E6C[0x4];                                      // 0x0E6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseSnapshot                          DeathPose;                                         // 0x0E70(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	float                                         SlopeWarpingAlpha;                                 // 0x0EA8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsItemOrPistolMotionBlock;                        // 0x0EAC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRifleMotionBlock;                               // 0x0EAD(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCrouchingWithShield;                            // 0x0EAE(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EAF[0x1];                                      // 0x0EAF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HighPoseAdditiveAlpha;                             // 0x0EB0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftHandIKAlpha_ItemBased;                         // 0x0EB4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ZHeightLeanAdjustment;                             // 0x0EB8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ZHeightLeanInterp;                                 // 0x0ED0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IsCrouchingWithShield_AsFloat;                     // 0x0EE8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandAdditiveLockOverride;                          // 0x0EEC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftHandAdditiveOvrBlend;                          // 0x0EF0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftHandTempFinIK;                                 // 0x0EF4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RightHandTempFinIK;                                // 0x0EF8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsEquipOrHolsterPlaying;                          // 0x0EFC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFastWalkSwitchRule;                               // 0x0EFD(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCrouchFastWalkSwitchRule;                         // 0x0EFE(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStartWalkSwitchTransitionRule;                    // 0x0EFF(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultCrouchSpeed;                                // 0x0F00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultStandSpeed;                                 // 0x0F04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStopWalkSwitchTransitionRule;                     // 0x0F08(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPivotWalkSwitchTransitionRule;                    // 0x0F09(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasUnderbarrelAttachment;                         // 0x0F0A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWeaponUnderbarrelAnimationType               UnderbarrelType;                                   // 0x0F0B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftHandGripAlpha;                                 // 0x0F0C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpperbodySlotNoWeight;                             // 0x0F10(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFastStop;                                       // 0x0F14(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFastStart;                                      // 0x0F15(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFastPivot;                                      // 0x0F16(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLocallyFirstPerson;                             // 0x0F17(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPFStartPhase;                                     // 0x0F18(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPFStoppingPhase;                                  // 0x0F19(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPFHasReachedStoppingPhase;                        // 0x0F1A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1B[0x1];                                      // 0x0F1B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PFStartDistanceThreshold;                          // 0x0F1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PFStopDistanceThreshold;                           // 0x0F20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F24[0x4];                                      // 0x0F24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PFLastStopLocation;                                // 0x0F28(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PFCurrentStopLocation;                             // 0x0F40(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PFStopDistance;                                    // 0x0F58(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PFCurrentAcceptanceRadius;                         // 0x0F5C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPFPathTooShort;                                   // 0x0F60(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPFPathIsValid;                                    // 0x0F61(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPFRequestedNewPath;                               // 0x0F62(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F63[0xD];                                      // 0x0F63(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               HeadLookRotationSwapped;                           // 0x0F70(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	EMoveDirection                                CurMoveDirectionNoOffset;                          // 0x0F88(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F89[0x3];                                      // 0x0F89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DisplacementSpeed;                                 // 0x0F8C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                             PlayerAnimTable;                                   // 0x0F90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EMotionBlockType, class FName>           CurrentAnimProfiles;                               // 0x0F98(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class FName                                   ActiveAnimProfileName;                             // 0x0FE8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRoNPlayerAnimData                     ActiveAnimProfile;                                 // 0x0FF0(0x03E0)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FRoNPlayerAnimData                     EditorAnimProfile;                                 // 0x13D0(0x03E0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EMotionBlockType                              EditorPreviewMotionblock;                          // 0x17B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERoNPlayerGaitState                           LastFramePlayerGateState;                          // 0x17B1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERoNPlayerGaitState                           CurPlayerGateState;                                // 0x17B2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17B3[0x2];                                     // 0x17B3(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bHoldingFastWalk;                                  // 0x17B5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyItemOverrides;                               // 0x17B6(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyShieldAimPoseOverride;                       // 0x17B7(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17B8[0x20];                                    // 0x17B8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bForceNewIdleLayer;                                // 0x17D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17D9[0x7];                                     // 0x17D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UAnimSequence* GetActiveLocomotionAnim();
	class UAnimSequence* GetRandomIdleLayer();
	class UAnimSequence* GetStanceAnim(const struct FRoNPlayerStanceAnim& StanceAnim, bool IsCrouching);
	void UpdateCurLocomotionAnim(struct FAnimUpdateContext& Context, struct FAnimNodeReference& Node);
	void UpdateCurrentIdleLayer(struct FAnimUpdateContext& Context, struct FAnimNodeReference& Node);
	void UpdateCurrentIdlePose(struct FAnimUpdateContext& Context, struct FAnimNodeReference& Node);

	class UAnimSequenceBase* GetPlayerAnimation_TP(EBaseAnimType_TP AnimName) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RoNAnimInstance_PlayerTP_V3")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RoNAnimInstance_PlayerTP_V3")
	}
	static class URoNAnimInstance_PlayerTP_V3* GetDefaultObj()
	{
		return GetDefaultObjImpl<URoNAnimInstance_PlayerTP_V3>();
	}
};
DUMPER7_ASSERTS_URoNAnimInstance_PlayerTP_V3;

// Class ReadyOrNot.AnimNotify_DisarmTrap
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_DisarmTrap final : public UAnimNotify
{
public:
	uint8                                         bDisarmFinished : 1;                               // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_DisarmTrap")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_DisarmTrap")
	}
	static class UAnimNotify_DisarmTrap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_DisarmTrap>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_DisarmTrap;

// Class ReadyOrNot.ReadyOrNotGameMode
// 0x0688 (0x09C0 - 0x0338)
class alignas(0x10) AReadyOrNotGameMode : public AGameModeBase
{
public:
	uint8                                         Pad_338[0x58];                                     // 0x0338(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    GameModeSettings;                                  // 0x0390(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A0[0x4];                                      // 0x03A0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSinceGameStart;                                // 0x03A4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A8[0x58];                                     // 0x03A8(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AReadyOrNotCharacter*, int32>      AbuseCountMap;                                     // 0x0400(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bIsCampaignTransitioning;                          // 0x0450(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Reinforcement_Handle;                              // 0x0458(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRunWarmup;                                        // 0x0460(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bArrestSpectator;                                  // 0x0461(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowLoadouts;                                    // 0x0462(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_463[0x1];                                      // 0x0463(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxPlayersAllowed;                                 // 0x0464(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayersJoining;                                    // 0x0468(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabledForPlay;                                   // 0x046C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 urlShortName;                                      // 0x0470(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0480(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                     PlayerStartClass;                                  // 0x0490(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ASpectatePawn>              DeadSpectatorClass;                                // 0x0498(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LobbyStartTag;                                     // 0x04A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RedCustomizationStartTag;                          // 0x04A8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BlueCustomizationStartTag;                         // 0x04B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SWATBlueStartTag;                                  // 0x04B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SWATRedStartTag;                                   // 0x04C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SuspectStartTag;                                   // 0x04C8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpectateKillerOnDeath;                            // 0x04D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInitialPlayerRespawn;                             // 0x04D1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bDrawPlayerCameraSphere : 1;                       // 0x04D2(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_4D3[0x5];                                      // 0x04D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnMatchStarted;                                    // 0x04D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	ERespawnMode                                  RespawnMode;                                       // 0x04E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E9[0x1];                                      // 0x04E9(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bTimelimitUsedInMode;                              // 0x04EA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMatchState                                   CurrentMatchState;                                 // 0x04EB(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4EC[0x4];                                      // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EMatchState NewMatchState)> OnMatchStateChanged;                   // 0x04F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_500[0x8];                                      // 0x0500(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          DefaultLoadoutIfNothingLoaded;                     // 0x0508(0x02E8)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_7F0[0x8];                                      // 0x07F0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ModeName;                                          // 0x07F8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   ModeDescription;                                   // 0x0810(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bCanRespawn;                                       // 0x0828(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_829[0x3];                                      // 0x0829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MinimumPlayersToStart;                             // 0x082C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinimumPlayersForTimer;                            // 0x0830(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_834[0x4];                                      // 0x0834(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   BlueCharacterClass;                                // 0x0838(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   RedCharacterClass;                                 // 0x0860(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_888[0x68];                                     // 0x0888(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              DeadPlayers;                                       // 0x08F0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class APlayerController*>              RespawnableDeadPlayers;                            // 0x0900(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class FString                                 PlayerSpawnTag;                                    // 0x0910(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class APawn* Pawn, class APlayerController* Controller)> OnPlayerRespawned; // 0x0920(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                CharacterHUD;                                      // 0x0930(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ASpectatorPawn>             NormalSpectatorPawn;                               // 0x0938(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AMissionPlanManager*                    MissionPlanManager;                                // 0x0940(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMissionExfiltrated;                               // 0x0948(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsExfilEnabled;                                   // 0x0949(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94A[0x76];                                     // 0x094A(0x0076)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void AddAbuse(class AReadyOrNotCharacter* Abuser, class ACyberneticCharacter* Abused);

	bool AreAllPlayersDead();
	bool DoesLevelRequireGeneration();
	void ExfiltrateMission(const TArray<class ASWATCharacter*>& ExfilCharacters);
	bool GetIsExfilEnabled();
	EMatchState GetMatchState();
	class AReadyOrNotGameSession* GetReadyOrNotGameSession();
	class AReadyOrNotGameState* GetReadyOrNotGameState();
	class AActor* GetThisPlayersStartPointByTag(class APlayerController* Player, const class FString& IncomingName);
	bool IsTeamDead(ETeamType Team, bool bIncludeArrestedAsDead);
	bool KickPlayer(class APlayerController* KickedPlayer, const class FText& KickReason);
	void NextGame();
	void OnBanStatusChecked(const class FString& SteamId, bool bIsBanned, const class FString& BanReason, bool bIsMySteamId);
	void OnOutOfBoundsTimeLimitEnded();
	void PlayerArrested(class AReadyOrNotCharacter* ArrestedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
	void PlayerDowned(class AReadyOrNotCharacter* DownedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
	void PlayerFreed(class ACharacter* Freed, class ACharacter* Freer);
	void PlayerKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void PlayerTakenDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
	void ProcessServerTravel(const class FString& URL, bool bAbsolute);
	void RefreshSession();
	bool RemoveDeadPlayer(class APlayerController* InPlayerController);
	bool RemoveDeadPlayerAt(int32 Index_0);
	void RespawnAllPlayers();
	void RespawnAllPlayersOnTeam(ETeamType Team);
	void RespawnDeadPlayers();
	void RespawnDeadPlayersOnTeam(ETeamType Team);
	void RespawnPlayer(class APlayerController* Player, bool bForceSpectator);
	void RestartGame();
	void SetExfilEnabled(bool bEnabled);
	void SetMatchState(EMatchState NewMatchState);
	void SetPassword(const class FString& newPassword);
	bool ShouldCountDownTimelimitNow();
	class APlayerCharacter* SpawnPlayerCharacter(class APlayerController* Controller, TSubclassOf<class APlayerCharacter> Class_0, const struct FTransform& SpawnTransform);
	class ASpectatorPawn* SpawnSpectator(class AReadyOrNotPlayerController* Controller, bool bDeadSpectator, const struct FTransform& SpawnTransform);
	void StartMatch();
	void SwapPlayerTeams();

	TArray<class APlayerCharacter*> GetAllPlayerCharactersInWorld() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotGameMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotGameMode")
	}
	static class AReadyOrNotGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReadyOrNotGameMode>();
	}
};
DUMPER7_ASSERTS_AReadyOrNotGameMode;

// Class ReadyOrNot.ReadyOrNotGameMode_PVP
// 0x0060 (0x0A20 - 0x09C0)
class AReadyOrNotGameMode_PVP : public AReadyOrNotGameMode
{
public:
	TMulticastInlineDelegate<void()>              OnMatchStart;                                      // 0x09C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(ETeamType WinningTeam)> OnRoundWon;                                // 0x09D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnRoundStart;                                      // 0x09E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnRoundEnd;                                        // 0x09F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         RoundEndResetDelay;                                // 0x0A00(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MatchEndResetDelay;                                // 0x0A04(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class URoundEndWidget_PVP>        RoundEndWidgetClass;                               // 0x0A08(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bIncrementedRoundCounterThisRound : 1;             // 0x0A10(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_A11[0xF];                                      // 0x0A11(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool AnyDeathsOnWinningTeam();
	void CheckRoundEnd(float DeltaSeconds);
	void MatchEnd();
	void Multicast_SetWinningTeam(ETeamType WinningTeam);
	void NextRound();
	void OnRoundEnded();
	void OnRoundStarted();
	void RoundEnd();
	void RoundWon(const TArray<class AReadyOrNotPlayerState*>& WinningPlayers);
	void RoundWonTeam(ETeamType WinningTeam);
	void TimelimitReached();
	void TimeLimitVictoryConditions();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotGameMode_PVP")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotGameMode_PVP")
	}
	static class AReadyOrNotGameMode_PVP* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReadyOrNotGameMode_PVP>();
	}
};
DUMPER7_ASSERTS_AReadyOrNotGameMode_PVP;

// Class ReadyOrNot.CaptureTheFlagGM
// 0x0040 (0x0A60 - 0x0A20)
class ACaptureTheFlagGM : public AReadyOrNotGameMode_PVP
{
public:
	TMulticastInlineDelegate<void(class APlayerCharacter* CapturedByCharacter, ETeamType CpaturedByTeam)> OnFlagCaptured; // 0x0A20(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class APlayerCharacter* DroppedByCharacter, ETeamType DroppedByTeam)> OnFlagDropped; // 0x0A30(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class ACTF_Flag>                  FlagClassToSpawn;                                  // 0x0A40(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACTF_Flag*                              Flag;                                              // 0x0A48(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A50[0x10];                                     // 0x0A50(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CaptureFlag(class ACTF_Flag* CapturedFlag, class APlayerCharacter* NewFlagBearer);
	class ACTF_FlagSpawnPoint* ChooseFlagSpawnPoint();
	void DropFlag();
	void OnFlagBearerKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CaptureTheFlagGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CaptureTheFlagGM")
	}
	static class ACaptureTheFlagGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACaptureTheFlagGM>();
	}
};
DUMPER7_ASSERTS_ACaptureTheFlagGM;

// Class ReadyOrNot.AnimNotify_DoorKickBreak
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_DoorKickBreak final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_DoorKickBreak")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_DoorKickBreak")
	}
	static class UAnimNotify_DoorKickBreak* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_DoorKickBreak>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_DoorKickBreak;

// Class ReadyOrNot.AnimNotify_DoorKickFailure
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_DoorKickFailure final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_DoorKickFailure")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_DoorKickFailure")
	}
	static class UAnimNotify_DoorKickFailure* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_DoorKickFailure>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_DoorKickFailure;

// Class ReadyOrNot.InteractionsData
// 0x0090 (0x00C0 - 0x0030)
class UInteractionsData : public UDataAsset
{
public:
	class FName                                   InteractionName;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bLooping : 1;                                      // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowDeadDriverInteraction : 1;                   // 0x0038(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowDeadSlaveInteraction : 1;                    // 0x0038(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowAimOffsetDuringInteraction : 1;              // 0x0038(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bApplyRelativeOffsetBeforePlaying : 1;             // 0x0038(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseSyncBone : 1;                                  // 0x0038(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSweepEnvironment : 1;                             // 0x0038(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDoNotApplyRelativeOffset : 1;                     // 0x0038(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RelativePosOffsetToDriver;                         // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               RelativeRotOffsetToDriver;                         // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         CancelDurationLength;                              // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bHolsterItemBeforePlaying : 1;                     // 0x0074(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bInstantHolster : 1;                               // 0x0074(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEquipLastItemAfterPlaying : 1;                    // 0x0074(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUpdateSlaveTransform : 1;                         // 0x0074(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUpdateTransformsInstantly : 1;                    // 0x0074(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIndependentFinishes : 1;                          // 0x0074(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseDriverFPMotion : 1;                            // 0x0074(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           DriverMontage;                                     // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           DriverMontage_FP;                                  // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TriggerTolerance;                                  // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DriverBlendDuration;                               // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bUseSlaveFPMotion : 1;                             // 0x0090(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           SlaveMontage;                                      // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           SlaveMontage_FP;                                   // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bMatchDriverYaw : 1;                               // 0x00A8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MatchedYawOffset;                                  // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bHasSharedItemAnim : 1;                            // 0x00B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           SharedItemMontage;                                 // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class APairedInteractionDriver* IsPairedInteractionPlayingOn(class AActor* Target);

	class APairedInteractionDriver* PlayPairedInteraction(class AActor* Driver, class AActor* Slave, class ABaseItem* OptionalItem);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InteractionsData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InteractionsData")
	}
	static class UInteractionsData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInteractionsData>();
	}
};
DUMPER7_ASSERTS_UInteractionsData;

// Class ReadyOrNot.AnimNotify_EquipItemOfClass
// 0x0010 (0x0048 - 0x0038)
class UAnimNotify_EquipItemOfClass final : public UAnimNotify
{
public:
	TSubclassOf<class ABaseItem>                  ItemClass;                                         // 0x0038(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bInstant : 1;                                      // 0x0040(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bAIOnly : 1;                                       // 0x0040(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_EquipItemOfClass")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_EquipItemOfClass")
	}
	static class UAnimNotify_EquipItemOfClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_EquipItemOfClass>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_EquipItemOfClass;

// Class ReadyOrNot.GamepadLayoutImage
// 0x0020 (0x0310 - 0x02F0)
class UGamepadLayoutImage final : public UImage
{
public:
	TArray<struct FKey>                           TargetInputs;                                      // 0x02E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UGamepadLayoutImage*                    RequiredParent;                                    // 0x02F8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowWhenInvalid;                                  // 0x0300(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDimWhenInvalid;                                   // 0x0301(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_302[0x2];                                      // 0x0302(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DimPercent;                                        // 0x0304(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GamepadLayoutImage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GamepadLayoutImage")
	}
	static class UGamepadLayoutImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadLayoutImage>();
	}
};
DUMPER7_ASSERTS_UGamepadLayoutImage;

// Class ReadyOrNot.RoNMoveStyleComponent
// 0x0110 (0x01B0 - 0x00A0)
class URoNMoveStyleComponent final : public UActorComponent
{
public:
	class UDataTable*                             MoveStyleDatabase;                                 // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DefaultMoveStyleName;                              // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DefaulGaitName;                                    // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MoveStyleCharacterName;                            // 0x00B8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PreviousMoveStyleName;                             // 0x00C0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIsOverriding;                                     // 0x00C8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRoNMovementStyle                      ActiveMoveStyle;                                   // 0x00D0(0x00A0)(Edit, EditConst, NativeAccessSpecifierPublic)
	class FName                                   Rep_MoveStyleName;                                 // 0x0170(0x0008)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ActiveGaitIndex;                                   // 0x0178(0x0004)(Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ActiveGaitName;                                    // 0x017C(0x0008)(Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GaitTimeOut;                                       // 0x0184(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PendingGaitName;                                   // 0x0188(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsStrafing;                                       // 0x0190(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_191[0x1F];                                     // 0x0191(0x001F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClearOverrideMoveStyle();
	void OnRep_IsStrafing();
	void OnRep_MoveStyle();
	void SetCharacterAcceleration(float Acceleration);
	void SetCharacterAccelerationMultiplier(float Multiplier);
	void SetCharacterSpeed(float Speed);
	void SetCharacterSpeedMultiplier(float Multiplier);
	bool SetMovementGaitByName(class FName Name_0, bool bForce);
	void SetMovementStyleByName(class FName Name_0);
	void SetOverrideMoveStyleByName(class FName Name_0);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RoNMoveStyleComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RoNMoveStyleComponent")
	}
	static class URoNMoveStyleComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<URoNMoveStyleComponent>();
	}
};
DUMPER7_ASSERTS_URoNMoveStyleComponent;

// Class ReadyOrNot.AnimNotify_EquipLastItem
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_EquipLastItem final : public UAnimNotify
{
public:
	uint8                                         bInstant : 1;                                      // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_EquipLastItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_EquipLastItem")
	}
	static class UAnimNotify_EquipLastItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_EquipLastItem>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_EquipLastItem;

// Class ReadyOrNot.MissionEventCondition
// 0x0018 (0x0040 - 0x0028)
class UMissionEventCondition : public UObject
{
public:
	class AMissionEventController*                Owner;                                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWorld*                                 World;                                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInstance;                                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsNot;                                            // 0x0039(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTriggered;                                      // 0x003A(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MissionEventCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MissionEventCondition")
	}
	static class UMissionEventCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionEventCondition>();
	}
};
DUMPER7_ASSERTS_UMissionEventCondition;

// Class ReadyOrNot.AnimNotify_ForceFireWeapon
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_ForceFireWeapon final : public UAnimNotify
{
public:
	float                                         Chance;                                            // 0x0038(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bNoEnemyRequired;                                  // 0x003C(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_ForceFireWeapon")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_ForceFireWeapon")
	}
	static class UAnimNotify_ForceFireWeapon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_ForceFireWeapon>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_ForceFireWeapon;

// Class ReadyOrNot.AnimNotify_ForceRagdoll
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_ForceRagdoll final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_ForceRagdoll")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_ForceRagdoll")
	}
	static class UAnimNotify_ForceRagdoll* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_ForceRagdoll>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_ForceRagdoll;

// Class ReadyOrNot.CharacterStatusWidget
// 0x0010 (0x0428 - 0x0418)
class UCharacterStatusWidget : public UCommonActivatableWidget
{
public:
	TArray<class UCharacterProxy*>                CharacterProxies;                                  // 0x0418(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	const TArray<class UCharacterProxy*> GetCharacterProxies();
	void OnCharacterAdded(class UCharacterProxy* CharacterProxy);
	void OnCharacterRemoved(class UCharacterProxy* CharacterProxy);
	void RefreshPlayers();
	void SwapTeams();

	bool CanSwapTeams() const;
	bool IsRefreshNeeded() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterStatusWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterStatusWidget")
	}
	static class UCharacterStatusWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterStatusWidget>();
	}
};
DUMPER7_ASSERTS_UCharacterStatusWidget;

// Class ReadyOrNot.GibComponent
// 0x0070 (0x0110 - 0x00A0)
class UGibComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x18];                                      // 0x00A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EGibAreas>                             GibbedAreas;                                       // 0x00B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	class UBloodData*                             BloodData;                                         // 0x00C8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 BodyMesh;                                          // 0x00D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 FaceMesh;                                          // 0x00D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                            GibHead;                                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                            GibArms;                                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                            GibLegs;                                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                            BoneHead;                                          // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                            BoneArms;                                          // 0x0100(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                            BoneLegs;                                          // 0x0108(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GibComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GibComponent")
	}
	static class UGibComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGibComponent>();
	}
};
DUMPER7_ASSERTS_UGibComponent;

// Class ReadyOrNot.AnimNotify_GetupComplete
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_GetupComplete final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_GetupComplete")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_GetupComplete")
	}
	static class UAnimNotify_GetupComplete* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_GetupComplete>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_GetupComplete;

// Class ReadyOrNot.GameplayConfig
// 0x0000 (0x0028 - 0x0028)
class UGameplayConfig : public UObject
{
public:
	bool GetBool(const class FString& ConfigKey, bool FallbackValue);
	float GetFloat(const class FString& ConfigKey, float FallbackValue);
	int32 GetInt(const class FString& ConfigKey, int32 FallbackValue);
	class FString GetString(const class FString& ConfigKey, const class FString& FallbackValue);
	TArray<class FString> GetStringArray(const class FString& ConfigKey, const TArray<class FString>& FallbackValue);
	TArray<class FString> GetStringArray_SingleLine(const class FString& ConfigKey, const TArray<class FString>& FallbackValue);
	struct FVector GetVector(const class FString& ConfigKey, const struct FVector& FallbackValue);
	struct FVector2D GetVector2D(const class FString& ConfigKey, const struct FVector2D& FallbackValue);
	void ReloadConfig();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayConfig")
	}
	static class UGameplayConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayConfig>();
	}
};
DUMPER7_ASSERTS_UGameplayConfig;

// Class ReadyOrNot.RoomVisualizer
// 0x0048 (0x02E0 - 0x0298)
class ARoomVisualizer final : public AActor
{
public:
	class USceneComponent*                        DefaultScene;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OwningRoom;                                        // 0x02A0(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ADoor*>                          Doors;                                             // 0x02A8(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AThreatAwarenessActor*>          Threats;                                           // 0x02B8(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ARoomVisualizer*>                ConnectingRooms;                                   // 0x02C8(0x0010)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	ERoomSize                                     Size;                                              // 0x02D8(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RoomVisualizer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RoomVisualizer")
	}
	static class ARoomVisualizer* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARoomVisualizer>();
	}
};
DUMPER7_ASSERTS_ARoomVisualizer;

// Class ReadyOrNot.AnimNotify_ItemSwitchSocket
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_ItemSwitchSocket final : public UAnimNotify
{
public:
	EItemSocket                                   DesiredItemSocket;                                 // 0x0038(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_ItemSwitchSocket")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_ItemSwitchSocket")
	}
	static class UAnimNotify_ItemSwitchSocket* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_ItemSwitchSocket>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_ItemSwitchSocket;

// Class ReadyOrNot.HealthComponent
// 0x0000 (0x00F8 - 0x00F8)
class UHealthComponent : public UResourceComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HealthComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HealthComponent")
	}
	static class UHealthComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHealthComponent>();
	}
};
DUMPER7_ASSERTS_UHealthComponent;

// Class ReadyOrNot.CharacterHealthComponent
// 0x0190 (0x0288 - 0x00F8)
class UCharacterHealthComponent final : public UHealthComponent
{
public:
	TMulticastInlineDelegate<void(ELimbType Limb)> OnLimbFullHealth;                                 // 0x00F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(ELimbType AffectedLimb, float LimbHealth)> OnLimbLowHealth;        // 0x0108(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(ELimbType Limb)> OnLimbNoHealth;                                   // 0x0118(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(ELimbType Limb)> OnLimbBroken;                                     // 0x0128(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(ELimbType Limb)> OnLimbFullTickets;                                // 0x0138(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(ELimbType Limb)> OnLimbNoTickets;                                  // 0x0148(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	EPlayerHealthStatus                           HealthStatus;                                      // 0x0158(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bEnableIncapacitation : 1;                         // 0x0159(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IncapacitationHealthMultiplier;                    // 0x015C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLimbHealthData                        RightLeg;                                          // 0x0160(0x0034)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLimbHealthData                        LeftLeg;                                           // 0x0194(0x0034)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLimbHealthData                        RightArm;                                          // 0x01C8(0x0034)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLimbHealthData                        LeftArm;                                           // 0x01FC(0x0034)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLimbHealthData                        Head;                                              // 0x0230(0x0034)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         bUnlimitedRevives : 1;                             // 0x0264(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxRevives;                                        // 0x0268(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReviveTime;                                        // 0x026C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReviveTimeDecrement;                               // 0x0270(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReviveOperatingTime;                               // 0x0274(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxReviveHealth;                                   // 0x0278(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         RemainingRevives;                                  // 0x027C(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RemainingReviveTime;                               // 0x0280(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RemainingReviveHealth;                             // 0x0284(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static bool IsLimbEqualTo(const struct FLimbHealthData& InLimbHealthData, const struct FLimbHealthData& OtherLimbHealthData);

	void DecreaseLimbHealth(const ELimbType& Limb, const float Amount);
	void DecreaseLimbTickets(const ELimbType& Limb, const int32 Amount);
	void DecreaseRevive();
	void DecreaseReviveHealth(const float Amount);
	bool HalfMaxLimbHealth(const ELimbType& Limb);
	void IncreaseLimbHealth(const ELimbType& Limb, const float Amount);
	void IncreaseLimbTickets(const ELimbType& Limb, const int32 Amount);
	void IncreaseRevive();
	void IncreaseReviveHealth(const float Amount);
	void ResetAllLimbHealth();
	void ResetAllLimbTickets();
	void ResetLimbHealth(const ELimbType& Limb);
	void ResetLimbTickets(const ELimbType& Limb);
	void ResetReviveHealth();
	void ResetRevives();
	void Server_DecreaseLimbHealth(const ELimbType& Limb, float Amount);
	void Server_DecreaseLimbTickets(const ELimbType& Limb, int32 Amount);
	void Server_DecreaseRevive();
	void Server_DecreaseReviveHealth(float Amount);
	void Server_HalfMaxLimbHealth(const ELimbType& Limb);
	void Server_IncreaseLimbHealth(const ELimbType& Limb, float Amount);
	void Server_IncreaseLimbTickets(const ELimbType& Limb, int32 Amount);
	void Server_IncreaseRevive();
	void Server_IncreaseReviveHealth(float Amount);
	void Server_ResetAllLimbHealth();
	void Server_ResetAllLimbTickets();
	void Server_ResetLimbHealth(const ELimbType& Limb);
	void Server_ResetLimbTickets(const ELimbType& Limb);
	void Server_ResetReviveHealth();
	void Server_ResetRevives();
	void Server_SetCurrentLimbHealthToMax(const ELimbType& Limb);
	void Server_SetHealthStatus(EPlayerHealthStatus NewHealthStatus);
	void Server_SetLimbHealth(const ELimbType& Limb, float NewHealthAmount);
	void Server_SetMaxLimbHealth(const ELimbType& Limb, float NewMaxHealth);
	void Server_SetRemainingRevives(int32 NewRemainingRevives);
	void Server_SetReviveHealth(float NewReviveHealth);
	void Server_UpdatePreviousLimbHealth(const ELimbType& Limb);
	void Server_UseAllRemainingLimbTickets(const ELimbType& Limb);
	void SetCurrentLimbHealthToMax(const ELimbType& Limb);
	void SetHealthStatus(EPlayerHealthStatus NewHealthStatus);
	void SetLimbHealth(const ELimbType& Limb, const float NewHealthAmount);
	void SetMaxLimbHealth(const ELimbType& Limb, const float NewMaxHealth);
	void SetRemainingRevives(const int32 NewRemainingRevives);
	void SetReviveHealth(const float NewReviveHealth);
	void UpdatePreviousLimbHealth(const ELimbType& Limb);
	void UseAllLimbTickets(const ELimbType& Limb);

	bool CanUseReviveSystem() const;
	TArray<ELimbType> GetBrokenLimbs() const;
	struct FLimbHealthData GetHeadHealth_Copy() const;
	EPlayerHealthStatus GetHealthStatus() const;
	float GetIncapacitationHealthMultiplier() const;
	struct FLimbHealthData GetLeftArmHealth_Copy() const;
	struct FLimbHealthData GetLeftLegHealth_Copy() const;
	struct FLimbHealthData GetLimb_Copy(const ELimbType& Limb) const;
	float GetMaxReviveHealth() const;
	int32 GetMaxRevives() const;
	float GetRemainingReviveHealth() const;
	int32 GetRemainingRevives() const;
	float GetRemainingReviveTime() const;
	float GetReviveOperatingTime() const;
	struct FLimbHealthData GetRightArmHealth_Copy() const;
	struct FLimbHealthData GetRightLegHealth_Copy() const;
	bool IsAnyLimbAtNoHealth(ELimbType* OutLimbType) const;
	bool IsAnyLimbBelowFullHealth(ELimbType* OutLimbType) const;
	bool IsAnyLimbBroken(ELimbType* OutLimbType) const;
	bool IsIncapacitated() const;
	bool IsIncapacitationEnabled() const;
	bool IsLimbBroken(const ELimbType& Limb) const;
	bool IsLimbFullHealth(const ELimbType& Limb) const;
	bool IsLimbHealthAbove(const ELimbType& Limb, float HealthValue) const;
	bool IsLimbHealthAt(const ELimbType& Limb, float HealthValue) const;
	bool IsLimbHealthAtOrAbove(const ELimbType& Limb, float HealthValue) const;
	bool IsLimbHealthAtOrBelow(const ELimbType& Limb, float HealthValue) const;
	bool IsLimbHealthBelow(const ELimbType& Limb, float HealthValue) const;
	bool IsLimbLowHealth(const ELimbType& Limb) const;
	bool IsLimbNoHealth(const ELimbType& Limb) const;
	bool IsReviveHealthDepleted() const;
	bool IsUsingUnlimitedRevives() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterHealthComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterHealthComponent")
	}
	static class UCharacterHealthComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterHealthComponent>();
	}
};
DUMPER7_ASSERTS_UCharacterHealthComponent;

// Class ReadyOrNot.AnimNotify_KillMyself
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_KillMyself final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_KillMyself")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_KillMyself")
	}
	static class UAnimNotify_KillMyself* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_KillMyself>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_KillMyself;

// Class ReadyOrNot.AnimNotify_LockPickDoor
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_LockPickDoor final : public UAnimNotify
{
public:
	uint8                                         bLockPickFinished : 1;                             // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_LockPickDoor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_LockPickDoor")
	}
	static class UAnimNotify_LockPickDoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_LockPickDoor>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_LockPickDoor;

// Class ReadyOrNot.Challenge
// 0x0048 (0x0070 - 0x0028)
class UChallenge : public UObject
{
public:
	class FText                                   ChallengeName;                                     // 0x0028(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   ChallengeDescription;                              // 0x0040(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                   ChallengeProgressName;                             // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChallengeProgressCurrent;                          // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChallengeProgressMax;                              // 0x0064(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHiddenChallenge;                                  // 0x0068(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bChallengeComplete;                                // 0x0069(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLevelSpecificChallenge;                           // 0x006A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DecrementChallengeProgress(int32 DecrementBy);
	void IncrementChallengeProgress(int32 IncrementBy);
	void OnChallengeAchieved();
	void OnChallengeInit(class AReadyOrNotGameState* gs);
	void ResetChallengeProgress();
	void UpdateFromProfile(class UReadyOrNotProfile* Profile);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Challenge")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Challenge")
	}
	static class UChallenge* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallenge>();
	}
};
DUMPER7_ASSERTS_UChallenge;

// Class ReadyOrNot.GamepadLayoutEntry
// 0x00C0 (0x04D8 - 0x0418)
class UGamepadLayoutEntry : public UCommonActivatableWidget
{
public:
	struct FGamepadControlSchemeKeyPair           TargetInput;                                       // 0x0418(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bColorCustomized;                                  // 0x0448(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_449[0x3];                                      // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CustomizedColor;                                   // 0x044C(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateColor                            DefaultColor;                                      // 0x0460(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             BindModifier;                                      // 0x0478(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonTextBlock*                       BindDescription;                                   // 0x0480(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             CustomizedModifier;                                // 0x0488(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URichTextBlock*                         Gamepad_Glyph;                                     // 0x0490(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URichTextBlock*                         Gamepad_Glyph_Pair;                                // 0x0498(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLeftDirection;                                  // 0x04A0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A1[0x37];                                     // 0x04A1(0x0037)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSetup(const struct FGamepadControlSchemeAction& Action);
	void SetupInputs(const TArray<struct FGamepadControlSchemeAction>& Actions, bool bInIsLeftDirection);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GamepadLayoutEntry")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GamepadLayoutEntry")
	}
	static class UGamepadLayoutEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadLayoutEntry>();
	}
};
DUMPER7_ASSERTS_UGamepadLayoutEntry;

// Class ReadyOrNot.AnimNotify_MirrorDoor
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_MirrorDoor final : public UAnimNotify
{
public:
	uint8                                         bMirrorFinish : 1;                                 // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_MirrorDoor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_MirrorDoor")
	}
	static class UAnimNotify_MirrorDoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_MirrorDoor>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_MirrorDoor;

// Class ReadyOrNot.NavQuery_Swat
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_Swat : public UNavigationQueryFilter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_Swat")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_Swat")
	}
	static class UNavQuery_Swat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_Swat>();
	}
};
DUMPER7_ASSERTS_UNavQuery_Swat;

// Class ReadyOrNot.NavQuery_SwatFallIn
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_SwatFallIn final : public UNavQuery_Swat
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_SwatFallIn")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_SwatFallIn")
	}
	static class UNavQuery_SwatFallIn* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_SwatFallIn>();
	}
};
DUMPER7_ASSERTS_UNavQuery_SwatFallIn;

// Class ReadyOrNot.AnimNotify_NextMag
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_NextMag final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_NextMag")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_NextMag")
	}
	static class UAnimNotify_NextMag* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_NextMag>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_NextMag;

// Class ReadyOrNot.BaseRadialMenuScript
// 0x0040 (0x0068 - 0x0028)
class UBaseRadialMenuScript : public UObject
{
public:
	TSoftObjectPtr<class UTexture2D>              RadialMenuIcon;                                    // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URadialWidgetBase*                      RadialMenuOwner;                                   // 0x0050(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 Actor;                                             // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWorld*                                 World;                                             // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void ExecuteScript();
	void Initialize(class URadialWidgetBase* InRadialMenuOwner);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseRadialMenuScript")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseRadialMenuScript")
	}
	static class UBaseRadialMenuScript* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseRadialMenuScript>();
	}
};
DUMPER7_ASSERTS_UBaseRadialMenuScript;

// Class ReadyOrNot.AnimNotify_OnCheckedDoor
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_OnCheckedDoor final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_OnCheckedDoor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_OnCheckedDoor")
	}
	static class UAnimNotify_OnCheckedDoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_OnCheckedDoor>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_OnCheckedDoor;

// Class ReadyOrNot.AnimNotify_OnLandmarkProxyUse
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_OnLandmarkProxyUse final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_OnLandmarkProxyUse")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_OnLandmarkProxyUse")
	}
	static class UAnimNotify_OnLandmarkProxyUse* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_OnLandmarkProxyUse>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_OnLandmarkProxyUse;

// Class ReadyOrNot.CyberneticCharacter
// 0x0D10 (0x27E0 - 0x1AD0)
class ACyberneticCharacter : public AReadyOrNotCharacter
{
public:
	uint8                                         Pad_1AD0[0x18];                                    // 0x1AD0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  ClosestPawn;                                       // 0x1AE8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AF0[0x38];                                    // 0x1AF0(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VisibleSwatPercentage;                             // 0x1B28(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VisibleSwatCount;                                  // 0x1B2C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VisibleSquadMembersCount;                          // 0x1B30(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B34[0x4];                                     // 0x1B34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URoNMoveStyleComponent*                 MoveStyle;                                         // 0x1B38(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EStunType, float>                        TimeOfStunTypeEnded;                               // 0x1B40(0x0050)(NativeAccessSpecifierPublic)
	TMap<EStunType, float>                        TimeOfStunDamageLastTaken;                         // 0x1B90(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BE0[0x8];                                     // 0x1BE0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           LastPlayedStunAnimMontage;                         // 0x1BE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BF0[0x68];                                    // 0x1BF0(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AReadyOrNotCharacter*, float>      AppliedGasVisibilityPenaltyMap;                    // 0x1C58(0x0050)(NativeAccessSpecifierPublic)
	uint8                                         Pad_1CA8[0x24];                                    // 0x1CA8(0x0024)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ForceComplianceStrength;                           // 0x1CCC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECoverDirection                               ActiveCoverDirection;                              // 0x1CD0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECoverAimType                                 ActiveCoverAimType;                                // 0x1CD1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECoverFireType                                ActiveCoverFireType;                               // 0x1CD2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1CD3[0x5];                                     // 0x1CD3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          ActiveCoverFirePose;                               // 0x1CD8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          ActiveCoverIdlePose;                               // 0x1CE0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACoverLandmark*                         CurrentCoverLandmarkInUse;                         // 0x1CE8(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACoverLandmark*                         LastCoverLandmarkUsed;                             // 0x1CF0(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AWallHoleTraversal*                     CurrentWallHoleTraversalInUse;                     // 0x1CF8(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AWallHoleTraversal*                     LastWallHoleTraversalUsed;                         // 0x1D00(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D08[0x8];                                     // 0x1D08(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             VoiceLineEventMask;                                // 0x1D10(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D18[0x8];                                     // 0x1D18(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           SimulatingAttachedStaticMeshes;                    // 0x1D20(0x0010)(ExportObject, Net, ZeroConstructor, RepNotify, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FAttachedMeshData>              AttachedMeshData;                                  // 0x1D30(0x0010)(Net, ZeroConstructor, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FAttachedSkeletalMeshData>      AttachedSkeletalMeshData;                          // 0x1D40(0x0010)(Net, ZeroConstructor, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bIsMoving;                                         // 0x1D50(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D51[0x47];                                    // 0x1D51(0x0047)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              LastEquippedBreachItem;                            // 0x1D98(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* Character)> OnSurrendered;             // 0x1DA0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* Character)> OnFakeSurrendered;         // 0x1DB0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Character)> OnSpottedEnemy; // 0x1DC0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Character)> OnSpottedFriendly; // 0x1DD0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Character)> OnSpottedNeutral; // 0x1DE0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Character)> OnSpottedCharacter; // 0x1DF0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* Actor)> OnSensedActor;                               // 0x1E00(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* Character)> OnSensedCharacter;         // 0x1E10(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnAIFinishSpawning;                                // 0x1E20(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E30[0x10];                                    // 0x1E30(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextRenderComponent*                   NoBuenoTextRender;                                 // 0x1E40(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AbuseCount;                                        // 0x1E48(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E4C[0x4];                                     // 0x1E4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ReasonsToSprint;                                   // 0x1E50(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReasonsToStandStill;                               // 0x1E60(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReasonsToWalk;                                     // 0x1E70(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FCoverAnimStateMachineData             Rep_CoverAnimState;                                // 0x1E80(0x0018)(BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic)
	struct FHidingAnimStateMachineData            Rep_HidingAnimState;                               // 0x1E98(0x0010)(BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic)
	struct FHoleTraversalAnimStateMachineData     Rep_HoleTraversalAnimState;                        // 0x1EA8(0x0010)(BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                              AimOffset;                                         // 0x1EB8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EC8[0x20];                                    // 0x1EC8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AReadyOrNotCharacter*, int32>      MeleeCountMap;                                     // 0x1EE8(0x0050)(NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UWorldBuildingActivity>> CivilianCowerActivities;                       // 0x1F38(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         CivilianCowerActivityDuration;                     // 0x1F48(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F4C[0x14];                                    // 0x1F4C(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIFactionManager*                      FactionManager;                                    // 0x1F60(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F68[0x20];                                    // 0x1F68(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class ASquadManager*                          SquadManager;                                      // 0x1F88(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F90[0xA0];                                    // 0x1F90(0x00A0)(Fixing Size After Last Property [ Dumper-7 ])
	class AAISpawn*                               SpawnedFromSpawner;                                // 0x2030(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanRoam;                                          // 0x2038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECombatState                                  CombatState;                                       // 0x2039(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_203A[0x6];                                     // 0x203A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   RecentMeleeVictim;                                 // 0x2040(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotCharacter*                   PendingMeleeTarget;                                // 0x2048(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasEverShot;                                      // 0x2050(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2051[0x7];                                     // 0x2051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnWeaponForceFire_FromAnimNotify;                  // 0x2058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDoorShotgunBreach_FromAnimNotify;                // 0x2068(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDoorKickBreach_FromAnimNotify;                   // 0x2078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDoorRamBreach_FromAnimNotify;                    // 0x2088(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABaseItem* InThrownItem)> OnPendingItemThrown_FromAnimNotify; // 0x2098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ABaseItem*                              PendingThrownItem;                                 // 0x20A8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ACyberneticCharacter* AICharacter, class ABaseMagazineWeapon* MagazineWeapon, const struct FVector& fireDirection)> OnAIFire; // 0x20B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCollectPendingEvidenceBegin_FromAnimNotify;      // 0x20C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCollectPendingEvidenceEnd_FromAnimNotify;        // 0x20D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_20E0[0x8];                                     // 0x20E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* Shouter, bool bLOS)> OnHeardOfficerYell; // 0x20E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ACyberneticCharacter* Character, ESurrenderExitType ExitType)> OnExitedSurrender; // 0x20F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_2108[0x4];                                     // 0x2108(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SuppressionAmount;                                 // 0x210C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACyberneticCharacter*                   BeingRestrainedBy;                                 // 0x2110(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScoringComponent*                      ScoringComponent;                                  // 0x2118(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2120[0x8];                                     // 0x2120(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIArchetypeData*                       Archetype;                                         // 0x2128(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SpawnLocation;                                     // 0x2130(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               SpawnRotation;                                     // 0x2148(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UAIArchetypeData*                       DefaultSuspectArchetype;                           // 0x2160(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAIArchetypeData*                       DefaultCivilianArchetype;                          // 0x2168(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FActivityRouteCollection               ActivityRouteCollection;                           // 0x2170(0x0020)(Edit, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                    Rep_FocalPoint;                                    // 0x2190(0x0018)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                    Rep_HeadFocalPoint;                                // 0x21A8(0x0018)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Rep_FocalActor;                                    // 0x21C0(0x0008)(Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasLOSToFocalPoint;                               // 0x21C8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bHeardYellFromOfficer : 1;                         // 0x21C9(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_21CA[0x2];                                     // 0x21CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSinceHeardOfficerYell;                         // 0x21CC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSinceLastAggressiveForce;                      // 0x21D0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ArrestedTime;                                      // 0x21D4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFemale;                                           // 0x21D8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bChild;                                            // 0x21D9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21DA[0x6];                                     // 0x21DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           LastGetUpMontage;                                  // 0x21E0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bRecoveringFromRagdoll : 1;                        // 0x21E8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsKnockedOut : 1;                                 // 0x21E8(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsPlayingDead : 1;                                // 0x21E8(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_21E9[0x3];                                     // 0x21E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeHiding;                                        // 0x21EC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimePlayingDead;                                   // 0x21F0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSinceLastPlayDead;                             // 0x21F4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSinceAtLastCoverLandmark;                      // 0x21F8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSinceLastSeenCharacterWhilstHiding;            // 0x21FC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSinceSeenCharacterNotLookingWhilstHiding;      // 0x2200(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasEverSeenCharacterWhilstHiding;                 // 0x2204(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2205[0x3];                                     // 0x2205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   CharacterSeenWhilstHiding;                         // 0x2208(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotCharacterAnimData*           Unarmed_Calm_AD;                                   // 0x2210(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotCharacterAnimData*           Unarmed_Sr_AD;                                     // 0x2218(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotCharacterAnimData*           Unarmed_Ar_AD;                                     // 0x2220(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotCharacterAnimData*           Unarmed_Ar_Crouch_AD;                              // 0x2228(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotCharacterAnimData*           Unarmed_Alert_AD;                                  // 0x2230(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotCharacterAnimData*           Rifle_AD;                                          // 0x2238(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotCharacterAnimData*           Pistol_AD;                                         // 0x2240(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotCharacterAnimData*           Pistol_OneHanded_AD;                               // 0x2248(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACyberneticCharacter*                   AvoidingCharacter;                                 // 0x2250(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIMoveDataBlock                       MoveDataOverride;                                  // 0x2258(0x0098)(NativeAccessSpecifierPublic)
	struct FAIMoveDataBlock                       CurMoveDataBlock;                                  // 0x22F0(0x0098)(Edit, NativeAccessSpecifierPublic)
	struct FAIMovementStyleData                   MovementStyleData;                                 // 0x2388(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_23D0[0x4];                                     // 0x23D0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Stress;                                            // 0x23D4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartingStress;                                    // 0x23D8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSinceLastShot;                                 // 0x23DC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSinceArrest;                                   // 0x23E0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasPlayedSurrenderAnim;                           // 0x23E4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFakeSurrender;                                  // 0x23E5(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasEverFakeSurrendered;                           // 0x23E6(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFinishedEquippingLoadout;                         // 0x23E7(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFinishedEquippingArmour;                          // 0x23E8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceFiringEnabled;                               // 0x23E9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_23EA[0x6];                                     // 0x23EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterMesh                         CharacterMeshData;                                 // 0x23F0(0x00F0)(Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_24E0[0x8];                                     // 0x24E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ACyberneticCharacter* Character, class AReadyOrNotCharacter* Target)> OnAimedAt; // 0x24E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_24F8[0x8];                                     // 0x24F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bAimingAtTarget : 1;                               // 0x2500(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHasEverAimedAtTarget : 1;                         // 0x2500(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsFleeing : 1;                                    // 0x2500(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsExitingLandmark : 1;                            // 0x2500(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawingWeapon : 1;                                // 0x2500(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPickingUpWeapon : 1;                              // 0x2500(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHasDamagedSWATTeam : 1;                           // 0x2500(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHitScannedFriendly : 1;                           // 0x2500(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDiedWhilstTraversingHole : 1;                     // 0x2501(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDiedWhilstHiding : 1;                             // 0x2501(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsRaisingWeapon : 1;                              // 0x2501(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsLoweringWeapon : 1;                             // 0x2501(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_2502[0x2];                                     // 0x2502(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DrawingWeaponTime;                                 // 0x2504(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PickingUpWeaponTime;                               // 0x2508(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RaisingWeaponTime;                                 // 0x250C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LoweringWeaponTime;                                // 0x2510(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2514[0x4];                                     // 0x2514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CachedHitScanResult;                               // 0x2518(0x00E8)(BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FWorldBuildingAnimState                Rep_WorldBuildingAnimState;                        // 0x2600(0x0010)(BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic)
	struct FTakeHostageAnimState                  Rep_TakeHostageAnimState;                          // 0x2610(0x0018)(BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2628[0x8];                                     // 0x2628(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          HostageMasterIdleLoop;                             // 0x2630(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          HostageSlaveIdleLoop;                              // 0x2638(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACyberneticCharacter*                   TakenHostageBy;                                    // 0x2640(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACyberneticCharacter*                   BeingDisarmedBy;                                   // 0x2648(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2650[0x2C];                                    // 0x2650(0x002C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSurrendered;                                   // 0x267C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIsComplying : 1;                                  // 0x2680(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bIsWaiting : 1;                                    // 0x2680(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_2681[0x3];                                     // 0x2681(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PepperSprayAbuseLevel;                             // 0x2684(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeSinceLastTasered;                              // 0x2688(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         TimesTasered;                                      // 0x268C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector_NetQuantize                    RagdollMeshLocation;                               // 0x2690(0x0018)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                               RagdollMeshRotation;                               // 0x26A8(0x0018)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_26C0[0x4];                                     // 0x26C0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HesitationTime;                                    // 0x26C4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_26C8[0x28];                                    // 0x26C8(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FocalPointInterpSpeed;                             // 0x26F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAlphaBlendOption                             FocalPointInterpCurve;                             // 0x26F4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAlphaBlendOption                             AimOffsetInterpCurve;                              // 0x26F5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26F6[0x2];                                     // 0x26F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FocusTurnSpeed;                                    // 0x26F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurnDegreesPerSecond;                              // 0x26FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActorRotationInterpStandingSpeed;                  // 0x2700(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActorRotationInterpMovingSpeed;                    // 0x2704(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AimOffsetInterpSpeed;                              // 0x2708(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_270C[0x4];                                     // 0x270C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnvQuery*                              EscapeGasQuery;                                    // 0x2710(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACombatMoveZone*                        LastUsedCombatMoveZone;                            // 0x2718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class ACombatMoveZone*>                  VisitedCombatMoveZones;                            // 0x2720(0x0050)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
	ECurrentZoneTransitionState                   ZoneTransitionState;                               // 0x2770(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2771[0x7];                                     // 0x2771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetComponent*                       DebugAISelectionWidget;                            // 0x2778(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2780[0x4];                                     // 0x2780(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsBlockingRaiseLowerWpAnimsActive;                // 0x2784(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlayingSurrenderAnim;                           // 0x2785(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2786[0x2];                                     // 0x2786(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CurrentSurrenderAnim;                              // 0x2788(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimDebugLocoInfo                     AIAnimDebugLocoInfo;                               // 0x2790(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class UMotionWarpingComponent*                MotionWarpingComponent;                            // 0x27C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultStunBlendoutTime;                           // 0x27D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStunMontageAnimationActiveOrBlending;             // 0x27D4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27D5[0xB];                                     // 0x27D5(0x000B)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DecreaseStress(float Amount);
	void DrawWeapon();
	void FakeSurrender(bool bIsMelee);
	void ForceFireGun(float Chance);
	float GetCurrentSurrenderAnimPosition();
	bool GetIsSurrenderAnimPlaying();
	float GetStressUntilWeaponRaise();
	bool GetStunExposureTime(EStunType StunType, float* TimeExposed);
	void IncreaseStress(float Amount);
	void Knockout(float Duration, bool bPlayVO);
	void Multicast_PlayArmourHitEffects(class ABaseArmour* Armour, const struct FHitResult& Hit, class AController* HitInstigator);
	void Multicast_SendCharacterMeshData(const struct FCharacterMesh& RPC_CharacterMeshData);
	void OnGetupAfterRagdollComplete();
	void OnOfficerShouted(class AReadyOrNotCharacter* Shouter, bool bLOS);
	void OnRep_AttachedMeshData();
	void OnRep_AttachedSkeletalMeshData();
	void OnRep_CharacterMeshData();
	void OnRep_SimulatingAttachedStaticMeshes();
	void OnSquadRoleAssigned(const struct FGameplayTag& RoleTag);
	void OnStunMontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	void OnSurrenderMontageBlendedOut(class UAnimMontage* Montage, bool bInterrupted);
	void OnSurrenderMontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	void PlayActionVoiceline(struct FAIActionData* ActionData, bool bVoicelineCooldown);
	void PlayBarkOrStartConversation(const class FString& SpeechRow, bool bHasSharedCooldown, float Cooldown);
	void PlayDead(float Duration, const bool bPlayVO);
	class UAnimMontage* PlayMontageFromTableWithFocalPoint(const class FString& Animation, const struct FVector& FocalPoint);
	class UAnimMontage* PlayMontageFromTableWithIndexWithFocalPoint(const class FString& Animation, int32 Index_0, const struct FVector& FocalPoint);
	bool PlayMontageWithFocalPoint(class UAnimMontage* Montage, const struct FVector& FocalPoint);
	void PlayShootingWeaponConversation();
	void SetConfigValues();
	void StartBlockingRaiseLowerWpAnims(float TimeBlockingSwitch);
	void StopBlockingRaiseLowerWpAnims();
	void StopPlayingDead();
	void Surrender();
	bool SurrenderExit(ESurrenderExitType ExitType, const struct FVector& FocalPoint);

	bool CanEverSuicide() const;
	bool CanExitSurrender() const;
	ESurrenderExitType DetermineSurrenderExitType() const;
	class UAIArchetypeData* GetAIArchetype() const;
	class ABaseArmour* GetArmour() const;
	class ACyberneticController* GetCyberneticsController() const;
	TArray<struct FDebugData> GetDebugInfoOnROE() const;
	struct FVector GetFocalPoint() const;
	float GetHesitationTime() const;
	struct FRotator GetLookAtRotation(float YawLimit, float PitchLimit) const;
	bool GetTimeSinceLastTookStunDamageOfType(EStunType StunType, float* TimeSinceTookStunDamage) const;
	float GetVisibleSWATPercentage() const;
	bool HasDamagedSWAT() const;
	bool HasLineOfSightToCharacter(class AReadyOrNotCharacter* InCharacter) const;
	bool IsActiveForCombat() const;
	bool IsArrestCapable(class APlayerCharacter* PlayerCharacter) const;
	bool IsBeginningHostageTake() const;
	bool IsBeingTakenHostage() const;
	bool IsComplying() const;
	bool IsComplyingOrFakeComplying() const;
	bool IsDamagedByLessLethal() const;
	bool IsDamagedByLethal() const;
	bool IsEndingHostageTake() const;
	bool IsExitingSurrender() const;
	bool IsFiringFromCover() const;
	bool IsHesitating() const;
	bool IsHesitatingFor(const float Seconds) const;
	bool IsHiding() const;
	bool IsLoweringWeapon() const;
	bool IsMovingToCover() const;
	bool IsMovingToLandmarkCover() const;
	bool IsPlayingDead() const;
	bool IsPlayingStunAnimation() const;
	bool IsRaisingWeapon() const;
	bool IsSameFaction(class ACyberneticCharacter* OtherAI) const;
	bool IsSameSquad(class ACyberneticCharacter* OtherAI) const;
	bool IsTakingCover() const;
	bool IsTakingCoverAtLandmark() const;
	bool IsTakingHostage() const;
	bool IsUnjustifiedUseOfForce(class AReadyOrNotCharacter* Aggressor, class ABaseItem* ForceWeapon, const class UDamageType* ForceUsed) const;
	bool IsWearingExplosiveVest() const;
	bool IsWearingHeadArmor() const;
	bool WasRecentlyYelledAt(const float Seconds) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CyberneticCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CyberneticCharacter")
	}
	static class ACyberneticCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACyberneticCharacter>();
	}
};
DUMPER7_ASSERTS_ACyberneticCharacter;

// Class ReadyOrNot.AnimNotify_PickupItemComplete
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_PickupItemComplete final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_PickupItemComplete")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_PickupItemComplete")
	}
	static class UAnimNotify_PickupItemComplete* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_PickupItemComplete>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_PickupItemComplete;

// Class ReadyOrNot.NavQuery_SwatCharlie
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_SwatCharlie final : public UNavQuery_Swat
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_SwatCharlie")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_SwatCharlie")
	}
	static class UNavQuery_SwatCharlie* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_SwatCharlie>();
	}
};
DUMPER7_ASSERTS_UNavQuery_SwatCharlie;

// Class ReadyOrNot.AnimNotify_PlayMontage
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_PlayMontage final : public UAnimNotify
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0038(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_PlayMontage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_PlayMontage")
	}
	static class UAnimNotify_PlayMontage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_PlayMontage>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_PlayMontage;

// Class ReadyOrNot.TableTennisPlayer
// 0x0010 (0x02A8 - 0x0298)
class ATableTennisPlayer final : public AActor
{
public:
	class ATableTennisMachine*                    TargetGame;                                        // 0x0298(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A0[0x8];                                      // 0x02A0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Server_SetPosition(float NewPosition);
	void Server_StopPlaying();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TableTennisPlayer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TableTennisPlayer")
	}
	static class ATableTennisPlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATableTennisPlayer>();
	}
};
DUMPER7_ASSERTS_ATableTennisPlayer;

// Class ReadyOrNot.AnimNotify_PlayPostProcessEffect
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_PlayPostProcessEffect final : public UAnimNotify
{
public:
	class FName                                   PostProcessEffectName;                             // 0x0038(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_PlayPostProcessEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_PlayPostProcessEffect")
	}
	static class UAnimNotify_PlayPostProcessEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_PlayPostProcessEffect>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_PlayPostProcessEffect;

// Class ReadyOrNot.AnimNotify_PreMissionWeaponVis
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_PreMissionWeaponVis final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_PreMissionWeaponVis")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_PreMissionWeaponVis")
	}
	static class UAnimNotify_PreMissionWeaponVis* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_PreMissionWeaponVis>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_PreMissionWeaponVis;

// Class ReadyOrNot.ReadyOrNotGameplayEffect
// 0x0030 (0x0058 - 0x0028)
class UReadyOrNotGameplayEffect : public UObject
{
public:
	TMulticastInlineDelegate<void(TSubclassOf<class UReadyOrNotGameplayEffect> InGameplayEffectClass)> OnGameplayEffectExpired; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AActor*                                 Actor;                                             // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWorld*                                 World;                                             // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_48[0x10];                                      // 0x0048(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ApplyEffect();
	void ApplyEffectFor(float Seconds);
	void Initialize(class AActor* InActor);
	void Multicast_ApplyEffect();
	void Multicast_ApplyEffectFor(float Seconds);
	void Multicast_Initialize(class AActor* InActor);
	void Multicast_ResetEffect();
	void OnEffectExpired();
	void ResetEffect();
	void Server_ApplyEffect(bool bMulticast);
	void Server_ApplyEffectFor(float Seconds, bool bMulticast);
	void Server_Initialize(class AActor* InActor, bool bMulticast);
	void Server_ResetEffect(bool bMulticast);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotGameplayEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotGameplayEffect")
	}
	static class UReadyOrNotGameplayEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotGameplayEffect>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotGameplayEffect;

// Class ReadyOrNot.BasePlayerEffect
// 0x0008 (0x0060 - 0x0058)
class UBasePlayerEffect : public UReadyOrNotGameplayEffect
{
public:
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BasePlayerEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BasePlayerEffect")
	}
	static class UBasePlayerEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBasePlayerEffect>();
	}
};
DUMPER7_ASSERTS_UBasePlayerEffect;

// Class ReadyOrNot.AnimNotify_PushQueuedDoor
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_PushQueuedDoor final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_PushQueuedDoor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_PushQueuedDoor")
	}
	static class UAnimNotify_PushQueuedDoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_PushQueuedDoor>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_PushQueuedDoor;

// Class ReadyOrNot.NavQuery_FlankingSuspect
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_FlankingSuspect final : public UNavigationQueryFilter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_FlankingSuspect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_FlankingSuspect")
	}
	static class UNavQuery_FlankingSuspect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_FlankingSuspect>();
	}
};
DUMPER7_ASSERTS_UNavQuery_FlankingSuspect;

// Class ReadyOrNot.AnimNotify_RemovePlacedC2
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_RemovePlacedC2 final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_RemovePlacedC2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_RemovePlacedC2")
	}
	static class UAnimNotify_RemovePlacedC2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_RemovePlacedC2>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_RemovePlacedC2;

// Class ReadyOrNot.VIPEscortGM
// 0x0050 (0x0A70 - 0x0A20)
class AVIPEscortGM : public AReadyOrNotGameMode_PVP
{
public:
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter)> OnVIPKilled; // 0x0A20(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ACharacter* Freed, class ACharacter* Freer)> OnVIPFreed;     // 0x0A30(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class APlayerController*                      VIPPlayer;                                         // 0x0A40(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerStart_VIP_Spawn*                 ChosenVIPSpawn;                                    // 0x0A48(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class APlayerCharacter>           VIPCharacterClass;                                 // 0x0A50(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   VIPSpawnTag;                                       // 0x0A58(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeToDeliverVIP;                                  // 0x0A60(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HostageHoldTime;                                   // 0x0A64(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A68[0x8];                                      // 0x0A68(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsVIPAlive();
	bool IsVIPArrested();
	bool IsVIPDead();
	void VIPFreed(class ACharacter* Freed, class ACharacter* Freer);
	void VIPKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);

	ETeamType GetCurrentVIPTeam() const;
	class APlayerCharacter* GetVIPCharacter() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VIPEscortGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VIPEscortGM")
	}
	static class AVIPEscortGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVIPEscortGM>();
	}
};
DUMPER7_ASSERTS_AVIPEscortGM;

// Class ReadyOrNot.Chemlight
// 0x0030 (0x0CB0 - 0x0C80)
class AChemlight : public ABaseItem
{
public:
	uint8                                         Pad_C78[0x10];                                     // 0x0C78(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UAmmoComponent*                         Ammo;                                              // 0x0C88(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   SocketSpawnName;                                   // 0x0C90(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C98[0x18];                                     // 0x0C98(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CancelThrow();
	void Multicast_SpawnThrownChemlight();
	void NormalThrow();
	void OnChemlightThrown();
	void QuickThrow();
	void Server_SpawnThrownChemlight();
	void SetFPMeshHidden(bool bFPMeshHidden);

	bool CanThrow() const;
	int32 GetRemainingAmmo() const;
	bool IsPlayingChemlightThrowAnimations() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Chemlight")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Chemlight")
	}
	static class AChemlight* GetDefaultObj()
	{
		return GetDefaultObjImpl<AChemlight>();
	}
};
DUMPER7_ASSERTS_AChemlight;

// Class ReadyOrNot.AnimNotify_SearchLandmark
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_SearchLandmark final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_SearchLandmark")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_SearchLandmark")
	}
	static class UAnimNotify_SearchLandmark* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_SearchLandmark>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_SearchLandmark;

// Class ReadyOrNot.SetControlRotationToCamBoneAnimNotify
// 0x0008 (0x0040 - 0x0038)
class USetControlRotationToCamBoneAnimNotify final : public UAnimNotify
{
public:
	class FName                                   CameraBoneName;                                    // 0x0038(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SetControlRotationToCamBoneAnimNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SetControlRotationToCamBoneAnimNotify")
	}
	static class USetControlRotationToCamBoneAnimNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<USetControlRotationToCamBoneAnimNotify>();
	}
};
DUMPER7_ASSERTS_USetControlRotationToCamBoneAnimNotify;

// Class ReadyOrNot.CollectableViewController
// 0x0098 (0x0330 - 0x0298)
class ACollectableViewController final : public AActor
{
public:
	float                                         RotationSpeed;                                     // 0x0298(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScaleLevels;                                       // 0x029C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScaleSpeed;                                        // 0x02A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinimumScale;                                      // 0x02A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaximumScale;                                      // 0x02A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VerticalFov;                                       // 0x02AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACameraActor*                           CameraActor;                                       // 0x02B0(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 SpawnPointActor;                                   // 0x02B8(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACollectable*                           CollectableActor;                                  // 0x02C0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotPlayerController*            CurrentController;                                 // 0x02C8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCollectableWidget*                     CollectableWidget;                                 // 0x02D0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D8[0x18];                                     // 0x02D8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADirectionalLight*>              HiddenDirectionalLights;                           // 0x02F0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class ASkyLight*>                      HiddenSkyLights;                                   // 0x0300(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class APostProcessVolume*>             HiddenPostProcessVolumes;                          // 0x0310(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class AExponentialHeightFog*>          HiddenExponentialHeightFogs;                       // 0x0320(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CollectableViewController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CollectableViewController")
	}
	static class ACollectableViewController* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACollectableViewController>();
	}
};
DUMPER7_ASSERTS_ACollectableViewController;

// Class ReadyOrNot.AnimNotify_SetCoverFirePose
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_SetCoverFirePose final : public UAnimNotify
{
public:
	class UAnimSequence*                          Pose;                                              // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_SetCoverFirePose")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_SetCoverFirePose")
	}
	static class UAnimNotify_SetCoverFirePose* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_SetCoverFirePose>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_SetCoverFirePose;

// Class ReadyOrNot.NavQuery_CSGas
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_CSGas final : public UNavigationQueryFilter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_CSGas")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_CSGas")
	}
	static class UNavQuery_CSGas* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_CSGas>();
	}
};
DUMPER7_ASSERTS_UNavQuery_CSGas;

// Class ReadyOrNot.AnimNotify_SetCoverHidePose
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_SetCoverHidePose final : public UAnimNotify
{
public:
	class UAnimSequence*                          Pose;                                              // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_SetCoverHidePose")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_SetCoverHidePose")
	}
	static class UAnimNotify_SetCoverHidePose* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_SetCoverHidePose>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_SetCoverHidePose;

// Class ReadyOrNot.BaseCombatActivity
// 0x02C0 (0x04B0 - 0x01F0)
class UBaseCombatActivity : public UBaseActivity
{
public:
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* NewTrackedEnemy)> OnTrackNewEnemy;     // 0x01F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptedFireAt                        CurrentScriptedFireAt;                             // 0x0200(0x0038)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptedLookAt                        CurrentScriptedLookAt;                             // 0x0238(0x0028)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_260[0xC];                                      // 0x0260(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FleeDesire;                                        // 0x026C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSincePerformingAnyCombatMove;                  // 0x0270(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimePerformingAnyCombatMove;                       // 0x0274(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTraverseHoleActivity*                  TraverseHoleActivity;                              // 0x0278(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseCombatMoveActivity*                CombatMoveActivity;                                // 0x0280(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseCombatMoveActivity*                PreviousCombatMoveActivity;                        // 0x0288(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHardCoverCombatMove*                   HardCoverCombatMove;                               // 0x0290(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDuelingCombatMove*                     DuelingCombatMove;                                 // 0x0298(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFlankingCombatMove*                    FlankingCombatMove;                                // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USuppressionCombatMove*                 SuppressionCombatMove;                             // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPushCombatMove*                        PushCombatMove;                                    // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UChargeCombatMove*                      ChargeCombatMove;                                  // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFleeingCombatMove*                     FleeingCombatMove;                                 // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URepositionCombatMove*                  RepositionCombatMove;                              // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D0[0x1C];                                     // 0x02D0(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CoverLandmarkEvaluationCooldown;                   // 0x02EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotCharacter*                   LastTrackedEnemy;                                  // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F8[0x18];                                     // 0x02F8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UPickupItemActivity*                    PickupItemActivity;                                // 0x0310(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UReloadSafelyActivity*                  ReloadSafelyActivity;                              // 0x0318(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayDeadActivity*                      PlayDeadActivity;                                  // 0x0320(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommitSuicideActivity*                 CommitSuicideActivity;                             // 0x0328(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UIntimidateNearbyCivilianActivity*      IntimidateNearbyCivilianActivity;                  // 0x0330(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCompliantActivity*                     CompliantActivity;                                 // 0x0338(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBaseActivity*                          RallyToActivity;                                   // 0x0340(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBaseActivity*                          RegroupActivity;                                   // 0x0348(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_350[0x160];                                    // 0x0350(0x0160)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisableWeaponSwitching(bool bDisabled);
	void EnterNoStrafeState();
	void EnterStrafeState();
	void FinishCombatMove(bool bSuccess);
	void OnCoverExit();
	void OnCoverFound();
	void OnCoverLandmarkExit();
	void OnNoCoverFound();
	void OnRequestCover();
	void OnRequestCoverLandmark();
	void OnStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
	void OnSuicideFakeOutSuccess();
	void OnTakeDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
	void PerformNoStrafeLogic(float DeltaTime, float Uptime);
	void PerformStrafeLogic(float DeltaTime, float Uptime);
	void PlayDeadFinished(class UBaseActivity* Activity, class ACyberneticController* Controller);
	void PlayDeadStarted(class UBaseActivity* Activity, class ACyberneticController* Controller);
	void ResetTimeSpentEngagingOnTarget();
	void ScriptedFireAtActor(class AActor* InActor, float InTime, bool bOverrideTarget, float AccuracyPenaltyMultiplier, bool bInfiniteAmmo);
	void ScriptedFireAtLocation(const struct FVector& InLocation, float InTime, bool bOverrideTarget, float AccuracyPenaltyMultiplier, bool bInfiniteAmmo);
	void ScriptedLookAtActor(class AActor* InActor, float InTime);
	void ScriptedLookAtLocation(const struct FVector& InLocation, float InTime);
	void StartRunningCombatMove(class UBaseCombatMoveActivity* CombatMove);
	void StopScriptedFire();
	void StopScriptedLook();
	void TrackEnemyFire(class AReadyOrNotCharacter* FromCharacter, class ABaseMagazineWeapon* Weapon, const struct FVector& fireDirection);
	void TrackEnemyKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);

	class UBaseCombatMoveActivity* GetCombatMoveActivity() const;
	int32 GetFailureCountForCombatMove(TSubclassOf<class UBaseCombatMoveActivity> CombatMoveClass) const;
	bool IsFocusingOnActor(const class AActor* InActor) const;
	bool IsRunningCombatMoveActivity(class UClass* Class_0) const;
	bool IsTryingToFireAtScriptedActor() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseCombatActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseCombatActivity")
	}
	static class UBaseCombatActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseCombatActivity>();
	}
};
DUMPER7_ASSERTS_UBaseCombatActivity;

// Class ReadyOrNot.CivilianCombatActivity
// 0x0008 (0x04B8 - 0x04B0)
class UCivilianCombatActivity final : public UBaseCombatActivity
{
public:
	class UCivilianFleeCombatMove*                CivilianFleeCombatMove;                            // 0x04B0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CivilianCombatActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CivilianCombatActivity")
	}
	static class UCivilianCombatActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCivilianCombatActivity>();
	}
};
DUMPER7_ASSERTS_UCivilianCombatActivity;

// Class ReadyOrNot.AnimNotify_SetCoverIdlePose
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_SetCoverIdlePose final : public UAnimNotify
{
public:
	class UAnimSequence*                          Pose;                                              // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_SetCoverIdlePose")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_SetCoverIdlePose")
	}
	static class UAnimNotify_SetCoverIdlePose* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_SetCoverIdlePose>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_SetCoverIdlePose;

// Class ReadyOrNot.AnimNotify_SetHoleTraversalPose
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_SetHoleTraversalPose final : public UAnimNotify
{
public:
	class UAnimSequence*                          Pose;                                              // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_SetHoleTraversalPose")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_SetHoleTraversalPose")
	}
	static class UAnimNotify_SetHoleTraversalPose* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_SetHoleTraversalPose>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_SetHoleTraversalPose;

// Class ReadyOrNot.ChargeCombatMove
// 0x0000 (0x0230 - 0x0230)
class UChargeCombatMove final : public UBaseCombatMoveActivity
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ChargeCombatMove")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ChargeCombatMove")
	}
	static class UChargeCombatMove* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChargeCombatMove>();
	}
};
DUMPER7_ASSERTS_UChargeCombatMove;

// Class ReadyOrNot.AnimNotify_SetStrafe
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_SetStrafe final : public UAnimNotify
{
public:
	bool                                          bSetStrafe;                                        // 0x0038(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_SetStrafe")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_SetStrafe")
	}
	static class UAnimNotify_SetStrafe* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_SetStrafe>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_SetStrafe;

// Class ReadyOrNot.ReadyOrNotDebugSubsystem
// 0x0028 (0x0058 - 0x0030)
class UReadyOrNotDebugSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         bDrawMeleeRange : 1;                               // 0x0030(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bInfiniteHealth : 1;                               // 0x0030(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerGodMode : 1;                                // 0x0030(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bInfiniteAmmo : 1;                                 // 0x0030(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawGrenadePath : 1;                              // 0x0030(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bRTXOn : 1;                                        // 0x0030(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bRTX_GlobalIlluminationOn : 1;                     // 0x0030(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bRTX_ReflectionsOn : 1;                            // 0x0030(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bRTX_AmbientOcclusionOn : 1;                       // 0x0031(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bRTX_ShadowsOn : 1;                                // 0x0031(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bRTX_TranslucencyOn : 1;                           // 0x0031(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bVSyncOn : 1;                                      // 0x0031(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	bool                                          bOverlayOn_Fibonacci;                              // 0x0032(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverlayOn_LineUp;                                 // 0x0033(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverlayOn_PistolLine;                             // 0x0034(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverlayOn_RifleLine;                              // 0x0035(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverlayOn_RuleOfThirds;                           // 0x0036(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bApplyGlobalDamageMultiplier_Weapons : 1;          // 0x0037(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bApplyGlobalDamageMultiplier_Grenades : 1;         // 0x0037(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	float                                         GlobalDamageMultiplier_Weapons;                    // 0x0038(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlobalDamageMultiplier_Grenades;                   // 0x003C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bLogWeaponDamageValuesToConsole : 1;               // 0x0040(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShowObjectiveMarkers : 1;                         // 0x0040(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShowAllEvidenceActors : 1;                        // 0x0040(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShowHesitationBar : 1;                            // 0x0040(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bLogPlayerAnimationStatus : 1;                     // 0x0040(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawInteractableComponents : 1;                   // 0x0040(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDisableInteractableComponent : 1;                 // 0x0040(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawDebugTraces : 1;                              // 0x0040(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawDoorKillStunDistances : 1;                    // 0x0041(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bMuteFMOD : 1;                                     // 0x0041(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPauseFMOD : 1;                                    // 0x0041(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bForceOpenAllDoors : 1;                            // 0x0041(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bForceCloseAllDoors : 1;                           // 0x0041(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bLaserEyes : 1;                                    // 0x0041(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDisableMusic : 1;                                 // 0x0041(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawCoverPoints : 1;                              // 0x0041(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawCoverOctree : 1;                              // 0x0042(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSWATDynamicCover : 1;                             // 0x0042(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSuspectDynamicCover : 1;                          // 0x0042(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawSWATCoverLogic : 1;                           // 0x0042(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawSuspectCoverLogic : 1;                        // 0x0042(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bInfiniteSWATItems : 1;                            // 0x0042(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShowNavigation : 1;                               // 0x0042(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDisableAIMovement : 1;                            // 0x0042(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDisableSwatMovement : 1;                          // 0x0043(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDisableAITargeting : 1;                           // 0x0043(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_44[0x14];                                      // 0x0044(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddOrUpdatePostProcessMaterial(class UMaterialInterface* InMaterial, bool* bMaterialOn);
	void CloseAllDoors();
	void DecreaseGlobalDamageMultiplier_Grenades(float Amount);
	void DecreaseGlobalDamageMultiplier_Weapons(float Amount);
	void DisableAllDebugLines();
	void EnableAllDebugLines();
	void ImitateShipping(bool bImitate);
	void IncreaseGlobalDamageMultiplier_Grenades(float Amount);
	void IncreaseGlobalDamageMultiplier_Weapons(float Amount);
	void OpenAllDoors();
	void RTX_ToggleAmbientOcclusion();
	void RTX_ToggleGlobalIllumination();
	void RTX_ToggleReflections();
	void RTX_ToggleShadows();
	void RTX_ToggleTranslucency();
	void SetDebugLinesVisibility(bool bVisible);
	void SetGlobalDamageMultiplier_Grenades(float NewDamageMultiplier);
	void SetGlobalDamageMultiplier_Weapons(float NewDamageMultiplier);
	void SetMeleeDamage(class APlayerCharacter* PlayerCharacter, float NewMeleeDamage);
	void SetMeleeRange(class APlayerCharacter* PlayerCharacter, float NewMeleeRange);
	void ToggleAIMovement();
	void ToggleAITargeting();
	void ToggleAllEvidenceActorMarkers();
	void ToggleCoverOctree();
	void ToggleCoverPoints();
	void ToggleDrawDebugTraces();
	void ToggleDrawDoorKillStunDistances();
	void ToggleDrawInteractableComponents();
	void ToggleDrawMeleeRange();
	void ToggleDrawSuspectCoverLogic();
	void ToggleDrawSWATCoverLogic();
	void ToggleFibonacciOverlayGuide(class UMaterialInterface* InMaterial);
	void ToggleGlobalDamageMultiplier_Grenades();
	void ToggleGlobalDamageMultiplier_Weapons();
	void ToggleGodMode();
	void ToggleGrenadeDrawDebug();
	void ToggleHesitationBar();
	void ToggleImitateShipping();
	void ToggleInfiniteAmmo();
	void ToggleInfiniteHealth();
	void ToggleInfiniteSWATItems();
	void ToggleInteractableComponents();
	void ToggleLaserEyes();
	void ToggleLineUpOverlayGuide(class UMaterialInterface* InMaterial);
	void ToggleLogPlayerAnimationStatus();
	void ToggleLogWeaponDamage();
	void ToggleMusic(bool bMusicOn);
	void ToggleMuteFMOD();
	void ToggleNavigation();
	void ToggleObjectiveMarkers();
	void TogglePauseFMOD();
	void TogglePistolLineOverlayGuide(class UMaterialInterface* InMaterial);
	void ToggleRifleLineOverlayGuide(class UMaterialInterface* InMaterial);
	void ToggleRTXSettings();
	void ToggleRuleOfThirdsOverlayGuide(class UMaterialInterface* InMaterial);
	void ToggleSuspectDynamicCover();
	void ToggleSWATDynamicCover();
	void ToggleSwatMovement();
	void ToggleThreatOctree();
	void ToggleThreatPoints();
	void ToggleThreatRoomNames();
	void ToggleVSync();
	void WeakenAllEnemiesToLowHealth();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotDebugSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotDebugSubsystem")
	}
	static class UReadyOrNotDebugSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotDebugSubsystem>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotDebugSubsystem;

// Class ReadyOrNot.AnimNotify_SpawnThrownItem
// 0x0030 (0x0068 - 0x0038)
class UAnimNotify_SpawnThrownItem final : public UAnimNotify
{
public:
	TSubclassOf<class ABaseItem>                  ItemClass;                                         // 0x0038(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bLocalOnly : 1;                                    // 0x0040(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bNonLocalOnly : 1;                                 // 0x0040(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneToSpawnOn;                                     // 0x0044(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bCustomThrowDirection : 1;                         // 0x004C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ThrowDirection;                                    // 0x0050(0x0018)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_SpawnThrownItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_SpawnThrownItem")
	}
	static class UAnimNotify_SpawnThrownItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_SpawnThrownItem>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_SpawnThrownItem;

// Class ReadyOrNot.ClearWeaponAnimNotify
// 0x0000 (0x0038 - 0x0038)
class UClearWeaponAnimNotify final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ClearWeaponAnimNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ClearWeaponAnimNotify")
	}
	static class UClearWeaponAnimNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<UClearWeaponAnimNotify>();
	}
};
DUMPER7_ASSERTS_UClearWeaponAnimNotify;

// Class ReadyOrNot.AnimNotify_SpawnWeapon
// 0x0020 (0x0058 - 0x0038)
class UAnimNotify_SpawnWeapon final : public UAnimNotify
{
public:
	TArray<TSubclassOf<class ABaseWeapon>>        PotentialWeapons;                                  // 0x0038(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	EItemCategory                                 ItemCategory;                                      // 0x0048(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 WeaponClass;                                       // 0x0050(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_SpawnWeapon")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_SpawnWeapon")
	}
	static class UAnimNotify_SpawnWeapon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_SpawnWeapon>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_SpawnWeapon;

// Class ReadyOrNot.AnimNotifyState_HideBoneVis
// 0x0008 (0x0038 - 0x0030)
class UAnimNotifyState_HideBoneVis final : public UAnimNotifyState
{
public:
	class FName                                   BoneNameToHide;                                    // 0x0030(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotifyState_HideBoneVis")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotifyState_HideBoneVis")
	}
	static class UAnimNotifyState_HideBoneVis* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_HideBoneVis>();
	}
};
DUMPER7_ASSERTS_UAnimNotifyState_HideBoneVis;

// Class ReadyOrNot.ReadyOrNotGameState
// 0x0638 (0x0928 - 0x02F0)
class AReadyOrNotGameState : public AGameStateBase
{
public:
	uint8                                         Pad_2F0[0x34];                                     // 0x02F0(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RandomStreamSeed;                                  // 0x0324(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_328[0x10];                                     // 0x0328(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         NumSuspectsActive;                                 // 0x0338(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         NumCiviliansActive;                                // 0x0339(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         NumSwatActive;                                     // 0x033A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33B[0x5];                                      // 0x033B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UReadyOrNotVoiceConfig*                 VoiceConfig;                                       // 0x0340(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class ULoadout_V2*                            Loadout_V2;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotLoadoutManager*              LoadoutFunctionLibrary;                            // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasHostFinishedLoading;                           // 0x0360(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABaseItem*>                      AllItems;                                          // 0x0368(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AEvidenceActor*>                 AllEvidenceActors;                                 // 0x0378(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReportableActor*>               AllReportableActors;                               // 0x0388(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ATrapActorAttachedToDoor*>       AllDoorTrapActors;                                 // 0x0398(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ACoverLandmark*>                 AllCoverLandmarks;                                 // 0x03A8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AWallHoleTraversal*>             AllWallHoles;                                      // 0x03B8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class APairedInteractionDriver*>       AllPairedInteractionActors;                        // 0x03C8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         AllSecurables;                                     // 0x03D8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UDataTable*>                     LoadedDataTables;                                  // 0x03E8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class AScoringManager*                        ScoringManager;                                    // 0x03F8(0x0008)(Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class AAIFactionManager*> AIFactionManagers;                                 // 0x0400(0x0050)(UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class FName, class ASquadManager*>       SquadManagerMap;                                   // 0x0450(0x0050)(UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AWorldAction*>                   WorldActions;                                      // 0x04A0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    Rep_GameModeSettings;                              // 0x04B0(0x0010)(Net, NoDestructor, NativeAccessSpecifierPublic)
	float                                         TimeTillGameStartCountdown;                        // 0x04C0(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C4[0xC];                                      // 0x04C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABadAIAction*>                   BadAIActionActors;                                 // 0x04D0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bHasLeftLoadOut;                                   // 0x04E0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        PreMissionStreamedLevel;                           // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  SubPreMissionPlanningLevel;                        // 0x04F0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_518[0x8];                                      // 0x0518(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ModeName;                                          // 0x0520(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   ModeRules;                                         // 0x0538(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class AObjective*>                     MissionObjectives;                                 // 0x0550(0x0010)(BlueprintVisible, Net, ZeroConstructor, RepNotify, UObjectWrapper, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnMissionObjectivesUpdated;                        // 0x0560(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObituaryData*                          ObituaryData;                                      // 0x0570(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAnnounceReinforcements;                           // 0x0578(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRadioGlareEnabled;                                // 0x0579(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_57A[0x6];                                      // 0x057A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             ReplenishAllAmmoSound;                             // 0x0580(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASpectatePawn*>                  SpectatePawns;                                     // 0x0588(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotCharacter*>           RedTeamPlayers;                                    // 0x0598(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotCharacter*>           BlueTeamPlayers;                                   // 0x05A8(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AThrownItem*>                    AllThrownItems;                                    // 0x05B8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ADoor*>                          AllDoors;                                          // 0x05C8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotCharacter*>           AllReadyOrNotCharacters;                           // 0x05D8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class APlayerCharacter*>               AllPlayerCharacters;                               // 0x05E8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ACyberneticCharacter*>           AllAICharacters;                                   // 0x05F8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotCharacter*>           AllSWATCharacters;                                 // 0x0608(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotCharacter*>           KilledSWATCharacters;                              // 0x0618(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UInteractableComponent*>         AllInteractableComponents;                         // 0x0628(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         TimeOfLastSWATDeath;                               // 0x0638(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UExperienceManager*                     ExperienceManagerComponent;                        // 0x0640(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalMissionAbuseCount;                            // 0x0648(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64C[0x4];                                      // 0x064C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TScriptInterface<class IListenForDeath>> DeathListeners;                                  // 0x0650(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TScriptInterface<class IListenForGameStart>> GameStartListeners;                          // 0x0660(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TScriptInterface<class IListenForGameEnd>> GameEndListeners;                              // 0x0670(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bDisableEquipment;                                 // 0x0680(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableCommandChat;                                // 0x0681(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseReinforcements;                                // 0x0682(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_683[0x1];                                      // 0x0683(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Reinforcements_TimeRemaining;                      // 0x0684(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRunWarmup;                                        // 0x0688(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AActor>                     SceneCapturePlayerCameraClass;                     // 0x0690(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowEnemiesAsSuspects;                            // 0x0698(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_699[0x7];                                      // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKillFeedData>                  KillFeedData;                                      // 0x06A0(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* Causer, class ACharacter* InstigatorCharacter, class ACharacter* KilledCharacter)> OnUpdateKillFeed; // 0x06B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         ServerTimeUntilNextMap;                            // 0x06C0(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C4[0x4];                                      // 0x06C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 GameRulesIntroAnnouncerRowName;                    // 0x06C8(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitingForPlayers;                                // 0x06D8(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6D9[0x3];                                      // 0x06D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlanningTimeLeft;                                  // 0x06DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RedTeamWins;                                       // 0x06E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BlueTeamWins;                                      // 0x06E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6E8[0x8];                                      // 0x06E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnWinsUpdated;                                     // 0x06F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         EndPlayTimer;                                      // 0x0700(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RoundTimeRemaining;                                // 0x0704(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTimelimit;                                     // 0x0708(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_709[0x3];                                      // 0x0709(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Scorelimit;                                        // 0x070C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSinceMatchStarted;                             // 0x0710(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_714[0x4];                                      // 0x0714(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReferendum*                            CurrentReferendum;                                 // 0x0718(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class AReferendum>>        AllowedReferendumTypes;                            // 0x0720(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bCanShowScoreboard;                                // 0x0730(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsePlanningUICamera;                              // 0x0731(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_732[0x2];                                      // 0x0732(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RoundTimeElapsed;                                  // 0x0734(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RoundsPlayed;                                      // 0x0738(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RoundsToPlay;                                      // 0x073C(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeamType                                     RoundWinningTeam;                                  // 0x0740(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeamType                                     MatchWinningTeam;                                  // 0x0741(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_742[0x6];                                      // 0x0742(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotPlayerState*>         RoundWinners;                                      // 0x0748(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FRChatMessage& Message)> OnChatMessageReceived;       // 0x0758(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                 MissionName;                                       // 0x0768(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   MissionDescription;                                // 0x0778(0x0018)(Edit, BlueprintVisible, Net, NativeAccessSpecifierPublic)
	EMatchState                                   MatchState;                                        // 0x0790(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_791[0x7];                                      // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* Character, class AReadyOrNotCharacter* ArrestedBy)> OnCharacterArrested; // 0x0798(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* Character, class AReadyOrNotCharacter* KilledBy)> OnCharacterKilled; // 0x07A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                 NextURLReplicated;                                 // 0x07B8(0x0010)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ULevelSequence* LevelSequence)> OnSequenceStarted;           // 0x07C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class FName>                           WhitelistedLabels;                                 // 0x07D8(0x0010)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UDebugDisplayWidget>        DebugDisplayWidget;                                // 0x07E8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ModeURL_Replicated;                                // 0x07F0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFloorMapPointData>             DrawingPointData;                                  // 0x0800(0x0010)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	bool                                          bPvPMode;                                          // 0x0810(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanReportToTOC;                                   // 0x0811(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_812[0x2];                                      // 0x0812(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GametypeDamageModifier;                            // 0x0814(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeadDamageModifier;                                // 0x0818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootDamageModifier;                                // 0x081C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LegDamageModifier;                                 // 0x0820(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ArmDamageModifier;                                 // 0x0824(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OtherLimbDamageModifier;                           // 0x0828(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFreeForAll;                                       // 0x082C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisablePickups;                                   // 0x082D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bRevivesAllowed : 1;                               // 0x082E(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_82F[0x1];                                      // 0x082F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRChatMessage>                  SavedChatMessages;                                 // 0x0830(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bBallisticsDebug;                                  // 0x0840(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDamageDebug;                                      // 0x0841(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpeechRecognitionDebug;                           // 0x0842(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGOAPDebug;                                        // 0x0843(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAnnounceTeamReinforcements;                       // 0x0844(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_845[0x3];                                      // 0x0845(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Msg_BothTeamsReinforced;                           // 0x0848(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   Msg_RedTeamReinforced;                             // 0x0860(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   Msg_BlueTeamReinforced;                            // 0x0878(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UChallenge>>         GameModeChallenges;                                // 0x0890(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         bInPlanningMenu : 1;                               // 0x08A0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_8A1[0x3];                                      // 0x08A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CustomTimeDilationApplied;                         // 0x08A4(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class APlayerController*>              AdminPlayerControllers;                            // 0x08A8(0x0010)(Net, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class ATOCManager*                            TOCManager;                                        // 0x08B8(0x0008)(Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CombatMusic;                                       // 0x08C0(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C4[0x4];                                      // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FExclusiveInteractable>         ExclusiveInteractables;                            // 0x08C8(0x0010)(Net, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bHideLevelEffectsInPreMission;                     // 0x08D8(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8D9[0x7];                                      // 0x08D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADirectionalLight*>              WorldDirectionalLights;                            // 0x08E0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class APostProcessVolume*>             WorldPostProcessVolumes;                           // 0x08F0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class AExponentialHeightFog*>          WorldExponentialHeightFogs;                        // 0x0900(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class AExponentialHeightFog*>          PreMissionExponentialHeightFogs;                   // 0x0910(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_920[0x8];                                      // 0x0920(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddDeathListener(TScriptInterface<class IListenForDeath> DeathListener);
	void AddGameEndListener(TScriptInterface<class IListenForGameEnd> GameEndListener);
	void AddGameStartListener(TScriptInterface<class IListenForGameStart> GameStartListener);
	void Client_BindCharacterEvents(class APlayerCharacter* Character);
	class UReadyOrNotProfile* GetCurrentProfile();
	int32 GetCurrentSuspectScore();
	int32 GetCurrentSwatScore();
	TArray<struct FDeploymentStatus> GetDeploymentStatusOfPlayers();
	struct FGameModeSettings GetGameModeSettings();
	class FString GetMapURL();
	int32 GetMaxSuspectScore();
	int32 GetMaxSwatScore();
	void GetNextMapMode(class FString* Map, class FString* Mode);
	TArray<class AReadyOrNotPlayerState*> GetPlayerStatesOfTeam(ETeamType Team);
	void GetPlayerStatesOnTeamOrderedByScore(ETeamType Team, TArray<class AReadyOrNotPlayerState*>* PlayerStates);
	int32 GetRemainingRounds();
	float GetTeamScore(ETeamType Team);
	float GetWinningScore(bool* bUsesScoring);
	bool IsAdminPlayerController(class APlayerController* PlayerController);
	bool IsEveryoneReady();
	void LoadStartupWidgetsAfterLoadingScreen();
	void Multicast_BroadcastChatMessage(const struct FRChatMessage& ChatMessage);
	void Multicast_OnCharacterDied(class AReadyOrNotCharacter* Victim, class AReadyOrNotCharacter* Killer, class AActor* Inflictor);
	void Multicast_OnGameEnded();
	void Multicast_OnGameStarted();
	void Multicast_OnRoundReset();
	void Multicast_PlaySequence(class ULevelSequence* Sequence);
	void Multicast_StopSequence(class ULevelSequence* Sequence);
	void OnAlphaAccessChecked(bool bBanned, const class FString& BanReason);
	void OnAuthenticationResponse(bool bSuccess, bool bSerialFound, bool bSerialValid, const class FString& failedReason);
	void OnLoadoutFinished();
	void OnRep_CustomTimeDilation();
	void OnRep_DrawPointDataChanged();
	void OnRep_MatchState();
	void OnRep_MissionObjectives();
	void OnRep_StreamSeed();
	void OnRep_WinsUpdated();
	void OnSequenceStartedFunc(class ULevelSequence* LevelSequence);
	void OverWriteModeNameText(const class FText& newModeName);
	void PlayerArrested(class AReadyOrNotCharacter* ArrestedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
	void PlayerKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void RemoveDeathListener(TScriptInterface<class IListenForDeath> DeathListener);
	void RemoveGameEndListener(TScriptInterface<class IListenForGameEnd> GameEndListener);
	void RemoveGameStartListener(TScriptInterface<class IListenForGameStart> GameStartListener);
	void ResetReplicatedTimers();
	void SetGlobalSuspendVoiceOver(bool bEnable);
	void SetTimeDilationSynced(float TimeDilation);
	void SkipMVPScreen();
	void UpdateDoorTickIntervals();

	TArray<class AReadyOrNotPlayerController*> GetControllersAvailableForVote() const;
	class FText GetModeText() const;
	class ABadAIAction* GetMostRecentBadAIActionReport() const;
	int32 GetNumKilledSWAT() const;
	TArray<class AReadyOrNotPlayerState*> GetPlayersAvailableForVote() const;
	float GetTimeSinceLastSWATDeath() const;
	int32 GetTotalMissionAbuseCount() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotGameState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotGameState")
	}
	static class AReadyOrNotGameState* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReadyOrNotGameState>();
	}
};
DUMPER7_ASSERTS_AReadyOrNotGameState;

// Class ReadyOrNot.CoopGS
// 0x0118 (0x0A40 - 0x0928)
class ACoopGS : public AReadyOrNotGameState
{
public:
	uint8                                         Pad_928[0x10];                                     // 0x0928(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bMissionSucceded;                                  // 0x0938(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMissionSoftCompleted;                             // 0x0939(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECOOPMode                                     Mode;                                              // 0x093A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_93B[0x1];                                      // 0x093B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EntryPointTag;                                     // 0x093C(0x0008)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCrouchingTigerHiddenDragon;                       // 0x0944(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_945[0x3];                                      // 0x0945(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentDeployables;                                // 0x0948(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94C[0x4];                                      // 0x094C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DeployableDepot;                                   // 0x0950(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URONGameplayStats*                      GameplayStats;                                     // 0x0958(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DepotLabel;                                        // 0x0960(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DepotNumber;                                       // 0x0968(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DepotCost;                                         // 0x096C(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentPersonnel;                                  // 0x0970(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentUsedPersonnelPoints;                        // 0x0974(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, int32>                            PersonnelMapping;                                  // 0x0978(0x0050)(BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         TotalAIOfficers;                                   // 0x09C8(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalOfficers;                                     // 0x09CC(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumCompleteExtraObjectives;                        // 0x09D0(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumTotalExtraObjectives;                           // 0x09D4(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TeamKills;                                         // 0x09D8(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllPlayerCharactesDead;                           // 0x09DC(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9DD[0x3];                                      // 0x09DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SquadPointsRemaining;                              // 0x09E0(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESelectedSpawn                                SelectedRedSpawnPoint;                             // 0x09E4(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9E5[0x3];                                      // 0x09E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RedSpawnSquadPoints;                               // 0x09E8(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESelectedSpawn                                SelectedBlueSpawnPoint;                            // 0x09EC(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9ED[0x3];                                      // 0x09ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BlueSpawnSquadPoints;                              // 0x09F0(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9F4[0x4];                                      // 0x09F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             missionMusic;                                      // 0x09F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFMODEventInstance                     musicInstance;                                     // 0x0A00(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FText                                   PromotedLeaderFormat;                              // 0x0A08(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         YesVotes;                                          // 0x0A20(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NoVotes;                                           // 0x0A24(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A28[0x10];                                     // 0x0A28(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TOCDelay;                                          // 0x0A38(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A3C[0x4];                                      // 0x0A3C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool CanChangeSpawn(bool bBlueTeam, ESelectedSpawn NewSpawn);
	TArray<int32> GetEnabledDeployables();
	TArray<class FText> GetEnabledDeployablesShortNames();
	TArray<int32> GetEnabledPersonnel();
	int32 GetNoVotes();
	int32 GetPersonnelForMapNum(int32 MapPointNum);
	TArray<int32> GetUnenabledDeployables();
	TArray<int32> GetUnenabledPersonnel();
	TArray<int32> GetUsedPersonnelPoints();
	int32 GetYesVotes();
	bool IsDeployableEnabled(int32 DeployableNumber);
	bool IsPersonnelEnabled(int32 PersonnelNum);
	void Multicast_BroadcastNewSquadLeader(class APlayerCharacter* NewLeader);
	void Multicast_GrantProgressionTags(float ScorePercentage);
	void Multicast_OnMissionEnd(bool bSuccess, const struct FMissionCoreStats& MissionStats);
	void OnRep_COOPMode();
	void OnRep_MapElement();
	bool PlayerControllerVoted(class AReadyOrNotPlayerController* PlayerController, bool bVoteYes);
	void Server_SetDeployableDepot(class AReadyOrNotPlayerController* Controller, int32 NewDepotNum);
	void StartTOCBriefing(const class FString& TOCLine);
	void UpdateVotes(int32 Yes, int32 No);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoopGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoopGS")
	}
	static class ACoopGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACoopGS>();
	}
};
DUMPER7_ASSERTS_ACoopGS;

// Class ReadyOrNot.AnimNotify_ToggleEquipmentVis
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_ToggleEquipmentVis final : public UAnimNotify
{
public:
	EToggleInventoryVis                           InventroyVis;                                      // 0x0038(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_ToggleEquipmentVis")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_ToggleEquipmentVis")
	}
	static class UAnimNotify_ToggleEquipmentVis* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_ToggleEquipmentVis>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_ToggleEquipmentVis;

// Class ReadyOrNot.ReadyOrNotGameInstance
// 0x0C90 (0x0E50 - 0x01C0)
class UReadyOrNotGameInstance : public UGameInstance
{
public:
	class FString                                 LobbyLevel;                                        // 0x01C0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TrainingLevel;                                     // 0x01D0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  EmptyStartupMap;                                   // 0x01E0(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULoadoutManager>            LoadoutManagerClass;                               // 0x0208(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_210[0x8];                                      // 0x0210(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UReadyOrNotBackend*                     ReadyOrNotBackend;                                 // 0x0218(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULoadoutManager*                        LoadoutManager;                                    // 0x0220(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UModioManager*                          ModioManager;                                      // 0x0228(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotAIConfig*                    AIConfig;                                          // 0x0230(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_238[0x40];                                     // 0x0238(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialParameterCollection*           GlobalMaterialParameterCollection;                 // 0x0278(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*           WeaponFOVMaterialCollection;                       // 0x0280(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*           ScalabilityMaterialParameterCollection;            // 0x0288(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_290[0x8];                                      // 0x0290(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaGameProfile*                       MetaGameProfile;                                   // 0x0298(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESessionType                                  SessionType;                                       // 0x02A0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           LazyLoadedClasses;                                 // 0x02A8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UObject>>         LazyLoadedObjects;                                 // 0x02B8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                SpawnWidgetOnLevelLoad;                            // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D0[0x8];                                      // 0x02D0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, bool>                             OwnedDLCMap;                                       // 0x02D8(0x0050)(NativeAccessSpecifierPublic)
	TArray<class AActor*>                         DecalMeshActors;                                   // 0x0328(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_338[0x90];                                     // 0x0338(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         PreviouslyJoinedGames;                             // 0x03C8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         DedicatedServerGamesPlayedWithoutReturningToLobby; // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DedicatedServerMapIdx;                             // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E0[0xE8];                                     // 0x03E0(0x00E8)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bHostedGame;                                       // 0x04C8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Saved_RoundTimerGameStart;                         // 0x04CC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Saved_RoundTimerBetweenMaps;                       // 0x04D0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Saved_ReinforcementTimer;                          // 0x04D4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Saved_Timelimit;                                   // 0x04D8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Saved_RoundsPerMap;                                // 0x04DC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Saved_Scorelimit;                                  // 0x04E0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Saved_AiEnabled;                                   // 0x04E4(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E5[0x3];                                      // 0x04E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ActivePauseConditions;                             // 0x04E8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 NextLevel;                                         // 0x04F8(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MainMenuDisplayMessage;                            // 0x0508(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_518[0x8];                                      // 0x0518(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLevelDataLookupTable                  ModdedMapLookUpData;                               // 0x0520(0x0880)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_DA0[0x60];                                     // 0x0DA0(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UModLevelData*>                  ModdedLevelDataAssets;                             // 0x0E00(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class FString>                         BuiltMapList;                                      // 0x0E10(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bShowingFPS;                                       // 0x0E20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E21[0x3];                                      // 0x0E21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReplayNumPlayers;                                  // 0x0E24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            ReplayLoadingScreen;                               // 0x0E28(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FReplayEvent>                   ReplayEvents;                                      // 0x0E30(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UUserWidget*                            CrossplayWarningWidget;                            // 0x0E40(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E48[0x8];                                      // 0x0E48(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void HideCrossplayWarning(class UObject* WorldContextObject, bool bFinishCountdown);
	static bool IsGameModded();
	static void ShowCrossplayWarning(class UObject* WorldContextObject, bool bUseCountdown);

	void AddPauseGameCondition(const class FString& PauseCondition);
	void AddReplayEvent(EReplayEventType EventType, const struct FVector& Location, float Timestamp, const class FString& AdditionalInformation);
	void ApplyDecalSettings();
	void BuildMapList();
	bool CanChangeMutedState(const class FString& UniqueNetId);
	void CommanderCompleteMission(const class FString& Mission);
	void CommanderDeleteProfile(int32 Slot);
	void CommanderGenerateProfile(int32 Slot);
	void CreateReplayLoadingScreen();
	void DeleteReplay(const class FString& ReplayName);
	TMap<class FString, struct FReplayData> FindReplays();
	void GenerateURLMap();
	bool GetAccountTextCommunicationPrivilege(class APlayerState* PlayerState);
	bool GetAccountUGCPrivilege(class APlayerState* PlayerState);
	TArray<class AReadyOrNotGameMode*> GetAllGameModes();
	TArray<class AReadyOrNotGameState*> GetAllGameStates();
	ELastMenuStateBeforeJoin GetAndClearLastJoinState();
	class FString GetAndClearMainMenuDisplayMessage();
	bool GetAvailableAudioDevices(TArray<class FString>* OutAudioDevices);
	bool GetBanned();
	class FString GetBestGuessMapName(const class FString& MapName);
	TArray<class FString> GetBuiltMapList();
	TArray<class FString> GetBuiltModdedMapList();
	class FString GetDiscordOneTimeUseCode();
	class FString GetFriendlyGamemodeName(const class FString& UnfriendlyName);
	uint32 GetLocalNetworkVersion();
	bool GetMutedState(const class FString& UniqueNetId);
	bool GetMutedStateForRemote(const class FString& UniqueNetId);
	TArray<struct FReplayEvent> GetReplayEvents();
	class FString GetSessionTicket();
	void Gratr();
	bool IsNetworkCompatible(const uint32 LocalNetworkVersion, const uint32 RemoteNetworkVersion);
	bool IsPlayingReplay();
	bool IsPublicMissionInProgress();
	bool IsRecordingReplay();
	bool IsReplaySystemEnabled();
	bool OnWindowCloseRequested();
	void OpenReplayFolder();
	void PlayReplayFromBP(const class FString& ReplayName);
	void ReloadSettings();
	void RemovePauseGameCondition(const class FString& PauseCondition);
	void RemoveReplayLoadingScreen();
	void RenameReplay(const class FString& ReplayName, const class FString& NewFriendlyReplayName);
	void SetDifficulty(class FName DifficultyTag);
	bool SetInputAudioDevice(const class FString& DeviceName, bool bShouldSave);
	void SetLastJoinState(ELastMenuStateBeforeJoin LastJoiNState);
	void StartRecordingReplay();
	void StopRecordingReplayFromBP();
	void StopRecordingReplaySave(bool bSave, int32 NumericalScore, const class FString& LetterScore);

	bool IsSafeMode() const;
	bool SupportsDisablingMods() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotGameInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotGameInstance")
	}
	static class UReadyOrNotGameInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotGameInstance>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotGameInstance;

// Class ReadyOrNot.AnimNotify_WedgeDoor
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_WedgeDoor final : public UAnimNotify
{
public:
	uint8                                         bWedgeDeployFinished : 1;                          // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_WedgeDoor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_WedgeDoor")
	}
	static class UAnimNotify_WedgeDoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_WedgeDoor>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_WedgeDoor;

// Class ReadyOrNot.CollectableWidget
// 0x0008 (0x0420 - 0x0418)
class UCollectableWidget : public UCommonActivatableWidget
{
public:
	class ACollectableViewController*             ParentController;                                  // 0x0418(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void CloseCollectableWidget();
	void SetItem(class ACollectable* Collectable);
	void ToggleInterface();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CollectableWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CollectableWidget")
	}
	static class UCollectableWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCollectableWidget>();
	}
};
DUMPER7_ASSERTS_UCollectableWidget;

// Class ReadyOrNot.AnimTurnInPlaceLibrary
// 0x0000 (0x0028 - 0x0028)
class UAnimTurnInPlaceLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void PostProcessYawOffset(float DeltaSeconds, float& YawOffset, float& LastYawOffset, float& LastPostProcessedYawOffset, float& TurnAroundTimeToGo, float TurnAroundBlendTime);
	static void UpdateTurnInPlace(float DeltaTime, bool bAllowTurnInPlace, bool bHoldYawOffset, bool bIsTurnTransitionStateRelevant, bool bClampYawOffset, float YawOffsetLimit, const struct FRotator& MeshWorldRotation, const struct FAnimTurnInPlaceAnimSet& AnimSet, struct FAnimTurnInPlaceState& TurnInPlaceState, float TurnInPlaceSpeedMultiplier);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimTurnInPlaceLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimTurnInPlaceLibrary")
	}
	static class UAnimTurnInPlaceLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimTurnInPlaceLibrary>();
	}
};
DUMPER7_ASSERTS_UAnimTurnInPlaceLibrary;

// Class ReadyOrNot.ArmourResourceComponent
// 0x0010 (0x0108 - 0x00F8)
class UArmourResourceComponent final : public UResourceComponent
{
public:
	int32                                         MaxTickets;                                        // 0x00F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Resistance;                                        // 0x00FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         RemainingTickets;                                  // 0x0100(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetMaxTickets(int32 NewMax);
	void SetResistance(float NewResistancePercentage);

	int32 GetMaxTickets() const;
	int32 GetRemainingTickets() const;
	float GetResistancePercentage() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ArmourResourceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ArmourResourceComponent")
	}
	static class UArmourResourceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArmourResourceComponent>();
	}
};
DUMPER7_ASSERTS_UArmourResourceComponent;

// Class ReadyOrNot.CyberneticController
// 0x06C0 (0x0A80 - 0x03C0)
class ACyberneticController : public AAIController
{
public:
	uint8                                         Pad_3C0[0x20];                                     // 0x03C0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAIAction*>                      CustomActions;                                     // 0x03E0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UAIPerceptionComponent*                 AIPerceptionComponent;                             // 0x03F0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UReadyOrNotAISenseConfig_Sight*         SightConfig;                                       // 0x03F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAISenseConfig_Touch*                   TouchConfig;                                       // 0x0400(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAISenseConfig_Damage*                  DamageConfig;                                      // 0x0408(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAISenseConfig_Hearing*                 HearingConfig;                                     // 0x0410(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMoraleComponent*                       MoraleComponent;                                   // 0x0418(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTargetingComponent*                    TargetingComponent;                                // 0x0420(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class AActor*, float>                    LastHeardActorTime;                                // 0x0428(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class APlayerCharacter*                       SensingCharacter;                                  // 0x0478(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 LastSensedActor;                                   // 0x0480(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotCharacter*                   HeardActorInstigator;                              // 0x0488(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotCharacter*                   LastSensedCharacter;                               // 0x0490(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LastSensedLocation;                                // 0x0498(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bCanOpenDoorThroughNavLink : 1;                    // 0x04B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_4B1[0x3];                                      // 0x04B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSinceLastMove;                                 // 0x04B4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeUntilRecentlySeenCharactersClear;              // 0x04B8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotCharacter*>           RecentlySeenSwat;                                  // 0x04C0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotCharacter*>           RecentlySeenSuspects;                              // 0x04D0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotCharacter*>           RecentlySeenCivilians;                             // 0x04E0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 PathId, ERonNavigationQueryResult Result)> OnAsyncPathFound; // 0x04F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_500[0x60];                                     // 0x0500(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LastAcceptanceRadius;                              // 0x0560(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AReadyOrNotCharacter*, float>      DamagedBy;                                         // 0x0568(0x0050)(NativeAccessSpecifierPublic)
	TMap<class AReadyOrNotCharacter*, struct FVector> DamagedByLocation;                             // 0x05B8(0x0050)(NativeAccessSpecifierPublic)
	uint8                                         Pad_608[0x8];                                      // 0x0608(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UInvestigateStimulusActivity*           InvestigateStimulusActivity;                       // 0x0610(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_618[0x2];                                      // 0x0618(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	EAIAwarenessState                             PreviousAwarenessState;                            // 0x061A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAIAwarenessState                             AwarenessState;                                    // 0x061B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_61C[0x4];                                      // 0x061C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ACyberneticController* Controller, EAIAwarenessState Previous, EAIAwarenessState Current)> OnAwarenessStateChangedDelegate; // 0x0620(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_630[0x60];                                     // 0x0630(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAIStimulus                            LatestStimulus;                                    // 0x0690(0x0058)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAIStimulus                            LatestSightStimulus;                               // 0x06E8(0x0058)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAIStimulus                            LatestHearingStimulus;                             // 0x0740(0x0058)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAIStimulus                            LatestDamageStimulus;                              // 0x0798(0x0058)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_7F0[0x10];                                     // 0x07F0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         TrackedDistractions;                               // 0x0800(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_810[0x28];                                     // 0x0810(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AAIController* Controller, int32 RequestID)> OnMoveComplete; // 0x0838(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FActorSense>                    ActorSightSenseMap;                                // 0x0848(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FActorSense>                    ActorSoundSenseMap;                                // 0x0858(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FActorSense>                    ActorDamageSenseMap;                               // 0x0868(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         bStopDecisionMaking : 1;                           // 0x0878(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_879[0x7];                                      // 0x0879(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBaseActivity*                          CurrentActivity;                                   // 0x0880(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UBaseActivity*>                  ActivityQueue;                                     // 0x0888(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_898[0x10];                                     // 0x0898(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallForHelpCoolDownDuration;                       // 0x08A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxHearingForHelpDistance;                         // 0x08AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlashLightSeenCoolDownDuration;                    // 0x08B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bDisableSensePerception : 1;                       // 0x08B4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_8B5[0x3];                                      // 0x08B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FExposedToNoise>     ExposedToStimulusTags;                             // 0x08B8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)
	uint8                                         Pad_908[0x58];                                     // 0x0908(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSinceLastExposedToAggressiveStimulus;          // 0x0960(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSinceLastExposedToAnyStimulus;                 // 0x0964(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSinceLastExposedToSightStimulus;               // 0x0968(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSinceLastExposedToSoundStimulus;               // 0x096C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bEverHeardAggressiveStimulus : 1;                  // 0x0970(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_971[0x3];                                      // 0x0971(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UnalertTime;                                       // 0x0974(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AlertTime;                                         // 0x0978(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SuspiciousTime;                                    // 0x097C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasEverHeardSwat;                                 // 0x0980(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_981[0x17];                                     // 0x0981(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	class UBaseCombatActivity*                    CombatActivity;                                    // 0x0998(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9A0[0x60];                                     // 0x09A0(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	class UMoveToActivity*                        MoveToActivity;                                    // 0x0A00(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoveActivity*                          TeamMoveActivity;                                  // 0x0A08(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoveToActivity*                        PushMoveToActivity;                                // 0x0A10(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoveToActivity*                        AvoidanceMoveToActivity;                           // 0x0A18(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoveToExitActivity*                    MoveToExitActivity;                                // 0x0A20(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTargetNextCivilianActivity*            TargetNextCivilianActivity;                        // 0x0A28(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDisarmBombActivity*                    DisarmBombActivity;                                // 0x0A30(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADoor*                                  LastHeardDoorKick;                                 // 0x0A38(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A40[0x8];                                      // 0x0A40(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bEnableDebugFocalPointUpdate;                      // 0x0A48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A49[0x2F];                                     // 0x0A49(0x002F)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bEnableDebugMoveStyleUpdate;                       // 0x0A78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableDebugMoveGaitUpdate;                        // 0x0A79(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A7A[0x6];                                      // 0x0A7A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AbortCover();
	void AbortCoverLandmark();
	void AbortMove(bool bKeepVelocity);
	bool AddActivity(class UBaseActivity* Activity, bool bOverrideCurrentActivity);
	void AddExposedToStimulusTag(const class FName& Tag, const struct FVector& StimulusLocation, bool bFriendly, class AReadyOrNotCharacter* StimulusInstigator, float ExpiryTime);
	void DebugUpdateFocalPoint(const struct FVector& NewFocalPoint);
	void DebugUpdateMoveGait(class FName NewMoveGait);
	void DebugUpdateMoveStyle(class FName NewMoveStyle);
	void FinishActivity(class UBaseActivity* Activity, bool bSuccess, bool bForce);
	class FString GetActivityQueueAsString();
	class AReadyOrNotCharacter* GetTrackedTarget();
	bool HasActivityType(TSubclassOf<class UBaseActivity> ActivityType);
	void OnAIFinishSpawning();
	void OnDoorExploded(class ADoor* Door, class AReadyOrNotCharacter* InstigatorCharacter);
	void OnKilledOrIncapacitated(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void OnKnownEnemyIncapacitated(class AReadyOrNotCharacter* IncapacitatedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
	void OnKnownEnemyIncapacitated_Blueprint(class AReadyOrNotCharacter* IncapacitatedCharacter);
	void OnKnownEnemyKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void OnKnownEnemyKilled_Blueprint(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void OnKnownEnemyStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
	void OnKnownEnemyStunned_Blueprint(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
	void OnKnownEnemyTakeDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
	void OnKnownEnemyTakeDamage_Blueprint(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
	void OnKnownFriendlyIncapacitated(class AReadyOrNotCharacter* IncapacitatedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
	void OnKnownFriendlyIncapacitated_Blueprint(class AReadyOrNotCharacter* IncapacitatedCharacter);
	void OnKnownFriendlyKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void OnKnownFriendlyKilled_Blueprint(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void OnKnownFriendlyStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
	void OnKnownFriendlyStunned_Blueprint(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
	void OnKnownFriendlyTakeDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
	void OnKnownFriendlyTakeDamage_Blueprint(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
	void OnKnownNeutralIncapacitated(class AReadyOrNotCharacter* IncapacitatedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
	void OnKnownNeutralIncapacitated_Blueprint(class AReadyOrNotCharacter* IncapacitatedCharacter);
	void OnKnownNeutralKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void OnKnownNeutralKilled_Blueprint(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void OnKnownNeutralStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
	void OnKnownNeutralStunned_Blueprint(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
	void OnKnownNeutralTakeDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
	void OnKnownNeutralTakeDamage_Blueprint(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
	void OnPerceptionUpdated(const TArray<class AActor*>& TestActors);
	void OnStunDamageTaken(EStunType StunType);
	void RemoveActivitiesOfType(TSubclassOf<class UBaseActivity> ActivityType, bool bClearCurrent);
	void RemoveAllActivitiesExcept(TSubclassOf<class UBaseActivity> ActivityType);
	int32 RequestMoveAsync(const struct FVector& Location, bool bProjectToNavigation, float AcceptanceRadius);
	void SetAwarenessState(EAIAwarenessState NewState);
	void UpdateCachedConfigValues();

	bool DoesCharacterMatchTargetType(class AReadyOrNotCharacter* InCharacter, int32 TargetTypeMask) const;
	bool DoesPathGoThroughDoor(class ADoor* Door) const;
	class UBaseActivity* GetActivity(TSubclassOf<class UBaseActivity> ActivityType) const;
	int32 GetActivityQueueCount() const;
	class UMoveToActivity* GetAvoidanceMoveToActivity() const;
	EAIAwarenessState GetAwarenessState() const;
	class ACyberneticCharacter* GetCharacter() const;
	class UBaseCombatActivity* GetCombatActivity() const;
	class UDisarmBombActivity* GetDisarmBombActivity() const;
	int32 GetFailedConsiderCountForAction(class FName Action) const;
	class AReadyOrNotCharacter* GetHeardActorInstigator() const;
	struct FAIStimulus GetLatestStimulus() const;
	class UMoveActivity* GetMoveActivity() const;
	class UMoveToActivity* GetMoveToActivity() const;
	class UMoveToExitActivity* GetMoveToExitActivity() const;
	TSubclassOf<class UNavigationQueryFilter> GetNavQueryFilter() const;
	class UMoveToActivity* GetPushMoveToActivity() const;
	int32 GetSuccessConsiderCountForAction(class FName Action) const;
	class UTargetNextCivilianActivity* GetTargetNextCivilianActivity() const;
	ETeamType GetTeam() const;
	float GetTimeSinceLastMove() const;
	bool HasBeenExposedToAggressiveNoise(float SinceSeconds, float MaxDistance, int32 TargetTypeMask) const;
	bool HasBeenExposedToAggressiveNoise_Tag(class FName* OutTag, float SinceSeconds, float MaxDistance, int32 TargetTypeMask) const;
	bool HasBeenExposedToAnyNoise(float SinceSeconds, float MaxDistance, int32 TargetTypeMask) const;
	bool HasBeenExposedToAnyNoise_Tag(class FName* OutTag, float SinceSeconds, float MaxDistance, int32 TargetTypeMask) const;
	bool HasRecentlySeenCivilian() const;
	bool HasRecentlySeenSuspect() const;
	bool HasRecentlySeenSwat(struct FVector* OutLocation) const;
	bool IsActivelyMovingOnPath() const;
	bool IsCharacterEnemy(class AReadyOrNotCharacter* InCharacter) const;
	bool IsCharacterFriendly(class AReadyOrNotCharacter* InCharacter) const;
	bool IsCharacterKnownEnemy(class AReadyOrNotCharacter* InCharacter) const;
	bool IsCharacterNeutral(class AReadyOrNotCharacter* InCharacter) const;
	bool IsCivilian() const;
	bool IsFindingAnyPath() const;
	bool IsFindingPath(int32 PathId) const;
	bool IsLastAlive() const;
	bool IsMoving() const;
	bool IsMovingForRequest(int32 RequestID) const;
	bool IsMovingForRequests(const TArray<struct FAIRequestID>& Requests) const;
	bool IsSuspect() const;
	bool IsSWAT() const;
	bool IsTagAggressiveNoise(const class FName& Tag) const;
	bool IsTagInvestigativeNoise(const class FName& Tag) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CyberneticController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CyberneticController")
	}
	static class ACyberneticController* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACyberneticController>();
	}
};
DUMPER7_ASSERTS_ACyberneticController;

// Class ReadyOrNot.CivilianController
// 0x0000 (0x0A80 - 0x0A80)
class ACivilianController final : public ACyberneticController
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CivilianController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CivilianController")
	}
	static class ACivilianController* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACivilianController>();
	}
};
DUMPER7_ASSERTS_ACivilianController;

// Class ReadyOrNot.ReadyOrNotConsoleSettings
// 0x0008 (0x0040 - 0x0038)
class UReadyOrNotConsoleSettings final : public UDeveloperSettings
{
public:
	float                                         ApplicationScale;                                  // 0x0038(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandheldApplicationScale;                          // 0x003C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotConsoleSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotConsoleSettings")
	}
	static class UReadyOrNotConsoleSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotConsoleSettings>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotConsoleSettings;

// Class ReadyOrNot.CoopGM
// 0x04A0 (0x0E60 - 0x09C0)
#pragma pack(push, 0x1)
class alignas(0x10) ACoopGM : public AReadyOrNotGameMode
{
public:
	uint8                                         Pad_9C0[0x8];                                      // 0x09C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnAllAISpawned;                                    // 0x09C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AWorldDataGenerator*                    WorldDataGenerator;                                // 0x09D8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECOOPMode                                     Mode;                                              // 0x09E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9E1[0x27];                                     // 0x09E1(0x0027)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AActor>                     KilledSuspectAvoidanceShape;                       // 0x0A08(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNegotiatorActive;                                 // 0x0A10(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAIEquipSameLoadoutAsPlayer;                       // 0x0A11(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A12[0x2];                                      // 0x0A12(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxHostagesKilledBeforeMissionFailed;              // 0x0A14(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxTeamKillsBeforeAIRetaliates;                    // 0x0A18(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1C[0x4];                                      // 0x0A1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ACyberneticCharacter>       SwatAlphaClass;                                    // 0x0A20(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ACyberneticCharacter>       SwatBetaClass;                                     // 0x0A28(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ACyberneticCharacter>       SwatCharlieClass;                                  // 0x0A30(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ACyberneticCharacter>       SwatDeltaClass;                                    // 0x0A38(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ACyberneticCharacter>       SwatTrailerClass;                                  // 0x0A40(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AAIController>              FriendlyAIController;                              // 0x0A48(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSavedLoadout                          FriendlyAILoadout;                                 // 0x0A50(0x02E8)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class AEvidenceActor>             EvidenceClass;                                     // 0x0D38(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bMissionSucceded)> OnMissionEnded;                            // 0x0D40(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                GameStartedWidget;                                 // 0x0D50(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                     KeycardClass;                                      // 0x0D58(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AI_SpawnTag;                                       // 0x0D60(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D68[0x60];                                     // 0x0D68(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AEvidenceActor*>                 EvidenceInWorld;                                   // 0x0DC8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                         NextHighgroundDesignation;                         // 0x0DD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DDC[0x4];                                      // 0x0DDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AHighgroundVolume*>              Highground;                                        // 0x0DE0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bUniqueOfficerSoundsets;                           // 0x0DF0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DF1[0x3];                                      // 0x0DF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumPickedOfficerSoundsets;                         // 0x0DF4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PickedOfficerSoundsets;                            // 0x0DF8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DFC[0x4];                                      // 0x0DFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASWATCharacter*>                 SpawnedSWATAI;                                     // 0x0E00(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ATrailerSWATCharacter*>          SpawnedTrailerSWATAI;                              // 0x0E10(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AAISpawn*>                       SpawnLaterSpawns;                                  // 0x0E20(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         AISpawnDistance;                                   // 0x0E30(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E34[0x4];                                      // 0x0E34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              NegFeedback;                                       // 0x0E38(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                              PosFeedBack;                                       // 0x0E40(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ADoor*>                          KickedDoorsTriggeredMoraleChange;                  // 0x0E48(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	void AIArrested(class AReadyOrNotCharacter* ArrestedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
	void AIIncapacitated(class AReadyOrNotCharacter* Incapacitated, class AReadyOrNotCharacter* InstigatorCharacter);
	void AIKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void AISurrendered(class AReadyOrNotCharacter* Character);
	class APlayerStart* FindPlayerStartForTeam(ETeamType Team);
	void FriendlyAIKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void IncapHumanKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AIncapacitatedHuman* KilledHuman);
	void MissionEnd(bool bSuccess);
	void Personnel_SpawnHighground(int32 PersonnelNum, int32 MapPointNum, bool bSpotter, bool bMarksman, bool bSniper);
	void Personnel_SpawnNegotiator();
	void Personnel_SpawnOperator(int32 PersonnelNum, int32 MapPointNum, bool bNoisemaker);
	void Personnel_SpawnPowerCrew();
	void Personnel_SpawnTruckDriver(int32 PersonnelNum, int32 MapPointNum);
	void Personnel_SpawnVentilation(int32 PersonnelNum, int32 MapPointNum);
	void RemoveAllSpawnedAI();
	void ReturnToStation();
	void Server_SoftClearVoteCheck();
	void SpawnPolice();
	void SpawnSuspectsAndHostages();
	void StartMissionEndTimer(bool bWon);

	ECOOPMode GetCOOPMode() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoopGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoopGM")
	}
	static class ACoopGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACoopGM>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_ACoopGM;

// Class ReadyOrNot.ArrestAndRescueGM
// 0x0040 (0x0A60 - 0x0A20)
class AArrestAndRescueGM : public AReadyOrNotGameMode_PVP
{
public:
	bool                                          bSuddenDeath;                                      // 0x0A20(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A21[0x7];                                      // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerCharacter*>               ArrestedBlueCharacters;                            // 0x0A28(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class APlayerCharacter*>               ArrestedRedCharacters;                             // 0x0A38(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UFMODEvent*                             VIPArrestedSound;                                  // 0x0A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             VIPKilledSound;                                    // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A58[0x8];                                      // 0x0A58(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ArrestAndRescueGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ArrestAndRescueGM")
	}
	static class AArrestAndRescueGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<AArrestAndRescueGM>();
	}
};
DUMPER7_ASSERTS_AArrestAndRescueGM;

// Class ReadyOrNot.CommonButtonFMOD
// 0x0010 (0x15C0 - 0x15B0)
class UCommonButtonFMOD : public UCommonButtonBase
{
public:
	class UFMODEvent*                             OnHoveredEvent;                                    // 0x15B0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             OnClickedEvent;                                    // 0x15B8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonButtonFMOD")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonButtonFMOD")
	}
	static class UCommonButtonFMOD* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonButtonFMOD>();
	}
};
DUMPER7_ASSERTS_UCommonButtonFMOD;

// Class ReadyOrNot.CommonButtonImplementation
// 0x0020 (0x15E0 - 0x15C0)
#pragma pack(push, 0x1)
class alignas(0x10) UCommonButtonImplementation : public UCommonButtonFMOD
{
public:
	bool                                          bOverrideTextStyle;                                // 0x15C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextJustify                                  LabelJustification;                                // 0x15C1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextTransformPolicy                          LabelTransformPolicy;                              // 0x15C2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideButtonStyle;                              // 0x15C3(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15C4[0x4];                                     // 0x15C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonButtonStyle>         KeyboardButtonStyle;                               // 0x15C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCommonButtonStyle>         GamepadButtonStyle;                                // 0x15D0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class UCommonTextBlock* BP_GetButtonLabel() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonButtonImplementation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonButtonImplementation")
	}
	static class UCommonButtonImplementation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonButtonImplementation>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_UCommonButtonImplementation;

// Class ReadyOrNot.CommonFooterButton
// 0x0010 (0x15F0 - 0x15E0)
class UCommonFooterButton : public UCommonButtonImplementation
{
public:
	struct FDataTableRowHandle                    TriggeringInputActionVisual;                       // 0x15D8(0x0010)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_15E8[0x8];                                     // 0x15E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetTriggeringInputActionVisual(const struct FDataTableRowHandle& InputActionRrw);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonFooterButton")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonFooterButton")
	}
	static class UCommonFooterButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonFooterButton>();
	}
};
DUMPER7_ASSERTS_UCommonFooterButton;

// Class ReadyOrNot.ArrestAndRescueGS
// 0x0008 (0x0930 - 0x0928)
class AArrestAndRescueGS : public AReadyOrNotGameState
{
public:
	int32                                         BlueRespawnWaves;                                  // 0x0928(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RedRespawnWaves;                                   // 0x092C(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ArrestAndRescueGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ArrestAndRescueGS")
	}
	static class AArrestAndRescueGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<AArrestAndRescueGS>();
	}
};
DUMPER7_ASSERTS_AArrestAndRescueGS;

// Class ReadyOrNot.ReadyOrNotInputConfig
// 0x0010 (0x0040 - 0x0030)
class UReadyOrNotInputConfig final : public UDataAsset
{
public:
	TArray<struct FInputActionMap>                NativeInputActions;                                // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	const class UInputAction* FindNativeInputActionForTag(const struct FGameplayTag& InputTag, bool bLogNotFound) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotInputConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotInputConfig")
	}
	static class UReadyOrNotInputConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotInputConfig>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotInputConfig;

// Class ReadyOrNot.ArrestCancelWindowAnimNotify
// 0x0000 (0x0030 - 0x0030)
class UArrestCancelWindowAnimNotify final : public UAnimNotifyState
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ArrestCancelWindowAnimNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ArrestCancelWindowAnimNotify")
	}
	static class UArrestCancelWindowAnimNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArrestCancelWindowAnimNotify>();
	}
};
DUMPER7_ASSERTS_UArrestCancelWindowAnimNotify;

// Class ReadyOrNot.BaseProfile
// 0x0298 (0x02C0 - 0x0028)
class UBaseProfile : public USaveGame
{
public:
	int32                                         BaseVersion;                                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSavedLoadout>                  Loadouts;                                          // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class ABaseItem>, struct FSavedWeaponAttachmentData> AttachmentSaveMap;         // 0x0040(0x0050)(NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class ABaseWeapon>, struct FStoredWeaponAttachments> LoadoutAttachmentSaveMap;  // 0x0090(0x0050)(NativeAccessSpecifierPublic)
	TMap<EItemType, TSubclassOf<class ABaseItem>> SavedWeaponClassOfTypeMap;                         // 0x00E0(0x0050)(UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class ABaseWeapon>, EFireMode> WeaponClassToDefaultFireModeMap;                 // 0x0130(0x0050)(NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class ABaseItem>, struct FSavedWeaponPreset> WeaponToWeaponPresetsMap;          // 0x0180(0x0050)(NativeAccessSpecifierPublic)
	TMap<class FString, struct FSavedLoadout>     LoadoutPresetMap;                                  // 0x01D0(0x0050)(NativeAccessSpecifierPublic)
	TMap<EEquippingSwat, struct FSavedCustomization> Customizations;                                 // 0x0220(0x0050)(NativeAccessSpecifierPublic)
	TMap<class FString, struct FSavedCustomization> CustomizationPresetMap;                          // 0x0270(0x0050)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseProfile")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseProfile")
	}
	static class UBaseProfile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseProfile>();
	}
};
DUMPER7_ASSERTS_UBaseProfile;

// Class ReadyOrNot.CommanderProfile
// 0x01C0 (0x0480 - 0x02C0)
class UCommanderProfile final : public UBaseProfile
{
public:
	uint8                                         Pad_2C0[0x8];                                      // 0x02C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CommanderVersion;                                  // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignData*                          Campaign;                                          // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         CompletedLevels;                                   // 0x02D8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         CompletedIronmanLevels;                            // 0x02E8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         LostOfficers;                                      // 0x02F8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         NewCompletedLevels;                                // 0x0300(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<class FName>                             ProgressionTags;                                   // 0x0310(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FDateTime                              SaveDate;                                          // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimespan                              TotalPlaytime;                                     // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIronmanMode;                                      // 0x0370(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsModded;                                         // 0x0371(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_372[0x2];                                      // 0x0372(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GameChecksum;                                      // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReturningFromMission;                             // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRosterSaveData                        RosterSaveData;                                    // 0x0380(0x0080)(NativeAccessSpecifierPublic)
	struct FLobbySaveData                         LobbySaveData;                                     // 0x0400(0x0060)(NativeAccessSpecifierPublic)
	struct FGameplayTag                           CurrentDifficulty;                                 // 0x0460(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasUpgradedForDLC3;                               // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_469[0x17];                                     // 0x0469(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UCommanderProfile* GetDebugProfile();
	static class UCommanderProfile* LoadProfile(int32 Slot);

	void DeleteProfile();

	float GetCompletionPercentage() const;
	TSoftObjectPtr<class UTexture2D> GetMostRecentLevelImage() const;
	class FText GetMostRecentLevelName(const class FText& NothingCompletedText) const;
	class FString GetNextLevel() const;
	TSoftObjectPtr<class UTexture2D> GetNextLevelImage() const;
	class FText GetNextLevelName(const class FText& CompletedText) const;
	bool IsChecksumMismatched() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommanderProfile")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommanderProfile")
	}
	static class UCommanderProfile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommanderProfile>();
	}
};
DUMPER7_ASSERTS_UCommanderProfile;

// Class ReadyOrNot.ArrestTargetActivity
// 0x0030 (0x0220 - 0x01F0)
class UArrestTargetActivity final : public UBaseActivity
{
public:
	class ACyberneticCharacter*                   ArrestTarget;                                      // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractionsData*                      ArrestInteraction;                                 // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_200[0x20];                                     // 0x0200(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnterArrestStage();
	void EnterMoveToStage();
	void OnArresterKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void TickArrestStage(float DeltaTime, float Uptime);

	bool CanArrest() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ArrestTargetActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ArrestTargetActivity")
	}
	static class UArrestTargetActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArrestTargetActivity>();
	}
};
DUMPER7_ASSERTS_UArrestTargetActivity;

// Class ReadyOrNot.CollectEvidenceActivity
// 0x0018 (0x0208 - 0x01F0)
class UCollectEvidenceActivity final : public UBaseActivity
{
public:
	class AActor*                                 EvidenceItem;                                      // 0x01F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F8[0x10];                                     // 0x01F8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnterCollectStage();
	void EnterMoveToStage();
	void OnCollectEvidenceBegin();
	void OnCollectEvidenceEnd();
	void OnEvidenceCollected(class AReadyOrNotCharacter* CollectingCharacter);
	void TickCollectStage(float DeltaTime, float Uptime);

	bool CanCollectEvidence() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CollectEvidenceActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CollectEvidenceActivity")
	}
	static class UCollectEvidenceActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCollectEvidenceActivity>();
	}
};
DUMPER7_ASSERTS_UCollectEvidenceActivity;

// Class ReadyOrNot.MessageDisplayBox
// 0x0028 (0x0440 - 0x0418)
class UMessageDisplayBox : public UCommonActivatableWidget
{
public:
	class FString                                 MessageTxt;                                        // 0x0418(0x0010)(BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ButtonTxt;                                         // 0x0428(0x0010)(BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldQuitOnButtonPress;                          // 0x0438(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MessageDisplayBox")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MessageDisplayBox")
	}
	static class UMessageDisplayBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMessageDisplayBox>();
	}
};
DUMPER7_ASSERTS_UMessageDisplayBox;

// Class ReadyOrNot.ASequenceInteraction
// 0x0030 (0x0368 - 0x0338)
class AASequenceInteraction final : public ALevelSequenceActor
{
public:
	uint8                                         Pad_338[0x10];                                     // 0x0338(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bAutoActivateInRange;                              // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ReferencedCharacterViewTarget;                     // 0x0350(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                          RadiusComp;                                        // 0x0358(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerCharacter*                       LastPlayedSequencerCharacter;                      // 0x0360(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnBoxEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBoxOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnSequencerFinished();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ASequenceInteraction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ASequenceInteraction")
	}
	static class AASequenceInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<AASequenceInteraction>();
	}
};
DUMPER7_ASSERTS_AASequenceInteraction;

// Class ReadyOrNot.AsyncLoader
// 0x0000 (0x0028 - 0x0028)
class UAsyncLoader final : public UBlueprintFunctionLibrary
{
public:
	static class UAnimMontage* GetLazyLoadedAnimMontage(TSoftObjectPtr<class UAnimMontage> Montage);
	static class UAnimSequence* GetLazyLoadedAnimSequence(TSoftObjectPtr<class UAnimSequence> Anim);
	static class UClass* GetLazyLoadedClass(TSoftClassPtr<class UClass> Class_0);
	static TArray<TSubclassOf<class UClass>> GetLazyLoadedClassArray(const TArray<TSoftClassPtr<class UClass>>& Array);
	static class UTexture2D* GetLazyLoadedImage(TSoftObjectPtr<class UTexture2D> Texture);
	static TSubclassOf<class ABaseItem> GetLazyLoadedItem(TSoftClassPtr<class UClass> Item);
	static class UMaterialInstance* GetLazyLoadedMaterialInstance(TSoftObjectPtr<class UMaterialInstance> Material);
	static class UStaticMesh* GetLazyLoadedMesh(TSoftObjectPtr<class UStaticMesh> Mesh);
	static class UObject* GetLazyLoadedObject(TSoftObjectPtr<class UObject> Object);
	static class UParticleSystem* GetLazyLoadedParticleSystem(TSoftObjectPtr<class UParticleSystem> Particle);
	static TArray<TSubclassOf<class AReadyOrNotGameMode>> GetLazyLoadedReadyOrNotGameModeArray(const TArray<TSoftClassPtr<class UClass>>& Array);
	static class USkeletalMesh* GetLazyLoadedSkeletalMesh(TSoftObjectPtr<class USkeletalMesh> Mesh);
	static class USoundCue* GetLazyLoadedSoundCue(TSoftObjectPtr<class USoundCue> Cue);
	static TSubclassOf<class ABaseWeapon> GetLazyLoadedWeapon(TSoftClassPtr<class UClass> Item);
	static TSubclassOf<class UUserWidget> GetLazyLoadedWidget(TSoftClassPtr<class UClass> Widget);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AsyncLoader")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AsyncLoader")
	}
	static class UAsyncLoader* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAsyncLoader>();
	}
};
DUMPER7_ASSERTS_UAsyncLoader;

// Class ReadyOrNot.MirrorPortalComponent
// 0x0000 (0x0590 - 0x0590)
class UMirrorPortalComponent final : public UArrowComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MirrorPortalComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MirrorPortalComponent")
	}
	static class UMirrorPortalComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMirrorPortalComponent>();
	}
};
DUMPER7_ASSERTS_UMirrorPortalComponent;

// Class ReadyOrNot.BadAIAction
// 0x0068 (0x0300 - 0x0298)
class ABadAIAction final : public AActor
{
public:
	class FText                                   Summary;                                           // 0x0298(0x0018)(Edit, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x02B0(0x0018)(Edit, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UBillboardComponent*                    BillboardComponent;                                // 0x02D0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D8[0x28];                                     // 0x02D8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddNote(const class FText& InSummary, const class FText& InDescription);
	void RemoveBadAIAction();
	void RemoveReport(bool bReportToLog, bool bDrawString);
	void Report(bool bReportToLog, bool bDrawString);
	void ReportBadAIAction();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BadAIAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BadAIAction")
	}
	static class ABadAIAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABadAIAction>();
	}
};
DUMPER7_ASSERTS_ABadAIAction;

// Class ReadyOrNot.MissionEventSubsystem
// 0x00C0 (0x00F0 - 0x0030)
class UMissionEventSubsystem final : public UWorldSubsystem
{
public:
	uint8                                         Pad_30[0xC0];                                      // 0x0030(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddEventListener(const struct FGameplayTag& EventTag, TDelegate<void(const struct FGameplayTag& SourceTag)> Delegate);
	void FireEvent(const struct FGameplayTag& EventTag);
	float GetTimeEventFired(const struct FGameplayTag& EventTag);
	bool HasEventFired(const struct FGameplayTag& EventTag);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MissionEventSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MissionEventSubsystem")
	}
	static class UMissionEventSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionEventSubsystem>();
	}
};
DUMPER7_ASSERTS_UMissionEventSubsystem;

// Class ReadyOrNot.BanManagerLibrary
// 0x0000 (0x0028 - 0x0028)
class UBanManagerLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void BanPlayer(class UObject* WorldContextObject, const class FString& UniquePlayerId, const class FString& DisplayName, const EBanType BanType);
	static TMap<class FString, struct FPlayerBanInfo> GetBannedPlayers(class UObject* WorldContextObject);
	static bool IsPlayerBanned(class UObject* WorldContextObject, const class FString& UniquePlayerId);
	static void UnbanPlayer(class UObject* WorldContextObject, const class FString& UniquePlayerId);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BanManagerLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BanManagerLibrary")
	}
	static class UBanManagerLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBanManagerLibrary>();
	}
};
DUMPER7_ASSERTS_UBanManagerLibrary;

// Class ReadyOrNot.BanManagerSubsystem
// 0x0008 (0x0038 - 0x0030)
class UBanManagerSubsystem final : public UGameInstanceSubsystem
{
public:
	class UBanManagerProfile*                     Profile;                                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BanManagerSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BanManagerSubsystem")
	}
	static class UBanManagerSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBanManagerSubsystem>();
	}
};
DUMPER7_ASSERTS_UBanManagerSubsystem;

// Class ReadyOrNot.TeamBaseActivity
// 0x0010 (0x0200 - 0x01F0)
class UTeamBaseActivity : public UBaseActivity
{
public:
	ESquadPosition                                OverrideSquadPosition;                             // 0x01F0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESquadPosition                                PreviousSquadPosition;                             // 0x01F1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSwapping;                                       // 0x01F2(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F3[0xD];                                      // 0x01F3(0x000D)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class ACyberneticCharacter* GetCharacterAtSquadPosition(ESquadPosition SquadPosition) const;
	class ACyberneticCharacter* GetCharacterClosestToCharacter(class ACyberneticCharacter* InCharacter) const;
	class ACyberneticCharacter* GetCharacterClosestToLocation(const struct FVector& TestLocation) const;
	class ACyberneticCharacter* GetCharacterWithItem(TSubclassOf<class ABaseItem> ItemClass) const;
	class AReadyOrNotCharacter* GetSquadLeader() const;
	bool HasTeamReachedPosition(float Tolerance) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TeamBaseActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TeamBaseActivity")
	}
	static class UTeamBaseActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTeamBaseActivity>();
	}
};
DUMPER7_ASSERTS_UTeamBaseActivity;

// Class ReadyOrNot.TeamCoverAreaActivity
// 0x0000 (0x0200 - 0x0200)
class UTeamCoverAreaActivity final : public UTeamBaseActivity
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TeamCoverAreaActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TeamCoverAreaActivity")
	}
	static class UTeamCoverAreaActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTeamCoverAreaActivity>();
	}
};
DUMPER7_ASSERTS_UTeamCoverAreaActivity;

// Class ReadyOrNot.MissionPlanWidget
// 0x00D0 (0x04E8 - 0x0418)
class UMissionPlanWidget : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_418[0x40];                                     // 0x0418(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class AMissionPlanManager*                    MissionPlanManager;                                // 0x0458(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFMODAudioComponent*                    DrawingAudioComponent;                             // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         LineThickness;                                     // 0x0468(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeTime;                                          // 0x046C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LineColor;                                         // 0x0470(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ActiveLineColor;                                   // 0x0480(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlanLineWidth;                                     // 0x0490(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FirstNodeRadius;                                   // 0x0494(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NodeRadius;                                        // 0x0498(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49C[0x4];                                      // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     PlanLineMaterial;                                  // 0x04A0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             DrawingSoundEvent;                                 // 0x04A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DrawingFloor;                                      // 0x04B0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                DrawingTargetWidget;                               // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlanningLine                          PreviewLine;                                       // 0x04C0(0x0028)(BlueprintVisible, NativeAccessSpecifierPublic)

public:
	void AddLine(const struct FPlanningLine& Line);
	void AddMarker(const struct FPlanningMarker& Marker);
	TArray<class FString> GetPlayerNames();
	void OnEntryPointChanged(const struct FEntryPoint& NewEntryPoint);
	void OnLineAdded(int32 ID, const struct FPlanningLine& Line);
	void OnLineRemoved(int32 ID);
	void OnMarkerAdded(int32 ID, const struct FPlanningMarker& Marker);
	void OnMarkerRemoved(int32 ID);
	void OnMissionChanged(const class FString& URL, const struct FLevelDataLookupTable& LevelData);
	void RemoveLine(int32 ID);
	void RemoveMarker(int32 ID);
	void SetEntryPoint(class FName EntryPoint);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MissionPlanWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MissionPlanWidget")
	}
	static class UMissionPlanWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionPlanWidget>();
	}
};
DUMPER7_ASSERTS_UMissionPlanWidget;

// Class ReadyOrNot.TabletMapPlayerListWidget
// 0x0000 (0x02C8 - 0x02C8)
class UTabletMapPlayerListWidget : public UUserWidget
{
public:
	TArray<class FString> GetPlayerList() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TabletMapPlayerListWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TabletMapPlayerListWidget")
	}
	static class UTabletMapPlayerListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTabletMapPlayerListWidget>();
	}
};
DUMPER7_ASSERTS_UTabletMapPlayerListWidget;

// Class ReadyOrNot.BaseCredit
// 0x0008 (0x02D0 - 0x02C8)
class UBaseCredit : public UUserWidget
{
public:
	bool                                          bRevealed;                                         // 0x02C8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         fAnimationSpeed;                                   // 0x02CC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseCredit")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseCredit")
	}
	static class UBaseCredit* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseCredit>();
	}
};
DUMPER7_ASSERTS_UBaseCredit;

// Class ReadyOrNot.TaserReactionVolume
// 0x0008 (0x02A0 - 0x0298)
class ATaserReactionVolume final : public AActor
{
public:
	class UBoxComponent*                          Bounds;                                            // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnTaserStunDelivered(class AReadyOrNotCharacter* Character, class ATaser* Taser);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TaserReactionVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TaserReactionVolume")
	}
	static class ATaserReactionVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATaserReactionVolume>();
	}
};
DUMPER7_ASSERTS_ATaserReactionVolume;

// Class ReadyOrNot.ListenForGameEnd
// 0x0000 (0x0000 - 0x0000)
class IListenForGameEnd final
{
public:
	void OnGameEnded();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ListenForGameEnd")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ListenForGameEnd")
	}
	static class IListenForGameEnd* GetDefaultObj()
	{
		return GetDefaultObjImpl<IListenForGameEnd>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IListenForGameEnd;

// Class ReadyOrNot.LoadoutManager
// 0x0100 (0x0128 - 0x0028)
class ULoadoutManager final : public UObject
{
public:
	TArray<class ABaseItem*>                      AllItems;                                          // 0x0028(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ABaseItem*>                      PrimaryWeapons;                                    // 0x0038(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ABaseItem*>                      SecondaryWeapons;                                  // 0x0048(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ABaseItem*>                      LongTacticalItems;                                 // 0x0058(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ABaseItem*>                      TacticalItems;                                     // 0x0068(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ABaseItem*>                      BodyArmors;                                        // 0x0078(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ABaseItem*>                      Helmets;                                           // 0x0088(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ABaseItem*>                      HelmetMounts;                                      // 0x0098(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ABaseItem*>                      Facewears;                                         // 0x00A8(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UArmourMaterial*>                ArmorMaterials;                                    // 0x00B8(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UCustomizationDataBase*>         CustomizationAssets;                               // 0x00C8(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class FName, class ABaseItem*>           ItemLookupMap;                                     // 0x00D8(0x0050)(UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class ULoadoutManager* Get(const class UObject* WorldContextObject);
	static TArray<TSubclassOf<class ABaseItem>> GetAllItems(class UObject* WorldContextObject);
	static TArray<TSubclassOf<class ABaseItem>> GetAllItemsInCategory(class UObject* WorldContextObject, EItemCategory InItemCategory);
	static TSubclassOf<class ABaseItem> GetItemByLookupIdx(const class UObject* WorldContextObject, class FName LookupIdx);

	const TArray<class ABaseItem*> GetBodyArmors();
	const TArray<class ABaseItem*> GetFacewears();
	const TArray<class ABaseItem*> GetHelmetMounts();
	const TArray<class ABaseItem*> GetHelmets();
	const TArray<class ABaseItem*> GetLongTacticalItems();
	const TArray<class ABaseItem*> GetPrimaryWeapons();
	const TArray<class ABaseItem*> GetSecondaryWeapons();
	const TArray<class ABaseItem*> GetTacticalItems();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoadoutManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoadoutManager")
	}
	static class ULoadoutManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadoutManager>();
	}
};
DUMPER7_ASSERTS_ULoadoutManager;

// Class ReadyOrNot.BaseMagazineWeaponOTR
// 0x0070 (0x1920 - 0x18B0)
class ABaseMagazineWeaponOTR : public ABaseMagazineWeapon
{
public:
	bool                                          bHasReloadedOnce;                                  // 0x18B0(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18B1[0x7];                                     // 0x18B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   Mag_OTR_Comp;                                      // 0x18B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            Mag_OTR_Static;                                    // 0x18C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Mag_OTR_Socket;                                    // 0x18C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18D0[0x50];                                    // 0x18D0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseMagazineWeaponOTR")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseMagazineWeaponOTR")
	}
	static class ABaseMagazineWeaponOTR* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseMagazineWeaponOTR>();
	}
};
DUMPER7_ASSERTS_ABaseMagazineWeaponOTR;

// Class ReadyOrNot.LoadoutSlotWidget
// 0x01B8 (0x04A8 - 0x02F0)
class ULoadoutSlotWidget final : public UCommonUserWidget
{
public:
	bool                                          IsActive;                                          // 0x02F0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemCategory                                 LoadoutSlot;                                       // 0x02F1(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ABaseItem>                  ItemData;                                          // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPrimary;                                        // 0x0300(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAmmunition;                                     // 0x0301(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_302[0x6];                                      // 0x0302(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmmoTypeData                          AmmoType;                                          // 0x0308(0x0178)(BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bIsArmourMaterial;                                 // 0x0480(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UArmourMaterial*                        ArmourMaterialData;                                // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWeaponAttachmentType                         AttachmentSlot;                                    // 0x0490(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct ReadyOrNot::FLoadoutCategory>   GearCategoryClasses;                               // 0x0498(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	void SetActive(bool IsActive_0);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoadoutSlotWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoadoutSlotWidget")
	}
	static class ULoadoutSlotWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadoutSlotWidget>();
	}
};
DUMPER7_ASSERTS_ULoadoutSlotWidget;

// Class ReadyOrNot.TrailerSearchAndSecureActivity
// 0x0050 (0x0240 - 0x01F0)
class UTrailerSearchAndSecureActivity final : public UBaseActivity
{
public:
	TArray<class AActor*>                         AllSecurables;                                     // 0x01F0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_200[0x38];                                     // 0x0200(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ClosestSecurable;                                  // 0x0238(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrailerSearchAndSecureActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrailerSearchAndSecureActivity")
	}
	static class UTrailerSearchAndSecureActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrailerSearchAndSecureActivity>();
	}
};
DUMPER7_ASSERTS_UTrailerSearchAndSecureActivity;

// Class ReadyOrNot.BaseShell
// 0x0040 (0x0320 - 0x02E0)
class ABaseShell : public APooledActor
{
public:
	class UStaticMeshComponent*                   ShellMesh;                                         // 0x02E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>       MID_ShellMesh;                                     // 0x02E8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	EShellType                                    ShellType;                                         // 0x02F8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             ShellBounceFMODAudio;                              // 0x0300(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShellNormalizeMax;                                 // 0x0308(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShellNormalizeMin;                                 // 0x030C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_310[0x10];                                     // 0x0310(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseShell")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseShell")
	}
	static class ABaseShell* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseShell>();
	}
};
DUMPER7_ASSERTS_ABaseShell;

// Class ReadyOrNot.MenuWidget
// 0x0000 (0x0418 - 0x0418)
class UMenuWidget : public UCommonActivatableWidget
{
public:
	void PlayWidgetAnimation_Internal(class UWidgetAnimation* InWidgetAnimation, bool bRestartIfAlreadyPlaying);

	void BP_OnShow() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MenuWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MenuWidget")
	}
	static class UMenuWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMenuWidget>();
	}
};
DUMPER7_ASSERTS_UMenuWidget;

// Class ReadyOrNot.PreMissionPlanning
// 0x0760 (0x0B78 - 0x0418)
class UPreMissionPlanning : public UMenuWidget
{
public:
	bool                                          bIsWeaponCustomization;                            // 0x0418(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOpenInQuartermaster;                              // 0x0419(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCustomizingPrimary;                             // 0x041A(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41B[0x5];                                      // 0x041B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ABaseItem>                  CustomizeItemClass;                                // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotGameState*                   gs;                                                // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotPlayerController*            PC;                                                // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotPlayerState*                 ps;                                                // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelStreaming*                        PreMissionStreamedLevel;                           // 0x0440(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerState*                 PreviewPlayerState;                                // 0x0450(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_458[0x2];                                      // 0x0458(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	EEquippingSwat                                EquippingSwatMember;                               // 0x045A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45B[0x5];                                      // 0x045B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EEquippingSwat, struct FSavedLoadout>    LastSavedLoadout;                                  // 0x0460(0x0050)(NativeAccessSpecifierPublic)
	uint8                                         Pad_4B0[0x58];                                     // 0x04B0(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bLoadedLoadout;                                    // 0x0508(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0510(0x02E8)(BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<class FName, struct FLoadoutPreset>      LoadoutPresetMap;                                  // 0x07F8(0x0050)(BlueprintVisible, NativeAccessSpecifierPublic)
	class AReadyOrNotPlayerState*                 EquippingPlayerState;                              // 0x0848(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class ABaseItem>, struct FSavedWeaponPreset> WeaponToWeaponPresetsMap;          // 0x0850(0x0050)(BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class ABaseItem>, struct FSavedWeaponAttachmentData> WeaponToAttachmentsMap;    // 0x08A0(0x0050)(BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class ABaseWeapon>, EFireMode> WeaponClassToDefaultFireModeMap;                 // 0x08F0(0x0050)(BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                         Pad_940[0x4];                                      // 0x0940(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ActiveCameraTag;                                   // 0x0944(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94C[0x4];                                      // 0x094C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnRequestRefresh;                                  // 0x0950(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_960[0x8];                                      // 0x0960(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   RedTeamClass;                                      // 0x0968(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   BlueTeamClass;                                     // 0x0990(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   VIPClass;                                          // 0x09B8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9E0[0x8];                                      // 0x09E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AReadyOrNotCharacter*, class AReadyOrNotPlayerState*> PlayerStatePreviewMap;          // 0x09E8(0x0050)(UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_A38[0xD8];                                     // 0x0A38(0x00D8)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class ABaseItem*>           WorkBenchItemPtrMap;                               // 0x0B10(0x0050)(BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	EItemType                                     LastSetItemType;                                   // 0x0B60(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemClass                                    LastSetItemClass;                                  // 0x0B61(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B62[0x6];                                      // 0x0B62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ABaseItem>                  LastSetItemObjectClass;                            // 0x0B68(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B70[0x1];                                      // 0x0B70(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bCanUpdateWithUI;                                  // 0x0B71(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B72[0x6];                                      // 0x0B72(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPreMissionPlanning* GetPremissionPlanning();

	void AttachPrimaryToSocket(class FName Socket);
	void AttachSecondaryToSocket(class FName Socket);
	void CleanPrimaryGun();
	void CleanSecondaryGun();
	void ClearPreviewWeaponSkin(bool IsSecondary);
	void DoPrimaryWeaponPreviewBlend();
	void DoSaveLoadout(EEquippingSwat SwatMember, const struct FSavedLoadout& Loadout);
	void EquipPrimary();
	void EquipSecondary();
	TArray<TSubclassOf<class USkinComponent>> GetAvailablePlayerSkins();
	class AReadyOrNotCharacter* GetDefaultPreviewCharacter();
	void GetEquippingSwatMember(EEquippingSwat* EquippingSwat);
	bool GetInputLocked();
	struct FSavedWeaponAttachmentData GetItemAttachmentData(TSubclassOf<class ABaseItem> Weapon);
	TSubclassOf<class ABaseItem> GetLastItemInSlot(EItemType ItemType);
	EPreMissionSubCategory GetSubcategory();
	struct FWeaponPreset GetWeaponPresetData(TSubclassOf<class ABaseItem> Weapon, int32 Index_0);
	struct FSavedWeaponPreset GetWeaponPresetsData(TSubclassOf<class ABaseItem> Weapon);
	void HidePrimary(bool bIsHidden);
	void HideSecondary(bool bIsHidden);
	void HideWeapons(bool bHidePrimary, bool bHideSecondary, float Delay);
	void Init(bool bReadOnly, const struct FSavedLoadout& PreviewLoadout);
	bool IsAnyWeaponVisible();
	bool IsInLobby();
	void LoadLoadoutPresets();
	void LoadWeaponAttachments();
	void LoadWeaponDefaultFireModes();
	void LoadWeaponPresets();
	void OnLoadoutItemAttachmentsLoaded();
	void OnLoadoutItemAttachmentsSaved();
	void OnLoadoutItemPresetsLoaded();
	void OnLoadoutItemPresetsSaved();
	void OnLoadoutLoaded();
	void OnLoadoutPresetsLoaded();
	void OnLoadoutPresetsSaved();
	void OnLoadoutSaved();
	void OnSwatCharacterChanged();
	void OnWeaponDefaultFireModesLoaded();
	void PlayAnimationOnPreviewCharacter(const class FString& Animation);
	void PlayAnimationOnQuartermaster(const class FString& Animation);
	void SaveActiveLoadout();
	void SaveItemClassAsSlot(EItemType ItemType, TSubclassOf<class ABaseItem> Class_0);
	void SaveLoadoutPresets();
	void SaveWeaponAttachments();
	void SaveWeaponDefaultFireMode();
	void SaveWeaponPresets();
	void SetActiveCameraByTag(class FName Tag, float BlendTime);
	void SetBodyArmour(TSubclassOf<class ABaseItem> BodyArmour);
	void SetEquippingSwatMember(EEquippingSwat NewEquippingSwat, class AReadyOrNotPlayerState* NewEquippingPlayerState);
	void SetHeadwear(TSubclassOf<class ABaseItem> Headwear);
	void SetItem(EItemType ItemType, TSubclassOf<class ABaseItem> ItemClass);
	void SetItem_V2(EItemClass ItemClass, TSubclassOf<class ABaseItem> ItemObjectClass);
	void SetLightColorByTag(class FName Tag, const struct FLinearColor& Color);
	void SetLockInput(bool bShouldLockInput);
	void SetLongTactical(TSubclassOf<class ABaseItem> LongTactical);
	void SetPlayerSkin(TSubclassOf<class USkinComponent> SkinCompClass);
	void SetPrimaryAmmunitionAttachment(TSubclassOf<class UWeaponAttachment> AmmunitionAttachment);
	void SetPrimaryGripAttachment(TSubclassOf<class UWeaponAttachment> GripAttachment);
	void SetPrimaryIlluminatorAttachment(TSubclassOf<class UWeaponAttachment> IlluminatorAttachment);
	void SetPrimaryMuzzleAttachment(TSubclassOf<class UWeaponAttachment> MuzzleAttachment);
	void SetPrimaryOverbarrelAttachment(TSubclassOf<class UWeaponAttachment> OverbarrelAttachment);
	void SetPrimaryScopeAttachment(TSubclassOf<class UWeaponAttachment> ScopeAttachment);
	void SetPrimarySkinAttachment(TSubclassOf<class USkinComponent> SkinAttachment);
	void SetPrimaryStockAttachment(TSubclassOf<class UWeaponAttachment> StockAttachment);
	void SetPrimaryUnderbarrelAttachment(TSubclassOf<class UWeaponAttachment> UnderbarrelAttachment);
	void SetPrimaryWeapon(const struct FWeaponData& WeaponData);
	void SetSecondaryAmmunitionAttachment(TSubclassOf<class UWeaponAttachment> AmmunitionAttachment);
	void SetSecondaryGripAttachment(TSubclassOf<class UWeaponAttachment> GripAttachment);
	void SetSecondaryIlluminatorAttachment(TSubclassOf<class UWeaponAttachment> IlluminatorAttachment);
	void SetSecondaryMuzzleAttachment(TSubclassOf<class UWeaponAttachment> MuzzleAttachment);
	void SetSecondaryOverbarrelAttachment(TSubclassOf<class UWeaponAttachment> OverbarrelAttachment);
	void SetSecondaryScopeAttachment(TSubclassOf<class UWeaponAttachment> ScopeAttachment);
	void SetSecondarySkinAttachment(TSubclassOf<class USkinComponent> SkinAttachment);
	void SetSecondaryStockAttachment(TSubclassOf<class UWeaponAttachment> StockAttachment);
	void SetSecondaryUnderbarrelAttachment(TSubclassOf<class UWeaponAttachment> UnderbarrelAttachment);
	void SetSecondaryWeapon(const struct FWeaponData& WeaponData);
	void SetSubcategory(EPreMissionSubCategory NewSubCategory);
	void SetWorkbenchItemClass(TSubclassOf<class ABaseItem> Item, class FName Tag);
	void UpdatePreviewCharacter(class AReadyOrNotPlayerState* InPreviewPlayerState, class FName Tag);
	void UpdatePreviewCharacterArmour();
	void UpdatePreviewCharacterHeadwear();
	void UpdatePreviewCharacterLongTactical();
	void UpdatePreviewCharacterPrimary();
	void UpdatePreviewCharacterSecondary();
	void UpdatePreviewWeaponAttachments(bool IsSecondary, TSubclassOf<class UWeaponAttachment> Attachment);
	void UpdatePreviewWeaponSkin(bool IsSecondary, TSubclassOf<class USkinComponent> SkinAttachment);
	void UpdateWeaponDefaultFireMode(TSubclassOf<class ABaseWeapon> Weapon, EFireMode NewDefaultFireMode);
	void UpdateWeaponPreset(TSubclassOf<class ABaseItem> Weapon, const struct FWeaponPreset& PresetData, int32 Index_0);
	void UpdateWeaponPresets(TSubclassOf<class ABaseItem> Weapon, const struct FSavedWeaponPreset& Presets);
	void UpdateWorkbenchItemAttachments();

	EItemType ItemClassToItemType(EItemClass InItemClass) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PreMissionPlanning")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PreMissionPlanning")
	}
	static class UPreMissionPlanning* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPreMissionPlanning>();
	}
};
DUMPER7_ASSERTS_UPreMissionPlanning;

// Class ReadyOrNot.BaseTriggerable
// 0x0018 (0x02B0 - 0x0298)
class ABaseTriggerable final : public AActor
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bActivate;                                         // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ActivateDelay;                                     // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DeactivateDelay;                                   // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsActive;                                         // 0x02AC(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Activate();
	void Deactivate();
	void Stop();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseTriggerable")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseTriggerable")
	}
	static class ABaseTriggerable* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseTriggerable>();
	}
};
DUMPER7_ASSERTS_ABaseTriggerable;

// Class ReadyOrNot.BleedComponent
// 0x0020 (0x00C0 - 0x00A0)
class UBleedComponent final : public UActorComponent
{
public:
	class UFMODEvent*                             BleedEvent;                                        // 0x00A0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBleeding;                                       // 0x00A8(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bTempStopBleeding;                                 // 0x00B0(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HealCount;                                         // 0x00B4(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoHeal();
	void StartBleeding();
	void StopBleeding();

	bool CanHeal() const;
	float GetBleedTime() const;
	float GetHealCount() const;
	bool IsBleeding() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BleedComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BleedComponent")
	}
	static class UBleedComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBleedComponent>();
	}
};
DUMPER7_ASSERTS_UBleedComponent;

// Class ReadyOrNot.PickupActor
// 0x0068 (0x0300 - 0x0298)
class APickupActor : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AActor* PickedActor)> OnActorPickedUp;                       // 0x02A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnActorPickedUp_NoParam;                           // 0x02B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* DroppedActor)> OnActorDropped;                       // 0x02C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                   PickupName;                                        // 0x02D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x02D8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObjectiveMarkerComponent*              ObjectiveMarkerComponent;                          // 0x02E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 InteractableComponent;                             // 0x02F0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 PickupInstigator;                                  // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void ActorDropped(class AActor* InDroppedInstigator);
	void ActorPickedUp(class AActor* InPickupInstigator);
	bool CanPickUpNow(class APlayerCharacter* PickerUpper);
	void HideObjectiveMarker();
	void ShowObjectiveMarker();
	void ToggleObjectiveMarker();

	class AActor* GetPickupInstigator() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PickupActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PickupActor")
	}
	static class APickupActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<APickupActor>();
	}
};
DUMPER7_ASSERTS_APickupActor;

// Class ReadyOrNot.IncriminationClue
// 0x0070 (0x0370 - 0x0300)
class AIncriminationClue final : public APickupActor
{
public:
	TMulticastInlineDelegate<void(class AIncriminationClue* ClueActor, class AActor* ClueFounder)> Delegate_OnClueFound; // 0x0300(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMapActorComponent*                     MapActorComponent;                                 // 0x0310(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ClueNumber;                                        // 0x0318(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ShowObjectiveMarkerIn;                             // 0x031C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AIncriminationClue*                     NextClue;                                          // 0x0320(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   ClueName;                                          // 0x0328(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Protected, NativeAccessSpecifierProtected)
	class FText                                   ClueFoundMessage;                                  // 0x0340(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Protected, NativeAccessSpecifierProtected)
	class AIncriminationClueSpawnPoint*           SpawnPointOwner;                                   // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bClueFound : 1;                                    // 0x0360(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bClueTimerExpired : 1;                             // 0x0360(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	EClueState                                    ClueState;                                         // 0x0361(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_362[0xE];                                      // 0x0362(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Init(class AIncriminationClueSpawnPoint* OwningSpawn, uint8 InClueNumber, const class FText& InClueName, const class FText& InClueFoundMessage, float InShowObjectiveMarkerIn);
	void OnClueFound();
	void OnRep_OnClueFound();
	void OnRep_OnClueStateChanged();
	void RevealNextClue();

	bool IsClueFound() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IncriminationClue")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IncriminationClue")
	}
	static class AIncriminationClue* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIncriminationClue>();
	}
};
DUMPER7_ASSERTS_AIncriminationClue;

// Class ReadyOrNot.BlendRagdollAnimNotifyState
// 0x0040 (0x0070 - 0x0030)
class UBlendRagdollAnimNotifyState final : public UAnimNotifyState
{
public:
	float                                         TotalBlendDuration;                                // 0x0030(0x0004)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentBlendAmount;                                // 0x0034(0x0004)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PelvisWakeUpTime;                                  // 0x0038(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x1];                                       // 0x003C(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bUsePhysicalAnimComp;                              // 0x003D(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPhysicalAnimationData                 PhysicalAnimData;                                  // 0x0040(0x0024)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0xC];                                       // 0x0064(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BlendRagdollAnimNotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BlendRagdollAnimNotifyState")
	}
	static class UBlendRagdollAnimNotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlendRagdollAnimNotifyState>();
	}
};
DUMPER7_ASSERTS_UBlendRagdollAnimNotifyState;

// Class ReadyOrNot.BlockList
// 0x0018 (0x0430 - 0x0418)
class UBlockList : public UCommonActivatableWidget
{
public:
	class UCommonListView*                        BlockListView;                                     // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UBlockListData*>                 BlockList;                                         // 0x0420(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	void PopulateBlockList(class UUserWidget* BlockListRef);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BlockList")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BlockList")
	}
	static class UBlockList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlockList>();
	}
};
DUMPER7_ASSERTS_UBlockList;

// Class ReadyOrNot.BloodData
// 0x02D0 (0x0300 - 0x0030)
class UBloodData final : public UDataAsset
{
public:
	float                                         DecalFadeScreenSize;                               // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             Splatters;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         SplatterMaxTraceDistance;                          // 0x0048(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              SplatterSizeRange;                                 // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>             AnimatedSplatters;                                 // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class AAnimatedDecal>             AnimatedDecalClass;                                // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           AnimatedSplatterBones;                             // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         AnimatedSplatterMaxDistance;                       // 0x0088(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              AnimatedSplatterSizeRange;                         // 0x0090(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimatedBloodTimescale;                            // 0x00A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     AnimatedBloodCurve;                                // 0x00A8(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>             HeadshotSplatters;                                 // 0x0130(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UStaticMesh*                            HeadshotDecalMesh;                                 // 0x0140(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           HeadshotSplatterBones;                             // 0x0148(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         HeadshotMaxSplatterDistance;                       // 0x0158(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              HeadshotSplatterSizeRange;                         // 0x0160(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFXSystemAsset*>                 HitEntryParticles;                                 // 0x0170(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint32                                        SkinnedDecalImageCount;                            // 0x0180(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              SkinnedDecalSizeRange;                             // 0x0188(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FArteryData>                    Arteries;                                          // 0x0198(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFXSystemAsset*>                 ArteryParticles;                                   // 0x01A8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>             ArteryParticleCollisionDecals;                     // 0x01B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         ArteryParticleCollisionChance;                     // 0x01C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ArteryParticleCollisionSizeRange;                  // 0x01D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFXSystemAsset*>                 DismembermentParticles;                            // 0x01E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>             DismembermentParticleCollisionDecals;              // 0x01F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         DismembermentParticleCollisionChance;              // 0x0200(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              DismembermentParticleCollisionSizeRange;           // 0x0208(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGibData                               GibData;                                           // 0x0218(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class ABloodPool>                 BloodPoolClass;                                    // 0x0248(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BloodPoolSpawnDelay;                               // 0x0250(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BloodPoolSpawnBone;                                // 0x0254(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      BloodPoolFootstepDecal;                            // 0x0260(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                BloodPoolFootstepSize;                             // 0x0268(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                BloodPoolFootstepOffset;                           // 0x0280(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BloodPoolFootstepTime;                             // 0x0298(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             BloodPoolFootstepEvent;                            // 0x02A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstance*>              BigSplatterDecals;                                 // 0x02A8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class AExplosionGibs>             Gibs;                                              // 0x02B8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BigSplatterTraceDistance;                          // 0x02C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BigSplatterDecalSize;                              // 0x02C8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             HitEvent;                                          // 0x02E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             DeadHitEvent;                                      // 0x02E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             GoreEvent;                                         // 0x02F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             HeadshotEvent;                                     // 0x02F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BloodData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BloodData")
	}
	static class UBloodData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBloodData>();
	}
};
DUMPER7_ASSERTS_UBloodData;

// Class ReadyOrNot.BombActor
// 0x0090 (0x0328 - 0x0298)
class ABombActor final : public AActor
{
public:
	uint8                                         Pad_298[0x10];                                     // 0x0298(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ABombActor* DefusedBomb)> OnBombDefused;                     // 0x02A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   StaticMeshComponent;                               // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractableComponent*                 InteractableComponent;                             // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               ExplosionParticleComponent;                        // 0x02C8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MultitoolUseTime;                                  // 0x02D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExplosionRadius;                                   // 0x02D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBombState                                    BombState;                                         // 0x02D8(0x0001)(Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeUntilExplodes;                                 // 0x02DC(0x0004)(Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPVPBombOnly;                                      // 0x02E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             BombTickEvent;                                     // 0x02E8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             BombExplodeEvent;                                  // 0x02F0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F8[0x8];                                      // 0x02F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundSource*                           BombSoundSource;                                   // 0x0300(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                   ForceFeedbackEffect;                               // 0x0308(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackAttenuation*              ForceFeedbackAttenuation;                          // 0x0310(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_318[0x10];                                     // 0x0318(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Explode();
	EBombState GetBombState();
	float GetTimeUntilExplodes();
	void Multicast_PlayBombExplodeSFX(int32 Start, int32 End);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BombActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BombActor")
	}
	static class ABombActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABombActor>();
	}
};
DUMPER7_ASSERTS_ABombActor;

// Class ReadyOrNot.InteractableComponent
// 0x04A0 (0x0B90 - 0x06F0)
class UInteractableComponent final : public UWidgetComponent
{
public:
	uint8                                         bEnabled : 1;                                      // 0x06E8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_6E9[0x3];                                      // 0x06E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AnimatedIconName;                                  // 0x06EC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowActionPromptInWorld;                          // 0x06F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableActionPromptBackground;                     // 0x06F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideActionPromptUserSettings;                 // 0x06F6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bShowIconWhenActionsLocked : 1;                    // 0x06F7(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	struct FPlayerActionPromptSlot                ActionSlot1;                                       // 0x06F8(0x0090)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FPlayerActionPromptSlot                ActionSlot2;                                       // 0x0788(0x0090)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FPlayerActionPromptSlot                ActionSlot3;                                       // 0x0818(0x0090)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FPlayerActionPromptSlot                ActionSlot4;                                       // 0x08A8(0x0090)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bDistanceChecksEnabled;                            // 0x0938(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_939[0x3];                                      // 0x0939(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinShowPromptAtDistance;                           // 0x093C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShowPromptAtDistance;                              // 0x0940(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bMustBeLookingAt : 1;                              // 0x0944(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_945[0x3];                                      // 0x0945(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RequiredLookAtPercentage;                          // 0x0948(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMustBeOverlapping;                                // 0x094C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94D[0x3];                                      // 0x094D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InteractCircleSize;                                // 0x0950(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InteractIconSize;                                  // 0x0954(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bDistanceFadeIcon : 1;                             // 0x0958(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHideUponInteraction : 1;                          // 0x0958(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHideUponPlayerMovement : 1;                       // 0x0958(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bImprintIconOnHUDUponInteraction : 1;              // 0x0958(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_959[0x7];                                      // 0x0959(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              DisallowedPlayerControllers;                       // 0x0960(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         IgnoreInteractionBlockingActors;                   // 0x0970(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         CurrentProgress;                                   // 0x0980(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_984[0x4];                                      // 0x0984(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimatedIcon                          AnimatedIcon;                                      // 0x0988(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class AActor*                                 UseActor;                                          // 0x09A0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExclusiveInteract;                                // 0x09A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bClientInteract;                                   // 0x09A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExecuteOnServer;                                  // 0x09AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9AB[0x5];                                      // 0x09AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerCharacter*>               PlayersFocusing;                                   // 0x09B0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSubclassOf<class UUserWidget>                CachedWidgetClass;                                 // 0x09C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimatedIconWidgetWithActionPrompt*    IconWidget;                                        // 0x09C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UUserWidget>                ImprintIconWidgetClass;                            // 0x09D0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimatedIconWidget_Imprint*            IconWidget_Imprint;                                // 0x09D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FAnimatedIcon>       AnimatedIconMap;                                   // 0x09E0(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_A30[0x160];                                    // 0x0A30(0x0160)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisableInteractable();
	void DisableInteractionFor(class APlayerCharacter* InCharacter);
	void EnableInteractable();
	void EnableInteractionFor(class APlayerCharacter* InCharacter);
	bool InputActionNameMatchesAnySlot(class FName InInputActionName);
	bool InputActionNameMatchesAnyValidSlot(class FName InInputActionName);
	bool IsBeingLookedAt(class APlayerController* InPlayerController, float MaxRange, float LookatThreshold, bool bUseActorLocation);
	bool IsInteractionEnabledFor(class APlayerCharacter* InCharacter);
	void OnInteract(class APlayerCharacter* InteractInstigator);
	void ResetToOriginalLocation();
	void SetAnimatedIconName(const class FName& NewIconName);
	bool SetInstigator(class AActor* InTarget);
	void SetInteractionIconSize(float InInteractCircleSize, float InInteractIconSize);
	void SetInteractionIconState(bool bValid);

	bool AnyActionSlotValid() const;
	bool CanInteract(bool bLog) const;
	float GetDistanceFromPlayer() const;
	class AActor* GetInstigator() const;
	class FName GetOriginalIconName() const;
	struct FVector GetOriginalLocation() const;
	struct FVector GetOriginalLocation_Relative() const;
	TArray<class APlayerCharacter*> GetPlayersFocusing() const;
	class AActor* GetUseActor() const;
	bool IsFocused() const;
	bool IsIconVisible() const;
	bool IsInteractionEnabledForController(class APlayerController* InController) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InteractableComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InteractableComponent")
	}
	static class UInteractableComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInteractableComponent>();
	}
};
DUMPER7_ASSERTS_UInteractableComponent;

// Class ReadyOrNot.BpGameplayHelperLib
// 0x0000 (0x0028 - 0x0028)
class UBpGameplayHelperLib final : public UBlueprintFunctionLibrary
{
public:
	static void AddDefaultItemsToPlayer(class AReadyOrNotCharacter* Player);
	static bool ApplyRadialDamageWithSecondTrace(const class UObject* WorldContextObject, float SecondTraceDistance, float SecondTraceRadiusFactor, float BaseDamage, float MinimumDamage, const struct FVector& Origin, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, TSubclassOf<class UDamageType> DamageTypeClass, const TArray<class AActor*>& IgnoreActors, class AActor* DamageCauser, class AController* InstigatedByController, ECollisionChannel DamagePreventionChannel);
	static void Array_Sort(const TArray<int32>& TargetArray, bool bAscendingOrder, class FName VariableName);
	static void AttachMagazinesToWeapon(TSubclassOf<class ABaseMagazineWeapon> WeaponClass, class ABaseMagazineWeapon* Weapon);
	static struct FPointDamageEvent CastToPointDamageEvent(const struct FDamageEvent& DamageEvent, EStructureCastPathway* Branches);
	static struct FRadialDamageEvent CastToRadialDamageEvent(const struct FDamageEvent& DamageEvent, EStructureCastPathway* Branches);
	static void ChangeLocalization(const class FString& Target);
	static class FString ConvertDegreeIntoLetter(float Degrees);
	static class FString ConvertFloatToStringMinutes(float Val);
	static class FString ConvertFloatToStringMinutes_Detail(float Val);
	static float ConvertFovToHorizontal(const class UObject* WorldContextObject, float FOV);
	static float ConvertFovToReferenceHorizontal(float FOV);
	static float ConvertFovToReferenceVertical(float FOV);
	static float ConvertFovToVertical(const class UObject* WorldContextObject, float FOV);
	static EWeaponType ConvertItemTypeToWeaponType(EItemType ItemType);
	static struct FVector2D ConvertSquareVectorToCircle(const struct FVector2D& SquareVector);
	static EItemType ConvertWeaponTypeToItemType(EWeaponType WeaponType);
	static void DeleteLoadout(const class FString& LoadoutName);
	static void DisableInteractionCompForController(class UInteractableComponent* InteractableComponent, class APlayerController* InPlayerController);
	static void DisableInteractionFor(class AActor* InInteractableActor, class APlayerCharacter* InPlayerCharacter);
	static void DisableInteractionForController(class AActor* InInteractableActor, class APlayerController* InPlayerCharacter);
	static void EnableInteractionCompForController(class UInteractableComponent* InteractableComponent, class APlayerController* InPlayerController);
	static void EnableInteractionFor(class AActor* InInteractableActor, class APlayerCharacter* InPlayerCharacter);
	static void EnableInteractionForController(class AActor* InInteractableActor, class APlayerController* InPlayerCharacter);
	static bool EquipLoadoutOnPlayer(const struct FSavedLoadout& Loadout, class AReadyOrNotCharacter* EquipPlayer, const struct FLoadoutEquipOptions& LoadoutEquipOptions);
	static class APlayerCharacter* FindClosestDeadGuyInRadius(const struct FVector& Origin, class AActor* Causer, float Radius, bool bIncludeUnconscious);
	static bool FindPositionAwayFromSwat(class ACyberneticCharacter* Character, const struct FVector& StartingLocation, struct FVector* OutLocation, float Radius, TSubclassOf<class UNavigationQueryFilter> NavFilter, bool bForce);
	static class FString GetAdditionalBugReportInformation(class APlayerController* PC);
	static class UDataTable* GetAILookupDataTable();
	static bool GetAllDifficultyNames(TArray<struct FGameplayTag>* OutTags);
	static class UDataTable* GetAmmoLookupDataTable();
	static struct FAnimatedIcon GetAnimatedIconFromTable(class FName RowName, bool* bSuccess);
	static class UDataTable* GetAnimatedIconLookupDataTable();
	static int32 GetAttachmentPointsRemaining(const struct FSavedLoadout& Loadout);
	static bool GetAudioMixPreset(EAudioMixPreset* Preset);
	static EAudioMixPreset GetAudioMixPresetEnum(const class FString& Preset);
	static bool GetBounceLightEnabled(bool* bBounceLightEnabled);
	static class FString GetBuildDate();
	static class FString GetBuildTime();
	static class UCampaignData* GetCampaignData();
	static class UDataTable* GetCharacterLookOverrideDataTable();
	static class ACivilianCharacter* GetClosestActiveCivilian(const struct FVector& Location, float Distance, bool bMustHaveTarget);
	static class ASuspectCharacter* GetClosestActiveSuspect(const struct FVector& Location, float Distance, bool bMustHaveTarget);
	static class UDataTable* GetConversationLookupDataTable();
	static ECOOPMode GetCoopModeFromModeName(const class FString& InCoopName);
	static class UReadyOrNotProfile* GetCurrentProfile(class UWorld* WorldContext);
	static class FString GetDialoguePath(const class FString& Character, const class FString& bark);
	static float GetDistanceBetweenActors(class AActor* Actor1, class AActor* Actor2);
	static float GetDistanceBetweenActors2D(class AActor* Actor1, class AActor* Actor2);
	static class FString GetDMOAddress();
	static class FString GetDMOGameMode();
	static ETeamType GetDMOTeamType();
	static class UDataTable* GetDoorLookupDataTable();
	static class APlayerCharacter* GetFirstAlivePlayerControlledCharacter(class UWorld* WorldContext);
	static class UUserWidget* GetFirstWidgetFromViewport(const class FString& WidgetName);
	static bool GetFlashlightShadows(bool* bFlashLightShadows);
	static bool GetForceFeedbackEnabled(bool* ForceFeedbackEnabled);
	static bool GetForceFeedbackIntensity(float* ForceFeedbackIntensity);
	static bool GetFoV(float* FOV);
	static bool GetFreelookSensitivity(float* Sensitivity);
	static void GetFriendlyMapAndModeFromName(const class FString& InUrl, class FString* OutInternalMapName, class FString* OutFriendlyMap, class FString* OutFriendlyMode);
	static class FString GetFriendlyModeFromECoopMode(const ECOOPMode InCoopMode);
	static class UReadyOrNotGameInstance* GetGameInstance(class UWorld* WorldContext);
	static class UDataTable* GetGameModeSettingsLookupDataTable();
	static bool GetGamepadAimAssistIntensity(class FString* AimAssistIntensity);
	static bool GetGamepadAimSensitivityHorizontal(float* GamepadAimSensitivityHorizontal);
	static bool GetGamepadAimSensitivityVertical(float* GamepadAimSensitivityVertical);
	static class UDataTable* GetGamepadHoldTimesDataTable();
	static bool GetGamepadInvertButtonLayout(bool* bInvertButtonLayout);
	static bool GetGamepadInverted(bool* bInvertVertical, bool* bInvertHorizontal);
	static bool GetGamepadInvertStickLayout(bool* bInvertStickLayout);
	static bool GetGamepadInvertTriggersLayout(bool* bInvertTriggersLayout);
	static bool GetGamepadLookInnerDeadzone(float* GamepadLookInnerDeadzone);
	static bool GetGamepadLookSensitivityHorizontal(float* GamepadLookSensitivityHorizontal);
	static bool GetGamepadLookSensitivitySpeedUp(float* GamepadLookSensitivitySpeedUp);
	static bool GetGamepadLookSensitivityVertical(float* GamepadLookSensitivityVertical);
	static bool GetGamepadMovementInnerDeadzone(float* GamepadMovementInnerDeadzone);
	static bool GetGamepadRadialMenuConfirmationPreset(EGamepadConfirmationPreset* Preset);
	static EGamepadConfirmationPreset GetGamepadRadialMenuConfirmationPresetEnum(const class FString& Preset);
	static bool GetGamepadRadialMenuUseLeftStick(bool* UseLeftStick);
	static bool GetGamepadSwitchBumpersTriggersLayout(bool* bSwitchBumpersTriggers);
	static void GetGameplayTagChildrenAsContainer(const struct FGameplayTag& InTag, struct FGameplayTagContainer* OutTagContainer);
	static bool GetGyroActiveMode(class FString* GyroActiveMode);
	static bool GetGyroHorizontalAimSensitivity(float* GyroHorizontalAimSensitivity);
	static bool GetGyroHorizontalLookSensitivity(float* GyroHorizontalLookSensitivity);
	static bool GetGyroInverted(bool* bInvertGyroVertical, bool* bInvertGyroHorizontal);
	static bool GetGyroVerticalAimSensitivity(float* GyroVerticalAimSensitivity);
	static bool GetGyroVerticalLookSensitivity(float* GyroVerticalLookSensitivity);
	static bool GetHitmarkerSfxEnabled(bool* bHitmarkerSfxEnabled);
	static bool GetHostRegion(struct FGameplayTag* RegionTag);
	static class UHumanCharacterHUD_V2* GetHUDWidget();
	static class UDataTable* GetInputKeyGamepadIconLookupDataTable();
	static class UItemData* GetItemData(class UWorld* WorldContext);
	static bool GetLastConnectedServerIP(class FString* IP);
	static bool GetLevelAssetData(const class FString& LevelName, struct FAssetData* AssetData);
	static struct FLevelDataLookupTable GetLevelData(class UWorld* WorldContext);
	static TArray<struct FLevelDataLookupTable> GetLevels();
	static TArray<class UDataTable*> GetLevelSpecificAIDataTables(const class UObject* WorldContextObject);
	static class UReadyOrNotSaveGame* GetLoadGameInstance(const class FString& LoadSlotName);
	static class UTexture2D* GetLoadingScreenLevelImage(const class FString& Level);
	static bool GetLoadoutNames(TArray<class FString>* LoadoutNames);
	static bool GetLocalization(class FString* Target);
	static class AReadyOrNotPlayerState* GetLocalPlayerState(class UWorld* World);
	static struct FLevelDataLookupTable GetMapDetailsFromName(const class FString& MapName);
	static class AMapStatisticsSystem* GetMapStatistics(class UWorld* WorldContext);
	static bool GetMicInputGain(float* MicInputGain);
	static bool GetMouseInverted(bool* bInvertVertical, bool* bInvertHorizontal);
	static bool GetMouseSensitivity(float* MouseSensitvity);
	static class UDataTable* GetMoveStyleDataTable();
	static class UReadyOrNotMultiplayerProfile* GetMultiplayerProfile(const class FString& LoadSlotName);
	static class UMusicData* GetMusicData(class UWorld* WorldContext);
	static class UDataTable* GetPairedInteractionDataTable();
	static class UPenetrationData* GetPenetrationData();
	static bool GetPlayerDefaultLoadout(struct FSavedLoadout* OutLoadout);
	static bool GetPreferredRegions(struct FGameplayTagContainer* RegionsTagContainer);
	static class FString GetProjectName();
	static class FString GetProjectVersion();
	static int32 GetProjectVersionAsInt();
	static bool GetRandomLoadingScreenTip(class FText* Tip);
	static class UDataSingleton* GetRoNData();
	static class UReadyOrNotGameInstance* GetRONGameInstance();
	static bool GetSendMapStatistics(bool* bSendMapStatistics);
	static bool GetShellLifetime(float* ShellLifeTime);
	static bool GetShowControls(bool* bShowControls);
	static bool GetShowFPS(bool* bShowFPS);
	static bool GetShowOppositePlatformGraphicsOptions();
	static bool GetSpeakerIntensity(float* SpeakerIntensity);
	static class UDataTable* GetSpeechLookupDataTable(const class FString& Speaker);
	static class UDataTable* GetSuspectArmourDataTable();
	static class UDataTable* GetTrapLookupDataTable();
	static bool GetUIScaling(float* Scale);
	static bool GetUseCommandMenuForGamepad(bool* bUsesCommandMenu);
	static bool GetUseMeshpainting(bool* bUseMeshPainting);
	static bool GetUseVerticalFOV(bool* bUsesVertical);
	static bool GetVoiceType(EVoiceType* OutVoiceType);
	static bool GetVolumes(float* MasterVolume, float* UIVolume, float* SFXVolume, float* MusicVolume, float* VOIPVolume);
	static bool GetWeaponFieldOfView(float* FOV);
	static bool GetWeaponFOVPreset(EWeaponFOVPreset* Preset);
	static EWeaponFOVPreset GetWeaponFOVPresetEnum(const class FString& Preset);
	static class UWidgetsData* GetWidgetData();
	static struct FWidgetLookupData GetWidgetDataFromLookupData(const class FString& WidgetName, bool bWarnIfMissing);
	static TArray<class UUserWidget*> GetWidgetsFromViewport(const class FString& WidgetName);
	static class UWorld* GetWorldBP(class APlayerController* PC);
	static class UWorld* GetWorldStatic();
	static bool HasLineOfSight(class AActor* Observer, class AActor* B);
	static bool HasLineOfSightExt(class AActor* Observer, class AActor* B, struct FHitResult* HitResult);
	static bool HasLineOfSightLoc(class UWorld* WorldContext, const struct FVector& A, const struct FVector& B, const TArray<class AActor*>& IgnoredActors, ECollisionChannel CollisionChannel);
	static bool HasWidgetInViewport(const class FString& WidgetName);
	static class UPanelSlot* InsertChildAt(class UWidget* Parent, int32 Index_0, class UWidget* Content);
	static bool IsCommanderMode(const class UObject* WorldContextObject);
	static bool IsConsole(const class UObject* WorldContextObject);
	static bool IsCOOPSupported(const struct FLevelDataLookupTable& LookupTable);
	static bool IsDLCLocked(TSubclassOf<class ABaseItem> Item);
	static bool IsDMOBuild();
	static bool IsDMOMatchMake();
	static bool IsDMOPVPOnly();
	static bool IsEditorBuild();
	static bool IsEmptyItem(TSubclassOf<class ABaseItem> ItemClass);
	static bool IsEnemy(ETeamType TeamOne, ETeamType TeamTwo);
	static bool IsFriendly(class AReadyOrNotGameState* GameState, ETeamType TeamOne, ETeamType TeamTwo);
	static bool IsFriendlyWithMe(class AReadyOrNotGameState* GameState, ETeamType TeamType);
	static bool IsHelmetCompatible(TSubclassOf<class ABaseItem> FacewearClass, TSubclassOf<class ABaseItem> HelmetClass);
	static bool IsInPublicLobbyCooldown(float* SecondsRemaining);
	static bool IsIronmanMode(const class UObject* WorldContextObject);
	static bool IsLeadPlayer(const class UObject* WorldContextObject);
	static bool IsLobby(const class UObject* WorldContextObject);
	static bool IsMultiplayer(const class UObject* WorldContextObject);
	static bool IsObjectiveTarget(class AReadyOrNotCharacter* Target, class AReadyOrNotCharacter* LocalPlayer);
	static bool IsOnDeckBigPicture();
	static bool IsPreMissionBriefingBeforeLoadout();
	static bool IsPvPSupported(const struct FLevelDataLookupTable& LookupTable);
	static bool IsRTXDMOBuild();
	static bool IsShippingBuild();
	static bool IsShowHUDEnabled();
	static bool IsSinglePlayer(const class UObject* WorldContextObject);
	static bool IsSteamDeck();
	static bool IsSupporterOnlyBuild();
	static bool IsWidgetOfClassInViewport(class UObject* WorldContextObject, TSubclassOf<class UUserWidget> WidgetClass);
	static bool Load2DReload(bool* b2DReload);
	static bool LoadAllowModdedPlayers(bool* bAllowModdedPlayers);
	static bool LoadColorblindMode(EColorVisionDeficiency* ColorVisionDeficiency);
	static bool LoadColorblindStrength(float* ColorblindStrength);
	static bool LoadControlScheme(bool* UsingAlternateControls);
	static bool LoadCrossplayEnabled(bool* bCrossplayEnabled);
	static bool LoadCurvedHUD(bool* bCurvedHUD);
	static void LoadCustomizationLevels(class UWorld* WorldContext);
	static bool LoadDebugOverlayEnabled(bool* bDebugOverlayEnabled);
	static bool LoadDefaultCommands(ESwatCommand* DefaultCommand, ESwatCommand* DefaultDoorUnknownCommand, ESwatCommand* DefaultDoorOpenCommand, ESwatCommand* DefaultDoorLockedCommand, ESwatCommand* DefaultDoorUnlockedCommand);
	static bool LoadDefaultCommandsAsOption(int32* DefaultCommandOption, int32* DefaultDoorUnknownCommandOption, int32* DefaultDoorOpenCommandOption, int32* DefaultDoorLockedCommandOption, int32* DefaultDoorUnlockedCommandOption);
	static bool LoadDefaultDoorLockedCommand(ESwatCommand* DefaultDoorLockedCommand, int32* DefaultDoorLockedCommandIndex);
	static bool LoadDefaultDoorOpenCommand(ESwatCommand* DefaultDoorOpenCommand, int32* DefaultDoorOpenCommandIndex);
	static bool LoadDefaultDoorUnknownCommand(ESwatCommand* DefaultDoorUnknownCommand, int32* DefaultDoorUnknownCommandIndex);
	static bool LoadDefaultDoorUnlockedCommand(ESwatCommand* DefaultDoorUnlockedCommand, int32* DefaultDoorUnlockedCommandIndex);
	static void LoadDefaultLoadout(struct FSavedLoadout* OutLoadout, const class FString& LoadoutName);
	static bool LoadDefaultSurfaceCommand(ESwatCommand* DefaultCommand, int32* DefaultCommandIndex);
	static bool LoadEmptyMagReloadSettings(EEmptyMagReloadType* EmptyMagReloadType);
	static bool LoadFireModeDisplayOption(int32* FireModeDisplayOption);
	static bool LoadGammaSetting(float* Gamma);
	static bool LoadGrenadeSettings(EGrenadeThrowSettingType* GrenadeThrowType);
	static bool LoadHighlightWeapons(bool* bHighlightWeapons);
	static bool LoadHoldCrouch(bool* HoldCrouch);
	static bool LoadHotkeyHintSetting(bool* bShowHotkeyHint);
	static bool LoadHUDSettings(bool* bShowHUD, bool* bCurvedHUD, bool* bShowCompass, bool* bShowWeaponHUD, bool* bShowMagazineHUD, bool* bShowChat, bool* bSwayHUD, bool* b2DReload, float* IconScale, float* QuickThrowScale, int32* FireModeDisplayOption, bool* bShowPlayerNames, bool* bShowButtonPrompts);
	static bool LoadIconScale(float* IconScale);
	static bool LoadItemSelectionStyleSettings(EItemSelectionInterfaceType* ItemSelectionInterface);
	static bool LoadJoinModdedServers(bool* bJoinModdedServers);
	static class ULicenseSave* LoadLicenseSave();
	static bool LoadLoadout(struct FSavedLoadout* Loadout, const class FString& LoadoutName);
	static bool LoadLoadoutAndEquipPlayer(struct FSavedLoadout* Loadout, class AReadyOrNotCharacter* EquipPlayer, const class FString& LoadoutName);
	static bool LoadLowReadyStyle(bool* bUseHighReady);
	static bool LoadMaxShellsInWorld(int32* MaxShells);
	static bool LoadMirrorAntiAliasEnabled(bool* bShowAntiAlias);
	static bool LoadMirrorDecalsEnabled(bool* bShowDecals);
	static bool LoadMirrorDynamicShadowsEnabled(bool* bShowDynamicShadows);
	static bool LoadMirrorEnabledOnlyInLobby(bool* bEnabled);
	static bool LoadMirrorReflectionEnabled(bool* bEnabled);
	static bool LoadMirrorResolutionScale(float* ResolutionScale);
	static bool LoadOptiwandViewMode(EOptiwandViewMode* OptiwandViewMode);
	static bool LoadPiPFPS(bool* bEnabled, float* FPS);
	static bool LoadPiPResolutionScale(float* ResolutionScale);
	static bool LoadPS5AdaptiveAimTriggers(bool* PS5AdaptiveAimTriggers);
	static bool LoadPS5AdaptiveFireTriggers(bool* PS5AdaptiveFireTriggers);
	static bool LoadQuickThrowScale(float* QuickThrowScale);
	static bool LoadReplayEnabled(bool* bReplayEnabled);
	static bool LoadSafeZoneSettings(float* SafeZoneX, float* SafeZoneY);
	static bool LoadScoreReadoutSetting(EScoreReadoutMode* OutScoreReadoutMode);
	static bool LoadSelectedAudioDevice(class FString* OutAudioDevice);
	static bool LoadServersideChecksum(bool* bServerSideChecksumEnabled);
	static bool LoadShotgunSettings(EShotgunReloadType* ShotgunReloadType);
	static bool LoadShowButtonPrompts(bool* bShowButtonPrompts);
	static bool LoadShowChat(bool* bShowChat);
	static bool LoadShowCommandContextHintSetting(bool* bShowCommandContextHint);
	static bool LoadShowCompass(bool* bShowCompass);
	static bool LoadShowHealthIconSetting(bool* bShowHealthIcons);
	static bool LoadShowHesitationBarSetting(bool* bShowHesitationBar);
	static bool LoadShowHUD(bool* bShowHUD);
	static bool LoadShowHUDSetting(bool* bShowHUD);
	static bool LoadShowMagazineHUD(bool* bShowMagazineHUD);
	static bool LoadShowMultiplayerNames(bool* bShowMultiplayerNames);
	static bool LoadShowPlayerIconSetting(bool* bShowPlayerIcon);
	static bool LoadShowPlayerNamesSetting(bool* bShowPlayerNames);
	static bool LoadShowTeamStatus(bool* bShowTeamStatus);
	static bool LoadShowWeaponHUD(bool* ShowWeaponHUD);
	static bool LoadSubtitlesBackgroundOpacity(float* SubtitlesBackgroundOpacity);
	static bool LoadSubtitlesEnabled(bool* bEnableSubtitles);
	static bool LoadSubtitlesLocale(class FString* SubtitlesLocale);
	static bool LoadSubtitlesSize(ESubtitlesSize* SubtitlesSize);
	static bool LoadSubtitlesSpeed(float* SubtitlesSpeed);
	static bool LoadSwayHUD(bool* bSwayHUD);
	static bool LoadTeamViewFPSSetting(bool* bEnabled, int32* TeamViewFPS);
	static bool LoadToggleADS(bool* ToggleADS);
	static bool LoadTogglePS5Gyro(bool* TogglePS5Gyro);
	static bool LoadWorldSpaceActionPrompts(bool* bWorldSpaceActionPrompts);
	static bool LoadZoomADSSetting(bool* bZoomADS);
	static void PlayInterfaceSound(class UWorld* WorldContext, EInterfaceSoundType SoundClass);
	static bool RefillLoadoutOnPlayer(const struct FSavedLoadout& Loadout, class AReadyOrNotCharacter* EquipPlayer, const struct FLoadoutEquipOptions& LoadoutEquipOptions);
	static bool ReloadSettings();
	static void RemoveWidgetFromViewport(const class FString& WidgetName);
	static void RequestDeckKeyboard();
	static bool RequestGameplayTagFromString(const class FString& InTagAsString, struct FGameplayTag* OutTag);
	static bool Save2DReload(bool b2DReload);
	static bool SaveAllowModdedPlayers(bool bAllowModdedPlayers);
	static bool SaveColorblindMode(EColorVisionDeficiency ColorVisionDeficiency);
	static bool SaveColorblindStrength(float ColorblindStrength);
	static bool SaveControlScheme(bool UsingAlternateControls);
	static bool SaveCrossplayEnabled(bool bCrossplayEnabled);
	static bool SaveCurvedHUD(bool bCurvedHUD);
	static bool SaveDebugOverlayEnabled(bool bDebugOverlayEnabled);
	static bool SaveDefaultCommand(ESwatCommand DefaultCommand, ESwatCommand DefaultDoorUnknownCommand, ESwatCommand DefaultDoorOpenCommand, ESwatCommand DefaultDoorLockedCommand, ESwatCommand DefaultDoorUnlockedCommand);
	static bool SaveDefaultCommandAsOption(int32 DefaultCommandOption, int32 DefaultDoorUnknownCommandOption, int32 DefaultDoorOpenCommandOption, int32 DefaultDoorLockedCommandOption, int32 DefaultDoorUnlockedCommandOption);
	static bool SaveDefaultDoorLockedCommand(ESwatCommand DefaultDoorLockedCommand, int32 DefaultDoorLockedCommandIndex);
	static bool SaveDefaultDoorOpenCommand(ESwatCommand DefaultDoorOpenCommand, int32 DefaultDoorOpenCommandIndex);
	static bool SaveDefaultDoorUnknownCommand(ESwatCommand DefaultDoorUnknownCommand, int32 DefaultDoorUnknownCommandIndex);
	static bool SaveDefaultDoorUnlockedCommand(ESwatCommand DefaultDoorUnlockedCommand, int32 DefaultDoorUnlockedCommandIndex);
	static bool SaveDefaultSurfaceCommand(ESwatCommand DefaultCommand, int32 DefaultCommandIndex);
	static bool SaveEmptyMagReloadSettings(EEmptyMagReloadType EmptyMagReloadType);
	static bool SaveFireModeDisplayOption(int32 FireModeDisplayOption);
	static bool SaveGrenadeSettings(EGrenadeThrowSettingType GrenadeThrowType);
	static bool SaveHighlightWeapons(bool bHighlightWeapons);
	static bool SaveHitmarkerSfxEnabled(bool bHitmarkerSfxEnabled);
	static bool SaveHoldCrouch(bool HoldCrouch);
	static bool SaveHotkeyHintSetting(bool bShowHotkeyHint);
	static bool SaveHUDSettings(bool bShowHUD, bool bCurvedHUD, bool bShowCompass, bool ShowWeaponHUD, bool bShowMagazineHUD, bool bShowChat, bool bSwayHUD, bool b2DReload, float IconScale, float QuickThrowScale, int32 FireModeDisplayOption, bool bShowMultiplayerNames, bool bShowButtonPrompts);
	static bool SaveIconScale(float IconScale);
	static bool SaveItemSelectionStyleSettings(EItemSelectionInterfaceType ItemSelectionInterface);
	static bool SaveJoinModdedServers(bool bJoinModdedServers);
	static bool SaveKeybinds();
	static void SaveLicenseSave(class ULicenseSave* LevelStats);
	static bool SaveLoadout(const struct FSavedLoadout& Loadout, const class FString& LoadoutName);
	static bool SaveLowReadyStyle(bool bUseHighReady);
	static bool SaveMasterVolume(float Volume);
	static bool SaveMaxShellsInWorld(int32 NewMaxShells);
	static bool SaveMirrorAntiAliasEnabled(bool bShowAntiAlias);
	static bool SaveMirrorDecalsEnabled(bool bShowDecals);
	static bool SaveMirrorDynamicShadowsEnabled(bool bShowDynamicShadows);
	static bool SaveMirrorEnabledOnlyInLobby(bool bEnabled);
	static bool SaveMirrorReflectionEnabled(bool bEnabled);
	static bool SaveMirrorResolutionScale(float ResolutionScale);
	static bool SaveMusicVolume(float Volume);
	static bool SaveOptiwandViewMode(EOptiwandViewMode OptiwandViewMode);
	static bool SavePiPFPS(bool bEnabled, float FPS);
	static bool SavePiPResolutionScale(float ResolutionScale);
	static bool SavePS5AdaptiveAimTriggers(bool PS5AdaptiveAimTriggers);
	static bool SavePS5AdaptiveFireTriggers(bool PS5AdaptiveFireTriggers);
	static bool SaveQuickThrowScale(float QuickThrowScale);
	static bool SaveReplayEnabled(bool bReplayEnabled);
	static bool SaveSafeZoneSettings(float SafeZoneX, float SafeZoneY);
	static bool SaveScoreReadoutSetting(EScoreReadoutMode InScoreReadoutMode);
	static bool SaveSelectedAudioDevice(const class FString& InAudioDevice);
	static bool SaveServersideChecksum(bool bServerSideChecksumEnabled);
	static bool SaveSettings();
	static bool SaveSFXVolume(float Volume);
	static bool SaveShotgunSettings(EShotgunReloadType ShotgunReloadType);
	static bool SaveShowButtonPrompts(bool bShowButtonPrompts);
	static bool SaveShowChat(bool bShowChat);
	static bool SaveShowCommandContextHintSetting(bool bShowCommandContextHint);
	static bool SaveShowCompass(bool bShowCompass);
	static bool SaveShowHealthIconSetting(bool bShowHealthIcons);
	static bool SaveShowHesitationBarSetting(bool bShowHesitationBar);
	static bool SaveShowHUD(bool bShowHUD);
	static bool SaveShowHUDSetting(bool bShowHUD);
	static bool SaveShowMagazineHUD(bool bShowMagazineHUD);
	static bool SaveShowMultiplayerNames(bool bShowMultiplayerNames);
	static bool SaveShowPlayerIconSetting(bool bShowPlayerIcon);
	static bool SaveShowTeamStatus(bool bShowTeamStatus);
	static bool SaveShowWeaponHUD(bool ShowWeaponHUD);
	static bool SaveSubtitlesBackgroundOpacity(float SubtitlesBackgroundOpacity);
	static bool SaveSubtitlesEnabled(bool bEnableSubtitles);
	static bool SaveSubtitlesLocale(const class FString& SubtitlesLocale);
	static bool SaveSubtitlesSize(ESubtitlesSize SubtitlesSize);
	static bool SaveSubtitlesSpeed(float SubtitlesSpeed);
	static bool SaveSwayHUD(bool bSwayHUD);
	static bool SaveTeamViewSetting(bool bEnabled, int32 TeamViewFPS);
	static bool SaveToggleADS(bool ToggleADS);
	static bool SaveTogglePS5Gyro(bool TogglePS5Gyro);
	static bool SaveUIVolume(float Volume);
	static bool SaveVOIPVolume(float Volume);
	static bool SaveWorldSpaceActionPrompts(bool bWorldSpaceActionPrompts);
	static bool SaveZoomADSSetting(bool bZoomADS);
	static bool SetAudioMixPreset(EAudioMixPreset NewPreset);
	static bool SetBounceLightEnabled(bool bBounceLightEnabled);
	static bool SetFlashlightShadows(bool bFlashLightShadows);
	static bool SetForceFeedbackEnabled(bool ForceFeedbackEnabled);
	static bool SetForceFeedbackIntensity(float ForceFeedbackIntensity);
	static bool SetFoV(float FOV);
	static bool SetFreelookSensitivity(float Sensitivity);
	static bool SetGamepadAimAssistIntensity(const class FString& AimAssistIntensity);
	static bool SetGamepadAimSensitivityHorizontal(float GamepadAimSensitivityHorizontal);
	static bool SetGamepadAimSensitivityVertical(float GamepadAimSensitivityVertical);
	static bool SetGamepadInvertButtonLayout(bool bInvertButtonLayout);
	static bool SetGamepadInverted(bool bInvertVertical, bool bInvertHorizontal);
	static bool SetGamepadInvertStickLayout(bool bInvertStickLayout);
	static bool SetGamepadInvertTriggersLayout(bool bInvertTriggersLayout);
	static bool SetGamepadLookInnerDeadzone(float GamepadLookInnerDeadzone);
	static bool SetGamepadLookSensitivityHorizontal(float GamepadLookSensitivityHorizontal);
	static bool SetGamepadLookSensitivitySpeedUp(float GamepadLookSensitivitySpeedUp);
	static bool SetGamepadLookSensitivityVertical(float GamepadLookSensitivityVertical);
	static bool SetGamepadMovementInnerDeadzone(float GamepadMovementInnerDeadzone);
	static bool SetGamepadRadialMenuConfirmationPreset(EGamepadConfirmationPreset NewPreset);
	static bool SetGamepadRadialMenuUseLeftStick(bool UseLeftStick);
	static bool SetGamepadSwitchBumpersTriggersLayout(bool bSwitchBumpersTriggers);
	static bool SetGammaSetting(const float Gamma);
	static bool SetGyroActiveMode(const class FString& GyroActiveMode);
	static bool SetGyroHorizontalAimSensitivity(float GyroHorizontalAimSensitivity);
	static bool SetGyroHorizontalLookSensitivity(float GyroHorizontalLookSensitivity);
	static bool SetGyroInverted(bool bInvertGyroVertical, bool bInvertGyroHorizontal);
	static bool SetGyroVerticalAimSensitivity(float GyroVerticalAimSensitivity);
	static bool SetGyroVerticalLookSensitivity(float GyroVerticalLookSensitivity);
	static bool SetHostRegion(const struct FGameplayTag& RegionTag);
	static bool SetLastConnectedServerIP(const class FString& IP);
	static bool SetMicInputGain(float MicInputGain);
	static bool SetMouseInverted(bool bInvertVertical, bool bInvertHorizontal);
	static bool SetMouseSensitivity(float MouseSensitivity);
	static bool SetPreferredRegions(const struct FGameplayTagContainer& RegionsTagContainer);
	static bool SetPublicLobbyCooldown(int32 Seconds);
	static bool SetSendMapStatistics(bool bSendMapStatistics);
	static bool SetShellLifetime(float ShellLifeTime);
	static bool SetShowControls(bool bShowControls);
	static bool SetShowFPS(bool bShowFPS);
	static bool SetSpeakerIntensity(float SpeakerIntensity);
	static bool SetUIScaling(float Scale);
	static bool SetUseCommandMenuForGamepad(bool bUsesCommandMenu);
	static bool SetUseMeshpainting(bool bUseMeshPainting);
	static bool SetUseVerticalFOV(bool bUseVertical);
	static void SetVoiceType(EVoiceType InVoiceType);
	static void SetWeaponFieldOfView(float InFieldOfView);
	static bool SetWeaponFOVPreset(EWeaponFOVPreset NewPreset);
	static bool ShouldShowVersionOverlay();
	static class UFXSystemComponent* SpawnEmitterFxAgnostic(const class UObject* WorldContextObject, class UFXSystemAsset* Template, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, bool bAutoDestroy, EPSCPoolMethod PoolingMethod, bool bAutoActivate);
	static class UFXSystemComponent* SpawnEmitterFxAgnosticAttached(class UFXSystemAsset* Template, class USceneComponent* AttachToComponent, class FName AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, EAttachLocation LocationType, bool bAutoDestroy, EPSCPoolMethod PoolingMethod, bool bAutoActivate);
	static void ToggleFriendlyNameplates();
	static void ToggleGrenadeDrawDebug();
	static void ToggleShowOppositePlatformGraphicsOptions();
	static void TryToggleCameraMesh(const class AReadyOrNotCharacter* Character, bool bShow);
	static void UnloadCustomizationLevels(class UWorld* WorldContext);
	static void UpdateInteractableComponentsWorldSpaceActionPrompts(const class UObject* WorldContextObject, bool bEnableWorldSpaceActionPrompts);

	void ShowLoadoutOnMeshes(const struct FSavedLoadout& Loadout, class USkeletalMeshComponent* BodyMesh, class USkeletalMeshComponent* HeadMesh, class USkeletalMeshComponent* ArmorMesh, class USkeletalMeshComponent* ItemMesh, class UStaticMeshComponent* ItemMagMesh);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BpGameplayHelperLib")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BpGameplayHelperLib")
	}
	static class UBpGameplayHelperLib* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBpGameplayHelperLib>();
	}
};
DUMPER7_ASSERTS_UBpGameplayHelperLib;

// Class ReadyOrNot.ReadyOrNotSessionData
// 0x00B8 (0x00E0 - 0x0028)
class UReadyOrNotSessionData final : public USaveGame
{
public:
	class FString                                 SaveSlotName;                                      // 0x0028(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        UserIndex;                                         // 0x0038(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, int32>                    SavedTeamKillData;                                 // 0x0040(0x0050)(NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            BanReasonData;                                     // 0x0090(0x0050)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotSessionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotSessionData")
	}
	static class UReadyOrNotSessionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotSessionData>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotSessionData;

// Class ReadyOrNot.IntimidateNearbyCivilianActivity
// 0x0018 (0x0208 - 0x01F0)
class UIntimidateNearbyCivilianActivity final : public UBaseActivity
{
public:
	class ACyberneticCharacter*                   TargetCivilian;                                    // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1F8[0x10];                                     // 0x01F8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IntimidateNearbyCivilianActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IntimidateNearbyCivilianActivity")
	}
	static class UIntimidateNearbyCivilianActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIntimidateNearbyCivilianActivity>();
	}
};
DUMPER7_ASSERTS_UIntimidateNearbyCivilianActivity;

// Class ReadyOrNot.TocSpeechData
// 0x00B8 (0x00E8 - 0x0030)
class UTocSpeechData final : public UDataAsset
{
public:
	class USoundCue*                              CivilianIncapacitated;                             // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                              CivilianDead;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                              CivilianRestrained;                                // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                              SuspectIncapacitated;                              // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                              SuspectDead;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                              SuspectRestrained;                                 // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                              OfficerDown;                                       // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                              DOA;                                               // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SWATVictory;                                       // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SuspectVictory;                                    // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SWATInCustody;                                     // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SuspectInCustody_MP;                               // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SWATReinforcements;                                // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SuspectReinforcements;                             // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             BothTeamsReinforcements;                           // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SWATFriendlyFire;                                  // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SuspectFriendlyFire;                               // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             VIPEscorted;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             VIPExecuted;                                       // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SWATKilledVIP;                                     // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SuspectKilledVIP;                                  // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             VIPInCustody;                                      // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             VIPReleased;                                       // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TocSpeechData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TocSpeechData")
	}
	static class UTocSpeechData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTocSpeechData>();
	}
};
DUMPER7_ASSERTS_UTocSpeechData;

// Class ReadyOrNot.BpVideoSettingsLib
// 0x0000 (0x0028 - 0x0028)
class UBpVideoSettingsLib final : public UBlueprintFunctionLibrary
{
public:
	static bool ChangeScreenResolution(const int32 Width, const int32 Height, EWindowMode NewWindowMode);
	static void ForceReloadSettings();
	static class FText GenerateDlssQualityString(int32 Quality);
	static class FText GenerateFSRQualityString(int32 Quality);
	static class FText GenerateQualityString(int32 Quality);
	static bool GetAntiAliasingQuality(int32* AntiAliasing);
	static EWindowMode GetCurrentScreenMode();
	static class FString GetCurrentScreenResolution();
	static bool GetDepthOfFieldSetting(bool* bDoFEnabled);
	static bool GetDlssFrameGenerationSetting(int32* Setting);
	static class FText GetDLSSFrameGenerationUnsupportedReason();
	static bool GetDlssQuality(int32* Quality);
	static bool GetEffectsQuality(int32* Effects);
	static bool GetFrameRateLimit(int32* FrameRateLimit, bool* bEnabled);
	static bool GetFSRQuality(int32* Quality);
	static bool GetGlobalIlluminationQuality(int32* GlobalIllumination);
	static int32 GetGraphicsPresetIndex();
	static bool GetInterfaceAspectRatio(float* OutAspectRatio);
	static bool GetMotionBlurEnabled(bool* bEnabled);
	static bool GetMotionBlurStrength(float* Strength);
	static int32 GetNumDlssQualityOptions();
	static bool GetOverallVideoQuality(int32* Quality);
	static bool GetPerObjectShadowsEnabled(bool* bPerObjectShadowsEnabled);
	static bool GetPostProcessQuality(int32* PostProcess);
	static bool GetRaytracingSettings(bool* bRTXEnabled, bool* bRTXReflectionsEnabled, bool* bRTXShadowsEnabled, bool* bRTXAmbientOcclusionEnabled, bool* bRTXGlobalIllumination, bool* bRTXTranslucency);
	static bool GetReflectionQuality(int32* Reflections);
	static bool GetReflexEnabled(uint8* ReflexMode, bool* bFlashIndicatorEnabled);
	static void GetReflexLatency(bool* bGameToRenderLatencyEnabled, float* GametoRenderLatency, bool* bGameLatencyEnabled, float* GameLatencyInMS, bool* bRenderLatencyEnabled, float* RenderLatencyInMS);
	static bool GetReflexLatencyOptions(bool* bGameToRenderLatencyEnabled, bool* bGameLatencyEnabled, bool* bRenderLatencyEnabled);
	static bool GetResolutionScaling(float* ResolutionScaling);
	static bool GetShadowQuality(int32* Shadow);
	static bool GetSupportedScreenResolutions(TArray<class FString>* Resolutions);
	static bool GetTextureQuality(int32* Texture);
	static bool GetVideoQualitySettings(int32* AntiAliasing, int32* Effects, int32* PostProcess, float* ResolutionScaling, int32* Shadow, int32* Texture, int32* ViewDistance, int32* GlobalIllumination, int32* Reflections);
	static bool GetVideoQualitySettingsAsString(class FText* OverallSetting, class FText* AntiAliasing, class FText* Effects, class FText* PostProcess, class FText* Shadow, class FText* Texture, class FText* ViewDistance, class FText* GlobalIllumination, class FText* Reflections);
	static bool GetViewDistanceQuality(int32* ViewDistance);
	static bool GetVSyncEnabled(bool* bEnabled);
	static bool GetWorldDecalsEnabled(bool* bEnabled, float* FadeDistance, float* Density);
	static bool IsDLSSFrameGenerationSupported();
	static bool IsNvidiaReflexEnabled();
	static bool SaveVideoModeAndQuality();
	static bool SetDepthofFieldSetting(bool bDoFEnabled);
	static bool SetDlssFrameGenerationSetting(int32 Setting);
	static bool SetDlssQuality(int32 Quality);
	static bool SetFrameRateLimit(int32 FrameRateLimit, bool bEnabled);
	static bool SetFSRQuality(int32 Quality);
	static bool SetGraphicsPresetIndex(const int32 GraphicsPresetIndex);
	static bool SetInterfaceAspectRatio(float InAspectRatio);
	static bool SetMotionBlurEnabled(bool bEnabled);
	static bool SetMotionBlurStrength(float Strength);
	static bool SetOverallVideoQuality(int32 Quality);
	static bool SetPerObjectShadowsEnabled(bool bPerObjectShadowsEnabled);
	static bool SetRaytracingSettings(bool bRTXEnabled, bool bRTXReflectionsEnabled, bool bRTXShadowsEnabled, bool bRTXAmbientOcclusionEnabled, bool bRTXGlobalIllumination, bool bRTXTranslucency);
	static bool SetReflexEnabled(uint8 ReflexMode, bool bFlashIndicatorEnabled);
	static bool SetReflexLatencyOptions(bool bGameToRenderLatencyEnabled, bool bGameLatencyEnabled, bool bRenderLatencyEnabled);
	static bool SetScreenResolution(const int32 Width, const int32 Height, EWindowMode NewWindowMode);
	static bool SetVideoQualitySettings(const int32 AntiAliasing, const int32 Effects, const int32 PostProcess, const float ResolutionScaling, const int32 Shadow, const int32 Texture, const int32 ViewDistance, const int32 GlobalIllumination, const int32 Reflections);
	static bool SetVSyncEnabled(bool bEnabled);
	static bool SetWorldDecalEnabled(bool bEnabled, float FadeDistance, float Density);
	static bool SupportsRayTracing();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BpVideoSettingsLib")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BpVideoSettingsLib")
	}
	static class UBpVideoSettingsLib* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBpVideoSettingsLib>();
	}
};
DUMPER7_ASSERTS_UBpVideoSettingsLib;

// Class ReadyOrNot.TrapActor
// 0x00D8 (0x0370 - 0x0298)
class ATrapActor : public AActor
{
public:
	uint8                                         Pad_298[0x28];                                     // 0x0298(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   TrapMeshComponent;                                 // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODAudioComponent*                    TrapActivateAudioComponent;                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractableComponent*                 InteractableComponent;                             // 0x02D0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScoringComponent*                      ScoringComponent;                                  // 0x02D8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                       SplineComponent;                                   // 0x02E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCableComponent*                        CutCableComponent1;                                // 0x02E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCableComponent*                        CutCableComponent2;                                // 0x02F0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                          TripWireTriggerComponent;                          // 0x02F8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAIPerceptionStimuliSourceComponent*    PerceptionStimuliComp;                             // 0x0300(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        TrapRoot;                                          // 0x0308(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 AttachedActor;                                     // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             TriggeredEvent;                                    // 0x0318(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TrapName;                                          // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETrapType                                     TrapType;                                          // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETrapState                                    TrapStatus;                                        // 0x0331(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanUseMultitoolWhenActivated;                     // 0x0332(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInitializeTrapOnBeginPlay;                        // 0x0333(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CableMesh;                                         // 0x0338(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     CableMaterial;                                     // 0x0340(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ATrapActor* Trap, class AReadyOrNotCharacter* TriggeredBy)> TrapTriggered; // 0x0348(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                   ForceFeedbackEffect;                               // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackAttenuation*              ForceFeedbackAttenuation;                          // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Multicast_OnTrapDisarmed();
	void Multicast_OnTrapTriggered(class AReadyOrNotCharacter* TriggeredBy);
	void OnTrapDisarmed(class AReadyOrNotCharacter* DisarmedBy);
	void OnTrapTriggered(class AReadyOrNotCharacter* TriggeredBy);
	void Server_OnTrapDisarmed();
	void Server_OnTrapTriggered(class AReadyOrNotCharacter* TriggeredBy);
	void TrapDeInit();
	void TrapInit();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrapActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrapActor")
	}
	static class ATrapActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATrapActor>();
	}
};
DUMPER7_ASSERTS_ATrapActor;

// Class ReadyOrNot.TrapActorAttachedToDoor
// 0x0090 (0x0400 - 0x0370)
class ATrapActorAttachedToDoor : public ATrapActor
{
public:
	class ADoor*                                  AttachedToDoor;                                    // 0x0370(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WireYPosition;                                     // 0x0378(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CableTransform;                                    // 0x0380(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USplineMeshComponent*>           CableMeshComponents;                               // 0x03E0(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                         CurveStrength;                                     // 0x03F0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MappedSplineLocation;                              // 0x03F4(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bChunk1Destroyed : 1;                              // 0x03F8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bChunk2Destroyed : 1;                              // 0x03F8(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSubdoorChunk1Destroyed : 1;                       // 0x03F8(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSubdoorChunk2Destroyed : 1;                       // 0x03F8(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrapActorAttachedToDoor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrapActorAttachedToDoor")
	}
	static class ATrapActorAttachedToDoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATrapActorAttachedToDoor>();
	}
};
DUMPER7_ASSERTS_ATrapActorAttachedToDoor;

// Class ReadyOrNot.MainMenuGM
// 0x00D0 (0x0408 - 0x0338)
class AMainMenuGM : public AGameModeBase
{
public:
	class UFMODEvent*                             MainMenuMusic;                                     // 0x0338(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MainMenuAmbience;                                  // 0x0340(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_348[0x40];                                     // 0x0348(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bComplete, class FText OutMessage, const TArray<struct FBlueprintSessionResult>& SessionResult)> OnUpdateSessionSearch; // 0x0388(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bConnectionLost)> OnConnectionChanged;                        // 0x0398(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A8[0x40];                                     // 0x03A8(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            AuthenticationMenu;                                // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F0[0x18];                                     // 0x03F0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool HasCompletedTraining();
	static bool HasGameVersionBeenAcknowledged(EGameVersionRestriction GameVersionRestriction);
	static void SetCommanderPopupFlag(bool bPopup);
	static void SetCrossplayPopupFlag(bool bPopup);
	static void SetGameVersionAcknowledged(EGameVersionRestriction GameVersionRestriction);
	static void SetQuickPlayPopupFlag(bool bPopup);
	static bool ShouldShowCommanderModePopup();
	static bool ShouldShowCrossplayPopup();
	static bool ShouldShowQuickPlayPopup();

	void CancelSessionSearch();
	bool CanContinueCommanderMode();
	void ContinueCommanderMode();
	void CreateRestartWidget();
	void FindNextSessionList();
	void FindOnlineSession(bool bNewSearch, bool bPVPSession);
	void GoToCommanderMode(int32 ProfileSlot, bool bIronmanMode, bool bTutorialMode, const struct FGameplayTag& SelectedDifficulty);
	void GoToLobby(bool bOnlineMode, bool bFriendsOnly, ECrossplayOverride CrossplayOverride);
	void GoToTraining();
	bool IsSearchingForSession();
	void JoinSession(const struct FBlueprintSessionResult& Session);
	bool LoadMainMenuIfInStartupLevelOnPS5();
	void OnBanStatusChecked(const class FString& SteamId, bool bIsBanned, const class FString& BanReason, bool bIsMySteamId);
	void OnDestroySessionBeforeStartingLobby();
	void OnFindSessionFailed(const TArray<struct FBlueprintSessionResult>& Results);
	void OnFindSessionSuccess(const TArray<struct FBlueprintSessionResult>& Results);
	void OnLobbyFailed();
	void OnLobbySuccess();
	void OnNetworkConnectionChanged(bool bIsMultiplayerConnectionAvailable);
	void OnTrainingSuccess();
	void QuickPlayConsole();
	void ShowMainMenuMsg();
	void ShowMessageDisplayBox(const class FString& MessageText, const class FString& ButtonText, const bool QuitOnPress, const bool bCloseExistingMsgBoxIfOpen);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MainMenuGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MainMenuGM")
	}
	static class AMainMenuGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMainMenuGM>();
	}
};
DUMPER7_ASSERTS_AMainMenuGM;

// Class ReadyOrNot.BreakableGlass
// 0x0020 (0x02B8 - 0x0298)
class ABreakableGlass final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bCanSoundPass;                                     // 0x02A0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             TPMeleeImpactFMODEvent;                            // 0x02A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                        MeleeImpactParticle;                               // 0x02B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void ConvertHitAndExecute(const struct FHitResult& Hit, float Damage);
	void DestructibleHit(const struct FVector& Location);
	void FirstHitPositionObject(int32 FirstPositionBox, int32 TextureY, int32 TextureX, const struct FVector& HitPosition, const struct FVector& ObjectiveDirection, float DamageRadius, bool bFirstHitCanBreakIt, float CharacterVelocityToBreak);
	void Multicast_ConvertHitAndExecute(int32 FirstPositionBox, int32 TextureX, int32 TextureY, const struct FVector_NetQuantize& HitPosition, const struct FVector_NetQuantize& Direction, float Damage);
	void Multicast_DestructibleHit(const struct FVector_NetQuantize& Location);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BreakableGlass")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BreakableGlass")
	}
	static class ABreakableGlass* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABreakableGlass>();
	}
};
DUMPER7_ASSERTS_ABreakableGlass;

// Class ReadyOrNot.MapActorComponent
// 0x0140 (0x03E0 - 0x02A0)
class UMapActorComponent final : public USceneComponent
{
public:
	uint8                                         bCondition : 1;                                    // 0x02A0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnabled : 1;                                      // 0x02A0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UMapActorWidget>            MapActorWidgetClass;                               // 0x02A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   IconText;                                          // 0x02B0(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                           IconTextColor;                                     // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            IconBrush;                                         // 0x02E0(0x00D0)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                           IconColor;                                         // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bUseActorRotation : 1;                             // 0x03C0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotationOffset;                                    // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAddedToMap;                                       // 0x03C8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapActorIconWidget*                    MapIconWidget;                                     // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D8[0x8];                                      // 0x03D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisableMapActor();
	void EnableMapActor();
	void SetIconColor(const struct FLinearColor& InIconColor);
	void SetIconText(const class FText& InIconText);
	void SetIconTextColor(const struct FLinearColor& InIconTextColor);

	class FText GetIconText() const;
	bool IsUsingActorRotation() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MapActorComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MapActorComponent")
	}
	static class UMapActorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMapActorComponent>();
	}
};
DUMPER7_ASSERTS_UMapActorComponent;

// Class ReadyOrNot.BringOrderToChaos
// 0x0000 (0x0320 - 0x0320)
class ABringOrderToChaos final : public AObjective
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BringOrderToChaos")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BringOrderToChaos")
	}
	static class ABringOrderToChaos* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABringOrderToChaos>();
	}
};
DUMPER7_ASSERTS_ABringOrderToChaos;

// Class ReadyOrNot.BuildingTrigger_Incrimination
// 0x0010 (0x0348 - 0x0338)
class ABuildingTrigger_Incrimination final : public ABuildingTrigger
{
public:
	TArray<class AIncriminationClueSpawnPoint*>   ClueSpawnPoints;                                   // 0x0338(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BuildingTrigger_Incrimination")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BuildingTrigger_Incrimination")
	}
	static class ABuildingTrigger_Incrimination* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABuildingTrigger_Incrimination>();
	}
};
DUMPER7_ASSERTS_ABuildingTrigger_Incrimination;

// Class ReadyOrNot.Referendum
// 0x0088 (0x0320 - 0x0298)
class AReferendum : public AActor
{
public:
	class FText                                   ReferendumName;                                    // 0x0298(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   ReferendumDescription;                             // 0x02B0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         ReferendumTime;                                    // 0x02C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReferendumHoldingTime;                             // 0x02CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         YesVotes;                                          // 0x02D0(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NoVotes;                                           // 0x02D4(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReferendumTimeRemaining;                           // 0x02D8(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReferendumHoldingTimeRemaining;                    // 0x02DC(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReferendumRunning;                                // 0x02E0(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReferendumWaitingToTakeEffect;                    // 0x02E1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerState*                 ReferendumCaller;                                  // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotPlayerController*>    YesVoters;                                         // 0x02F0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotPlayerController*>    NoVoters;                                          // 0x0300(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotPlayerController*>    EligibleVoters;                                    // 0x0310(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	void CastedNoVote(class AReadyOrNotPlayerController* Voter);
	void CastedYesVote(class AReadyOrNotPlayerController* Voter);
	class FText GetHudDescription();
	void Multicast_AnnounceNoVote(class AReadyOrNotPlayerState* Voter);
	void Multicast_AnnounceVoteFailed();
	void Multicast_AnnounceVotePassed();
	void Multicast_AnnounceVoteStarted(class AReadyOrNotPlayerState* CallingVoter);
	void Multicast_AnnounceYesVote(class AReadyOrNotPlayerState* Voter);
	void OnAnnounceNoVote(class AReadyOrNotPlayerState* Voter);
	void OnAnnounceVoteFailed();
	void OnAnnounceVotePassed();
	void OnAnnounceVoteStarted(class AReadyOrNotPlayerState* CallingVoter);
	void OnAnnounceYesVote(class AReadyOrNotPlayerState* Voter);
	void OnReferendumPassed();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Referendum")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Referendum")
	}
	static class AReferendum* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReferendum>();
	}
};
DUMPER7_ASSERTS_AReferendum;

// Class ReadyOrNot.MapReferendum
// 0x0010 (0x0330 - 0x0320)
class AMapReferendum final : public AReferendum
{
public:
	class FString                                 MapURL;                                            // 0x0320(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MapReferendum")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MapReferendum")
	}
	static class AMapReferendum* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMapReferendum>();
	}
};
DUMPER7_ASSERTS_AMapReferendum;

// Class ReadyOrNot.BulletProjectile
// 0x0118 (0x0430 - 0x0318)
class ABulletProjectile : public ADamageProjectile
{
public:
	class UStaticMeshComponent*                   BulletMesh;                                        // 0x0318(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_320[0x18];                                     // 0x0320(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              FiredFromWeapon;                                   // 0x0338(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerCharacter*                       FiredFromPlayer;                                   // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HitAngleMultiplier;                                // 0x0348(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RequiredAngleToDeflect;                            // 0x034C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PercentageToDeflect;                               // 0x0350(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DeflectionAmount;                                  // 0x0354(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpeedLossMultiplierPerSurface;                     // 0x0360(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageLossMultiplierPerSurface;                    // 0x0364(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VelocityRequiredToRespawn;                         // 0x0368(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDrawBlood;                                        // 0x036C(0x0001)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36D[0x1B];                                     // 0x036D(0x001B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BulletProjectileScale;                             // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DecalScale;                                        // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAffectedByGravity;                                // 0x03A4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              BulletWizzSound;                                   // 0x03A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinimumDistanceForWizz;                            // 0x03B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         requiredSpeedForWizz;                              // 0x03B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DebugLineSize;                                     // 0x03B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AImpactEffect>              ExitEffects;                                       // 0x03C0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AImpactEffect>              RicochetEffects;                                   // 0x03C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        RichochetParticle;                                 // 0x03D0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ArmorPiercing;                                     // 0x03D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDestroyOnHit;                                     // 0x03DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAttachOnHit;                                      // 0x03DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3DE[0x2];                                      // 0x03DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InitialSpeed;                                      // 0x03E0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                InitialLocation;                                   // 0x03E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OwningActor;                                       // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LockIntegrityDamage;                               // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UDamageType>                InitialDamageType;                                 // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LifeSpan;                                          // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Drag;                                              // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Wobble;                                            // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InitialWobbleDelay;                                // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PhysicsImpulseMultiplier;                          // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42C[0x1];                                      // 0x042C(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bCanPenetrate;                                     // 0x042D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bServerValidated;                                  // 0x042E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42F[0x1];                                      // 0x042F(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Multicast_ApplyForceToHitObjects(const struct FHitResult& Hit, const struct FVector& Velocity);
	void Multicast_AttachToComponent(const struct FVector& NewLocation, class USceneComponent* Component, class FName BoneName);
	void Multicast_OnRespawnProjectile(const struct FVector_NetQuantize100& RespawnLocation, const struct FVector_NetQuantize100& RespawnRotation, float NewSpeed, float NewDamage, EProjectileReaction ProjectileReaction);
	void Multicast_SimulatePhysics(bool bSimulate);
	void OnDeflect(const struct FHitResult& DeflectionHit);
	void OnMeshHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnProjectileValidated();
	void OnRep_UpdateMesh();
	void OnRespawnProjectile(const struct FVector& RespawnLocation, const struct FRotator& RespawnRotation, float NewSpeed, float NewDamage, EProjectileReaction ProjectileReaction);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BulletProjectile")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BulletProjectile")
	}
	static class ABulletProjectile* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABulletProjectile>();
	}
};
DUMPER7_ASSERTS_ABulletProjectile;

// Class ReadyOrNot.Meleeable
// 0x0000 (0x0000 - 0x0000)
class IMeleeable final
{
public:
	void OnMelee(class AReadyOrNotCharacter* Attacker, const struct FHitResult& Hit);

	class UParticleSystem* GetMeleeImpactParticle() const;
	class UFMODEvent* GetMeleeImpactSound() const;
	bool ShouldPlayMeleeEffectsLocally() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Meleeable")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Meleeable")
	}
	static class IMeleeable* GetDefaultObj()
	{
		return GetDefaultObjImpl<IMeleeable>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IMeleeable;

// Class ReadyOrNot.BulletTracer
// 0x0058 (0x02F0 - 0x0298)
class ABulletTracer final : public AActor
{
public:
	class USceneComponent*                        RootComp;                                          // 0x0298(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A0[0x38];                                     // 0x02A0(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               ParticleComponent;                                 // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        TracerParticle;                                    // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        SmokeParticle;                                     // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BulletTracer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BulletTracer")
	}
	static class ABulletTracer* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABulletTracer>();
	}
};
DUMPER7_ASSERTS_ABulletTracer;

// Class ReadyOrNot.Pepperspray
// 0x0080 (0x0D00 - 0x0C80)
class APepperspray : public ABaseItem
{
public:
	TSubclassOf<class UDamageType>                DamageType;                                        // 0x0C78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C80[0x8];                                      // 0x0C80(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               SprayParticleComponent;                            // 0x0C88(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAmmoComponent*                         AmmoComponent;                                     // 0x0C90(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                        ParticleStart;                                     // 0x0C98(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                        ParticleEnd;                                       // 0x0CA0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                        ParticleImpact;                                    // 0x0CA8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                        ParticleRunningOut;                                // 0x0CB0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                        ParticleSprayLoop;                                 // 0x0CB8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*               ParticleSprayLoopComponent;                        // 0x0CC0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             FMODSprayEvent;                                    // 0x0CC8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             FMODSprayEmptyEvent;                               // 0x0CD0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             FMODImpactEvent;                                   // 0x0CD8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             FMODSprayLowAmmoEvent;                             // 0x0CE0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprayDistance;                                     // 0x0CE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bSpraying : 1;                                     // 0x0CEC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_CED[0x3];                                      // 0x0CED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DurationFrontTorso;                                // 0x0CF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DurationBackFace;                                  // 0x0CF4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DurationFrontFace;                                 // 0x0CF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PepperSprayAbuseDebounce;                          // 0x0CFC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnDepletedPeppersprayAmmo();
	void OnLowPeppersprayAmmo(float CurrentResource);
	void OnRep_Spraying();
	void PlaySprayParticleEffect(bool bRunningOutEffect);
	void PlaySpraySoundEffect(bool bRunningOutEffect);
	void Server_StartSpraying();
	void Server_StopSpraying();
	void StartSpraying();
	void StopSpraying();
	void StopSprayParticleEffect();
	void StopSpraySoundEffect();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Pepperspray")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Pepperspray")
	}
	static class APepperspray* GetDefaultObj()
	{
		return GetDefaultObjImpl<APepperspray>();
	}
};
DUMPER7_ASSERTS_APepperspray;

// Class ReadyOrNot.CachedImagesDownloadProvider
// 0x0000 (0x0040 - 0x0040)
class UCachedImagesDownloadProvider final : public UCachedImagesProvider
{
public:
	void OnRequestCompleted(const class FString& RequestedURL, class UTexture2D* ResultedTexture);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CachedImagesDownloadProvider")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CachedImagesDownloadProvider")
	}
	static class UCachedImagesDownloadProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCachedImagesDownloadProvider>();
	}
};
DUMPER7_ASSERTS_UCachedImagesDownloadProvider;

// Class ReadyOrNot.CachedImagesMemoryProvider
// 0x0058 (0x0098 - 0x0040)
class UCachedImagesMemoryProvider final : public UCachedImagesProvider
{
public:
	TMap<class FString, struct FMemoryCachedImageEntry> CachedImages;                                // 0x0040(0x0050)(NativeAccessSpecifierPrivate)
	int32                                         MaxMemoryCachedImages;                             // 0x0090(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CachedImagesMemoryProvider")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CachedImagesMemoryProvider")
	}
	static class UCachedImagesMemoryProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCachedImagesMemoryProvider>();
	}
};
DUMPER7_ASSERTS_UCachedImagesMemoryProvider;

// Class ReadyOrNot.PickupEvidenceByTag
// 0x0008 (0x0328 - 0x0320)
class APickupEvidenceByTag final : public AObjective
{
public:
	class FName                                   EvidenceTag;                                       // 0x0320(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static bool HasCollectedEvidenceByTag(const class FName& Tag);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PickupEvidenceByTag")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PickupEvidenceByTag")
	}
	static class APickupEvidenceByTag* GetDefaultObj()
	{
		return GetDefaultObjImpl<APickupEvidenceByTag>();
	}
};
DUMPER7_ASSERTS_APickupEvidenceByTag;

// Class ReadyOrNot.CachedPlayerData
// 0x0090 (0x00B8 - 0x0028)
class UCachedPlayerData final : public UObject
{
public:
	uint8                                         Pad_28[0x88];                                      // 0x0028(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxRequestsPerSecond;                              // 0x00B0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         MaxPlayersQueryBatch;                              // 0x00B4(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CachedPlayerData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CachedPlayerData")
	}
	static class UCachedPlayerData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCachedPlayerData>();
	}
};
DUMPER7_ASSERTS_UCachedPlayerData;

// Class ReadyOrNot.CampaignData
// 0x0108 (0x0138 - 0x0030)
class UCampaignData final : public UPrimaryDataAsset
{
public:
	class FText                                   CampaignTitle;                                     // 0x0030(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   CampaignAuthor;                                    // 0x0048(0x0018)(Edit, NativeAccessSpecifierPublic)
	class FText                                   CampaignDescription;                               // 0x0060(0x0018)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCampaignData>           RequiredCampaign;                                  // 0x0078(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGameVersionRestriction                       VersionRestriction;                                // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  StationLevelOverride;                              // 0x00A8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAvailableInCommanderMode;                         // 0x00D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableLevelProgressionInQuickPlay;                // 0x00D1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableLevelProgressionInCommanderMode;            // 0x00D2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Levels;                                            // 0x00D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   CampaignCompletedWidget;                           // 0x00E8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   CampaignUnlockedWidget;                            // 0x0110(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CampaignData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CampaignData")
	}
	static class UCampaignData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCampaignData>();
	}
};
DUMPER7_ASSERTS_UCampaignData;

// Class ReadyOrNot.PingActor
// 0x0108 (0x03A0 - 0x0298)
class APingActor final : public AActor
{
public:
	class AActor*                                 PingedActor;                                       // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            IconBrush;                                         // 0x02A0(0x00D0)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	class FText                                   PingText;                                          // 0x0370(0x0018)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	class UObjectiveMarkerComponent*              ObjectiveMarkerComponent;                          // 0x0388(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMapActorComponent*                     MapActorComponent;                                 // 0x0390(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_398[0x8];                                      // 0x0398(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_SetIconBrush();
	void OnRep_SetPingText();
	void Setup(class AActor* InActor);

	void HideObjectiveMarker() const;
	void ShowObjectiveMarker() const;
	void ToggleObjectiveMarkerVisibility() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PingActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PingActor")
	}
	static class APingActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<APingActor>();
	}
};
DUMPER7_ASSERTS_APingActor;

// Class ReadyOrNot.CancellableInteractionsData
// 0x0010 (0x00D0 - 0x00C0)
class UCancellableInteractionsData final : public UInteractionsData
{
public:
	class UAnimMontage*                           DriverMontageCancel;                               // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           DriverMontageCancel_FP;                            // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CancellableInteractionsData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CancellableInteractionsData")
	}
	static class UCancellableInteractionsData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCancellableInteractionsData>();
	}
};
DUMPER7_ASSERTS_UCancellableInteractionsData;

// Class ReadyOrNot.CanPlaceC2On
// 0x0000 (0x0000 - 0x0000)
class ICanPlaceC2On final
{
public:
	void C2StartPlacement(class AC2Explosive* C2);
	void C2StopPlacement(class AC2Explosive* C2);
	bool CanPlaceC2OnNow(class APlayerCharacter* C2Owner, class AC2Explosive* C2, const struct FHitResult& Hit);
	struct FVector GetPlacementLocation(const struct FHitResult& TraceHit);
	struct FRotator GetPlacementRotation(const struct FHitResult& TraceHit);
	void OnC2Detonated(class APlacedC2Explosive* C2);
	void OnC2Removed(class APlacedC2Explosive* C2);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CanPlaceC2On")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CanPlaceC2On")
	}
	static class ICanPlaceC2On* GetDefaultObj()
	{
		return GetDefaultObjImpl<ICanPlaceC2On>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ICanPlaceC2On;

// Class ReadyOrNot.WorldDataGenerator
// 0x0070 (0x0308 - 0x0298)
class AWorldDataGenerator final : public AInfo
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0298(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ADoor*>                          VisitedDoors;                                      // 0x02A0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B0[0x1];                                      // 0x02B0(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bHasWorldEverBeenGenerated;                        // 0x02B1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B2[0x6];                                      // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AThreatAwarenessActor*>          IgnoredExitThreats;                                // 0x02B8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C8[0x1];                                      // 0x02C8(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bDoorwaysBlocked;                                  // 0x02C9(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CA[0x6];                                      // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRoomGenData                           RoomData;                                          // 0x02D0(0x0020)(Edit, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F0[0x18];                                     // 0x02F0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BlockAllDoorways();
	void CalculateAllExits();
	void ClearNullReferences();
	void DestroyAllStackups();
	void DestroyAllThreats();
	void DestroyCoverPoints();
	void GenerateAllDoorClearPoints();
	void GenerateAllDoorPositions();
	void GenerateAllDoorThreatAwarenessActors();
	void GenerateCoverPoints();
	void GenerateRooms();
	void GenerateStackUpPoints();
	void GenerateWorld();
	void GenerateWorldThreatAwarenessActors();
	void ReportAllUnreachableSpawns();
	void UnblockAllDoorways();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WorldDataGenerator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WorldDataGenerator")
	}
	static class AWorldDataGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWorldDataGenerator>();
	}
};
DUMPER7_ASSERTS_AWorldDataGenerator;

// Class ReadyOrNot.WorldBuildingActivity
// 0x00B0 (0x02A0 - 0x01F0)
class UWorldBuildingActivity : public UBaseActivity
{
public:
	bool                                          bShouldHolsterWeapon;                              // 0x01F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldSurrenderFromActivity;                      // 0x01F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRequireRotationMatch;                             // 0x01F2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F3[0x25];                                     // 0x01F3(0x0025)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               FinalRotationOffset;                               // 0x0218(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bOneShotAnimationDataTable;                        // 0x0230(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TableMontageName;                                  // 0x0238(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          Loop;                                              // 0x0248(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           MontageStart;                                      // 0x0250(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           MontageEnd;                                        // 0x0258(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           MontageAbruptEnd;                                  // 0x0260(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 StartActivitySpeech;                               // 0x0268(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 FinishActivitySpeech;                              // 0x0278(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           TableMontageAnim;                                  // 0x0288(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_290[0x10];                                     // 0x0290(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnterAbruptEndState();
	void EnterCompleteState();
	void EnterEndState();
	void EnterLoopState();
	void EnterMoveToState();
	void EnterStartState();
	void SetRotation(const struct FRotator& NewRotator);
	void TickLoopState(float DeltaTime, float Uptime);
	void TickMoveToState(float DeltaTime, float Uptime);

	struct FRotator GetRotationOffset() const;
	bool IsSetupCorrectly() const;
	bool ShouldComplete() const;
	bool ShouldEnd() const;
	bool ShouldEndAbruptly() const;
	bool ShouldLoop() const;
	bool ShouldStart() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WorldBuildingActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WorldBuildingActivity")
	}
	static class UWorldBuildingActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWorldBuildingActivity>();
	}
};
DUMPER7_ASSERTS_UWorldBuildingActivity;

// Class ReadyOrNot.PlaceTrapActivity
// 0x0010 (0x02B0 - 0x02A0)
class UPlaceTrapActivity final : public UWorldBuildingActivity
{
public:
	class ADoor*                                  Door;                                              // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A8[0x8];                                      // 0x02A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnTrapPlacementInterrupted();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlaceTrapActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlaceTrapActivity")
	}
	static class UPlaceTrapActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlaceTrapActivity>();
	}
};
DUMPER7_ASSERTS_UPlaceTrapActivity;

// Class ReadyOrNot.CanUseMultitoolOn
// 0x0000 (0x0000 - 0x0000)
class ICanUseMultitoolOn final
{
public:
	bool CanCancelMultitoolAction();
	bool CanUseMultitoolNow(class AReadyOrNotCharacter* ToolOwner, class AMultitool* Tool, const struct FHitResult& TraceHit);
	void Client_FinishedUsingMultitool(class AReadyOrNotCharacter* ToolOwner);
	float GetMultitoolUseTime();
	EMultitoolFunctions GetMultitoolUseType();
	void Server_FinishedUsingMultitool(class AReadyOrNotCharacter* ToolOwner);

	bool ShouldInterrupt() const;
	bool ShouldOperate() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CanUseMultitoolOn")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CanUseMultitoolOn")
	}
	static class ICanUseMultitoolOn* GetDefaultObj()
	{
		return GetDefaultObjImpl<ICanUseMultitoolOn>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ICanUseMultitoolOn;

// Class ReadyOrNot.WallHoleTraversal
// 0x0268 (0x0500 - 0x0298)
class AWallHoleTraversal final : public AActor
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bEnabled : 1;                                      // 0x02A0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name_0;                                            // 0x02A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class AStaticMeshActor>> IgnoredMeshActors;                                // 0x02B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         CooldownAfterUse;                                  // 0x02C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NavLinkProxyDistance;                              // 0x02CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             EntryTriggerBoxTransform;                          // 0x02D0(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                EntryTriggerBoxExtent;                             // 0x0330(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ExitTriggerBoxTransform;                           // 0x0350(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ExitTriggerBoxExtent;                              // 0x03B0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           EntryAnim;                                         // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           LoopAnim;                                          // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           ExitAnim;                                          // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AAIController*                          OccupiedByController;                              // 0x03E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ANavLinkProxy*                          NavLinkProxy;                                      // 0x03E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class AController*, float>               CooldownMap;                                       // 0x03F0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_440[0xC0];                                     // 0x0440(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddCooldownFor(class AController* InController, float InCooldownTime);
	void TestForMeshes();

	bool IsCooldownActiveFor(const class AController* InController) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WallHoleTraversal")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WallHoleTraversal")
	}
	static class AWallHoleTraversal* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWallHoleTraversal>();
	}
};
DUMPER7_ASSERTS_AWallHoleTraversal;

// Class ReadyOrNot.CaptureTheFlagGS
// 0x0018 (0x0940 - 0x0928)
class ACaptureTheFlagGS : public AReadyOrNotGameState
{
public:
	class ACTF_Flag*                              Flag;                                              // 0x0928(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerCharacter*                       FlagBearer;                                        // 0x0930(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeamType                                     FlagBearerTeam;                                    // 0x0938(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bFlagCaptured : 1;                                 // 0x0939(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bGameWon : 1;                                      // 0x0939(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_93A[0x6];                                      // 0x093A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_FlagStatus();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CaptureTheFlagGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CaptureTheFlagGS")
	}
	static class ACaptureTheFlagGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACaptureTheFlagGS>();
	}
};
DUMPER7_ASSERTS_ACaptureTheFlagGS;

// Class ReadyOrNot.WorldAction
// 0x0098 (0x0330 - 0x0298)
class AWorldAction final : public AActor
{
public:
	bool                                          bIsEnabled;                                        // 0x0298(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UWorldActionActivity>       Activity;                                          // 0x02A0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAIActionGateData>              Gates;                                             // 0x02A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bMoveTo;                                           // 0x02B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDoOnce;                                           // 0x02B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BA[0x2];                                      // 0x02BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxDistanceToConsider;                             // 0x02BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              MinMaxCooldownTime;                                // 0x02C0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseWhitelist;                                     // 0x02D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class AAISpawn>>        WhitelistedSpawns;                                 // 0x02D8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  EventsToFire;                                      // 0x02E8(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bAllowSuspicious;                                  // 0x0308(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowUnalert;                                     // 0x0309(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowAlert;                                       // 0x030A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30B[0x5];                                      // 0x030B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class AWorldAction>>    NextWorldActions;                                  // 0x0310(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)
	FMulticastSparseDelegateProperty_             OnWorldActionUsed;                                 // 0x0320(0x0001)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_321[0xF];                                      // 0x0321(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WorldAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WorldAction")
	}
	static class AWorldAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWorldAction>();
	}
};
DUMPER7_ASSERTS_AWorldAction;

// Class ReadyOrNot.MissionSelectLevel
// 0x00F8 (0x0120 - 0x0028)
class UMissionSelectLevel final : public UObject
{
public:
	TSoftObjectPtr<class UWorld>                  PreviewLevel;                                      // 0x0028(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLocked;                                         // 0x0050(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBasicLevelStats                       Stats;                                             // 0x0054(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   Name_0;                                            // 0x0068(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   FriendlyName;                                      // 0x0070(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   Nickname;                                          // 0x0088(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Image;                                             // 0x00A0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x00C8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   Location;                                          // 0x00E0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   TimeOfDay;                                         // 0x00F8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FEntryPoint>                    EntryPoints;                                       // 0x0110(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MissionSelectLevel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MissionSelectLevel")
	}
	static class UMissionSelectLevel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionSelectLevel>();
	}
};
DUMPER7_ASSERTS_UMissionSelectLevel;

// Class ReadyOrNot.ChallengeManager
// 0x0018 (0x0048 - 0x0030)
class UChallengeManager final : public UWorldSubsystem
{
public:
	TArray<class UChallenge*>                     Challenges;                                        // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UReadyOrNotProfile*                     Profile;                                           // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void InitChallenges(class AReadyOrNotGameState* GameState, const struct FLevelDataLookupTable& LevelData);
	void SaveChallenges();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ChallengeManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ChallengeManager")
	}
	static class UChallengeManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallengeManager>();
	}
};
DUMPER7_ASSERTS_UChallengeManager;

// Class ReadyOrNot.CharacterCountEventCondition
// 0x0010 (0x0050 - 0x0040)
class UCharacterCountEventCondition final : public UMissionEventCondition
{
public:
	int32                                         RequiredCount;                                     // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterCountEventConditionRule             CountRule;                                         // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeKilled;                                    // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeIncapacitated;                             // 0x0049(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeSurrendered;                               // 0x004A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeArrested;                                  // 0x004B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCountSuspects;                                    // 0x004C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCountCivilians;                                   // 0x004D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCountSwat;                                        // 0x004E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleAllCharactersSpawned();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterCountEventCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterCountEventCondition")
	}
	static class UCharacterCountEventCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterCountEventCondition>();
	}
};
DUMPER7_ASSERTS_UCharacterCountEventCondition;

// Class ReadyOrNot.ModActorSpawnData
// 0x0010 (0x0040 - 0x0030)
class UModActorSpawnData final : public UDataAsset
{
public:
	TArray<TSubclassOf<class AActor>>             BlueprintsToSpawn;                                 // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ModActorSpawnData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ModActorSpawnData")
	}
	static class UModActorSpawnData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModActorSpawnData>();
	}
};
DUMPER7_ASSERTS_UModActorSpawnData;

// Class ReadyOrNot.SWATController
// 0x00E0 (0x0B60 - 0x0A80)
class ASWATController : public ACyberneticController
{
public:
	class UTeamFallinActivity*                    FallinActivity;                                    // 0x0A80(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrestTargetActivity*                  ArrestTargetActivity;                              // 0x0A88(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTeamStackUpActivity*                   StackUpActivity;                                   // 0x0A90(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTeamBreachAndClearActivity*            BreachAndClearActivity;                            // 0x0A98(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDeployChemlightActivity*               DeployChemlightActivity;                           // 0x0AA0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHoldActivity*                          HoldActivity;                                      // 0x0AA8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UReportTargetActivity*                  ReportTargetActivity;                              // 0x0AB0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCollectEvidenceActivity*               CollectEvidenceActivity;                           // 0x0AB8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDisarmStandaloneTrapActivity*          DisarmStandaloneTrapActivity;                      // 0x0AC0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDeployGrenadeAtLocationActivity*       DeployGrenadeAtLocationActivity;                   // 0x0AC8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKickDoorActivity*                      KickDoorActivity;                                  // 0x0AD0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UC2DoorActivity*                        C2DoorActivity;                                    // 0x0AD8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URamDoorActivity*                       RamDoorActivity;                                   // 0x0AE0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UShotgunDoorActivity*                   ShotgunDoorActivity;                               // 0x0AE8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UThrowGrenadeThroughDoorActivity*       ThrowGrenadeThroughDoorActivity;                   // 0x0AF0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULaunchGrenadeThroughDoorActivity*      LaunchGrenadeThroughDoorActivity;                  // 0x0AF8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USearchAndSecureActivity*               SearchAndSecureActivity;                           // 0x0B00(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMirrorUnderDoorActivity*               MirrorUnderDoorActivity;                           // 0x0B08(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDisarmDoorTrapActivity*                DisarmDoorTrapActivity;                            // 0x0B10(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDeployWedgeActivity*                   DeployWedgeActivity;                               // 0x0B18(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULockPickDoorActivity*                  LockPickDoorActivity;                              // 0x0B20(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UToggleDoorActivity*                    ToggleDoorActivity;                                // 0x0B28(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScanDoorActivity*                      ScanDoorActivity;                                  // 0x0B30(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTeamCoverAreaActivity*                 CoverAreaActivity;                                 // 0x0B38(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USearchLandmarkActivity*                SearchLandmarkActivity;                            // 0x0B40(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPickUpCharacterActivity*               PickUpCharacterActivity;                           // 0x0B48(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTrailerSearchAndSecureActivity*        TrailerSearchAndSecureActivity;                    // 0x0B50(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEngageTargetLessLethalActivity*        EngageLessLethalActivity;                          // 0x0B58(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UArrestTargetActivity* GetArrestTargetActivity() const;
	class UTeamBreachAndClearActivity* GetBreachAndClearActivity() const;
	class UC2DoorActivity* GetC2DoorActivity() const;
	class UCollectEvidenceActivity* GetCollectEvidenceActivity() const;
	class UTeamCoverAreaActivity* GetCoverAreaActivity() const;
	class UDeployChemlightActivity* GetDeployChemlightActivity() const;
	class UDeployGrenadeAtLocationActivity* GetDeployGrenadeAtLocationActivity() const;
	class UDeployWedgeActivity* GetDeployWedgeActivity() const;
	class UDisarmDoorTrapActivity* GetDisarmDoorTrapActivity() const;
	class UDisarmStandaloneTrapActivity* GetDisarmStandaloneTrapActivity() const;
	class UEngageTargetLessLethalActivity* GetEngageLessLethalActivity() const;
	class UTeamFallinActivity* GetFallinActivity() const;
	class UHoldActivity* GetHoldActivity() const;
	class UKickDoorActivity* GetKickDoorActivity() const;
	class ULaunchGrenadeThroughDoorActivity* GetLaunchGrenadeThroughDoorActivity() const;
	class ULockPickDoorActivity* GetLockPickDoorDoorActivity() const;
	class UMirrorUnderDoorActivity* GetMirrorUnderDoorActivity() const;
	class UPickUpCharacterActivity* GetPickUpCharacterActivity() const;
	class URamDoorActivity* GetRamDoorActivity() const;
	class UReportTargetActivity* GetReportTargetActivity() const;
	class UScanDoorActivity* GetScanDoorActivity() const;
	class USearchAndSecureActivity* GetSearchAndSecureActivity() const;
	class USearchLandmarkActivity* GetSearchLandmarkActivity() const;
	class UShotgunDoorActivity* GetShotgunDoorActivity() const;
	class UTeamStackUpActivity* GetStackUpActivity() const;
	class UThrowGrenadeThroughDoorActivity* GetThrowGrenadeThroughDoorActivity() const;
	class UToggleDoorActivity* GetToggleDoorActivity() const;
	class UTrailerSearchAndSecureActivity* GetTrailerSearchAndSecureActivity() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SWATController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SWATController")
	}
	static class ASWATController* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASWATController>();
	}
};
DUMPER7_ASSERTS_ASWATController;

// Class ReadyOrNot.ReactionInterestPoint
// 0x0008 (0x02A0 - 0x0298)
class AReactionInterestPoint final : public AActor
{
public:
	class UBillboardComponent*                    BillboardComponent;                                // 0x0298(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReactionInterestPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReactionInterestPoint")
	}
	static class AReactionInterestPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReactionInterestPoint>();
	}
};
DUMPER7_ASSERTS_AReactionInterestPoint;

// Class ReadyOrNot.CharacterReactionVolume
// 0x00A8 (0x0378 - 0x02D0)
class ACharacterReactionVolume final : public AVolume
{
public:
	TArray<class FString>                         PossibleVoiceLines;                                // 0x02D0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseStealthVoiceLines;                             // 0x02E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         PossibleStealthVoiceLines;                         // 0x02E8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseEligibleSpeakersOnly;                          // 0x02F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         EligibleSpeakers;                                  // 0x0300(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseSpecificVoiceLines;                            // 0x0310(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InspectTimeBeforeReaction;                         // 0x0314(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeBetweenReactionAttempts;                       // 0x0318(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeWithoutCombat;                                 // 0x031C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxReactions;                                      // 0x0320(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   VolumeTag;                                         // 0x0324(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSwatOnly;                                         // 0x032C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReactionInterestPoint*>         InterestPoints;                                    // 0x0330(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, AdvancedDisplay, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotCharacter*>           OverlappingCharacters;                             // 0x0340(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_350[0x28];                                     // 0x0350(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AttemptReaction();
	void OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnTaggedVolumeTriggered(class ACharacterReactionVolume* Volume, class FName Tag);
	void PlayReaction(class AReadyOrNotCharacter* Character);
	void ReactionLengthReady(float Length);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterReactionVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterReactionVolume")
	}
	static class ACharacterReactionVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACharacterReactionVolume>();
	}
};
DUMPER7_ASSERTS_ACharacterReactionVolume;

// Class ReadyOrNot.GasSource
// 0x0000 (0x0000 - 0x0000)
class IGasSource final
{
public:
	bool AffectsNavigation() const;
	bool AppliesStunDamage() const;
	float GetGasRadius() const;
	bool GetGasReleaseLocation(struct FVector* OutLocation) const;
	float PercentageAffectingPlayers() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GasSource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GasSource")
	}
	static class IGasSource* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGasSource>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGasSource;

// Class ReadyOrNot.TacticalSlot_V2
// 0x0000 (0x02F0 - 0x02F0)
class UTacticalSlot_V2 final : public UCommonUserWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TacticalSlot_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TacticalSlot_V2")
	}
	static class UTacticalSlot_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTacticalSlot_V2>();
	}
};
DUMPER7_ASSERTS_UTacticalSlot_V2;

// Class ReadyOrNot.MoraleComponent
// 0x00B0 (0x01A8 - 0x00F8)
class UMoraleComponent final : public UResourceComponent
{
public:
	class ACyberneticCharacter*                   OwnerCharacter;                                    // 0x00F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartingMorale;                                    // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_104[0xA4];                                     // 0x0104(0x00A4)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void ApplyRadialMoraleDamage(const class UObject* WorldContextObject, const struct FVector& Location, float Damage, float Radius, const struct FMoraleDamageTraceParameters& LOSParameters, const TArray<ETeamType>& Teams, class FName Reason);
	static void ApplyRadialMoraleDamageWithFalloff(const class UObject* WorldContextObject, const struct FVector& Location, float Damage, float InnerRadius, float OuterRadius, const struct FMoraleDamageTraceParameters& LOSParameters, const TArray<ETeamType>& Teams, EEasingFunc FalloffCurve, class FName Reason);
	static void IncreaseMoraleOnCharacter(class ACyberneticCharacter* Character, float MoraleValue, class FName Reason);
	static void LowerMoraleOnCharacter(class ACyberneticCharacter* Character, float MoraleValue, class FName Reason);
	static void ResetMoraleOnCharacter(class ACyberneticCharacter* Character);

	TMap<class FName, struct FMoraleChangeInfo> GetMoraleDamageHistory();
	TMap<class FName, struct FMoraleChangeInfo> GetMoraleGainHistory();

	float GetMorale() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoraleComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoraleComponent")
	}
	static class UMoraleComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoraleComponent>();
	}
};
DUMPER7_ASSERTS_UMoraleComponent;

// Class ReadyOrNot.CharacterStatusCardWidget
// 0x0000 (0x15E0 - 0x15E0)
class UCharacterStatusCardWidget : public UCommonButtonImplementation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterStatusCardWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterStatusCardWidget")
	}
	static class UCharacterStatusCardWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterStatusCardWidget>();
	}
};
DUMPER7_ASSERTS_UCharacterStatusCardWidget;

// Class ReadyOrNot.MoveToExitActivity
// 0x0018 (0x0208 - 0x01F0)
class UMoveToExitActivity final : public UBaseActivity
{
public:
	uint8                                         Pad_1F0[0x18];                                     // 0x01F0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoveToExitActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoveToExitActivity")
	}
	static class UMoveToExitActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoveToExitActivity>();
	}
};
DUMPER7_ASSERTS_UMoveToExitActivity;

// Class ReadyOrNot.CharacterProxy
// 0x0030 (0x0058 - 0x0028)
class UCharacterProxy : public UObject
{
public:
	TMulticastInlineDelegate<void()>              OnStatusUpdated;                                   // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EPlanningLineTeam Team)> OnTeamUpdated;                            // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnLoadoutUpdated;                                  // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	class FText GetFirstName();
	float GetHealth();
	TSoftObjectPtr<class UTexture2D> GetImage();
	bool GetIsReady();
	struct FRosterLoadout GetLoadout();
	class FText GetName();
	int32 GetNumber();
	class FText GetStatus();
	ETeamType GetTeam();
	class URosterTrait* GetTrait(bool* bIsUnlocked);
	struct FBPUniqueNetId GetUniqueNetId();
	bool IsLocalPlayer();
	bool IsPlayer();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterProxy")
	}
	static class UCharacterProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterProxy>();
	}
};
DUMPER7_ASSERTS_UCharacterProxy;

// Class ReadyOrNot.VoiceModifierData
// 0x0010 (0x0040 - 0x0030)
class UVoiceModifierData final : public UDataAsset
{
public:
	TArray<class FString>                         VoiceExclusionList;                                // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VoiceModifierData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VoiceModifierData")
	}
	static class UVoiceModifierData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoiceModifierData>();
	}
};
DUMPER7_ASSERTS_UVoiceModifierData;

// Class ReadyOrNot.PlayerCharacterProxy
// 0x0008 (0x0060 - 0x0058)
class UPlayerCharacterProxy final : public UCharacterProxy
{
public:
	class AReadyOrNotPlayerState*                 PlayerState;                                       // 0x0058(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HandleTeamChanged(EPlanningLineTeam Team);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerCharacterProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerCharacterProxy")
	}
	static class UPlayerCharacterProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerCharacterProxy>();
	}
};
DUMPER7_ASSERTS_UPlayerCharacterProxy;

// Class ReadyOrNot.CoopCharacterProxy
// 0x0010 (0x0068 - 0x0058)
class UCoopCharacterProxy final : public UCharacterProxy
{
public:
	class ASWATCharacter*                         SWATCharacter;                                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoopCharacterProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoopCharacterProxy")
	}
	static class UCoopCharacterProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCoopCharacterProxy>();
	}
};
DUMPER7_ASSERTS_UCoopCharacterProxy;

// Class ReadyOrNot.Loadout_InformationBox
// 0x0040 (0x0330 - 0x02F0)
class ULoadout_InformationBox : public UCommonUserWidget
{
public:
	class UTextBlock*                             txt_Category;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             txt_Class;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             txt_ItemName;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             txt_Description;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           VB_Attachments;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           VB_Effects;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotGameState*                   gs;                                                // 0x0320(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UReadyOrNotLoadoutManager*              LoadoutFunctionLibrary;                            // 0x0328(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void CreateAttachmentElement(const TArray<class UWeaponAttachment*>& Attachments, const TArray<EWeaponAttachmentType>& AttachmentTypes);
	void CreateEffectsElement(const TArray<struct FAttachmentEffects>& AttachmentEffects);
	void SetAttachments(TSubclassOf<class ABaseWeapon> BaseWeapon, bool IsSecondary);
	void SetCategory(const class FText& CurrentItemCategory);
	TArray<struct FAttachmentEffects> SetEffects(class UWeaponAttachment* Attachment);
	void UpdateEffectsInfo(class UWeaponAttachment* Attachment, const class FText& CurrentItemCategory);
	void UpdateInfoBox(class ABaseItem* Item, const class FText& CurrentItemCategory, bool IsItemWeapon);
	void UpdateMaterialInfo(class UArmourMaterial* ArmorMaterial, const class FText& CurrentItemCategory);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Loadout_InformationBox")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Loadout_InformationBox")
	}
	static class ULoadout_InformationBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadout_InformationBox>();
	}
};
DUMPER7_ASSERTS_ULoadout_InformationBox;

// Class ReadyOrNot.CheckpointActivityTriggerVolume
// 0x0000 (0x0350 - 0x0350)
class ACheckpointActivityTriggerVolume final : public AActivityTriggerVolume
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CheckpointActivityTriggerVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CheckpointActivityTriggerVolume")
	}
	static class ACheckpointActivityTriggerVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACheckpointActivityTriggerVolume>();
	}
};
DUMPER7_ASSERTS_ACheckpointActivityTriggerVolume;

// Class ReadyOrNot.Loadout_WeaponSelection_V2
// 0x0008 (0x0420 - 0x0418)
class ULoadout_WeaponSelection_V2 final : public UCommonActivatableWidget
{
public:
	int32                                         ActiveSwitcherIndex;                               // 0x0418(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          ShouldUpdateWorkbench;                             // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool GetShouldUpdateWorkbench();
	void SetShouldUpdateWorkbench(bool ShouldUpdate);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Loadout_WeaponSelection_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Loadout_WeaponSelection_V2")
	}
	static class ULoadout_WeaponSelection_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadout_WeaponSelection_V2>();
	}
};
DUMPER7_ASSERTS_ULoadout_WeaponSelection_V2;

// Class ReadyOrNot.CivilianCharacter
// 0x0000 (0x27E0 - 0x27E0)
class ACivilianCharacter final : public ACyberneticCharacter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CivilianCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CivilianCharacter")
	}
	static class ACivilianCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACivilianCharacter>();
	}
};
DUMPER7_ASSERTS_ACivilianCharacter;

// Class ReadyOrNot.LobbyGS
// 0x0028 (0x0950 - 0x0928)
class ALobbyGS : public AReadyOrNotGameState
{
public:
	TWeakObjectPtr<class UStatSubsystem>          StatSubsystem;                                     // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFMODEvent*                             LobbyMusicEvent;                                   // 0x0930(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_938[0x8];                                      // 0x0938(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MissionGradeMusic;                                 // 0x0940(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_944[0xC];                                      // 0x0944(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnStatisticsRefreshed();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LobbyGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LobbyGS")
	}
	static class ALobbyGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALobbyGS>();
	}
};
DUMPER7_ASSERTS_ALobbyGS;

// Class ReadyOrNot.CivilianFleeCombatMove
// 0x0008 (0x0238 - 0x0230)
class UCivilianFleeCombatMove final : public UBaseCombatMoveActivity
{
public:
	uint8                                         Pad_230[0x8];                                      // 0x0230(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CivilianFleeCombatMove")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CivilianFleeCombatMove")
	}
	static class UCivilianFleeCombatMove* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCivilianFleeCombatMove>();
	}
};
DUMPER7_ASSERTS_UCivilianFleeCombatMove;

// Class ReadyOrNot.Collectable
// 0x0058 (0x02F0 - 0x0298)
class ACollectable final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ItemName;                                          // 0x02A0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   ItemDescription;                                   // 0x02B8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class FName>                           RequiredTags;                                      // 0x02D0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UProgressionRequirement*>        RequiredProgression;                               // 0x02E0(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Collectable")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Collectable")
	}
	static class ACollectable* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACollectable>();
	}
};
DUMPER7_ASSERTS_ACollectable;

// Class ReadyOrNot.SuspectController
// 0x0000 (0x0A80 - 0x0A80)
class ASuspectController final : public ACyberneticController
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SuspectController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SuspectController")
	}
	static class ASuspectController* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASuspectController>();
	}
};
DUMPER7_ASSERTS_ASuspectController;

// Class ReadyOrNot.LoudnessMeterWidget
// 0x0018 (0x0308 - 0x02F0)
class ULoudnessMeterWidget final : public UBaseWidget
{
public:
	class UWidgetSwitcher*                        MovementSound_WidgetSwitcher;                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_300[0x8];                                      // 0x0300(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoudnessMeterWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoudnessMeterWidget")
	}
	static class ULoudnessMeterWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoudnessMeterWidget>();
	}
};
DUMPER7_ASSERTS_ULoudnessMeterWidget;

// Class ReadyOrNot.CollectableViewer
// 0x0020 (0x02B8 - 0x0298)
class ACollectableViewer final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ACollectable>               CollectableClass;                                  // 0x02A0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractableComponent*                 InteractableComponent;                             // 0x02A8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACollectableViewController*             ViewController;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CollectableViewer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CollectableViewer")
	}
	static class ACollectableViewer* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACollectableViewer>();
	}
};
DUMPER7_ASSERTS_ACollectableViewer;

// Class ReadyOrNot.CollectedEvidenceActor
// 0x0020 (0x02B8 - 0x0298)
class ACollectedEvidenceActor final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CollectionBagMesh;                                 // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEvidenceComponent*                     EvidenceComponent;                                 // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             Bag_Spawn_Sound;                                   // 0x02B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Multicast_PlaySpawnSound();
	void PlaySpawnSound();
	void Server_PlaySpawnSound();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CollectedEvidenceActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CollectedEvidenceActor")
	}
	static class ACollectedEvidenceActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACollectedEvidenceActor>();
	}
};
DUMPER7_ASSERTS_ACollectedEvidenceActor;

// Class ReadyOrNot.ObjectivePoint
// 0x0018 (0x02B0 - 0x0298)
class AObjectivePoint final : public AActor
{
public:
	class AActor*                                 TiedToActor;                                       // 0x0298(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObjectiveMarkerComponent*              ObjectiveMarkerComponent;                          // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMapActorComponent*                     MapActorComponent;                                 // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HideObjectiveMarker();
	void InitSettings(const struct FSlateBrush& Icon, const class FText& Text, float ShowMarkerAtDistance);
	void ShowObjectiveMarker();
	void ToggleObjectiveMarkerVisibility();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ObjectivePoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ObjectivePoint")
	}
	static class AObjectivePoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<AObjectivePoint>();
	}
};
DUMPER7_ASSERTS_AObjectivePoint;

// Class ReadyOrNot.CombatMoveZone
// 0x0078 (0x0348 - 0x02D0)
class ACombatMoveZone final : public AVolume
{
public:
	TArray<class ACombatMoveZone*>                LinkedZones;                                       // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E0[0x8];                                      // 0x02E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class AAISpawn>>        AISpawnBlacklist;                                  // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class AAISpawn>>        AISpawnWhitelist;                                  // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	EZonePriority                                 ZonePriority;                                      // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EAIAwarenessState>                     AllowableStates;                                   // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotCharacter*>           OverlappingSWAT;                                   // 0x0320(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bDisableOnSWATOverlap;                             // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisablePermanently;                               // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableLinkedZonesPermanently;                    // 0x0332(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_333[0x1];                                      // 0x0333(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxSuspectCount;                                   // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Probability;                                       // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33C[0xC];                                      // 0x033C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CombatMoveZone")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CombatMoveZone")
	}
	static class ACombatMoveZone* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACombatMoveZone>();
	}
};
DUMPER7_ASSERTS_ACombatMoveZone;

// Class ReadyOrNot.CommanderGM
// 0x0020 (0x0E80 - 0x0E60)
class ACommanderGM : public ACoopGM
{
public:
	class UCommanderProfile*                      CommanderProfile;                                  // 0x0E58(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URosterManager*                         RosterManager;                                     // 0x0E60(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AExfilPortal>               ExfilPortalClass;                                  // 0x0E68(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E70[0x10];                                     // 0x0E70(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommanderGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommanderGM")
	}
	static class ACommanderGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACommanderGM>();
	}
};
DUMPER7_ASSERTS_ACommanderGM;

// Class ReadyOrNot.Optiwand
// 0x0120 (0x0DA0 - 0x0C80)
class AOptiwand : public ABaseItem
{
public:
	class UAnimMontage*                           Montage_StartOptiwandADS;                          // 0x0C78(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Montage_EndOptiwandADS;                            // 0x0C80(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CollisionTraceDistance;                            // 0x0C88(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C8C[0x4];                                      // 0x0C8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             FMODOptiwandMove;                                  // 0x0C90(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             FMODOptiwandEnterView;                             // 0x0C98(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             FMODOptiwandExitView;                              // 0x0CA0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CA8[0x8];                                      // 0x0CA8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneCaptureComponent2D*               SceneCapture2D;                                    // 0x0CB0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                 CameraRenderTarget;                                // 0x0CB8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACameraActor*                           CameraActor;                                       // 0x0CC0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                LookAtPosition;                                    // 0x0CC8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                               LookAtRotation;                                    // 0x0CE0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                               OptiwandCaptureRotation;                           // 0x0CF8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         bMirorring : 1;                                    // 0x0D10(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	bool                                          bRepMirroring;                                     // 0x0D11(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bInUse : 1;                                        // 0x0D12(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_D13[0x5];                                      // 0x0D13(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ADoor*                                  LastUsedDoor;                                      // 0x0D18(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFMODAudioComponent*                    FMODOptiwandMoveAudioComp;                         // 0x0D20(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFMODAudioComponent*                    FMODOptiwandEnterViewComp;                         // 0x0D28(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFMODAudioComponent*                    FMODOptiwandExitViewComp;                          // 0x0D30(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D38[0x68];                                     // 0x0D38(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Server_NotifyMirroring(bool bIsMirroring);

	EOptiwandViewMode GetViewMode() const;
	bool IsCameraBlocked() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Optiwand")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Optiwand")
	}
	static class AOptiwand* GetDefaultObj()
	{
		return GetDefaultObjImpl<AOptiwand>();
	}
};
DUMPER7_ASSERTS_AOptiwand;

// Class ReadyOrNot.CommanderGS
// 0x0000 (0x0A40 - 0x0A40)
class ACommanderGS final : public ACoopGS
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommanderGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommanderGS")
	}
	static class ACommanderGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACommanderGS>();
	}
};
DUMPER7_ASSERTS_ACommanderGS;

// Class ReadyOrNot.TherapistWidget
// 0x0010 (0x0428 - 0x0418)
class UTherapistWidget : public UCommonActivatableWidget
{
public:
	TArray<class URosterCharacter*>               CharactersInTherapy;                               // 0x0418(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	void CloseTherapistWidget();
	TArray<class URosterCharacter*> GetCharactersInTherapy();
	class FText GetTherapistText();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TherapistWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TherapistWidget")
	}
	static class UTherapistWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTherapistWidget>();
	}
};
DUMPER7_ASSERTS_UTherapistWidget;

// Class ReadyOrNot.CommandInterface
// 0x0040 (0x0308 - 0x02C8)
class UCommandInterface : public UUserWidget
{
public:
	class UImage*                                 SelectionLeft;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 SelectionRight;                                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 SelectionUp;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 SelectionDown;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 MoveIn;                                            // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 FallIn;                                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 Cover;                                             // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 Deploy;                                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void DisableSelectionWidgets();
	void EnableSelectionWidgets(const struct FVector2D& Selection);
	void SetBlueColor();
	void SetGoldColor();
	void SetRedColor();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommandInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommandInterface")
	}
	static class UCommandInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommandInterface>();
	}
};
DUMPER7_ASSERTS_UCommandInterface;

// Class ReadyOrNot.TrackingCameraComponent
// 0x0068 (0x0108 - 0x00A0)
class UTrackingCameraComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(bool bVisible)> OnSceneCaptureVisibilityChange;                    // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	float                                         ZoomSpeed;                                         // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URadialTrackingComponent*               TrackingComponent;                                 // 0x00B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneCaptureComponent2D*               CaptureComponent;                                  // 0x00C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*           MaterialParameterCollection;                       // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void()>              OnTrackingCameraChange;                            // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class UObject>>         Viewers;                                           // 0x00E0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F0[0x18];                                      // 0x00F0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisableCameraComponent(TWeakObjectPtr<class UObject> Viewer);
	void EnableCameraComponent(TWeakObjectPtr<class UObject> Viewer);
	void Initialise(const struct FTrackingCameraInitStruct& initStruct);
	void Stop();

	bool IsCameraActive() const;
	bool IsCameraAvailable() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrackingCameraComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrackingCameraComponent")
	}
	static class UTrackingCameraComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrackingCameraComponent>();
	}
};
DUMPER7_ASSERTS_UTrackingCameraComponent;

// Class ReadyOrNot.PageWidget
// 0x0000 (0x0418 - 0x0418)
class UPageWidget : public UCommonActivatableWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PageWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PageWidget")
	}
	static class UPageWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPageWidget>();
	}
};
DUMPER7_ASSERTS_UPageWidget;

// Class ReadyOrNot.PageFooter
// 0x0050 (0x0468 - 0x0418)
class UPageFooter : public UPageWidget
{
public:
	TMap<class FString, struct FScreenFooterEntry> FooterEntries;                                    // 0x0418(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	void GetInputActionData(const struct FDataTableRowHandle& InputActionRow, class FText* ActionName, struct FKey* ActionKey);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PageFooter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PageFooter")
	}
	static class UPageFooter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPageFooter>();
	}
};
DUMPER7_ASSERTS_UPageFooter;

// Class ReadyOrNot.CommitSuicideActivity
// 0x0030 (0x0220 - 0x01F0)
class UCommitSuicideActivity final : public UBaseActivity
{
public:
	uint8                                         Pad_1F0[0x30];                                     // 0x01F0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDamaged(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
	void OnHeardYell(class AReadyOrNotCharacter* Shouter, bool bLOS);
	void OnMeleeHitTaken(class AReadyOrNotCharacter* InstigatorCharacter);
	void OnStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommitSuicideActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommitSuicideActivity")
	}
	static class UCommitSuicideActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommitSuicideActivity>();
	}
};
DUMPER7_ASSERTS_UCommitSuicideActivity;

// Class ReadyOrNot.TakeCoverActivity
// 0x02A0 (0x0490 - 0x01F0)
class UTakeCoverActivity final : public UBaseActivity
{
public:
	uint8                                         Pad_1F0[0x10];                                     // 0x01F0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxCoverFireCount;                                 // 0x0200(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CoverFireTimeCooldown;                             // 0x0204(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CoverFireCooldown;                                 // 0x0208(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCoverInstigatorStimulus               InstigatorStimulus;                                // 0x0210(0x0080)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_290[0x110];                                    // 0x0290(0x0110)(Fixing Size After Last Property [ Dumper-7 ])
	class ADoor*                                  Door;                                              // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           LastExitMontagePlayed;                             // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           EntryMontage;                                      // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B8[0xD8];                                     // 0x03B8(0x00D8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnterCompleteAbruptState();
	void EnterCompleteState();
	void EnterCoverFireState();
	void EnterCoverState();
	void EnterMoveToCoverState();
	void ExitCoverFireState();
	void ExitCoverState();
	void OnEnemyWeaponFire(class AReadyOrNotCharacter* Character, class ABaseMagazineWeapon* Weapon, const struct FVector& fireDirection);
	void OnStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
	void OnTakeDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
	void TickCoverFireState(float DeltaTime, float Uptime);
	void TickCoverState(float DeltaTime, float Uptime);
	void TickMoveToCoverState(float DeltaTime, float Uptime);

	bool CanAbruptCompleteCover() const;
	bool CanCompleteCover() const;
	bool CanCover() const;
	bool CanFireFromCover() const;
	bool CanStopCoverFire() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TakeCoverActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TakeCoverActivity")
	}
	static class UTakeCoverActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTakeCoverActivity>();
	}
};
DUMPER7_ASSERTS_UTakeCoverActivity;

// Class ReadyOrNot.CommonFooterActionWidget
// 0x0018 (0x0308 - 0x02F0)
class UCommonFooterActionWidget : public UCommonUserWidget
{
public:
	TArray<struct FDataTableRowHandle>            InputActions;                                      // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIsDynamicIcon;                                    // 0x0300(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRequiresHold;                                     // 0x0301(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_302[0x6];                                      // 0x0302(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DetermineInputIconType();
	void GenerateDynamicIcon(const struct FKey& ActionKey, bool IsGamepad);
	struct FSlateBrush GetActionWidgetBrush(class UCommonActionWidget* InCommonActionWidget);
	struct FKey GetInputActionKey(const struct FDataTableRowHandle& InputActionRow);
	void OnActionProgress(float HeldPercent);
	void SetInputAction(const struct FDataTableRowHandle& InInputAction);
	void SetInputActions(const TArray<struct FDataTableRowHandle>& InInputActions);
	void UpdateInputActionWidget();
	void UpdateInputWidgetProgress(class UCommonActionWidget* InputActionWidget, float HeldPercent);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonFooterActionWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonFooterActionWidget")
	}
	static class UCommonFooterActionWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonFooterActionWidget>();
	}
};
DUMPER7_ASSERTS_UCommonFooterActionWidget;

// Class ReadyOrNot.PepperballDamageType
// 0x0010 (0x07C0 - 0x07B0)
class UPepperballDamageType : public UStunDamage
{
public:
	float                                         StunDurationHeadshot;                              // 0x07B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StunDurationLeg;                                   // 0x07B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7B8[0x8];                                      // 0x07B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PepperballDamageType")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PepperballDamageType")
	}
	static class UPepperballDamageType* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPepperballDamageType>();
	}
};
DUMPER7_ASSERTS_UPepperballDamageType;

// Class ReadyOrNot.CommonFooterWidget
// 0x0048 (0x0460 - 0x0418)
class UCommonFooterWidget : public UCommonActivatableWidget
{
public:
	TMulticastInlineDelegate<void()>              OnDismissInputAction;                              // 0x0418(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    DismissInputActionSettings;                        // 0x0428(0x0010)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bConsumeInput;                                     // 0x0438(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsPersistent;                                     // 0x0439(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOverrideInputActionText;                          // 0x043A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_43B[0x5];                                      // 0x043B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OverrideInputActionText;                           // 0x0440(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_458[0x4];                                      // 0x0458(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bUsingGamepad;                                     // 0x045C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_45D[0x3];                                      // 0x045D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_DismissInputActionProgress(float HeldTime);
	void BP_OnDismissInputAction();
	void OnDismissInputActionNative();
	void OnDismissInputActionProgressNative(float HeldPercent);
	void OnInputMethodChanged(const ECommonInputType InputMethod);
	void RefreshWidget();

	class FText GetFooterText() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonFooterWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonFooterWidget")
	}
	static class UCommonFooterWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonFooterWidget>();
	}
};
DUMPER7_ASSERTS_UCommonFooterWidget;

// Class ReadyOrNot.CommonInputReadyOrNotControllerData
// 0x0008 (0x0108 - 0x0100)
class UCommonInputReadyOrNotControllerData : public UCommonInputBaseControllerData
{
public:
	TSubclassOf<class UCommonInputBaseControllerData> ModioControllerData;                           // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonInputReadyOrNotControllerData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonInputReadyOrNotControllerData")
	}
	static class UCommonInputReadyOrNotControllerData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonInputReadyOrNotControllerData>();
	}
};
DUMPER7_ASSERTS_UCommonInputReadyOrNotControllerData;

// Class ReadyOrNot.CommonInputRichTextDecorator
// 0x0008 (0x0030 - 0x0028)
class UCommonInputRichTextDecorator : public URichTextBlockDecorator
{
public:
	float                                         LineHeightPercentOffset;                           // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonInputRichTextDecorator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonInputRichTextDecorator")
	}
	static class UCommonInputRichTextDecorator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonInputRichTextDecorator>();
	}
};
DUMPER7_ASSERTS_UCommonInputRichTextDecorator;

// Class ReadyOrNot.FleeingCombatMove
// 0x0048 (0x0278 - 0x0230)
class UFleeingCombatMove final : public UBaseCombatMoveActivity
{
public:
	uint8                                         Pad_230[0x8];                                      // 0x0230(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AThreatAwarenessActor*>          UsedFleePoints;                                    // 0x0238(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class AThreatAwarenessActor*>          LastExitPoints;                                    // 0x0248(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class AThreatAwarenessActor*                  LastFleePoint;                                     // 0x0258(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_260[0x18];                                     // 0x0260(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void FilterDoorsForFlee(const TArray<class ADoor*>& Doors, TArray<class ADoor*>* FilteredDoors);
	static bool IsDoorValidForFlee(class ADoor* Door);

	EFleeType GetFleeType();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FleeingCombatMove")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FleeingCombatMove")
	}
	static class UFleeingCombatMove* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFleeingCombatMove>();
	}
};
DUMPER7_ASSERTS_UFleeingCombatMove;

// Class ReadyOrNot.ThreatAwarenessSubsystem
// 0x0058 (0x0088 - 0x0030)
class UThreatAwarenessSubsystem final : public UWorldSubsystem
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AThreatAwarenessActor*>          AllThreatActors;                                   // 0x0038(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         bDrawThreatAwarenessOctree : 1;                    // 0x0048(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawThreatPoints : 1;                             // 0x0048(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawThreatRoomNames : 1;                          // 0x0048(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_49[0x3F];                                      // 0x0049(0x003F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class AThreatAwarenessActor* GetFurthestHighestThreat(const TArray<class AThreatAwarenessActor*>& InThreats, const struct FVector& Location, float minDistance);
	static class AThreatAwarenessActor* GetNearestHighestThreat(const TArray<class AThreatAwarenessActor*>& InThreats, const struct FVector& Location);
	static class AThreatAwarenessActor* GetNearestLowestThreat(const TArray<class AThreatAwarenessActor*>& InThreats, const struct FVector& Location);
	static TArray<class AThreatAwarenessActor*> GetThreatsFromLocationBeyondRadius(const TArray<class AThreatAwarenessActor*>& InThreats, const struct FVector& Location, float minDistance);

	void GetThreatsForLocation(TArray<class AThreatAwarenessActor*>* OutThreats, const struct FVector& Location, float minDistance, bool bRequireLOS, class FName RoomName);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ThreatAwarenessSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ThreatAwarenessSubsystem")
	}
	static class UThreatAwarenessSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UThreatAwarenessSubsystem>();
	}
};
DUMPER7_ASSERTS_UThreatAwarenessSubsystem;

// Class ReadyOrNot.CommonRichTextBlockImageDecorator
// 0x0050 (0x0080 - 0x0030)
class UCommonRichTextBlockImageDecorator : public URichTextBlockImageDecorator
{
public:
	uint8                                         Pad_30[0x50];                                      // 0x0030(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonRichTextBlockImageDecorator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonRichTextBlockImageDecorator")
	}
	static class UCommonRichTextBlockImageDecorator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonRichTextBlockImageDecorator>();
	}
};
DUMPER7_ASSERTS_UCommonRichTextBlockImageDecorator;

// Class ReadyOrNot.ExplosiveContainer
// 0x0058 (0x02F0 - 0x0298)
class AExplosiveContainer final : public AActor
{
public:
	class UStaticMeshComponent*                   BaseMesh;                                          // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               FireEffectParticle;                                // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               ExplosionEffectParticle;                           // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODAudioComponent*                    FMODFireAudioComponent;                            // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B8[0x2];                                      // 0x02B8(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bHideMeshAfterDetonation;                          // 0x02BA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BB[0x5];                                      // 0x02BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     ScorchDecal;                                       // 0x02C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             FMODExplosionAudio;                                // 0x02C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UStunDamage>                StunDamageType;                                    // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         ExplosionScreenShake;                              // 0x02D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                            ExplosionInstigator;                               // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimerUntilExplosionOnceTriggered;                  // 0x02E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDamageToTrigger;                                // 0x02EC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Multicast_PlayExplosionEffects();
	void Multicast_TriggerExplosive();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ExplosiveContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ExplosiveContainer")
	}
	static class AExplosiveContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<AExplosiveContainer>();
	}
};
DUMPER7_ASSERTS_AExplosiveContainer;

// Class ReadyOrNot.CommonSpinbox
// 0x0010 (0x15F0 - 0x15E0)
class UCommonSpinbox : public UCommonButtonImplementation
{
public:
	struct FDataTableRowHandle                    ResetToDefaultInputAction;                         // 0x15D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_15E8[0x8];                                     // 0x15E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonSpinbox")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonSpinbox")
	}
	static class UCommonSpinbox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonSpinbox>();
	}
};
DUMPER7_ASSERTS_UCommonSpinbox;

// Class ReadyOrNot.TabletDisplay
// 0x0008 (0x02D0 - 0x02C8)
class UTabletDisplay final : public UUserWidget
{
public:
	class ATablet*                                OwningTablet;                                      // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TabletDisplay")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TabletDisplay")
	}
	static class UTabletDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTabletDisplay>();
	}
};
DUMPER7_ASSERTS_UTabletDisplay;

// Class ReadyOrNot.CommonTabListAnimationSwitcher
// 0x0000 (0x0228 - 0x0228)
class UCommonTabListAnimationSwitcher final : public UCommonAnimatedSwitcher
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonTabListAnimationSwitcher")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonTabListAnimationSwitcher")
	}
	static class UCommonTabListAnimationSwitcher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonTabListAnimationSwitcher>();
	}
};
DUMPER7_ASSERTS_UCommonTabListAnimationSwitcher;

// Class ReadyOrNot.CommonTabListWidgetImplementation
// 0x0008 (0x0478 - 0x0470)
class UCommonTabListWidgetImplementation final : public UCommonTabListWidgetBase
{
public:
	uint8                                         Pad_470[0x8];                                      // 0x0470(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonTabListWidgetImplementation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonTabListWidgetImplementation")
	}
	static class UCommonTabListWidgetImplementation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonTabListWidgetImplementation>();
	}
};
DUMPER7_ASSERTS_UCommonTabListWidgetImplementation;

// Class ReadyOrNot.FootstepImpactEffectsPool
// 0x0000 (0x00D0 - 0x00D0)
class UFootstepImpactEffectsPool : public UObjectPoolBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FootstepImpactEffectsPool")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FootstepImpactEffectsPool")
	}
	static class UFootstepImpactEffectsPool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFootstepImpactEffectsPool>();
	}
};
DUMPER7_ASSERTS_UFootstepImpactEffectsPool;

// Class ReadyOrNot.CompetitionHelperLib
// 0x0000 (0x0028 - 0x0028)
class UCompetitionHelperLib final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CompetitionHelperLib")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CompetitionHelperLib")
	}
	static class UCompetitionHelperLib* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCompetitionHelperLib>();
	}
};
DUMPER7_ASSERTS_UCompetitionHelperLib;

// Class ReadyOrNot.HelicopterOverlayWidget
// 0x0030 (0x02F8 - 0x02C8)
class UHelicopterOverlayWidget : public UUserWidget
{
public:
	class AHelicopter*                            Helicopter;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMissionInformationSubsystem*           MissionInformation;                                // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D8[0x20];                                     // 0x02D8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetAltitudeInFeet();
	float GetCameraHeadingInDegrees();
	float GetCameraPitchInDegrees();
	float GetCameraRelativeHeadingInDegrees();
	float GetHelicopterHeadingInDegrees();
	void GetLatitude(float* Degrees, float* Minutes, float* Seconds, float* DecimalSeconds, bool* IsNorthing);
	struct FDateTime GetLocalDateTime();
	void GetLongitude(float* Degrees, float* Minutes, float* Seconds, float* DecimalSeconds, bool* IsEasting);
	float GetSpeedInKnots();
	struct FDateTime GetZuluDateTime();
	bool IsCameraEnabled();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HelicopterOverlayWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HelicopterOverlayWidget")
	}
	static class UHelicopterOverlayWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHelicopterOverlayWidget>();
	}
};
DUMPER7_ASSERTS_UHelicopterOverlayWidget;

// Class ReadyOrNot.CompliantAction
// 0x0250 (0x02A8 - 0x0058)
class UCompliantAction : public UAIAction
{
public:
	bool                                          bMoveTowardSwat;                                   // 0x0058(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     DistanceToMoveSpeedCurve;                          // 0x0060(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         SurrenderRadius;                                   // 0x00E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChanceToFake;                                      // 0x00EC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChanceToDropImmediately;                           // 0x00F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChanceToDropWithoutAnimation;                      // 0x00F4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MoveStyleOverride;                                 // 0x00F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Unarmed_MoveStyleOverride;                         // 0x0100(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Pistol_MoveStyleOverride;                          // 0x0108(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Rifle_MoveStyleOverride;                           // 0x0110(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EAnimWeaponType, struct FCompliantActionAnimationArray> EntryAnimations;                    // 0x0118(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<EAnimWeaponType, struct FCompliantActionAnimationArray> LoopAnimations;                     // 0x0168(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<EAnimWeaponType, struct FCompliantActionAnimationArray> DropWeaponAnimations;               // 0x01B8(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<EAnimWeaponType, struct FCompliantActionAnimationArray> FakeDropWeaponAnimations;           // 0x0208(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<EAnimWeaponType, struct FCompliantActionAnimationArray> PostDropLoopAnimations;             // 0x0258(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CompliantAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CompliantAction")
	}
	static class UCompliantAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCompliantAction>();
	}
};
DUMPER7_ASSERTS_UCompliantAction;

// Class ReadyOrNot.CompliantActivity
// 0x0050 (0x0240 - 0x01F0)
class UCompliantActivity final : public UBaseActivity
{
public:
	class UCompliantAction*                       Action;                                            // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AReadyOrNotCharacter*                   ClosestSwat;                                       // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_200[0x40];                                     // 0x0200(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnHeardOfficerYell(class AReadyOrNotCharacter* Shouter, bool bLOS);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CompliantActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CompliantActivity")
	}
	static class UCompliantActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCompliantActivity>();
	}
};
DUMPER7_ASSERTS_UCompliantActivity;

// Class ReadyOrNot.ConsoleContextSwitcher
// 0x0040 (0x0330 - 0x02F0)
class UConsoleContextSwitcher final : public UBaseWidget
{
public:
	class UWidgetSwitcher*                        ContextSwitcher;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UConsoleSelection*                      GrenadeSelection;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UConsoleSelection*                      TacticalSelection;                                 // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UConsoleFireModes*                      FireModes;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UConsoleMagSelection*                   MagSelection;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       FadeIn;                                            // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       FadeOut;                                           // 0x0320(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SwapToFireModes();
	void SwapToGrenades();
	void SwapToMag(class ABaseMagazineWeapon* MagazineWeapon);
	void SwapToTactical();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConsoleContextSwitcher")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConsoleContextSwitcher")
	}
	static class UConsoleContextSwitcher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConsoleContextSwitcher>();
	}
};
DUMPER7_ASSERTS_UConsoleContextSwitcher;

// Class ReadyOrNot.FriendsList
// 0x00B0 (0x04C8 - 0x0418)
class UFriendsList : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_418[0x10];                                     // 0x0418(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnSuccess;                                         // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnFailure;                                         // 0x0438(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FFriend>                        FriendsList;                                       // 0x0448(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_458[0x18];                                     // 0x0458(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RetryAvatarURLsDelay;                              // 0x0470(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_474[0x4C];                                     // 0x0474(0x004C)(Fixing Size After Last Property [ Dumper-7 ])
	class UEOSMultiplayerSubsystem*               EOSMultiplayerSubsystem;                           // 0x04C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static struct FBPUniqueNetId CreateUniqueNetIdFromString(const class FString& PlatformId);

	void GetFriendsList();
	void JoinFriend(const struct FFriend& Friend);
	void OnConnectionStatusChanged(bool bIsMultiplayerConnectionAvailable);
	void ViewPlatformProfile(const struct FFriend& Friend);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FriendsList")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FriendsList")
	}
	static class UFriendsList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFriendsList>();
	}
};
DUMPER7_ASSERTS_UFriendsList;

// Class ReadyOrNot.ConsoleFireMode
// 0x0000 (0x02C8 - 0x02C8)
class UConsoleFireMode final : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConsoleFireMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConsoleFireMode")
	}
	static class UConsoleFireMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConsoleFireMode>();
	}
};
DUMPER7_ASSERTS_UConsoleFireMode;

// Class ReadyOrNot.FlashbangDamageType
// 0x0000 (0x07B0 - 0x07B0)
class UFlashbangDamageType : public UStunDamage
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FlashbangDamageType")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FlashbangDamageType")
	}
	static class UFlashbangDamageType* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFlashbangDamageType>();
	}
};
DUMPER7_ASSERTS_UFlashbangDamageType;

// Class ReadyOrNot.ConsoleFireModes
// 0x0020 (0x02E8 - 0x02C8)
class UConsoleFireModes final : public UUserWidget
{
public:
	class UUserWidget*                            FireModeSafe;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            FireModeSingle;                                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            FireModeBurst;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            FireModeAuto;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnEquipped(class ABaseItem* Item);
	void OnFireModeChanged(class APlayerCharacter* PlayerCharacter, EFireMode newFireMode, EFireMode LastFireMode);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConsoleFireModes")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConsoleFireModes")
	}
	static class UConsoleFireModes* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConsoleFireModes>();
	}
};
DUMPER7_ASSERTS_UConsoleFireModes;

// Class ReadyOrNot.ConsoleHotkey
// 0x00F8 (0x03C0 - 0x02C8)
class UConsoleHotkey : public UUserWidget
{
public:
	class URichTextBlock*                         Counter;                                           // 0x02C8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Icon_Brush;                                        // 0x02D0(0x00D0)(Edit, Protected, NativeAccessSpecifierProtected)
	class UImage*                                 Icon_Image;                                        // 0x03A0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGamepadButtonImage*                    ShoulderButtonImage;                               // 0x03A8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGamepadButtonImage*                    ShoulderButtonImage_Highlight;                     // 0x03B0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B8[0x8];                                      // 0x03B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ShoulderButtonPressed(bool Pressed);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConsoleHotkey")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConsoleHotkey")
	}
	static class UConsoleHotkey* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConsoleHotkey>();
	}
};
DUMPER7_ASSERTS_UConsoleHotkey;

// Class ReadyOrNot.ConsoleHotkeys
// 0x1A88 (0x1D50 - 0x02C8)
class UConsoleHotkeys : public UUserWidget
{
public:
	class UHorizontalBox*                         DpadNavigation;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 UpIcon;                                            // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 RightIcon;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 DownIcon;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         DownIconCounter;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 LeftIcon;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UConsoleHotkey*                         HotkeyItemWheel;                                   // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonVisibilitySwitcher*              IconSwitcher;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            NVGOnIcon;                                         // 0x0310(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ToggleVOIPOnIcon;                                  // 0x03E0(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ToggleVOIPOffIcon;                                 // 0x04B0(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            LocalVOIPIcon;                                     // 0x0580(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            TeamVOIPIcon;                                      // 0x0650(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            NVGOffIcon;                                        // 0x0720(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            CycleCantedSightIcon;                              // 0x07F0(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            CycleSecondarySightIcon;                           // 0x08C0(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            CycleNeutralSightIcon;                             // 0x0990(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ToggleNeutralSightIcon;                            // 0x0A60(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ToggleCantedSightIcon;                             // 0x0B30(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            FireModeSafeIcon;                                  // 0x0C00(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            FireModeSingleIcon;                                // 0x0CD0(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            FireModeBurstIcon;                                 // 0x0DA0(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            FireModeFullAutoIcon;                              // 0x0E70(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            TeamViewIcon;                                      // 0x0F40(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            LaserIconOn;                                       // 0x1010(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            LaserIconOff;                                      // 0x10E0(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            FlashlightIconOn;                                  // 0x11B0(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            FlashlightIconOff;                                 // 0x1280(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ChemlightIcon;                                     // 0x1350(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            CirculateTeamLeftIcon;                             // 0x1420(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            CirculateTeamRightIcon;                            // 0x14F0(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            QueueTeamIcon;                                     // 0x15C0(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            DontQueueTeamIcon;                                 // 0x1690(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            MirrorgunIcon;                                     // 0x1760(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ShieldIcon;                                        // 0x1830(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            BatteringRamIcon;                                  // 0x1900(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            LauncherIcon;                                      // 0x19D0(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            BreachShotgunIcon;                                 // 0x1AA0(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            LowReadyLowerIcon;                                 // 0x1B70(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            LowReadyRaiseIcon;                                 // 0x1C40(0x00D0)(Edit, NativeAccessSpecifierPublic)
	class UCommandWheel*                          CommandWheel;                                      // 0x1D10(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D18[0x8];                                     // 0x1D18(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x1D20(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ABaseItem*                              LastEquippedItem;                                  // 0x1D28(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D30[0x20];                                    // 0x1D30(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ChangeKey();
	void ConsoleHotkeysEnabled();
	void DPadDownPressed(bool Pressed);
	void DPadLeftPressed(bool Pressed);
	void DPadRightPressed(bool Pressed);
	void DPadUpPressed(bool Pressed);
	void InventoryChanged(class ABaseItem* Item);
	void ItemEquipped(class ABaseItem* Item);
	void OnChemlightThrown(class APlayerCharacter* PlayerCharacter_0);
	void OnFireModeChanged(class APlayerCharacter* _pc, EFireMode newFireMode, EFireMode _lfm);
	void RefreshHotkeys();
	void ResetIconColors();
	void SetAttachmentIcon();
	void SetCantedSightsHiddenTraining(bool bHidden);
	void SetChemlightHidden(bool bHidden);
	void SetCommandWheelReference(class UCommandWheel* CommandWheelPtr);
	void SetDownIsHidden(bool bHidden);
	void SetHotkeyItemWheelIsHidden(bool bHidden);
	void SetIconActive(class UImage* Icon, bool Active);
	void SetIsHidden(bool bHidden);
	void SetLayout(EConsoleHotkeysLayout Layout);
	void SetLeftIsHidden(bool bHidden);
	void SetLongTacticalIcon();
	void SetLowReadyIcon();
	void SetRightIsHidden(bool bHidden);
	void SetSightIcon();
	void SetUpIsHidden(bool bHidden);
	void UpdateItemHotkey(class ABaseItem* Item);
	void UpdateSightIcon(bool bUsingCanted);
	void UpdateVOIPIcons();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConsoleHotkeys")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConsoleHotkeys")
	}
	static class UConsoleHotkeys* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConsoleHotkeys>();
	}
};
DUMPER7_ASSERTS_UConsoleHotkeys;

// Class ReadyOrNot.GamepadControlScheme
// 0x0000 (0x0028 - 0x0028)
class UGamepadControlScheme : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GamepadControlScheme")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GamepadControlScheme")
	}
	static class UGamepadControlScheme* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadControlScheme>();
	}
};
DUMPER7_ASSERTS_UGamepadControlScheme;

// Class ReadyOrNot.GamepadControlSchemeGeneral
// 0x0000 (0x0028 - 0x0028)
class UGamepadControlSchemeGeneral final : public UGamepadControlScheme
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GamepadControlSchemeGeneral")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GamepadControlSchemeGeneral")
	}
	static class UGamepadControlSchemeGeneral* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadControlSchemeGeneral>();
	}
};
DUMPER7_ASSERTS_UGamepadControlSchemeGeneral;

// Class ReadyOrNot.ExperienceDefinition
// 0x0030 (0x0060 - 0x0030)
class UExperienceDefinition final : public UPrimaryDataAsset
{
public:
	TArray<class FString>                         GameFeaturesToEnable;                              // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UGameFeatureAction*>             Actions;                                           // 0x0040(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UExperienceActionSet*>           ActionSets;                                        // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ExperienceDefinition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ExperienceDefinition")
	}
	static class UExperienceDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UExperienceDefinition>();
	}
};
DUMPER7_ASSERTS_UExperienceDefinition;

// Class ReadyOrNot.ConsoleLobbyManager
// 0x0000 (0x0418 - 0x0418)
class UConsoleLobbyManager : public UMenuWidget
{
public:
	void SetLobbyPrivacy(ELobbyPrivacy privacy);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConsoleLobbyManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConsoleLobbyManager")
	}
	static class UConsoleLobbyManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConsoleLobbyManager>();
	}
};
DUMPER7_ASSERTS_UConsoleLobbyManager;

// Class ReadyOrNot.ConsoleMagSelection
// 0x0010 (0x02D8 - 0x02C8)
class UConsoleMagSelection final : public UUserWidget
{
public:
	class UHorizontalBox*                         Container;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnMagCheck(class ABaseMagazineWeapon* MagazineWeapon);
	void OnWeaponFired(class ABaseWeapon* Weapon);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConsoleMagSelection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConsoleMagSelection")
	}
	static class UConsoleMagSelection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConsoleMagSelection>();
	}
};
DUMPER7_ASSERTS_UConsoleMagSelection;

// Class ReadyOrNot.ConsoleMagSelectionItem
// 0x0030 (0x02F8 - 0x02C8)
class UConsoleMagSelectionItem : public UUserWidget
{
public:
	class UMaterial*                              MagazineMaterial;                                  // 0x02C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 MagazineIcon;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 SelectedIcon;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             MagazineText;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               MagazineMaterialDynamic;                           // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F0[0x8];                                      // 0x02F0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 GetMagIndex();
	void SetMagIndex(int32 Index_0);
	void SetSelected(bool bCond);
	void UpdateMagPercentage(float Percentage);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConsoleMagSelectionItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConsoleMagSelectionItem")
	}
	static class UConsoleMagSelectionItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConsoleMagSelectionItem>();
	}
};
DUMPER7_ASSERTS_UConsoleMagSelectionItem;

// Class ReadyOrNot.CacheResourceComponent
// 0x0008 (0x0100 - 0x00F8)
class UCacheResourceComponent : public UResourceComponent
{
public:
	ECacheItemTypes                               ItemType;                                          // 0x00F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ResourceCountToGrab;                               // 0x00FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CacheResourceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CacheResourceComponent")
	}
	static class UCacheResourceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCacheResourceComponent>();
	}
};
DUMPER7_ASSERTS_UCacheResourceComponent;

// Class ReadyOrNot.ConsoleSelection
// 0x0028 (0x02F0 - 0x02C8)
class UConsoleSelection final : public UUserWidget
{
public:
	class UHorizontalBox*                         Container;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Button;                                            // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 ButtonName;                                        // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EItemCategory                                 ItemCategory;                                      // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ItemAdded(class ABaseItem* Item);
	void ItemEquipped(class ABaseItem* Item);
	void ItemRemoved(class ABaseItem* Item);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConsoleSelection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConsoleSelection")
	}
	static class UConsoleSelection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConsoleSelection>();
	}
};
DUMPER7_ASSERTS_UConsoleSelection;

// Class ReadyOrNot.ForceLowReadyVolume
// 0x0008 (0x02D8 - 0x02D0)
class AForceLowReadyVolume final : public AVolume
{
public:
	bool                                          bForceLowReadyWhileAimingAt;                       // 0x02D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceLowReadyWhileInside;                         // 0x02D1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ForceLowReadyVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ForceLowReadyVolume")
	}
	static class AForceLowReadyVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AForceLowReadyVolume>();
	}
};
DUMPER7_ASSERTS_AForceLowReadyVolume;

// Class ReadyOrNot.ConsoleSelectionItem
// 0x0028 (0x02F0 - 0x02C8)
class UConsoleSelectionItem : public UUserWidget
{
public:
	class FString                                 Name_0;                                            // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Icon_Image;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Selected_Image;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConsoleSelectionItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConsoleSelectionItem")
	}
	static class UConsoleSelectionItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConsoleSelectionItem>();
	}
};
DUMPER7_ASSERTS_UConsoleSelectionItem;

// Class ReadyOrNot.ControllableByTablet
// 0x0000 (0x0000 - 0x0000)
class IControllableByTablet final
{
public:
	void AssumeTabletControl(class APlayerCharacter* TabletOwner);
	bool CanControlWithTablet(class APlayerCharacter* TabletOwner);
	bool CanTabletViewMe(class APlayerCharacter* TabletOwner, class AReadyOrNotGameState* GameState);
	class FText GetTabletNameText();
	class USceneComponent* GetTabletViewComponent();
	class FName GetTabletViewSocket();
	ETeamType GetTabletViewTeamColor();
	void HideActorsForTabletView(class USceneCaptureComponent2D* Component);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ControllableByTablet")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ControllableByTablet")
	}
	static class IControllableByTablet* GetDefaultObj()
	{
		return GetDefaultObjImpl<IControllableByTablet>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IControllableByTablet;

// Class ReadyOrNot.ControlsBind
// 0x00E0 (0x03A8 - 0x02C8)
class UControlsBind : public UUserWidget
{
public:
	bool                                          IsAxis;                                            // 0x02C8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BindIndex;                                         // 0x02CC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ListeningForKeystrokes;                            // 0x02D0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   PendingNewKey;                                     // 0x02D8(0x0018)(BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BindName;                                          // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   BindFriendlyName;                                  // 0x02F8(0x0018)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	float                                         AxisScale;                                         // 0x0310(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputKeyCategoryV2                           KeyCategory;                                       // 0x0314(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USettingsMenuGamepad*                   SettingsMenu;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAxisMappingStruct                     AxisMappingData;                                   // 0x0320(0x0028)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FActionMappingStruct                   ActionMappingData;                                 // 0x0348(0x0028)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   UnboundText;                                       // 0x0370(0x0018)(BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<class FText>                           ConflictBindFriendlyNamesList;                     // 0x0388(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UTextBlock*                             BindingText;                                       // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Button_Selected;                                   // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void AddConflictingKeybindsToList(class FName MappingName, float Scale, TArray<struct FAxisMappingStruct>* AxesList, TArray<struct FActionMappingStruct>* ActionsList);
	void AddKeybindsToList(const TArray<struct FKeyBinding>& Keybinds, class FName MappingName, float Scale, TArray<struct FAxisMappingStruct>* AxesList, TArray<struct FActionMappingStruct>* ActionsList);
	void BindingFinished();
	class FText CheckConflictingKeybindsAreUnbindable(const TArray<struct FAxisMappingStruct>& AxesList, const TArray<struct FActionMappingStruct>& ActionsList);
	void GetConflictingKeybindsWhenValid(const TArray<struct FAxisMappingStruct>& AxesList, const TArray<struct FActionMappingStruct>& ActionsList, bool* HasConflict, TArray<struct FAxisMappingStruct>* ConflictingAxes, TArray<struct FActionMappingStruct>* ConflictingActions);
	class FText GetConflictingKeybindText(const class FText& RequiredKeybindName);
	void GetInputBindingData(int32 Index_0, struct FAxisMappingStruct* AxisMapping, struct FActionMappingStruct* ActionMapping);
	bool RebindKey(const struct FKey& NewKey);
	void RemoveConflictKeybinds(const TArray<struct FAxisMappingStruct>& AxesList, const TArray<struct FActionMappingStruct>& ActionsList);
	void ResetBinding();
	void SetKeybindingText();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ControlsBind")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ControlsBind")
	}
	static class UControlsBind* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlsBind>();
	}
};
DUMPER7_ASSERTS_UControlsBind;

// Class ReadyOrNot.ItemCacheActor
// 0x0070 (0x0308 - 0x0298)
class AItemCacheActor final : public AActor
{
public:
	uint8                                         Pad_298[0x20];                                     // 0x0298(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   Mesh;                                              // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractableComponent*                 InteractableComponent;                             // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScoringComponent*                      ScoringComponent;                                  // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEvidenceComponent*                     EvidenceComponent;                                 // 0x02D0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowSecuring;                                    // 0x02D9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2DA[0x6];                                      // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReportVoiceLine;                                   // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ACyberneticCharacter* InteractingCharacter, class UCacheResourceComponent* AffectedResourceComponent)> OnCacheInteraction; // 0x02F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bIsSecured;                                        // 0x0300(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool GiveItemTo(class ACyberneticCharacter* Character);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ItemCacheActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ItemCacheActor")
	}
	static class AItemCacheActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AItemCacheActor>();
	}
};
DUMPER7_ASSERTS_AItemCacheActor;

// Class ReadyOrNot.TakeHostageActivity
// 0x0128 (0x0318 - 0x01F0)
class UTakeHostageActivity final : public UBaseActivity
{
public:
	class ACyberneticCharacter*                   Hostage;                                           // 0x01F0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeToSurrenderHostage;                            // 0x01F8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FC[0xC];                                      // 0x01FC(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotCharacter*>           SWATCharacters;                                    // 0x0208(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<uint32, class AReadyOrNotCharacter*>     ActivePathQueryIdToSWATMap;                        // 0x0218(0x0050)(Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class AReadyOrNotCharacter*                   ClosestSwat;                                       // 0x0268(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_270[0x8];                                      // 0x0270(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   LastEnemySensed;                                   // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, class UInteractionsData*>   HostageInteractions;                               // 0x0280(0x0050)(Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D0[0x48];                                     // 0x02D0(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EndTakingState();
	void EnterBeginHostageTakeState();
	void EnterEndHostageTakeState();
	void EnterMoveToState();
	void EnterTakingState();
	void EnterTurnState();
	void GetNearestSWAT();
	void OnHeardYell(class AReadyOrNotCharacter* Shouter, bool bLOS);
	void OnHostageKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void OnHostageTakeEndComplete_Driver(class AActor* Actor);
	void OnHostageTakeEndComplete_Slave(class AActor* Actor);
	void OnHostageTakeKillComplete_Driver(class AActor* Actor);
	void OnHostageTakeKillComplete_Slave(class AActor* Actor);
	void OnHostageTakeStartComplete_Driver(class AActor* Actor);
	void OnHostageTakeStartComplete_Slave(class AActor* Actor);
	void OnHostageTakeTurnComplete_Driver(class AActor* Actor);
	void OnHostageTakeTurnComplete_Slave(class AActor* Actor);
	void OnSpottedCharacter(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* SpottedCharacter);
	void OnStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
	void OnTakeDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
	void TickBeginHostageTakeState(float DeltaTime, float Uptime);
	void TickEndHostageTakeState(float DeltaTime, float Uptime);
	void TickMoveToState(float DeltaTime, float Uptime);
	void TickTakingState(float DeltaTime, float Uptime);
	void TickTurnState(float DeltaTime, float Uptime);

	bool CanEndHostageTake() const;
	bool CanIdle() const;
	bool CanStartHostageTake() const;
	bool ShouldTurn() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TakeHostageActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TakeHostageActivity")
	}
	static class UTakeHostageActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTakeHostageActivity>();
	}
};
DUMPER7_ASSERTS_UTakeHostageActivity;

// Class ReadyOrNot.Conversation
// 0x0058 (0x0080 - 0x0028)
class UConversation final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConversationData>              ConversationData;                                  // 0x0040(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 Idx)>     OnConversationContinuing;                          // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnEndConversation;                                 // 0x0070(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void BeginConversation(class ACyberneticCharacter* ConversationStarter, class FName ID);
	void BuildConversation(class FName ID);
	void ContinueConversation();
	struct FConversationData GetConversationData();
	class ACyberneticCharacter* GetSpeakerForConversationIdx(int32 Idx);
	class ACyberneticCharacter* GetSpeakerForId(class FName ID);
	void GiveWorldBuildingActivityByTag(class FName SpeakerId, class FName Tag);
	void GoToSpecificConversationIdAndContinueConversation(int32 Idx);
	void ReplyToConversation(class AReadyOrNotCharacter* Speaker);
	bool RequirementsMet();
	void TryGetSpeakers();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Conversation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Conversation")
	}
	static class UConversation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConversation>();
	}
};
DUMPER7_ASSERTS_UConversation;

// Class ReadyOrNot.FirefightGS
// 0x0018 (0x0940 - 0x0928)
class AFirefightGS : public AReadyOrNotGameState
{
public:
	class FText                                   FreeTextLocalized;                                 // 0x0928(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FirefightGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FirefightGS")
	}
	static class AFirefightGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFirefightGS>();
	}
};
DUMPER7_ASSERTS_AFirefightGS;

// Class ReadyOrNot.ConversationManager
// 0x0010 (0x02A8 - 0x0298)
class AConversationManager final : public AInfo
{
public:
	TArray<class UConversation*>                  RunningConversations;                              // 0x0298(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	void PlayConversationInst(class UConversation* Conversation, class ACyberneticCharacter* ConversationStarter);
	class UConversation* PlayPrebuiltConversation(TSubclassOf<class UConversation> Conversation, class ACyberneticCharacter* ConversationStarter, class FName ConversationId);
	class UConversation* TryPlayConversation(class FName ConversationId, class ACyberneticCharacter* ConversationStarter);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConversationManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConversationManager")
	}
	static class AConversationManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AConversationManager>();
	}
};
DUMPER7_ASSERTS_AConversationManager;

// Class ReadyOrNot.UseabilityInterface
// 0x0000 (0x0000 - 0x0000)
class IUseabilityInterface final
{
public:
	void DoubleTapInteract(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
	void EndFire(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
	void EndInteract(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
	void Fire(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
	void Interact(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
	void MeleeInteract(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
	void OnFocusGain(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
	void OnFocusLost(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);

	bool CanInteract() const;
	bool CanInteractThroughHitActors(const struct FHitResult& Hit) const;
	class FText DetermineActionText() const;
	class FName DetermineAnimatedIcon() const;
	float DetermineCurrentProgress() const;
	EInputEvent DetermineInputEvent() const;
	float DetermineInteractionDistance() const;
	class UInteractableComponent* GetInteractableComponent() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UseabilityInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UseabilityInterface")
	}
	static class IUseabilityInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IUseabilityInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IUseabilityInterface;

// Class ReadyOrNot.COOPScorePopUp
// 0x0008 (0x02D0 - 0x02C8)
class UCOOPScorePopUp : public UUserWidget
{
public:
	class UFMODEvent*                             Reward;                                            // 0x02C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void PlayRewardSound();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("COOPScorePopUp")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"COOPScorePopUp")
	}
	static class UCOOPScorePopUp* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCOOPScorePopUp>();
	}
};
DUMPER7_ASSERTS_UCOOPScorePopUp;

// Class ReadyOrNot.CoverFinderPreview
// 0x0528 (0x07C0 - 0x0298)
class ACoverFinderPreview final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SearchExtent;                                      // 0x02A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SearchDangerZone;                                  // 0x02A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECoverSearchMode                              SearchMode;                                        // 0x02A8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECoverStance                                  CoverStance;                                       // 0x02A9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCoverQueryTest                        SearchModeTest;                                    // 0x02B0(0x0050)(Edit, NativeAccessSpecifierPublic)
	struct FCoverQueryTest                        HeightDifferenceTest;                              // 0x0300(0x0050)(Edit, NativeAccessSpecifierPublic)
	struct FCoverQueryTest                        LineOfSightTest;                                   // 0x0350(0x0050)(Edit, NativeAccessSpecifierPublic)
	struct FCoverQueryTest                        CoverBehindInstigatorTest;                         // 0x03A0(0x0050)(Edit, NativeAccessSpecifierPublic)
	struct FCoverQueryTest                        SufficientCoverTest;                               // 0x03F0(0x0050)(Edit, NativeAccessSpecifierPublic)
	struct FCoverQueryTest                        DistanceToInstigatorTest;                          // 0x0440(0x0050)(Edit, NativeAccessSpecifierPublic)
	struct FCoverQueryTest                        DirectionMatchTest;                                // 0x0490(0x0050)(Edit, NativeAccessSpecifierPublic)
	struct FCoverQueryTest                        RoomTest;                                          // 0x04E0(0x0050)(Edit, NativeAccessSpecifierPublic)
	int32                                         NumCoverPointsFound;                               // 0x0530(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CoverSearchTimeMs;                                 // 0x0534(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ACoverPoint>             BestCover;                                         // 0x0538(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bDrawLabels : 1;                                   // 0x0540(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawScore : 1;                                    // 0x0540(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawPass : 1;                                     // 0x0540(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawFail : 1;                                     // 0x0540(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawFailReason : 1;                               // 0x0540(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponent;                                    // 0x0548(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_550[0x270];                                    // 0x0550(0x0270)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoverFinderPreview")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoverFinderPreview")
	}
	static class ACoverFinderPreview* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACoverFinderPreview>();
	}
};
DUMPER7_ASSERTS_ACoverFinderPreview;

// Class ReadyOrNot.ItemVisualizationComponent
// 0x0040 (0x0FE0 - 0x0FA0)
class UItemVisualizationComponent final : public USkeletalMeshComponent
{
public:
	EItemVisualizationType                        VisualizationType;                                 // 0x0FA0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FA1[0x7];                                      // 0x0FA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              BasedOfItem;                                       // 0x0FA8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   MagazineComp;                                      // 0x0FB0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 ScopeAttachment;                                   // 0x0FB8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 MuzzleAttachment;                                  // 0x0FC0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 UnderbarrelAttachment;                             // 0x0FC8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 OverbarrelAttachment;                              // 0x0FD0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_FD8[0x8];                                      // 0x0FD8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ItemVisualizationComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ItemVisualizationComponent")
	}
	static class UItemVisualizationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemVisualizationComponent>();
	}
};
DUMPER7_ASSERTS_UItemVisualizationComponent;

// Class ReadyOrNot.WeaponTrigger
// 0x0008 (0x0058 - 0x0050)
class UWeaponTrigger final : public UInputTrigger
{
public:
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponTrigger")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponTrigger")
	}
	static class UWeaponTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponTrigger>();
	}
};
DUMPER7_ASSERTS_UWeaponTrigger;

// Class ReadyOrNot.CoverFinderRenderingComponent
// 0x00B0 (0x0620 - 0x0570)
class UCoverFinderRenderingComponent final : public UPrimitiveComponent
{
public:
	uint8                                         Pad_570[0xB0];                                     // 0x0570(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoverFinderRenderingComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoverFinderRenderingComponent")
	}
	static class UCoverFinderRenderingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCoverFinderRenderingComponent>();
	}
};
DUMPER7_ASSERTS_UCoverFinderRenderingComponent;

// Class ReadyOrNot.GamepadHelperLib
// 0x0000 (0x0028 - 0x0028)
class UGamepadHelperLib final : public UBlueprintFunctionLibrary
{
public:
	static bool EnableCommonInputPreprocessing(class UWorld* World, bool Enable);
	static int32 GetActiveButton(int32 CurrentIndex, int32 navigationDirection, const TArray<bool>& buttonAvailability);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GamepadHelperLib")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GamepadHelperLib")
	}
	static class UGamepadHelperLib* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadHelperLib>();
	}
};
DUMPER7_ASSERTS_UGamepadHelperLib;

// Class ReadyOrNot.CoverLandmark
// 0x0348 (0x05E0 - 0x0298)
class ACoverLandmark final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponent;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bEnabled : 1;                                      // 0x02A8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LandmarkName;                                      // 0x02B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECoverLandmarkType                            Type;                                              // 0x02C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USearchLandmarkActivity>    CustomSearchActivityClass;                         // 0x02C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SwatSearchAnimation;                               // 0x02D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                  CoverObject;                                       // 0x02E0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bDisableCollision : 1;                             // 0x0308(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ETeamType>                             AllowedTeamsForCover;                              // 0x0310(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class AStaticMeshActor>> IgnoredMeshActors;                                // 0x0320(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         CooldownAfterUse;                                  // 0x0330(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCharacterHiddenInWaitingState;                    // 0x0334(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_335[0xB];                                      // 0x0335(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ExitTriggerBoxTransform;                           // 0x0340(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ExitTriggerBoxExtent;                              // 0x03A0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B8[0x8];                                      // 0x03B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             IdleTriggerBoxTransform;                           // 0x03C0(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                IdleTriggerBoxExtent;                              // 0x0420(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCoverLandmarkAnimData                 Entry;                                             // 0x0438(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FCoverLandmarkAnimData                 Loop;                                              // 0x0490(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FCoverLandmarkAnimData                 Exit;                                              // 0x04E8(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         bAllowAbruptExit : 1;                              // 0x0540(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACoverLandmarkProxy*>            EntryPoints;                                       // 0x0548(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ACoverLandmarkProxy*>            ExitPoints;                                        // 0x0558(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)
	class ACoverLandmarkProxy*                    IdlePoint;                                         // 0x0568(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                            OccupiedByController;                              // 0x0570(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                            LastUsedByController;                              // 0x0578(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotCharacter*                   CurrentSwatWithLineOfSight;                        // 0x0580(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bClearedBySwat;                                    // 0x0588(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AController*, float>               CooldownMap;                                       // 0x0590(0x0050)(Protected, NativeAccessSpecifierProtected)

public:
	void AddCooldownFor(class AController* InController, float InCooldownTime);
	void DisableLandmark();
	void EnableLandmark();
	void PreviewEntryAnim();
	void PreviewExitAnim();
	void PreviewIdleAnim();
	void ToggleLandmarkEnabled(bool bEnable);

	bool IsCooldownActiveFor(const class AController* InController) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoverLandmark")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoverLandmark")
	}
	static class ACoverLandmark* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACoverLandmark>();
	}
};
DUMPER7_ASSERTS_ACoverLandmark;

// Class ReadyOrNot.CoverLandmarkProxy
// 0x0018 (0x02B0 - 0x0298)
class ACoverLandmarkProxy final : public AActor
{
public:
	class ACoverLandmark*                         LandmarkOwner;                                     // 0x0298(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECoverLandmarkAnimDirection                   EntryDirection;                                    // 0x02A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECoverLandmarkAnimDirection                   ExitDirection;                                     // 0x02A1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponent;                                    // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void DisableProxyInteraction();
	void EnableProxyInteraction();
	void OnProxyEnd(bool bSuccess);
	void OnProxyUse(bool bIsActive);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoverLandmarkProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoverLandmarkProxy")
	}
	static class ACoverLandmarkProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACoverLandmarkProxy>();
	}
};
DUMPER7_ASSERTS_ACoverLandmarkProxy;

// Class ReadyOrNot.CoverQueryResultInterface
// 0x0000 (0x0000 - 0x0000)
class ICoverQueryResultInterface final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoverQueryResultInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoverQueryResultInterface")
	}
	static class ICoverQueryResultInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ICoverQueryResultInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ICoverQueryResultInterface;

// Class ReadyOrNot.KillHostageChanceAnimNotify
// 0x0000 (0x0038 - 0x0038)
class UKillHostageChanceAnimNotify final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("KillHostageChanceAnimNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"KillHostageChanceAnimNotify")
	}
	static class UKillHostageChanceAnimNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKillHostageChanceAnimNotify>();
	}
};
DUMPER7_ASSERTS_UKillHostageChanceAnimNotify;

// Class ReadyOrNot.CrossplayWarningWidget
// 0x0000 (0x02C8 - 0x02C8)
class UCrossplayWarningWidget : public UUserWidget
{
public:
	void SetUseCountdown(bool bInUseCountdown);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CrossplayWarningWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CrossplayWarningWidget")
	}
	static class UCrossplayWarningWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrossplayWarningWidget>();
	}
};
DUMPER7_ASSERTS_UCrossplayWarningWidget;

// Class ReadyOrNot.FootstepFoleyComponent
// 0x0020 (0x05D0 - 0x05B0)
class UFootstepFoleyComponent final : public UBoxComponent
{
public:
	class UFMODEvent*                             SetEventTo;                                        // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SetEventToRemote;                                  // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayOnPlayer;                                     // 0x05C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayEveryStep;                                    // 0x05C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C2[0xE];                                      // 0x05C2(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void StartedOverlapping(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void StoppedOverlapping(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FootstepFoleyComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FootstepFoleyComponent")
	}
	static class UFootstepFoleyComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFootstepFoleyComponent>();
	}
};
DUMPER7_ASSERTS_UFootstepFoleyComponent;

// Class ReadyOrNot.CSGasDamageType
// 0x0000 (0x07B0 - 0x07B0)
class UCSGasDamageType : public UStunDamage
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CSGasDamageType")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CSGasDamageType")
	}
	static class UCSGasDamageType* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCSGasDamageType>();
	}
};
DUMPER7_ASSERTS_UCSGasDamageType;

// Class ReadyOrNot.ArmourMaterial
// 0x0098 (0x00C8 - 0x0030)
class UArmourMaterial final : public UPrimaryDataAsset
{
public:
	float                                         DamageReduction;                                   // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDamageReduction;                                // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDurabilityEnabled;                                // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Durability;                                        // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ArmourLevel;                                       // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpallingChance;                                    // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MovementSpeedModifier;                             // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MovementAccelerationModifier;                      // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        HitParticle;                                       // 0x0050(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   DisplayName;                                       // 0x0058(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x0070(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x0078(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              LoadoutIcon;                                       // 0x0090(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<EGameVersionRestriction>               LockedToDLC;                                       // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ArmourMaterial")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ArmourMaterial")
	}
	static class UArmourMaterial* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArmourMaterial>();
	}
};
DUMPER7_ASSERTS_UArmourMaterial;

// Class ReadyOrNot.CSGasData
// 0x0038 (0x0068 - 0x0030)
class UCSGasData final : public UDataAsset
{
public:
	class UEnvQuery*                              GasGenerationQuery;                                // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageType>                DamageType;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class APepperGasCloud>            PepperGasCloud;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SafePointsBufferDistance;                          // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NavModifierExtents;                                // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CSGasData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CSGasData")
	}
	static class UCSGasData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCSGasData>();
	}
};
DUMPER7_ASSERTS_UCSGasData;

// Class ReadyOrNot.ReadyOrNotCSGasSettings
// 0x0028 (0x0060 - 0x0038)
class UReadyOrNotCSGasSettings final : public UDeveloperSettings
{
public:
	TSoftObjectPtr<class UCSGasData>              GasDataAsset;                                      // 0x0038(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotCSGasSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotCSGasSettings")
	}
	static class UReadyOrNotCSGasSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotCSGasSettings>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotCSGasSettings;

// Class ReadyOrNot.GunGameGM
// 0x0310 (0x0D30 - 0x0A20)
class AGunGameGM : public AReadyOrNotGameMode_PVP
{
public:
	float                                         RespawnTime;                                       // 0x0A20(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuddenDeath;                                      // 0x0A24(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A25[0x3];                                      // 0x0A25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           Itemlist;                                          // 0x0A28(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FSavedLoadout                          DefaultItems;                                      // 0x0A38(0x02E8)(Edit, NativeAccessSpecifierPublic)
	int32                                         KillsToProgress;                                   // 0x0D20(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D24[0xC];                                      // 0x0D24(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class ABaseItem* EquipNextGun(class APlayerCharacter* Player, bool bAdvanceGunIdx);
	TArray<class AReadyOrNotPlayerState*> FindTopKillers();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GunGameGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GunGameGM")
	}
	static class AGunGameGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGunGameGM>();
	}
};
DUMPER7_ASSERTS_AGunGameGM;

// Class ReadyOrNot.MunitionsSlot
// 0x0088 (0x0378 - 0x02F0)
class UMunitionsSlot : public UCommonUserWidget
{
public:
	int32                                         SlotCount;                                         // 0x02F0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBox*                         ElementContainer;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotGameState*                   gs;                                                // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasElementsPrevious;                              // 0x0308(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasElementsNext;                                  // 0x0309(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UReadyOrNotLoadoutManager*              LoadoutFunctionLibrary;                            // 0x0310(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             PrimaryAmmoIcon;                                   // 0x0318(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             SecondaryAmmoIcon;                                 // 0x0320(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             CS_GasIcon;                                        // 0x0328(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             FlashbangIcon;                                     // 0x0330(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             StingerIcon;                                       // 0x0338(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             C2ChargeIcon;                                      // 0x0340(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             WedgeIcon;                                         // 0x0348(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             PeppersprayIcon;                                   // 0x0350(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             LockpickGunIcon;                                   // 0x0358(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             TaserIcon;                                         // 0x0360(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ABaseItem>>          SlotItems;                                         // 0x0368(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	void CreateElement(class UTexture2D* Icon, int32 Amount, bool bIsAmmoElement, const class FText& AmmoType);
	void CreateSeparator(bool bShouldCreateSeparator);
	void SetGrenadeSlot();
	void SetPreviewGrenadeSlot(const struct FSavedLoadout& PreviewLoadout);
	void SetPreviewPrimaryAmmoSlot(const struct FSavedLoadout& PreviewLoadout);
	void SetPreviewSecondaryAmmoSlot(const struct FSavedLoadout& PreviewLoadout);
	void SetPreviewTacticalSlot(const struct FSavedLoadout& PreviewLoadout);
	void SetPrimaryAmmoSlot();
	void SetSecondaryAmmoSlot();
	void SetTacticalSlot();
	void UpdateElementContainer();
	void UpdateElementContainerPreview(const struct FSavedLoadout& PreviewLoadout);
	void UpdateSlotCount();
	void UpdateSlotText(int32 CurrentSlots, int32 MaxSlots);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MunitionsSlot")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MunitionsSlot")
	}
	static class UMunitionsSlot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMunitionsSlot>();
	}
};
DUMPER7_ASSERTS_UMunitionsSlot;

// Class ReadyOrNot.CSGasManager
// 0x0210 (0x0250 - 0x0040)
class UCSGasManager final : public UTickableWorldSubsystem
{
public:
	class UEnvQuery*                              GasGenerationQuery;                                // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxGasPointsPerSource;                             // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 NavVolumesContainer;                               // 0x0050(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCSGasData*                             GasData;                                           // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         GasSources;                                        // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                        SafePoints;                                        // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                        GasPoints;                                         // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AReadyOrNotCharacter*>           CharactersInGasSourceRadius;                       // 0x0090(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                         PepperbalLGasSources;                              // 0x00A0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B0[0x8];                                       // 0x00B0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NavModifierBoxExtents;                             // 0x00B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D0[0xC0];                                      // 0x00D0(0x00C0)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class AActor*>                    QueryIdToGasSourceMap;                             // 0x0190(0x0050)(NativeAccessSpecifierPrivate)
	TMap<class AActor*, struct FGasVolumesContainer> GasSourceToGasVolumesMap;                       // 0x01E0(0x0050)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UGasVolumeComponent*>            FreeGasVolumes;                                    // 0x0230(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                        NewGasPoints;                                      // 0x0240(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	static class UCSGasManager* Get(class UWorld* World);

	void AddGasSource(class AActor* Source);
	void AddPepperballLocation(class APepperProjectile* Projectile, const struct FVector& Location, const struct FVector& Normal);
	void GetGasSafePoints(TArray<struct FVector>* OutGasSafePoints);
	int32 GetGasSourceCount();
	void GetGasSources(TArray<class AActor*>* OutGasSources);
	void OnPepperCloudSpawned(struct FVector* Location);
	void RemoveGasSource(class AActor* Source);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CSGasManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CSGasManager")
	}
	static class UCSGasManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCSGasManager>();
	}
};
DUMPER7_ASSERTS_UCSGasManager;

// Class ReadyOrNot.GammaSetting
// 0x0008 (0x0420 - 0x0418)
class UGammaSetting : public UCommonActivatableWidget
{
public:
	float                                         GammaValue;                                        // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void LoadAndSetGammaValue();
	static void SetGammaValue(float NewGammaValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GammaSetting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GammaSetting")
	}
	static class UGammaSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGammaSetting>();
	}
};
DUMPER7_ASSERTS_UGammaSetting;

// Class ReadyOrNot.CTFTriggerBox
// 0x0008 (0x02A8 - 0x02A0)
class ACTFTriggerBox final : public ATriggerBox
{
public:
	class UTextRenderComponent*                   TextRender;                                        // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool FulfillsRequirements();
	void OnBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CTFTriggerBox")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CTFTriggerBox")
	}
	static class ACTFTriggerBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACTFTriggerBox>();
	}
};
DUMPER7_ASSERTS_ACTFTriggerBox;

// Class ReadyOrNot.ThrownChemlight
// 0x0060 (0x0658 - 0x05F8)
class AThrownChemlight : public AThrownItem
{
public:
	class UPointLightComponent*                   LightSource;                                       // 0x05F8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ChemlightColor;                                    // 0x0600(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EmissiveBrightness;                                // 0x0610(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightIntensity;                                    // 0x0614(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InitialGlowSpeed;                                  // 0x0618(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightDimSpeed;                                     // 0x061C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DestroyedDimSpeed;                                 // 0x0620(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartDimTime;                                      // 0x0624(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TotalLifeTime;                                     // 0x0628(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     DestroyedDecal;                                    // 0x0630(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightZOffset;                                      // 0x0638(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightAdditionalHeight;                             // 0x063C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DestroyedDecalSize;                                // 0x0640(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_644[0xC];                                      // 0x0644(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               ChemlightMaterialInstance;                         // 0x0650(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ThrownChemlight")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ThrownChemlight")
	}
	static class AThrownChemlight* GetDefaultObj()
	{
		return GetDefaultObjImpl<AThrownChemlight>();
	}
};
DUMPER7_ASSERTS_AThrownChemlight;

// Class ReadyOrNot.CTF_Flag
// 0x0028 (0x02C0 - 0x0298)
class ACTF_Flag : public AActor
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0298(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   FlagMeshComponent;                                 // 0x02A0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          CaptureBoxComponent;                               // 0x02A8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObjectiveMarkerComponent*              ObjectiveMarkerComponent;                          // 0x02B0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   BoneToAttach;                                      // 0x02B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnFlagBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ResetFlagTransforms();

	class FName GetBoneToAttachName() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CTF_Flag")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CTF_Flag")
	}
	static class ACTF_Flag* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACTF_Flag>();
	}
};
DUMPER7_ASSERTS_ACTF_Flag;

// Class ReadyOrNot.CTF_FlagSpawnPoint
// 0x0000 (0x02B0 - 0x02B0)
class ACTF_FlagSpawnPoint final : public AActorSpawnPoint
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CTF_FlagSpawnPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CTF_FlagSpawnPoint")
	}
	static class ACTF_FlagSpawnPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACTF_FlagSpawnPoint>();
	}
};
DUMPER7_ASSERTS_ACTF_FlagSpawnPoint;

// Class ReadyOrNot.HardCoverCombatMove
// 0x0400 (0x0630 - 0x0230)
class UHardCoverCombatMove final : public UBaseCombatMoveActivity
{
public:
	uint8                                         Pad_230[0x78];                                     // 0x0230(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class UTakeCoverActivity*                     TakeCoverActivity;                                 // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTakeCoverAtLandmarkActivity*           TakeCoverAtLandmarkActivity;                       // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B8[0x270];                                    // 0x02B8(0x0270)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   LastTrackedEnemy;                                  // 0x0528(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCoverInstigatorStimulus               LastCoverInstigatorStimulus;                       // 0x0530(0x0080)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FCoverInstigatorStimulus               PendingCoverInstigatorStimulus;                    // 0x05B0(0x0080)(NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	void OnTakeCoverActivityFinished(class UBaseActivity* Activity, class ACyberneticController* Controller);
	void OnTakeCoverAtLandmarkActivityFinished(class UBaseActivity* Activity, class ACyberneticController* Controller);
	void TrackNewEnemy(class AReadyOrNotCharacter* NewTrackedEnemy);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HardCoverCombatMove")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HardCoverCombatMove")
	}
	static class UHardCoverCombatMove* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHardCoverCombatMove>();
	}
};
DUMPER7_ASSERTS_UHardCoverCombatMove;

// Class ReadyOrNot.MusicSequencerBase
// 0x0008 (0x02A0 - 0x0298)
class AMusicSequencerBase : public AActor
{
public:
	class USceneComponent*                        Scene;                                             // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Multicast_ResetAudio();
	void Multicast_StartTransitioningToState(EMusicState NewState);
	void Multicast_StopAudio();
	void OnAudioReset();
	void OnStartedTransitioningToState(EMusicState NewState);
	void OnStoppedAudio();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MusicSequencerBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MusicSequencerBase")
	}
	static class AMusicSequencerBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMusicSequencerBase>();
	}
};
DUMPER7_ASSERTS_AMusicSequencerBase;

// Class ReadyOrNot.CurrentMatchRoundWidget
// 0x0010 (0x0300 - 0x02F0)
class UCurrentMatchRoundWidget final : public UBaseWidget
{
public:
	class UTextBlock*                             CurrentRound_Text;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             CurrentRound_Text_Style2;                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CurrentMatchRoundWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CurrentMatchRoundWidget")
	}
	static class UCurrentMatchRoundWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurrentMatchRoundWidget>();
	}
};
DUMPER7_ASSERTS_UCurrentMatchRoundWidget;

// Class ReadyOrNot.CurrentUserVisualization
// 0x0008 (0x02F8 - 0x02F0)
class UCurrentUserVisualization : public UCommonUserWidget
{
public:
	class URichTextBlock*                         Name_0;                                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CurrentUserVisualization")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CurrentUserVisualization")
	}
	static class UCurrentUserVisualization* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurrentUserVisualization>();
	}
};
DUMPER7_ASSERTS_UCurrentUserVisualization;

// Class ReadyOrNot.CursorWidget
// 0x0000 (0x02C8 - 0x02C8)
class UCursorWidget : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CursorWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CursorWidget")
	}
	static class UCursorWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCursorWidget>();
	}
};
DUMPER7_ASSERTS_UCursorWidget;

// Class ReadyOrNot.CustomizationDataBase
// 0x01A0 (0x01D0 - 0x0030)
class UCustomizationDataBase : public UPrimaryDataAsset
{
public:
	ECustomizationType                            Type;                                              // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomizationDataBase*                 Parent;                                            // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Name_0;                                            // 0x0040(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   Variant;                                           // 0x0058(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0070(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0088(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>      VariantIcon;                                       // 0x00B0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DisplayPriority;                                   // 0x00D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           RequiredTags;                                      // 0x00E0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                   RequirementsText;                                  // 0x00F0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSet<ECustomizationType>                      TypesToHide;                                       // 0x0108(0x0050)(Edit, NativeAccessSpecifierPublic)
	TSet<TSoftObjectPtr<class UCustomizationDataBase>> CustomizationOverrides;                       // 0x0158(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bShowInLoadout;                                    // 0x01A8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EGameVersionRestriction>               LockedToDLC;                                       // 0x01B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UCustomizationSocket*>           Extras;                                            // 0x01C0(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationDataBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationDataBase")
	}
	static class UCustomizationDataBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationDataBase>();
	}
};
DUMPER7_ASSERTS_UCustomizationDataBase;

// Class ReadyOrNot.HelicopterTriggerComponent
// 0x0008 (0x00A8 - 0x00A0)
class UHelicopterTriggerComponent : public UActorComponent
{
public:
	bool                                          bAllowMultiTrigger;                                // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoTrigger();
	void ExitTrigger();
	void OnTrigger();
	void OnTriggerExit();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HelicopterTriggerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HelicopterTriggerComponent")
	}
	static class UHelicopterTriggerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHelicopterTriggerComponent>();
	}
};
DUMPER7_ASSERTS_UHelicopterTriggerComponent;

// Class ReadyOrNot.NavigationSplinePathPreview
// 0x0080 (0x0318 - 0x0298)
class ANavigationSplinePathPreview final : public AActor
{
public:
	float                                         PathPointDistanceThreshold;                        // 0x0298(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         PathPointSubStep;                                  // 0x029C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bDrawRawPath : 1;                                  // 0x02A0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bDrawRawPathPoints : 1;                            // 0x02A0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bDrawSmoothedPath : 1;                             // 0x02A0(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bDrawSmoothedPathPoints : 1;                       // 0x02A0(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bDrawSmoothedPathPointsDetail : 1;                 // 0x02A0(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PathLineThickness;                                 // 0x02A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A8[0x70];                                     // 0x02A8(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavigationSplinePathPreview")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavigationSplinePathPreview")
	}
	static class ANavigationSplinePathPreview* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANavigationSplinePathPreview>();
	}
};
DUMPER7_ASSERTS_ANavigationSplinePathPreview;

// Class ReadyOrNot.CustomizationEmpty
// 0x0000 (0x01D0 - 0x01D0)
class UCustomizationEmpty final : public UCustomizationDataBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationEmpty")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationEmpty")
	}
	static class UCustomizationEmpty* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationEmpty>();
	}
};
DUMPER7_ASSERTS_UCustomizationEmpty;

// Class ReadyOrNot.GrenadeLauncher
// 0x0360 (0x1C10 - 0x18B0)
class AGrenadeLauncher : public ABaseMagazineWeapon
{
public:
	TArray<class AGrenadeProjectile*>             AppliedGrenadeProjectilePaths;                     // 0x18B0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class AGrenadeProjectile*                     LastSimulatedGrenade;                              // 0x18C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         LaunchDistance;                                    // 0x18C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         GrenadeBounciness;                                 // 0x18CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_18D0[0x8];                                     // 0x18D0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        BounceParticleEffect;                              // 0x18D8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFMODEvent*                             BounceFMODEvent;                                   // 0x18E0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                        FirstBouncePath;                                   // 0x18E8(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FHitResult                             FirstBounceHit;                                    // 0x18F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_19E0[0x8];                                     // 0x19E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        SecondBouncePath;                                  // 0x19E8(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FHitResult                             SecondBounceHit;                                   // 0x19F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1AE0[0x8];                                     // 0x1AE0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        ThirdBouncePath;                                   // 0x1AE8(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FHitResult                             ThirdBounceHit;                                    // 0x1AF8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1BE0[0x18];                                    // 0x1BE0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BouncePt1;                                         // 0x1BF8(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         BouncePt2;                                         // 0x1BFC(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         BouncePt3;                                         // 0x1C00(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1C04[0xC];                                     // 0x1C04(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UpdateServerPath(const TArray<struct FVector_NetQuantize>& Path, int32 Bounce1, int32 Bounce2, int32 Bounce3);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GrenadeLauncher")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GrenadeLauncher")
	}
	static class AGrenadeLauncher* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGrenadeLauncher>();
	}
};
DUMPER7_ASSERTS_AGrenadeLauncher;

// Class ReadyOrNot.CustomizationSkeletalMesh
// 0x0098 (0x0268 - 0x01D0)
class UCustomizationSkeletalMesh : public UCustomizationDataBase
{
public:
	TSoftObjectPtr<class USkeletalMesh>           SkeletalMesh;                                      // 0x01D0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Socket;                                            // 0x01F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseMasterPose;                                    // 0x0200(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseHeadSkelMaster;                                // 0x0201(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCustomizationMaterialSlot>     MaterialOverrides;                                 // 0x0208(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FName, class FName>                SocketOverridesMap;                                // 0x0218(0x0050)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationSkeletalMesh")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationSkeletalMesh")
	}
	static class UCustomizationSkeletalMesh* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationSkeletalMesh>();
	}
};
DUMPER7_ASSERTS_UCustomizationSkeletalMesh;

// Class ReadyOrNot.CustomizationStaticMesh
// 0x0030 (0x0200 - 0x01D0)
class UCustomizationStaticMesh final : public UCustomizationDataBase
{
public:
	TSoftObjectPtr<class UStaticMesh>             StaticMesh;                                        // 0x01D0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Socket;                                            // 0x01F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationStaticMesh")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationStaticMesh")
	}
	static class UCustomizationStaticMesh* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationStaticMesh>();
	}
};
DUMPER7_ASSERTS_UCustomizationStaticMesh;

// Class ReadyOrNot.CustomizationBlueprint
// 0x0038 (0x0208 - 0x01D0)
class UCustomizationBlueprint final : public UCustomizationDataBase
{
public:
	TSoftClassPtr<class UClass>                   BlueprintClass;                                    // 0x01D0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTickInThirdPerson;                                // 0x01F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Socket;                                            // 0x01FC(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationBlueprint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationBlueprint")
	}
	static class UCustomizationBlueprint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationBlueprint>();
	}
};
DUMPER7_ASSERTS_UCustomizationBlueprint;

// Class ReadyOrNot.HelicopterPathNode
// 0x0030 (0x02C8 - 0x0298)
class AHelicopterPathNode final : public AActor
{
public:
	ENodeBehavior                                 NodeBehavior;                                      // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaitTime;                                          // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bRotateToNodeRotation;                             // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotateToNodeThreshold;                             // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EEasingFunc                                   RotateToNodeEase;                                  // 0x02A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bRotateToForward;                                  // 0x02A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2AA[0x2];                                      // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ArrivalThreshold;                                  // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SpeedOverride;                                     // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RotationRateOverride;                              // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHelicopterVOLine                             OnArriveSound;                                     // 0x02B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHelicopterVOLine                             OnDepartSound;                                     // 0x02B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2BA[0xE];                                      // 0x02BA(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FinishWait();
	void MulticastPlayArriveSound();
	void MulticastPlayDepartSound();
	void OnArriveAtNode(class AHelicopter* Helicopter);
	void OnDepartNode(class AHelicopter* Helicopter);
	void ResetNode();
	void UnlockNode();

	EEasingFunc GetRotateToNodeEase() const;
	float GetRotateToNodeThreshold() const;
	float GetRotationRateOverride() const;
	float GetSpeedOverride() const;
	bool IsAtNode(const struct FVector& Position) const;
	bool IsLocked() const;
	bool ShouldRotateToForward() const;
	bool ShouldRotateToNode() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HelicopterPathNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HelicopterPathNode")
	}
	static class AHelicopterPathNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHelicopterPathNode>();
	}
};
DUMPER7_ASSERTS_AHelicopterPathNode;

// Class ReadyOrNot.TugOfWarGM
// 0x0040 (0x0A60 - 0x0A20)
class ATugOfWarGM : public AReadyOrNotGameMode_PVP
{
public:
	TArray<class APlayerCharacter*>               ArrestedBlueCharacters;                            // 0x0A20(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class APlayerCharacter*>               ArrestedRedCharacters;                             // 0x0A30(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UFMODEvent*                             TOWVictorySound;                                   // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MatchLoopMusic;                                    // 0x0A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MatchStartMusic;                                   // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MatchEndMusic;                                     // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TugOfWarGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TugOfWarGM")
	}
	static class ATugOfWarGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATugOfWarGM>();
	}
};
DUMPER7_ASSERTS_ATugOfWarGM;

// Class ReadyOrNot.NinebangDamageType
// 0x0000 (0x07B0 - 0x07B0)
class UNinebangDamageType : public UStunDamage
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NinebangDamageType")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NinebangDamageType")
	}
	static class UNinebangDamageType* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNinebangDamageType>();
	}
};
DUMPER7_ASSERTS_UNinebangDamageType;

// Class ReadyOrNot.CustomizationSkin
// 0x0058 (0x0228 - 0x01D0)
class UCustomizationSkin final : public UCustomizationDataBase
{
public:
	TArray<class FName>                           CompatibleItemTags;                                // 0x01D0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>           MeshOverride;                                      // 0x01E0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCustomizationMaterialSlot>     MaterialSlots;                                     // 0x0208(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseSocketOverride;                                // 0x0218(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketOverride;                                    // 0x021C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationSkin")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationSkin")
	}
	static class UCustomizationSkin* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationSkin>();
	}
};
DUMPER7_ASSERTS_UCustomizationSkin;

// Class ReadyOrNot.GamepadLayoutVerticalBox
// 0x0038 (0x01E8 - 0x01B0)
class UGamepadLayoutVerticalBox final : public UVerticalBox
{
public:
	struct FGamepadControlSchemeKeyPair           TargetInput;                                       // 0x01B0(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bIsLeftDirection;                                  // 0x01E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GamepadLayoutVerticalBox")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GamepadLayoutVerticalBox")
	}
	static class UGamepadLayoutVerticalBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadLayoutVerticalBox>();
	}
};
DUMPER7_ASSERTS_UGamepadLayoutVerticalBox;

// Class ReadyOrNot.CustomizationCharacter
// 0x00A8 (0x0278 - 0x01D0)
class UCustomizationCharacter final : public UCustomizationDataBase
{
public:
	TSoftObjectPtr<class USkeletalMesh>           HeadMesh;                                          // 0x01D0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>      ArmsMaterial;                                      // 0x01F8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPoseAsset>              FaceROM;                                           // 0x0220(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HairMaterialIndex;                                 // 0x0248(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              ProfileImage;                                      // 0x0250(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationCharacter")
	}
	static class UCustomizationCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationCharacter>();
	}
};
DUMPER7_ASSERTS_UCustomizationCharacter;

// Class ReadyOrNot.CustomizationHelmet
// 0x0020 (0x0288 - 0x0268)
class UCustomizationHelmet final : public UCustomizationSkeletalMesh
{
public:
	TArray<int32>                                 HeadsetMaterialSlots;                              // 0x0268(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           CompatibleHelmetTags;                              // 0x0278(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationHelmet")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationHelmet")
	}
	static class UCustomizationHelmet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationHelmet>();
	}
};
DUMPER7_ASSERTS_UCustomizationHelmet;

// Class ReadyOrNot.CustomizationVoice
// 0x0008 (0x01D8 - 0x01D0)
class UCustomizationVoice final : public UCustomizationDataBase
{
public:
	class FName                                   VoiceHandle;                                       // 0x01D0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationVoice")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationVoice")
	}
	static class UCustomizationVoice* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationVoice>();
	}
};
DUMPER7_ASSERTS_UCustomizationVoice;

// Class ReadyOrNot.ExfilPortal
// 0x0050 (0x02E8 - 0x0298)
class AExfilPortal : public AActor
{
public:
	uint8                                         Pad_298[0x10];                                     // 0x0298(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableComponent*                 InteractableComponent;                             // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScoringComponent*                      ScoringComponent;                                  // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                          CollisionComponent;                                // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ASWATCharacter*>                 OverlappingSwatMembers;                            // 0x02C0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>           CompsToOutline;                                    // 0x02D0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E0[0x1];                                      // 0x02E0(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bShowWarningDialogue;                              // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ActorBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void ActorEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void ExfiltrateMission();
	void MulticastEnableExfil(bool bEnable);
	void OnExfilEnabledChange(bool bEnabled);
	void OnExfilSwatMemberKilled(class AReadyOrNotCharacter* Killer, class AReadyOrNotCharacter* KilledMember);
	void OnMissionSoftComplete();
	void OnPlayerInteracted();
	void ServerTriggerExfil();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ExfilPortal")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ExfilPortal")
	}
	static class AExfilPortal* GetDefaultObj()
	{
		return GetDefaultObjImpl<AExfilPortal>();
	}
};
DUMPER7_ASSERTS_AExfilPortal;

// Class ReadyOrNot.CustomizationGloves
// 0x0008 (0x0270 - 0x0268)
class UCustomizationGloves final : public UCustomizationSkeletalMesh
{
public:
	int32                                         SkinMaterialIndex;                                 // 0x0268(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationGloves")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationGloves")
	}
	static class UCustomizationGloves* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationGloves>();
	}
};
DUMPER7_ASSERTS_UCustomizationGloves;

// Class ReadyOrNot.HealthStatusWidget
// 0x01D8 (0x04A0 - 0x02C8)
class UHealthStatusWidget final : public UUserWidget
{
public:
	class UImage*                                 Icon_Image;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             Percentage_Text;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            HealthIconBrush;                                   // 0x02E0(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	struct FSlateBrush                            EmptyHealthIconBrush;                              // 0x03B0(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	struct FLinearColor                           ZeroPercentColor;                                  // 0x0480(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           OneHundredPercentColor;                            // 0x0490(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void AutoDetermineIconImage();
	void UpdateHealthPercentage(float CurrentValue, float MaxValue);
	void UpdateIconColor(float CurrentValue, float MinValue, float MaxValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HealthStatusWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HealthStatusWidget")
	}
	static class UHealthStatusWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHealthStatusWidget>();
	}
};
DUMPER7_ASSERTS_UHealthStatusWidget;

// Class ReadyOrNot.CustomizationTattoo
// 0x0058 (0x0228 - 0x01D0)
class UCustomizationTattoo final : public UCustomizationDataBase
{
public:
	TSoftObjectPtr<class UTexture2D>              TattooTexture;                                     // 0x01D0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCustomizationMaterialSlot             ArmSlotOverride;                                   // 0x01F8(0x0030)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationTattoo")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationTattoo")
	}
	static class UCustomizationTattoo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationTattoo>();
	}
};
DUMPER7_ASSERTS_UCustomizationTattoo;

// Class ReadyOrNot.CustomizationExtra
// 0x0010 (0x02A8 - 0x0298)
class ACustomizationExtra : public AActor
{
public:
	class UCustomizationSocket*                   Socket;                                            // 0x0298(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotPlayerState*                 LastPlayerState;                                   // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationExtra")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationExtra")
	}
	static class ACustomizationExtra* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACustomizationExtra>();
	}
};
DUMPER7_ASSERTS_ACustomizationExtra;

// Class ReadyOrNot.CustomizationSocket
// 0x0078 (0x00A0 - 0x0028)
class UCustomizationSocket final : public UObject
{
public:
	TSoftClassPtr<class UClass>                   ActorClass;                                        // 0x0028(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AttachSocket;                                      // 0x0050(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RelativeLocation;                                  // 0x0058(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               RelativeRotation;                                  // 0x0070(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                RelativeScale;                                     // 0x0088(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationSocket")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationSocket")
	}
	static class UCustomizationSocket* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationSocket>();
	}
};
DUMPER7_ASSERTS_UCustomizationSocket;

// Class ReadyOrNot.ExperienceManager
// 0x0040 (0x00E0 - 0x00A0)
class UExperienceManager final : public UGameStateComponent
{
public:
	class UExperienceDefinition*                  CurrentExperience;                                 // 0x00A0(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A8[0x38];                                      // 0x00A8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_CurrentExperience();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ExperienceManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ExperienceManager")
	}
	static class UExperienceManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UExperienceManager>();
	}
};
DUMPER7_ASSERTS_UExperienceManager;

// Class ReadyOrNot.TrainingGM
// 0x0080 (0x0A40 - 0x09C0)
class ATrainingGM : public AReadyOrNotGameMode
{
public:
	TArray<class AReadyOrNotPlayerController*>    InitalizedPlayerControllers;                       // 0x09C0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UCommanderProfile*                      CommanderProfile;                                  // 0x09D0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9D8[0x8];                                      // 0x09D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bSuccess)> OnTrainingEnded;                                   // 0x09E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class FString                                 SwatSpawnTag;                                      // 0x09F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ACyberneticCharacter>       SWATAIClass;                                       // 0x0A00(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AAIController>              FriendlyAIController;                              // 0x0A08(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASWATCharacter*>                 SpawnedSWATAI;                                     // 0x0A10(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AActivityTriggerVolume*>         ActiveTriggerVolumes;                              // 0x0A20(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class ACheckpointActivityTriggerVolume*       CurrentCheckpoint;                                 // 0x0A30(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A38[0x8];                                      // 0x0A38(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FriendlyAIKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void RemoveAllSpawnedAI();
	void ReturnToStation();
	void SpawnPolice(const bool bSpawnWithPlayer);
	void TrainingEnd(bool bSuccess);

	bool IsCommanderProfileTraining() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrainingGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrainingGM")
	}
	static class ATrainingGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATrainingGM>();
	}
};
DUMPER7_ASSERTS_ATrainingGM;

// Class ReadyOrNot.LoadoutItem
// 0x0058 (0x0080 - 0x0028)
class ULoadoutItem : public UObject
{
public:
	class FText                                   Name_0;                                            // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0058(0x0028)(BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoadoutItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoadoutItem")
	}
	static class ULoadoutItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadoutItem>();
	}
};
DUMPER7_ASSERTS_ULoadoutItem;

// Class ReadyOrNot.GatherDebugInterface
// 0x0000 (0x0000 - 0x0000)
class IGatherDebugInterface final
{
public:
	void DrawVisualDebug();
	void GatherDebugData(TArray<struct FDebugData>* OutDebugData);
	void GatherDebugText(class FString* OutText);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GatherDebugInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GatherDebugInterface")
	}
	static class IGatherDebugInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGatherDebugInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGatherDebugInterface;

// Class ReadyOrNot.LoadoutEquipment
// 0x0008 (0x0088 - 0x0080)
class ULoadoutEquipment : public ULoadoutItem
{
public:
	TSubclassOf<class ABaseItem>                  Class_0;                                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoadoutEquipment")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoadoutEquipment")
	}
	static class ULoadoutEquipment* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadoutEquipment>();
	}
};
DUMPER7_ASSERTS_ULoadoutEquipment;

// Class ReadyOrNot.LoadoutWeapon
// 0x0000 (0x0088 - 0x0088)
class ULoadoutWeapon final : public ULoadoutEquipment
{
public:
	TArray<TSubclassOf<class UWeaponAttachment>> GetSupportedAttachmentsOfType(EWeaponAttachmentType Type) const;
	TArray<EWeaponAttachmentType> GetSupportedAttachmentTypes() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoadoutWeapon")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoadoutWeapon")
	}
	static class ULoadoutWeapon* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadoutWeapon>();
	}
};
DUMPER7_ASSERTS_ULoadoutWeapon;

// Class ReadyOrNot.LoadoutCustomization
// 0x0078 (0x00F8 - 0x0080)
class ULoadoutCustomization final : public ULoadoutItem
{
public:
	class UCustomizationDataBase*                 Asset;                                             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Variant;                                           // 0x0088(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>      VariantIcon;                                       // 0x00A0(0x0028)(BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLocked;                                           // 0x00C8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   RequirementsText;                                  // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class ULoadoutCustomization*>          Children;                                          // 0x00E8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	ECustomizationType GetCustomizationType() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoadoutCustomization")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoadoutCustomization")
	}
	static class ULoadoutCustomization* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadoutCustomization>();
	}
};
DUMPER7_ASSERTS_ULoadoutCustomization;

// Class ReadyOrNot.SuspectArmour
// 0x00C0 (0x0DB0 - 0x0CF0)
class ASuspectArmour : public ABaseArmour
{
public:
	struct FSuspectArmourData                     ArmourData;                                        // 0x0CE8(0x00B0)(Net, RepNotify, NativeAccessSpecifierPrivate)
	float                                         Durability;                                        // 0x0D98(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D9C[0x4];                                      // 0x0D9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             BlockedSoundEvent;                                 // 0x0DA0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             PenetratedSoundEvent;                              // 0x0DA8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnRep_ArmourData();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SuspectArmour")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SuspectArmour")
	}
	static class ASuspectArmour* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASuspectArmour>();
	}
};
DUMPER7_ASSERTS_ASuspectArmour;

// Class ReadyOrNot.ExplosiveVest
// 0x0090 (0x0E40 - 0x0DB0)
class AExplosiveVest : public ASuspectArmour
{
public:
	uint8                                         Pad_DB0[0x18];                                     // 0x0DB0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bShouldExplodeOnHit;                               // 0x0DC8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldExplodeOnDeath;                             // 0x0DC9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisarmed;                                         // 0x0DCA(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DCB[0x5];                                      // 0x0DCB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UDamageType>                ExplosionDamageType;                               // 0x0DD0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDamageOnDetonation;                             // 0x0DD8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDamageOnDetonation;                             // 0x0DDC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageInnerRadius;                                 // 0x0DE0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageOuterRadius;                                 // 0x0DE4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExplosionEffectDelay;                              // 0x0DE8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExplosionEffectRandomDelay;                        // 0x0DEC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExplosionDamageDelay;                              // 0x0DF0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DF4[0x4];                                      // 0x0DF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DetonationMontage;                                 // 0x0DF8(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ExplosiveVestSocket;                               // 0x0E08(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        ExplosionParticle;                                 // 0x0E10(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             ExplosionEvent;                                    // 0x0E18(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             DetonationEvent;                                   // 0x0E20(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         ExplosionScreenShake;                              // 0x0E28(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExplosionScreenShakeRadius;                        // 0x0E30(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E34[0xC];                                      // 0x0E34(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Disarm();
	void ExplodeVest();
	void Multicast_PlayExplosionEffects();
	void Multicast_PlayPreExplosionEffects();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ExplosiveVest")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ExplosiveVest")
	}
	static class AExplosiveVest* GetDefaultObj()
	{
		return GetDefaultObjImpl<AExplosiveVest>();
	}
};
DUMPER7_ASSERTS_AExplosiveVest;

// Class ReadyOrNot.CustomizationWidget
// 0x05F8 (0x0A10 - 0x0418)
class UCustomizationWidget : public UCommonActivatableWidget
{
public:
	TMap<ECustomizationType, class UFMODEvent*>   CustomizationEquipEvents;                          // 0x0418(0x0050)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(const class FString& Name)> OnCustomizationPresetApplied;          // 0x0468(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnAvailableCustomizationPresetsChanged;            // 0x0478(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ULoadoutManager*                        LoadoutManager;                                    // 0x0488(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBaseProfile*                           Profile;                                           // 0x0490(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_498[0x8];                                      // 0x0498(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          CurrentLoadout;                                    // 0x04A0(0x02E8)(Transient, NativeAccessSpecifierPrivate)
	class AReadyOrNotCharacter*                   PreviewCharacter;                                  // 0x0788(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ULoadoutWeapon*>                 CachedPrimaryWeapons;                              // 0x0790(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class ULoadoutWeapon*>                 CachedSecondaryWeapons;                            // 0x07A0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class ULoadoutEquipment*>              CachedLongTacticalItems;                           // 0x07B0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class ULoadoutEquipment*>              CachedTacticalItems;                               // 0x07C0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class ULoadoutEquipment*>              CachedArmorItems;                                  // 0x07D0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class ULoadoutEquipment*>              CachedHelmetItems;                                 // 0x07E0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FSavedCustomization                    CurrentCustomization;                              // 0x07F0(0x0140)(Transient, NativeAccessSpecifierPrivate)
	TArray<class ULoadoutCustomization*>          CachedCustomizationItems;                          // 0x0930(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class ULoadoutCustomization*>          CachedCustomizationFamilies;                       // 0x0940(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FCompatibleItemsArray> ItemToSkinsMap;                                  // 0x0950(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FCompatibleItemsArray> ItemToHelmetsMap;                                // 0x09A0(0x0050)(Transient, NativeAccessSpecifierPrivate)
	class ABaseItem*                              CustomizationTargetPrimaryWeapon;                  // 0x09F0(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABaseItem*                              CustomizationTargetSecondaryWeapon;                // 0x09F8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABaseItem*                              CustomizationTargetArmor;                          // 0x0A00(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABaseItem*                              CustomizationTargetHelmet;                         // 0x0A08(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ArmorSet(TSubclassOf<class ABaseItem> Class_0);
	bool CanCustomizeType(ECustomizationType Type);
	void ClearCustomizationPreview();
	void ExitCustomization();
	const TArray<class ULoadoutEquipment*> GetArmorItems();
	TArray<class ULoadoutCustomization*> GetCustomizationItems(ECustomizationType Type, bool bFamiliesOnly);
	class ULoadoutCustomization* GetEquippedCustomizationItem(ECustomizationType Type);
	const TArray<class ULoadoutEquipment*> GetHelmetItems();
	const TArray<class ULoadoutEquipment*> GetLongTacticalItems();
	const TArray<class ULoadoutWeapon*> GetPrimaryWeapons();
	const TArray<class ULoadoutWeapon*> GetSecondaryWeapons();
	const TArray<class ULoadoutEquipment*> GetTacticalItems();
	void HelmetSet(TSubclassOf<class ABaseItem> Class_0);
	void OnCurrentCustomizationUpdated();
	void OnLoadoutPresetApplied(const class FString& Name_0, const struct FSavedLoadout& Loadout);
	void PreviewCustomizationItem(class ULoadoutCustomization* Item);
	void PreviewCustomizationPreset(const class FString& Name_0);
	void PrimarySet(TSubclassOf<class ABaseItem> Class_0);
	void SecondarySet(TSubclassOf<class ABaseItem> Class_0);
	void SetActiveSwatMember(EEquippingSwat InSwat);
	void SetArmor(class ULoadoutEquipment* Item);
	void SetCustomizationItem(class ULoadoutCustomization* Item);
	void SetHelmet(class ULoadoutEquipment* Item);
	void SetLongTactical(class ULoadoutEquipment* Item);
	void SetPrimaryAttachment(class UWeaponAttachment* Attachment);
	void SetPrimaryWeapon(class ULoadoutWeapon* Item);
	void SetSecondaryAttachment(class UWeaponAttachment* Attachment);
	void SetSecondaryWeapon(class ULoadoutWeapon* Item);

	EEquippingSwat GetActiveSwatMember() const;
	class ULoadoutEquipment* GetArmor() const;
	class ULoadoutEquipment* GetHelmet() const;
	class ULoadoutEquipment* GetLongTactical() const;
	class ULoadoutWeapon* GetPrimaryWeapon() const;
	class ULoadoutWeapon* GetSecondaryWeapon() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationWidget")
	}
	static class UCustomizationWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationWidget>();
	}
};
DUMPER7_ASSERTS_UCustomizationWidget;

// Class ReadyOrNot.HelicopterPathNodeBehaviourComponent
// 0x0000 (0x00A0 - 0x00A0)
class UHelicopterPathNodeBehaviourComponent : public UActorComponent
{
public:
	void Multicast_OnPathEnterBehaviour(class AHelicopter* Helicopter);
	void Multicast_OnPathExitBehaviour(class AHelicopter* Helicopter);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HelicopterPathNodeBehaviourComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HelicopterPathNodeBehaviourComponent")
	}
	static class UHelicopterPathNodeBehaviourComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHelicopterPathNodeBehaviourComponent>();
	}
};
DUMPER7_ASSERTS_UHelicopterPathNodeBehaviourComponent;

// Class ReadyOrNot.HelicopterPathNodeLightAttenuationComponent
// 0x0008 (0x00A8 - 0x00A0)
class UHelicopterPathNodeLightAttenuationComponent final : public UHelicopterPathNodeBehaviourComponent
{
public:
	float                                         AttenuationOverride;                               // 0x00A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HelicopterPathNodeLightAttenuationComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HelicopterPathNodeLightAttenuationComponent")
	}
	static class UHelicopterPathNodeLightAttenuationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHelicopterPathNodeLightAttenuationComponent>();
	}
};
DUMPER7_ASSERTS_UHelicopterPathNodeLightAttenuationComponent;

// Class ReadyOrNot.CustomPhysicalMaterial
// 0x0008 (0x0090 - 0x0088)
class UCustomPhysicalMaterial final : public UPhysicalMaterial
{
public:
	float                                         FullOcclusionDepth;                                // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomPhysicalMaterial")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomPhysicalMaterial")
	}
	static class UCustomPhysicalMaterial* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomPhysicalMaterial>();
	}
};
DUMPER7_ASSERTS_UCustomPhysicalMaterial;

// Class ReadyOrNot.WeaponWheelScript
// 0x0040 (0x00A8 - 0x0068)
class UWeaponWheelScript final : public UBaseRadialMenuScript
{
public:
	class FText                                   ItemName;                                          // 0x0068(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                   ItemCategory;                                      // 0x0080(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UWeaponWheelWidget*                     WeaponWheelOwner;                                  // 0x0098(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponWheelScript")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponWheelScript")
	}
	static class UWeaponWheelScript* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponWheelScript>();
	}
};
DUMPER7_ASSERTS_UWeaponWheelScript;

// Class ReadyOrNot.DataSingleton
// 0x0390 (0x03B8 - 0x0028)
class UDataSingleton : public UObject
{
public:
	TArray<class UObject*>                        LoadedObjects;                                     // 0x0028(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bDrawBulletDebug;                                  // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDrawNoNameplates;                                 // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           LoadingScreen_Tips;                                // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                   YouKilledFormat;                                   // 0x0050(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<class FText>                           KillfeedFormatRandom;                              // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           ArrestfeedFormatRandom;                            // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           FreefeedFormatRandom;                              // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           TeamkillfeedFormatRandom;                          // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                   KillfeedWithA;                                     // 0x00A8(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bShowGrenadeDamage;                                // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UItemData>               ItemData;                                          // 0x00C8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWidgetsData>            WidgetData;                                        // 0x00F0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPenetrationData*                       PenetrationData;                                   // 0x0118(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCampaignData*                          CampaignData;                                      // 0x0120(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                             AmmoDataLookupTable;                               // 0x0128(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>              AIDataLookupTable;                                 // 0x0130(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>              AnimationDataLookupTable;                          // 0x0158(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                             AnimatedIconLookupTable;                           // 0x0180(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                             DoorDataLookupTable;                               // 0x0188(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                             TrapDataLookupTable;                               // 0x0190(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                             ConversationLookupTable;                           // 0x0198(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                             GameSettingsLookupTable;                           // 0x01A0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                             RonInputKeyTable;                                  // 0x01A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                             InputKeyGamePadIconTable;                          // 0x01B0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class UDataTable*>        SpeechDataLookupTable;                             // 0x01B8(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>              WidgetDataLookupTable;                             // 0x0208(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>              SuspectArmourDataTable;                            // 0x0230(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>              PairedInteractionDataTable;                        // 0x0258(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>              MoveStyleDataTable;                                // 0x0280(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                             GamepadHoldTimesDataTable;                         // 0x02A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CustomizationCharacterLevel;                       // 0x02B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CustomizationMenuLevel;                            // 0x02B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UWorldBuildingActivity>> RandomWorldBuildingActivities;                 // 0x02C0(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D0[0xE8];                                     // 0x02D0(0x00E8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void LoadLevels();
	void RefreshInputKeyTable();
	void UnloadLevels();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DataSingleton")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DataSingleton")
	}
	static class UDataSingleton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDataSingleton>();
	}
};
DUMPER7_ASSERTS_UDataSingleton;

// Class ReadyOrNot.DebugDisplayWidget
// 0x0000 (0x02C8 - 0x02C8)
class UDebugDisplayWidget : public UUserWidget
{
public:
	int32 AddDebugText(const class FString& NewText);
	void SetDebugText(int32 ID, const class FString& NewText);
	void SetDebugTitle(const class FString& NewTitle);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DebugDisplayWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DebugDisplayWidget")
	}
	static class UDebugDisplayWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDebugDisplayWidget>();
	}
};
DUMPER7_ASSERTS_UDebugDisplayWidget;

// Class ReadyOrNot.FlankingAvoidanceVolume
// 0x0010 (0x02A8 - 0x0298)
class AFlankingAvoidanceVolume final : public AActor
{
public:
	class UBoxComponent*                          Bounds;                                            // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNavModifierComponent*                  NavModifierComponent;                              // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FlankingAvoidanceVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FlankingAvoidanceVolume")
	}
	static class AFlankingAvoidanceVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFlankingAvoidanceVolume>();
	}
};
DUMPER7_ASSERTS_AFlankingAvoidanceVolume;

// Class ReadyOrNot.DefusalGM
// 0x00B0 (0x0AD0 - 0x0A20)
class ADefusalGM : public AReadyOrNotGameMode_PVP
{
public:
	class ABombActor*                             SelectedBombActor;                                 // 0x0A20(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AAISpawn*>                       SpawnPoints;                                       // 0x0A28(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class APlayerStart*                           SwatSpawn;                                         // 0x0A38(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APlayerStart*                           SuspectSpawn;                                      // 0x0A40(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class APlayerCharacter*, struct FCharacterLookOverride> CharacterLookMap;                   // 0x0A48(0x0050)(NativeAccessSpecifierPrivate)
	class USkeletalMesh*                          BlankFaceMesh;                                     // 0x0A98(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class APlayerController*>              PendingPlayerSpawn;                                // 0x0AA0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FSpawnData>                     SuspectSpawnData;                                  // 0x0AB0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class USkeletalMesh*                          SuspectFPArmsOverride;                             // 0x0AC0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AC8[0x8];                                      // 0x0AC8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DefusalGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DefusalGM")
	}
	static class ADefusalGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADefusalGM>();
	}
};
DUMPER7_ASSERTS_ADefusalGM;

// Class ReadyOrNot.HardcoreMoneyGM
// 0x0000 (0x0E60 - 0x0E60)
class AHardcoreMoneyGM final : public ACoopGM
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HardcoreMoneyGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HardcoreMoneyGM")
	}
	static class AHardcoreMoneyGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHardcoreMoneyGM>();
	}
};
DUMPER7_ASSERTS_AHardcoreMoneyGM;

// Class ReadyOrNot.DefusalGS
// 0x0030 (0x0958 - 0x0928)
class ADefusalGS : public AReadyOrNotGameState
{
public:
	EDefusalMatchSate                             DefusalMatchState;                                 // 0x0928(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_929[0x7];                                      // 0x0929(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            DefusalHudInst;                                    // 0x0930(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>                DefusalHudClass;                                   // 0x0938(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ALoadoutPortal*                         LoadoutPortal;                                     // 0x0940(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CountdownUntilMatchStarts;                         // 0x0948(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ElapsedRoundTime;                                  // 0x094C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BombTimeRemaining;                                 // 0x0950(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_954[0x4];                                      // 0x0954(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DefusalGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DefusalGS")
	}
	static class ADefusalGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADefusalGS>();
	}
};
DUMPER7_ASSERTS_ADefusalGS;

// Class ReadyOrNot.TeamDeathmatchGS
// 0x0000 (0x0928 - 0x0928)
class ATeamDeathmatchGS : public AReadyOrNotGameState
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TeamDeathmatchGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TeamDeathmatchGS")
	}
	static class ATeamDeathmatchGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATeamDeathmatchGS>();
	}
};
DUMPER7_ASSERTS_ATeamDeathmatchGS;

// Class ReadyOrNot.DefuseBombThreats
// 0x0010 (0x0330 - 0x0320)
class ADefuseBombThreats final : public AObjective
{
public:
	uint8                                         Pad_320[0x10];                                     // 0x0320(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnBombDefused(class ABombActor* DefusedBomb);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DefuseBombThreats")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DefuseBombThreats")
	}
	static class ADefuseBombThreats* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADefuseBombThreats>();
	}
};
DUMPER7_ASSERTS_ADefuseBombThreats;

// Class ReadyOrNot.DeployableData
// 0x0078 (0x00A8 - 0x0030)
class UDeployableData final : public UDataAsset
{
public:
	class FText                                   DeployableName;                                    // 0x0030(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   DeployableShortName;                               // 0x0048(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   DeployableDescription;                             // 0x0060(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              DeployableTexture;                                 // 0x0078(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DeployableLabel;                                   // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DeployableData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DeployableData")
	}
	static class UDeployableData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployableData>();
	}
};
DUMPER7_ASSERTS_UDeployableData;

// Class ReadyOrNot.IncriminationClueSpawnPoint
// 0x0058 (0x0308 - 0x02B0)
class AIncriminationClueSpawnPoint final : public AActorSpawnPoint
{
public:
	TSubclassOf<class AIncriminationClue>         IncriminationClueClass;                            // 0x02B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                     ClueFlareClass;                                    // 0x02B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ClueNumber;                                        // 0x02C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ShowObjectiveMarkerIn;                             // 0x02C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ClueName;                                          // 0x02C8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   ClueFoundMessage;                                  // 0x02E0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F8[0x10];                                     // 0x02F8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IncriminationClueSpawnPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IncriminationClueSpawnPoint")
	}
	static class AIncriminationClueSpawnPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIncriminationClueSpawnPoint>();
	}
};
DUMPER7_ASSERTS_AIncriminationClueSpawnPoint;

// Class ReadyOrNot.HoldActivity
// 0x0018 (0x0218 - 0x0200)
class UHoldActivity final : public UTeamBaseActivity
{
public:
	uint8                                         Pad_200[0x18];                                     // 0x0200(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HoldActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HoldActivity")
	}
	static class UHoldActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoldActivity>();
	}
};
DUMPER7_ASSERTS_UHoldActivity;

// Class ReadyOrNot.DeployableSpawnComponent
// 0x0010 (0x02B0 - 0x02A0)
class UDeployableSpawnComponent final : public USceneComponent
{
public:
	TSubclassOf<class AActor>                     ItemClass;                                         // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DeployableLabel;                                   // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void MutateSpawnedDeployable(class AActor* SpawnedDeployable);
	bool TrySpawnComponent(bool ShouldSpawn);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DeployableSpawnComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DeployableSpawnComponent")
	}
	static class UDeployableSpawnComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployableSpawnComponent>();
	}
};
DUMPER7_ASSERTS_UDeployableSpawnComponent;

// Class ReadyOrNot.VisibilityBlockingVolume
// 0x0000 (0x02D0 - 0x02D0)
class AVisibilityBlockingVolume final : public AVolume
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VisibilityBlockingVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VisibilityBlockingVolume")
	}
	static class AVisibilityBlockingVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVisibilityBlockingVolume>();
	}
};
DUMPER7_ASSERTS_AVisibilityBlockingVolume;

// Class ReadyOrNot.DeployChemlightActivity
// 0x0000 (0x0210 - 0x0210)
class UDeployChemlightActivity final : public UDeployItemAtLocationActivity
{
public:
	void OnChemlightThrown(class ABaseItem* Item);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DeployChemlightActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DeployChemlightActivity")
	}
	static class UDeployChemlightActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployChemlightActivity>();
	}
};
DUMPER7_ASSERTS_UDeployChemlightActivity;

// Class ReadyOrNot.IncriminationTriggerBox
// 0x0000 (0x0308 - 0x0308)
class AIncriminationTriggerBox final : public APVPTriggerBox
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IncriminationTriggerBox")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IncriminationTriggerBox")
	}
	static class AIncriminationTriggerBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIncriminationTriggerBox>();
	}
};
DUMPER7_ASSERTS_AIncriminationTriggerBox;

// Class ReadyOrNot.DoorInteractionActivity
// 0x0068 (0x0258 - 0x01F0)
class UDoorInteractionActivity : public UBaseActivity
{
public:
	class ADoor*                                  Door;                                              // 0x01F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CommandLocation;                                   // 0x01F8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OriginalLocation;                                  // 0x0210(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bReturnToPositionAfterInteraction : 1;             // 0x0228(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDisablePlayerDoorInteraction : 1;                 // 0x0228(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHadShieldEquipped : 1;                            // 0x0228(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InteractionAnimation;                              // 0x0230(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           InteractionAnimMontage;                            // 0x0240(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_248[0x10];                                     // 0x0248(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnterGetInPositionStage();
	void EnterInteractStage();
	void EnterReturnStage();
	void ExitGetInPositionStage();
	void ExitInteractStage();
	void ExitReturnStage();
	void OnDoorBroken();
	void OnDoorClosed();
	void OnDoorMovementBlocked();
	void OnDoorOpened();
	void OnInteractionBegin();
	void OnInteractionEnd();
	void PerformGetInPositionStage(float DeltaTime, float Uptime);
	void PerformInteractStage(float DeltaTime, float Uptime);
	void TickReturnStage(float DeltaTime, float Uptime);

	bool CanInteract() const;
	bool CanReturn() const;
	bool ShouldGetInPosition() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DoorInteractionActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DoorInteractionActivity")
	}
	static class UDoorInteractionActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDoorInteractionActivity>();
	}
};
DUMPER7_ASSERTS_UDoorInteractionActivity;

// Class ReadyOrNot.DeployWedgeActivity
// 0x0008 (0x0260 - 0x0258)
class UDeployWedgeActivity final : public UDoorInteractionActivity
{
public:
	uint8                                         Pad_258[0x8];                                      // 0x0258(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DeployWedgeActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DeployWedgeActivity")
	}
	static class UDeployWedgeActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployWedgeActivity>();
	}
};
DUMPER7_ASSERTS_UDeployWedgeActivity;

// Class ReadyOrNot.DestructibleDoorChunkComponent
// 0x0020 (0x0650 - 0x0630)
class UDestructibleDoorChunkComponent final : public UStaticMeshComponent
{
public:
	bool                                          bIsDoorHandle;                                     // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsHinge;                                          // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_62A[0x2];                                      // 0x062A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Health;                                            // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCannotKickIfDestroyed;                            // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UDestructibleDoorChunkComponent*> SupportChunks;                                    // 0x0638(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_648[0x8];                                      // 0x0648(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DestructibleDoorChunkComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DestructibleDoorChunkComponent")
	}
	static class UDestructibleDoorChunkComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDestructibleDoorChunkComponent>();
	}
};
DUMPER7_ASSERTS_UDestructibleDoorChunkComponent;

// Class ReadyOrNot.InteractionActor
// 0x0058 (0x02F0 - 0x0298)
class AInteractionActor : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneRoot;                                         // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       UseIconRadius;                                     // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   Mesh_Static;                                       // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Mesh_Skeletal;                                     // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanUseNow;                                        // 0x02C0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAvailableForUse;                                  // 0x02C1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCompleteIcon;                                     // 0x02C2(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bButtonPushAnimation;                              // 0x02C3(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHoldButtonPrompt;                                 // 0x02C4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideButtonPrompt;                             // 0x02C5(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C6[0x2];                                      // 0x02C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OverrideButtonPromptText;                          // 0x02C8(0x0018)(Edit, BlueprintVisible, Net, NativeAccessSpecifierPublic)
	TArray<class USceneComponent*>                CachedUseComponents;                               // 0x02E0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	bool CanBeUsedNow(class AActor* PotentialUser);
	void OnActorUsed(class AActor* User);
	void OnActorUsedEnd(class AActor* User);
	void Server_EndUse(class AActor* User);
	void Server_TryUse(class AActor* User);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InteractionActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InteractionActor")
	}
	static class AInteractionActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AInteractionActor>();
	}
};
DUMPER7_ASSERTS_AInteractionActor;

// Class ReadyOrNot.TeamPaperdollWidget
// 0x0008 (0x02D0 - 0x02C8)
class UTeamPaperdollWidget final : public UUserWidget
{
public:
	class UImage*                                 Paperdoll_Image;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void InitializeWidget(ETeamType InTeam);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TeamPaperdollWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TeamPaperdollWidget")
	}
	static class UTeamPaperdollWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTeamPaperdollWidget>();
	}
};
DUMPER7_ASSERTS_UTeamPaperdollWidget;

// Class ReadyOrNot.DestructibleVehicleBodyPart
// 0x0010 (0x0640 - 0x0630)
class UDestructibleVehicleBodyPart final : public UStaticMeshComponent
{
public:
	bool                                          bCanBeShotOff;                                     // 0x0628(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_629[0x3];                                      // 0x0629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Health;                                            // 0x062C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBroken;                                           // 0x0630(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_631[0xF];                                      // 0x0631(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DestructibleVehicleBodyPart")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DestructibleVehicleBodyPart")
	}
	static class UDestructibleVehicleBodyPart* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDestructibleVehicleBodyPart>();
	}
};
DUMPER7_ASSERTS_UDestructibleVehicleBodyPart;

// Class ReadyOrNot.TeamFallinActivity
// 0x0010 (0x0210 - 0x0200)
class UTeamFallinActivity final : public UTeamBaseActivity
{
public:
	class ASWATCharacter*                         MyLeader;                                          // 0x0200(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_208[0x8];                                      // 0x0208(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TeamFallinActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TeamFallinActivity")
	}
	static class UTeamFallinActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTeamFallinActivity>();
	}
};
DUMPER7_ASSERTS_UTeamFallinActivity;

// Class ReadyOrNot.IncapacitatedHuman
// 0x00D0 (0x0368 - 0x0298)
class AIncapacitatedHuman final : public AActor
{
public:
	uint8                                         Pad_298[0x28];                                     // 0x0298(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AIncapacitatedHuman* ReportedIncapacitatedHuman, class AReadyOrNotCharacter* Reporter)> OnReported; // 0x02C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USceneComponent*                        DefaultScene;                                      // 0x02D0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 HumanMesh;                                         // 0x02D8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 HumanMeshFace;                                     // 0x02E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                      CapsuleComponent;                                  // 0x02E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 ReportInteractableComponent;                       // 0x02F0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScoringComponent*                      ScoringComponent;                                  // 0x02F8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioComponent*                    IncapacitatedAudioComponent;                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIPerceptionStimuliSourceComponent*    PerceptionStimuliComp;                             // 0x0308(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhysicsAsset*                          RagdollPhysicsAsset;                               // 0x0310(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           DyingMontage;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             FMODEventLoop;                                     // 0x0320(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                        ShotParticleEffect;                                // 0x0328(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsChild;                                          // 0x0330(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bStartDead;                                        // 0x0331(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanEverDieByTime;                                 // 0x0332(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_333[0x1];                                      // 0x0333(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeRemainingUntilDead;                            // 0x0334(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsInGroup;                                        // 0x0338(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsMasterOfGroup;                                  // 0x0339(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_33A[0x6];                                      // 0x033A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AIncapacitatedHuman*>            IncapacitatedHumansInGroup;                        // 0x0340(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class AIncapacitatedHuman*                    MasterHumanInGroup;                                // 0x0350(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAttachReportInteractableToMesh;                   // 0x0358(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketToAttach;                                    // 0x035C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ETeamType                                     Team;                                              // 0x0364(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsDead;                                           // 0x0365(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasBeenReported;                                  // 0x0366(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_367[0x1];                                      // 0x0367(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void MakeMasterInGroup();
	void SelectAllInGroup();

	bool HasBeenReported() const;
	bool IsChild() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IncapacitatedHuman")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IncapacitatedHuman")
	}
	static class AIncapacitatedHuman* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIncapacitatedHuman>();
	}
};
DUMPER7_ASSERTS_AIncapacitatedHuman;

// Class ReadyOrNot.DestructibleVehicleParticleComponent
// 0x0000 (0x0590 - 0x0590)
class UDestructibleVehicleParticleComponent final : public UArrowComponent
{
public:
	class UParticleSystem*                        ParticleSystem;                                    // 0x0588(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DestructibleVehicleParticleComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DestructibleVehicleParticleComponent")
	}
	static class UDestructibleVehicleParticleComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDestructibleVehicleParticleComponent>();
	}
};
DUMPER7_ASSERTS_UDestructibleVehicleParticleComponent;

// Class ReadyOrNot.SwatCombatActivity
// 0x0010 (0x04C0 - 0x04B0)
class USwatCombatActivity final : public UBaseCombatActivity
{
public:
	uint8                                         Pad_4B0[0x10];                                     // 0x04B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SwatCombatActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SwatCombatActivity")
	}
	static class USwatCombatActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<USwatCombatActivity>();
	}
};
DUMPER7_ASSERTS_USwatCombatActivity;

// Class ReadyOrNot.DestructibleVehicleGlassComponent
// 0x0000 (0x0630 - 0x0630)
class UDestructibleVehicleGlassComponent final : public UStaticMeshComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DestructibleVehicleGlassComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DestructibleVehicleGlassComponent")
	}
	static class UDestructibleVehicleGlassComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDestructibleVehicleGlassComponent>();
	}
};
DUMPER7_ASSERTS_UDestructibleVehicleGlassComponent;

// Class ReadyOrNot.DestructibleVehicle
// 0x01D0 (0x0468 - 0x0298)
class ADestructibleVehicle final : public AActor
{
public:
	bool                                          bComplexVehicle;                                   // 0x0298(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLightsOn;                                         // 0x0299(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29A[0x6];                                      // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             BodyImpactEvent;                                   // 0x02A0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             BodyBreakEvent;                                    // 0x02A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChanceToCauseAlarmOnDamage;                        // 0x02B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AlarmPlayLength;                                   // 0x02B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AlarmHeadLightsFlashInterval;                      // 0x02B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChanceToCauseAirbagToDeployOnDamage;               // 0x02BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        AirbagParticle;                                    // 0x02C0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             AirbagEvent;                                       // 0x02C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlassHealth;                                       // 0x02D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlassDamageToApply;                                // 0x02D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstance*>              RandomShatteredGlassMaterial;                      // 0x02D8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UFMODEvent*                             GlassImpactEvent;                                  // 0x02E8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             GlassBreakEvent;                                   // 0x02F0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RollAmountOnTireDamage;                            // 0x02F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PitchAmountOnTireDamage;                           // 0x02FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SinkAmountOnTireDamage;                            // 0x0300(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TireDeflationInterpSpeed;                          // 0x0304(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             TireDeflateEvent;                                  // 0x0308(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            FlatTireMesh;                                      // 0x0310(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSimplifiedLights;                              // 0x0318(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      SimplifiedLightsOnMaterial;                        // 0x0320(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      SimplifiedLightsOffMaterial;                       // 0x0328(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      FrontLightsOnMaterial;                             // 0x0330(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      FrontLightsOffMaterial;                            // 0x0338(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      RearLightsOnMaterial;                              // 0x0340(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      RearLightsOffMaterial;                             // 0x0348(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SimplifiedLightsMaterialIndex;                     // 0x0350(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FrontLeftLightsMaterialIndex;                      // 0x0354(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FrontRightLightsMaterialIndex;                     // 0x0358(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RearLightsMaterialIndex;                           // 0x035C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_360[0x34];                                     // 0x0360(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bLeftLightDestroyed;                               // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bRightLightDestroyed;                              // 0x0395(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bFrontLeftTireDestroyed;                           // 0x0396(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bFrontRightTireDestroyed;                          // 0x0397(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bRearLeftTireDestroyed;                            // 0x0398(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bRearRightTireDestroyed;                           // 0x0399(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_39A[0x6];                                      // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UDestructibleVehicleGlassComponent*, float> GlassHealthMap;                           // 0x03A0(0x0050)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3F0[0x18];                                     // 0x03F0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CarBody;                                           // 0x0408(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   AirBag;                                            // 0x0410(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        AirBagEffects;                                     // 0x0418(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   FrontLeftTire;                                     // 0x0420(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   FrontRightTire;                                    // 0x0428(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   RearLeftTire;                                      // 0x0430(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   RearRightTire;                                     // 0x0438(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       LeftLightCollision;                                // 0x0440(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       RightLightCollision;                               // 0x0448(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpotLightComponent*                    LeftHeadLight;                                     // 0x0450(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpotLightComponent*                    RightHeadLight;                                    // 0x0458(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODAudioComponent*                    AlarmAudio;                                        // 0x0460(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void FlashHeadLights();
	void Multicast_BreakBodyPart(class UDestructibleVehicleBodyPart* BodyPart);
	void Multicast_BreakGlass(class UDestructibleVehicleGlassComponent* Glass);
	void Multicast_DeployCarFeatures(bool bAirbag, bool bCarAlarm, bool bDisableLeftLight, bool bDisableRightLight);
	void Multicast_PlayAudioEvent(class UFMODEvent* Event, const struct FVector_NetQuantize& Location);
	void Multicast_PlayTireDestroyedEffects(class UStaticMeshComponent* TireMesh);
	void Multicast_ShatterGlass(class UDestructibleVehicleGlassComponent* Glass);
	void StopCarAlarm();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DestructibleVehicle")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DestructibleVehicle")
	}
	static class ADestructibleVehicle* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADestructibleVehicle>();
	}
};
DUMPER7_ASSERTS_ADestructibleVehicle;

// Class ReadyOrNot.InventoryComponent
// 0x0530 (0x05D0 - 0x00A0)
class UInventoryComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnEquippedItemChanged;                             // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABaseItem* Item)> OnClientItemAddedToInventory;              // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABaseItem* Item)> OnItemAddedToInventory;                    // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABaseItem* Item)> OnItemRemovedFromInventory;                // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABaseItem* Item)> OnItemEquipped;                            // 0x00E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABaseItem* Item)> OnItemHolstered;                           // 0x00F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_108[0x48];                                     // 0x0108(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemChangeRequest                     LatestItemChangeRequest;                           // 0x0150(0x0038)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FItemChangeRequest                     LastReceivedItemChangeRequest;                     // 0x0188(0x0038)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	class ABaseItem*                              QueuedItemSwap;                                    // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABaseItem*                              LastEquippedItem;                                  // 0x01C8(0x0008)(Edit, Net, ZeroConstructor, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   LastEquippedIteName;                               // 0x01D0(0x0008)(Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABaseWeapon*                            LastEquippedWeapon;                                // 0x01D8(0x0008)(Edit, Net, ZeroConstructor, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FItemPair                              LastEquippedItemWheel;                             // 0x01E0(0x0010)(Edit, Net, EditConst, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<class ABaseItem*>                      InventoryItems;                                    // 0x01F0(0x0010)(Edit, Net, ZeroConstructor, EditConst, RepNotify, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class ABaseItem*>                      RemovedInventoryItems;                             // 0x0200(0x0010)(Edit, Net, ZeroConstructor, EditConst, RepNotify, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FSpawnedGear                           SpawnedGear;                                       // 0x0210(0x0088)(BlueprintVisible, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FSavedLoadout                          LastEquippedLoadout;                               // 0x0298(0x02E8)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	class ABaseItem*                              SelectedDevice;                                    // 0x0580(0x0008)(BlueprintVisible, Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_588[0x38];                                     // 0x0588(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FItemSelectionGroup>            ItemSelectionGroups;                               // 0x05C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	bool AddInventoryItem(class ABaseItem* Item);
	bool CanEquip(class ABaseItem* Item);
	void Client_NotifyInventoryItemsChanged();
	void Client_NotifyInventoryItemsDestroyed();
	void Client_NotifyInventorySpawned();
	void DestroyAllEquippedItems();
	bool DestroyInventoryItem(class ABaseItem* Item);
	bool EquipHolsteredItem(bool bInstant);
	class ABaseItem* EquipItemFromGroup_Index(int32 GroupIndex, int32 ItemCategoryIndex);
	class ABaseItem* EquipItemFromGroup_Name(class FName GroupName, int32 ItemCategoryIndex);
	class ABaseItem* EquipItemOfClass(class UClass* ClassType, bool bInstant);
	class ABaseItem* EquipItemOfType(const EItemCategory ItemCategory, const bool bInstant, const bool bSaveToHotkey);
	void EquipLastEquippedItem(bool bInstant, bool bForce);
	void EquipLastEquippedItemWheel(bool bInstant, bool bForce);
	void EquipLastEquippedWeapon(bool bInstant, bool bForce);
	class ABaseItem* GetLastEquippedItemWheel();
	bool Holster(class ABaseItem* Item, bool bInstant);
	bool HolsterEquippedItem(bool bInstant);
	bool IsEquippingItem();
	bool IsEquippingItemOfClass(class UClass* ClassType);
	bool IsEquippingItemOfType(EItemCategory ItemCategory);
	bool IsEquippingSpecificItem(class ABaseItem* Item);
	void Multicast_NotifyInventoryItemsChanged();
	void OnActorRelevancyChanged(class AActor* Actor, bool bIsRelevant);
	void OnNewItemChangeDrawComplete(class ABaseItem* Item);
	void OnRep_InventoryItemsChanged();
	void OnRep_ItemChangeRequest();
	void OnRep_ItemWheelEquippedChanged();
	void OnRep_SpawnedGear();
	void PlayLocalDraw(const struct FItemChangeRequest& ItemChangeRequest);
	void PlayLocalHolster(const struct FItemChangeRequest& ItemChangeRequest);
	void PlayTPDraw(const struct FItemChangeRequest& ItemChangeRequest);
	bool PutItemInHands(class ABaseItem* Item, bool bInstant, bool bForce, bool bSaveToHotkey);
	void RefreshItemCategories();
	bool RemoveInventoryItem(class ABaseItem* Item, bool bNullOwner);
	void ResetLatestItemChangeRequest(class ABaseItem* Item);
	void Server_AttemptEquipNewLoadout(const struct FSavedLoadout& Loadout);
	void Server_ChangeEquippedItem(const struct FItemChangeRequest& ItemChangeRequest);
	void Server_PlayTPHolster(const struct FItemChangeRequest& ItemChangeRequest);
	void ThrowAllItems();
	void ThrowAllWeapons();
	void ThrowEquippedItem();
	void ThrowSpecificItem(class ABaseItem* Item, bool bMarkAsEvidence);

	int32 CountInventoryItemType(EItemCategory ItemCategory) const;
	class ABaseArmour* GetArmour() const;
	class ABaseItem* GetEquippedItem() const;
	class AHeadwear* GetFacewear() const;
	class AHeadwear* GetHelmet() const;
	class ABaseItem* GetHolsteredItem() const;
	class ABaseItem* GetInventoryItemOfClass(class UClass* Class_0, bool bCanEquipCheck) const;
	class ABaseItem* GetInventoryItemOfClassType(EItemClass ItemClass) const;
	class ABaseItem* GetInventoryItemOfType(EItemCategory ItemCategory) const;
	TArray<class ABaseItem*> GetInventoryItems() const;
	TArray<class ABaseItem*> GetInventoryItemsOfType(EItemCategory ItemCategory) const;
	class ABaseItem* GetLastEquippedItem() const;
	struct FSavedLoadout GetLastEquippedLoadout() const;
	class ABaseWeapon* GetLastEquippedWeapon() const;
	TArray<class ABaseItem*> GetRemovedInventoryItems() const;
	bool HasAnyInventoryItems() const;
	bool HasAnyInventoryItemsOfClass(TSubclassOf<class ABaseItem> ItemClass) const;
	bool HasAnyInventoryItemsOfType(EItemCategory ItemCategory) const;
	bool HasInventoryItem(class ABaseItem* Item) const;
	bool IsAnyBlockingAnimationPlaying() const;
	bool IsAnyItemAttachedToBody() const;
	bool IsAnyItemAttachedToHands() const;
	bool IsEquippedWithShield(const class ABaseItem* Item) const;
	bool IsItemEquipped(EItemCategory ItemCategory) const;
	bool IsItemEquipped_Class(TSubclassOf<class ABaseItem> ItemClass) const;
	bool IsWearingAntiFlashGoggles() const;
	bool IsWearingArmour() const;
	bool IsWearingExplosiveVest() const;
	bool IsWearingHeadArmour() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InventoryComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InventoryComponent")
	}
	static class UInventoryComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventoryComponent>();
	}
};
DUMPER7_ASSERTS_UInventoryComponent;

// Class ReadyOrNot.Detonator
// 0x0020 (0x0CA0 - 0x0C80)
class ADetonator : public ABaseItem
{
public:
	uint8                                         Pad_C78[0x8];                                      // 0x0C78(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlacedC2Explosive*>             PlacedCharges;                                     // 0x0C80(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                         PlacedChargesCount;                                // 0x0C90(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDetonationDistance;                             // 0x0C94(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C98[0x8];                                      // 0x0C98(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Server_DetonateC2();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Detonator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Detonator")
	}
	static class ADetonator* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADetonator>();
	}
};
DUMPER7_ASSERTS_ADetonator;

// Class ReadyOrNot.HideCursorWidget
// 0x0000 (0x02C8 - 0x02C8)
class UHideCursorWidget final : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HideCursorWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HideCursorWidget")
	}
	static class UHideCursorWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHideCursorWidget>();
	}
};
DUMPER7_ASSERTS_UHideCursorWidget;

// Class ReadyOrNot.DiegeticSoundComponent
// 0x0018 (0x00B8 - 0x00A0)
class UDiegeticSoundComponent final : public UActorComponent
{
public:
	class UFMODEvent*                             SoundEvent;                                        // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOcclusionType                                OcclusionType;                                     // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPropagationType                              PropagationType;                                   // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoPlay;                                         // 0x00AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundSource*                           SoundSource;                                       // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnSoundStopped();
	void Play();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DiegeticSoundComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DiegeticSoundComponent")
	}
	static class UDiegeticSoundComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDiegeticSoundComponent>();
	}
};
DUMPER7_ASSERTS_UDiegeticSoundComponent;

// Class ReadyOrNot.ReadyOrNotDifficultySettings
// 0x0018 (0x0050 - 0x0038)
class UReadyOrNotDifficultySettings final : public UDeveloperSettings
{
public:
	TArray<struct FGameplayTag>                   DifficultyOrder;                                   // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	struct FGameplayTag                           DefaultDifficulty;                                 // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotDifficultySettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotDifficultySettings")
	}
	static class UReadyOrNotDifficultySettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotDifficultySettings>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotDifficultySettings;

// Class ReadyOrNot.MainMenu_BaseButton
// 0x0040 (0x1600 - 0x15C0)
class UMainMenu_BaseButton : public UCommonButtonFMOD
{
public:
	class FText                                   ButtonText;                                        // 0x15C0(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            NormalTextColor;                                   // 0x15D8(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            HoveredTextColor;                                  // 0x15EC(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MainMenu_BaseButton")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MainMenu_BaseButton")
	}
	static class UMainMenu_BaseButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMainMenu_BaseButton>();
	}
};
DUMPER7_ASSERTS_UMainMenu_BaseButton;

// Class ReadyOrNot.DifficultySubsystem
// 0x00E8 (0x0118 - 0x0030)
class UDifficultySubsystem final : public UEngineSubsystem
{
public:
	uint8                                         Pad_30[0x70];                                      // 0x0030(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, struct FDifficultyData> DifficultyDataMap;                             // 0x00A0(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTag                           CurrentDifficulty;                                 // 0x00F0(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F8[0x10];                                      // 0x00F8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnDifficultyUpdated;                               // 0x0108(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void DumpToFile();
	struct FGameplayTag GetCurrentDifficulty();
	TArray<struct FGameplayTag> GetDifficultiesToSearchFor();
	TArray<struct FGameplayTag> GetOrderedDifficulties();
	void SetDifficultiesToSearchFor(const TArray<struct FGameplayTag>& SearchDifficulties);
	bool SetDifficulty(const struct FGameplayTag& InDifficulty, bool bUpdateRelevantSaveFiles, bool bForce);
	void UpdateDifficultyInRelevantSaveFiles();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DifficultySubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DifficultySubsystem")
	}
	static class UDifficultySubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDifficultySubsystem>();
	}
};
DUMPER7_ASSERTS_UDifficultySubsystem;

// Class ReadyOrNot.DisarmBombActivity
// 0x0078 (0x0268 - 0x01F0)
class UDisarmBombActivity final : public UBaseActivity
{
public:
	class ACyberneticCharacter*                   Hostage;                                           // 0x01F0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class UInteractionsData*>   Interactions;                                      // 0x01F8(0x0050)(Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UInteractionsData*                      DisarmInteraction;                                 // 0x0248(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_250[0x18];                                     // 0x0250(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnterDisarmState();
	void EnterMoveToState();
	void OnDisarmComplete_Slave(class AActor* Actor);
	void OnHostageKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void OnTakeDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
	void TickDisarmState(float DeltaTime, float Uptime);
	void TickMoveToState(float DeltaTime, float Uptime);

	bool CanStartDisarm() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DisarmBombActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DisarmBombActivity")
	}
	static class UDisarmBombActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisarmBombActivity>();
	}
};
DUMPER7_ASSERTS_UDisarmBombActivity;

// Class ReadyOrNot.InitialOptions
// 0x0000 (0x0418 - 0x0418)
class UInitialOptions : public UCommonActivatableWidget
{
public:
	static void DebugResetInitialOptions();
	static class FString GetSystemLanguage();
	static bool IsInitialOptionsSet();

	void InitialOptionsIsSet();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InitialOptions")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InitialOptions")
	}
	static class UInitialOptions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInitialOptions>();
	}
};
DUMPER7_ASSERTS_UInitialOptions;

// Class ReadyOrNot.DisarmC2Activity
// 0x0010 (0x0200 - 0x01F0)
class UDisarmC2Activity final : public UBaseActivity
{
public:
	class APlacedC2Explosive*                     PlacedC2;                                          // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DisarmC2Activity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DisarmC2Activity")
	}
	static class UDisarmC2Activity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisarmC2Activity>();
	}
};
DUMPER7_ASSERTS_UDisarmC2Activity;

// Class ReadyOrNot.DisarmDoorTrapActivity
// 0x0000 (0x0258 - 0x0258)
class UDisarmDoorTrapActivity final : public UDoorInteractionActivity
{
public:
	void OnTrapTriggered(class ATrapActor* Trap, class AReadyOrNotCharacter* TriggeredBy);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DisarmDoorTrapActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DisarmDoorTrapActivity")
	}
	static class UDisarmDoorTrapActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisarmDoorTrapActivity>();
	}
};
DUMPER7_ASSERTS_UDisarmDoorTrapActivity;

// Class ReadyOrNot.MapActorWidget
// 0x0050 (0x0340 - 0x02F0)
class UMapActorWidget : public UBaseWidget
{
public:
	class UTextBlock*                             MapActor_Text;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 ActorToTrack;                                      // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseActorRotation;                                 // 0x0300(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseLocation;                                      // 0x0301(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_302[0x6];                                      // 0x0302(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocationToTrack;                                   // 0x0308(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RotationOffset;                                    // 0x0320(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MapSize;                                           // 0x0324(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MapTextureSize;                                    // 0x0328(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              MapOrigin;                                         // 0x0330(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void InitializeWidget(class AActor* InActorToTrack, bool bInUseActorRotation, bool bInUseLocation, const struct FVector& InLocationToTrack, float InRotationOffset);
	void SetMapActorText(const class FText& InText);
	void SetMapActorTextColor(const struct FLinearColor& InTextColor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MapActorWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MapActorWidget")
	}
	static class UMapActorWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMapActorWidget>();
	}
};
DUMPER7_ASSERTS_UMapActorWidget;

// Class ReadyOrNot.DisarmStandaloneTrapActivity
// 0x0020 (0x0210 - 0x01F0)
class UDisarmStandaloneTrapActivity final : public UBaseActivity
{
public:
	class ATrapActor*                             TrapToDisarm;                                      // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F8[0x18];                                     // 0x01F8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnterDisarmStage();
	void EnterGetInPositionStage();
	void OnTrapDisarmed();
	void OnTrapTriggered(class ATrapActor* Trap, class AReadyOrNotCharacter* TriggeredBy);

	bool CanPerformDisarm() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DisarmStandaloneTrapActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DisarmStandaloneTrapActivity")
	}
	static class UDisarmStandaloneTrapActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisarmStandaloneTrapActivity>();
	}
};
DUMPER7_ASSERTS_UDisarmStandaloneTrapActivity;

// Class ReadyOrNot.WeaponWheel_ItemStat_Base
// 0x0000 (0x02C8 - 0x02C8)
class UWeaponWheel_ItemStat_Base : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponWheel_ItemStat_Base")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponWheel_ItemStat_Base")
	}
	static class UWeaponWheel_ItemStat_Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponWheel_ItemStat_Base>();
	}
};
DUMPER7_ASSERTS_UWeaponWheel_ItemStat_Base;

// Class ReadyOrNot.DLCButtonWidget
// 0x0008 (0x02D0 - 0x02C8)
class UDLCButtonWidget : public UUserWidget
{
public:
	EGameVersionRestriction                       Dlc;                                               // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class FString GetUrl() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DLCButtonWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DLCButtonWidget")
	}
	static class UDLCButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDLCButtonWidget>();
	}
};
DUMPER7_ASSERTS_UDLCButtonWidget;

// Class ReadyOrNot.IconWidget
// 0x0010 (0x02D8 - 0x02C8)
class UIconWidget final : public UUserWidget
{
public:
	class UImage*                                 MainImage;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 ParentComponent;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UTexture2D* GetAttachedObjectIcon() const;
	class FString GetAttachedObjectName() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IconWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IconWidget")
	}
	static class UIconWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIconWidget>();
	}
};
DUMPER7_ASSERTS_UIconWidget;

// Class ReadyOrNot.DontDie
// 0x0000 (0x0320 - 0x0320)
class ADontDie final : public AObjective
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DontDie")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DontDie")
	}
	static class ADontDie* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADontDie>();
	}
};
DUMPER7_ASSERTS_ADontDie;

// Class ReadyOrNot.DoorwayWithoutDoor
// 0x0008 (0x02A0 - 0x0298)
class ADoorwayWithoutDoor : public AActor
{
public:
	class UDoorwayComponent*                      Doorway;                                           // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	struct FVector GetDoorSize() const;
	class UDoorwayComponent* GetDoorway() const;
	bool IsPointInFrontOfDoorway(const struct FVector& Point) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DoorwayWithoutDoor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DoorwayWithoutDoor")
	}
	static class ADoorwayWithoutDoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADoorwayWithoutDoor>();
	}
};
DUMPER7_ASSERTS_ADoorwayWithoutDoor;

// Class ReadyOrNot.MapStatisticsSystem
// 0x0090 (0x0328 - 0x0298)
class AMapStatisticsSystem final : public AInfo
{
public:
	uint8                                         Pad_298[0xC];                                      // 0x0298(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  GameId;                                            // 0x02A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B4[0x14];                                     // 0x02B4(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, uint8>                    ActorIdMap;                                        // 0x02C8(0x0050)(NativeAccessSpecifierPrivate)
	TArray<struct FAnalyticsStatus>               Statuses;                                          // 0x0318(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	void EndLevel();
	void StartRecording(const class FString& InLevelName, const class FString& InGameMode);

	struct FGuid GetGameId() const;
	class FString GetRecordingStatus() const;
	bool IsRecording() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MapStatisticsSystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MapStatisticsSystem")
	}
	static class AMapStatisticsSystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMapStatisticsSystem>();
	}
};
DUMPER7_ASSERTS_AMapStatisticsSystem;

// Class ReadyOrNot.Door
// 0x1080 (0x1320 - 0x02A0)
class ADoor final : public ADoorwayWithoutDoor
{
public:
	uint8                                         Pad_2A0[0x60];                                     // 0x02A0(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnDoorOpened;                                      // 0x0300(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnSubDoorOpened;                                   // 0x0310(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDoorClosed;                                      // 0x0320(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDoorBroken;                                      // 0x0330(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDoorMovementBlocked;                             // 0x0340(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ADoor* Door, class AReadyOrNotCharacter* InstigatorCharacter)> OnDoorExploded; // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ADoor* Door, class AReadyOrNotCharacter* InstigatorCharacter, bool bSuccess)> OnDoorKicked; // 0x0360(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    TypeOfDoor;                                        // 0x0370(0x0010)(Edit, Net, NoDestructor, NativeAccessSpecifierPublic)
	float                                         StartingOpenAngle;                                 // 0x0380(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bOneWay : 1;                                       // 0x0384(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	EDoorOneWayDirection                          OneWayDirection;                                   // 0x0385(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRandomlyOpenAtGameStart;                          // 0x0386(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuspectAlwaysUnlocks;                             // 0x0387(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreForFlee;                                    // 0x0388(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNoNavBlockerForGen;                               // 0x0389(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNoAutomaticClearing;                              // 0x038A(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanUseC2;                                         // 0x038B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanUseBSG;                                        // 0x038C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanUseWedge;                                      // 0x038D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanUseRam;                                        // 0x038E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanUseOptiwand;                                   // 0x038F(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bCanPlayerInteract : 1;                            // 0x0390(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	bool                                          bCanIssueOrdersOnFrontSide;                        // 0x0391(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanIssueOrdersOnBackSide;                         // 0x0392(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasFrame;                                         // 0x0393(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AThreatAwarenessActor*                  FrontThreat;                                       // 0x0398(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AThreatAwarenessActor*                  BackThreat;                                        // 0x03A0(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AThreatAwarenessActor*>          FrontThreatAwarenessPoints;                        // 0x03A8(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AThreatAwarenessActor*>          BackThreatAwarenessPoints;                         // 0x03B8(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AStackUpActor*>                  FrontLeftStackUpPoints;                            // 0x03C8(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AStackUpActor*>                  FrontRightStackUpPoints;                           // 0x03D8(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AStackUpActor*>                  BackLeftStackUpPoints;                             // 0x03E8(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AStackUpActor*>                  BackRightStackUpPoints;                            // 0x03F8(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FClearPoint>                    FrontLeftClearPoints;                              // 0x0408(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<struct FClearPoint>                    FrontRightClearPoints;                             // 0x0418(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<struct FClearPoint>                    BackLeftClearPoints;                               // 0x0428(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<struct FClearPoint>                    BackRightClearPoints;                              // 0x0438(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	uint8                                         bJamInProgress : 1;                                // 0x0448(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, Net, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bLocked : 1;                                       // 0x0448(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, Net, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 DestroyedChunkIdxs;                                // 0x0450(0x0010)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	bool                                          bHeldPushDoor;                                     // 0x0460(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_461[0x3];                                      // 0x0461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PushDoorHoldTime;                                  // 0x0464(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDoorRoomPosition                             FrontRoomPosition;                                 // 0x0468(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDoorRoomPosition                             BackRoomPosition;                                  // 0x0469(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bManualRoomPositionSetup;                          // 0x046A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_46B[0x9];                                      // 0x046B(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxFrontHorizontalClearingDistance;                // 0x0474(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxBackHorizontalClearingDistance;                 // 0x0478(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              MaxFrontRightClearThreshold;                       // 0x0480(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              MaxFrontLeftClearThreshold;                        // 0x0490(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              MaxBackRightClearThreshold;                        // 0x04A0(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              MaxBackLeftClearThreshold;                         // 0x04B0(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         MaxFrontRightClearPoints;                          // 0x04C0(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         MaxFrontLeftClearPoints;                           // 0x04C1(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         MaxBackRightClearPoints;                           // 0x04C2(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         MaxBackLeftClearPoints;                            // 0x04C3(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bManualClearPointSetup;                            // 0x04C4(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C5[0x13];                                     // 0x04C5(0x0013)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        KickedParticleSystem;                              // 0x04D8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                        LockBrokenParticleSystem;                          // 0x04E0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        RootScene;                                         // 0x04E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   DoorStatic;                                        // 0x04F0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   DoorHandleFront;                                   // 0x04F8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   DoorHandleBack;                                    // 0x0500(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMirrorPortalComponent*                 FrontMirrorPoint;                                  // 0x0508(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMirrorPortalComponent*                 BackMirrorPoint;                                   // 0x0510(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDestructibleDoorChunkComponent*        DoorChunk0;                                        // 0x0518(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDestructibleDoorChunkComponent*        DoorChunk1;                                        // 0x0520(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDestructibleDoorChunkComponent*        DoorChunk2;                                        // 0x0528(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDestructibleDoorChunkComponent*        DoorChunk3;                                        // 0x0530(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDestructibleDoorChunkComponent*        DoorChunk4;                                        // 0x0538(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDestructibleDoorChunkComponent*        DoorChunk5;                                        // 0x0540(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDestructibleDoorChunkComponent*        DoorChunk6;                                        // 0x0548(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDestructibleDoorChunkComponent*        DoorChunk7;                                        // 0x0550(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDestructibleDoorChunkComponent*        DoorChunk8;                                        // 0x0558(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   LightBlocker;                                      // 0x0560(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 DoorOpenInteractableComp;                          // 0x0568(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 DoorSublinkOpenInteractableComp;                   // 0x0570(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 DoorSublinkPushInteractableComp;                   // 0x0578(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 DoorPushInteractableComp;                          // 0x0580(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 DoorKickInteractableComp;                          // 0x0588(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 DoorSublinkKickInteractableComp;                   // 0x0590(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 LockpickInteractableComponent;                     // 0x0598(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 C2InteractableComponent;                           // 0x05A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 WedgeInteractableComponent;                        // 0x05A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 OptiwandInteractableComponent;                     // 0x05B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 BSGInteractableComponent;                          // 0x05B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 BSGInteractableComponent_2;                        // 0x05C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 DoorRamInteractableComponent;                      // 0x05C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDecalComponent*                        C2ExplosionDecalComponent;                         // 0x05D0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioPropagationComponent*         FMODAudioPropagationComp;                          // 0x05D8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        LockpickArea;                                      // 0x05E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        DoorArea;                                          // 0x05E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        C2Area;                                            // 0x05F0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        BSGArea;                                           // 0x05F8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        MirrorgunArea;                                     // 0x0600(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        WedgeArea;                                         // 0x0608(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        BatteringRamArea;                                  // 0x0610(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          DoorBlockerComponent;                              // 0x0618(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          BreachBlocker1Component;                           // 0x0620(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          BreachBlocker2Component;                           // 0x0628(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          BreachBlocker3Component;                           // 0x0630(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bHasEverBeenOpenedBySwat : 1;                      // 0x0638(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_639[0x7];                                      // 0x0639(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         OperatingStates;                                   // 0x0640(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	class ANavLinkProxy*                          NavLinkProxy;                                      // 0x0650(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_658[0x30];                                     // 0x0658(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bNoSpawnTrap : 1;                                  // 0x0688(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	EDoorTrapSide                                 TrapSide;                                          // 0x0689(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_68A[0x6];                                      // 0x068A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    TypeOfTrap;                                        // 0x0690(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TMap<EDoorDamageType, float>                  DoorKillDistance;                                  // 0x06A0(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<EDoorDamageType, float>                  DoorStunDistance;                                  // 0x06F0(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         MaxOpenClose;                                      // 0x0740(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OpenThreshold;                                     // 0x0744(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CloseThreshold;                                    // 0x0748(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IncrementAngle;                                    // 0x074C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PhysicalPushAmount;                                // 0x0750(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_754[0x4];                                      // 0x0754(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADoor*                                  DriveSubDoor;                                      // 0x0758(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bMainSubDoor : 1;                                  // 0x0760(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bKickAlwaysFails : 1;                              // 0x0760(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_761[0x3];                                      // 0x0761(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DoorKickSuccessChance;                             // 0x0764(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         NumSuccessfulKicksToBreakDown;                     // 0x0768(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_769[0x7];                                      // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     C2ExplosionDecal;                                  // 0x0770(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        C2ExplosionParticle;                               // 0x0778(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAlwaysLocked : 1;                                 // 0x0780(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideLockChance : 1;                           // 0x0780(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_781[0x3];                                      // 0x0781(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LockedChance;                                      // 0x0784(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsElectronicDoor;                                 // 0x0788(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_789[0x3];                                      // 0x0789(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElectronicLockChance;                              // 0x078C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DoorPushCurve;                                     // 0x0790(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DoorOpenCurve;                                     // 0x0798(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DoorCloseCurve;                                    // 0x07A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DoorKickSuccessCurve;                              // 0x07A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DoorKickFailCurve;                                 // 0x07B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DoorLockedCurve;                                   // 0x07B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DoorRamCurve;                                      // 0x07C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DoorExplodeCurve;                                  // 0x07C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DoorBreachCurve;                                   // 0x07D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DoorHandleOpenCurve;                               // 0x07D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DoorHandlePushCurve;                               // 0x07E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DoorHandleLockedCurve;                             // 0x07E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlacedC2Explosive*                     PlacedC2;                                          // 0x07F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UDestructibleDoorChunkComponent*> ChunkComponents;                                  // 0x07F8(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         bPendingSubDoorKick : 1;                           // 0x0808(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_809[0x7];                                      // 0x0809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   LastDoorUser;                                      // 0x0810(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDoorDamageType                               LastDoorDamage;                                    // 0x0818(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_819[0x7];                                      // 0x0819(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATrapActorAttachedToDoor*               AttachedTrap;                                      // 0x0820(0x0008)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADoorJam*                               AttachedWedge;                                     // 0x0828(0x0008)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACyberneticCharacter*                   AICheckingDoor;                                    // 0x0830(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTeamStackUpActivity*>           CurrentStackUpActivities;                          // 0x0838(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UBaseActivity*>                  CurrentActivities;                                 // 0x0848(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         OpenCloseAmount;                                   // 0x0858(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DoorHandlePitchAmount;                             // 0x085C(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bC2Placed : 1;                                     // 0x0860(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSWATKnowsLockState : 1;                           // 0x0860(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSuspectKnowsLockState : 1;                        // 0x0860(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSWATKnowsTrapState : 1;                           // 0x0860(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSuspectKnowsTrapState : 1;                        // 0x0860(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDoorBroken : 1;                                   // 0x0860(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, Net, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bTrapInFront : 1;                                  // 0x0860(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bClientReset : 1;                                  // 0x0860(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDoorHandlesBroken : 1;                            // 0x0861(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSWATHasKeycard : 1;                               // 0x0861(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSuspectsHaveKeycard : 1;                          // 0x0861(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAlarmTriggered : 1;                               // 0x0861(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_862[0x6];                                      // 0x0862(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UInteractableComponent*>         CachedInteractables;                               // 0x0868(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_878[0x6C0];                                    // 0x0878(0x06C0)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotCharacter*>           CharactersOverlappingDoor;                         // 0x0F38(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F48[0x8];                                      // 0x0F48(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDoorData                              DoorData;                                          // 0x0F50(0x0340)(Edit, Net, DisableEditOnTemplate, EditConst, RepNotify, NativeAccessSpecifierPublic)
	struct FTrapData                              TrapData;                                          // 0x1290(0x0080)(Edit, Net, DisableEditOnTemplate, EditConst, RepNotify, NativeAccessSpecifierPublic)
	float                                         OcclusionMultiplier;                               // 0x1310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1314[0xC];                                     // 0x1314(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void FlipStackUpArea(EStackupGenArea* OutStackUpArea, bool bHorizontalFlip, bool bVerticalFlip);
	static void SetAllElectronicLocks(class UObject* WorldContextObject, bool bLocked_0);
	static void SetSWATHasAllKeycards(class UObject* WorldContextObject);

	void ActivateDoorBlockerForWorldGen();
	void AIResponseToDoorDamage();
	void ApplyDoorDamage(EDoorDamageType InDoorDamage, class AReadyOrNotCharacter* Victim);
	void ApplyRandomDamageToChunks(float MinDamage, float MaxDamage);
	void AttachTrap(class ATrapActorAttachedToDoor* NewTrap, bool bAttachToDoor);
	void AttachWedge(class ADoorJam* NewWedge);
	void BlockAllDoorways();
	float BodyRamDoor(class AReadyOrNotCharacter* DoorRamCharacter);
	void BreachDoor(class AReadyOrNotCharacter* DoorBreacherCharacter, float InIncrementAngle);
	void BreachDoorFromPoint(class AReadyOrNotCharacter* DoorBreacherCharacter, const struct FVector& BreachPoint, float InIncrementAngle);
	void BreakAndDetachDoor(bool bDestroyAllChunks, class AReadyOrNotCharacter* DoorBreakerCharacter, float Impulse, float ForwardOffset);
	void BreakDoor(bool bDestroyAllChunks, class AReadyOrNotCharacter* DoorBreakerCharacter);
	void BreakDoorHandles();
	void CalculateRoomPositioning();
	void CloseDoor(class AReadyOrNotCharacter* DoorCloserCharacter, bool bInstant, bool bAnimateDoorHandle);
	void CloseDoor_Debug();
	void CloseSubDoor(class AReadyOrNotCharacter* DoorCloseCharacter, bool bInstant, bool bAnimateDoorHandle);
	void CollapseDoor(class AReadyOrNotCharacter* DoorBreacherCharacter, const struct FVector& BreachLocation);
	void DeactivateDoorBlocker();
	void DebugForceLockedState(bool bShouldLock);
	void DecreaseNumKicksToBreakDown(class AReadyOrNotCharacter* DoorKickCharacter, bool* bShouldOpenDoor, bool* bCanBreakLock, float KickChanceOffset);
	void DestroyAllChunks(const struct FVector& Impulse, float ImpulseStrength, bool bKeepHinges);
	void DestroyChunk(class UDestructibleDoorChunkComponent* InChunk, const struct FVector& Impulse, float ImpulseStrength);
	void DestroyChunk_Index(int32 ChunkIndex, const struct FVector& Impulse, float ImpulseStrength);
	void DestroyNavLink();
	void DisableAllInteractables();
	void DisableNavLink();
	void EnableNavLink();
	void ExplodeDoor(class AReadyOrNotCharacter* DoorBreacherCharacter, class AActor* ExplosionCauser, bool bKeepHinges);
	void Finished_DoorExplode();
	void Finished_DoorKick_Success();
	void Finished_DoorRam();
	void ForceDoorReset();
	void GenerateClearPoints();
	void GenerateStackUpPoints();
	class FName GetTypeOfDoorRow();
	class FName GetTypeOfDoorTrap();
	bool IsIgnoredForFlee();
	bool IsSubDoorOpen();
	void KickDoor(class AReadyOrNotCharacter* DoorKickCharacter, bool bKickSubDoor, bool bForce);
	void KickSubDoor(class AReadyOrNotCharacter* DoorKickCharacter);
	void LockDoor(bool bLockSubDoor);
	void Multicast_CheckSupports();
	void Multicast_DisableDoorInteraction(bool bSetClosed);
	void Multicast_ExplodeDoor(class AReadyOrNotCharacter* DoorBreacherCharacter, class AActor* ExplosionCauser, bool bKeepHinges);
	void Multicast_PlayDoorDamageSound(EDoorDamageType DoorDamage, const TArray<struct FMODParam>& Params_0);
	void Multicast_PlayDoorKickEffects(bool bBreakLock, bool bInFront);
	void Multicast_PlayDoorSound(EDoorInteraction DoorDamage, class AReadyOrNotCharacter* DoorInteractionInstigator, const TArray<struct FMODParam>& Params_0);
	void Multicast_PlayElectronicDoorSound(class UFMODEvent* Event);
	void Multicast_SetLocked(bool bShouldLocked);
	void OnRep_ClientResetDoor();
	void OnRep_DestroyedChunkIdxChanged();
	void OnRep_DoorDataUpdated();
	void OnRep_DoorHandlesBroken();
	void OnRep_TrapDataUpdated();
	float OpenDoor(class AReadyOrNotCharacter* DoorOpenCharacter, bool bInstant, bool bAnimateDoorHandle, const bool bNoCloseThreshold);
	void OpenDoor_Debug();
	void OpenDoor_SpecificAngle(class AReadyOrNotCharacter* DoorOpenCharacter, float CustomTargetAngle, bool bInstant, bool bAnimateDoorHandle);
	void OpenSubDoor(class AReadyOrNotCharacter* DoorOpenCharacter, bool bInstant, bool bAnimateDoorHandle);
	float PeekDoor(class AReadyOrNotCharacter* DoorPeekerCharacter, float InIncrementAngle, bool bAnimateDoorHandle);
	void PlayDoorDamageSound(EDoorDamageType DoorDamage, const TArray<struct FMODParam>& Params_0);
	void PlayDoorKickSound(class AReadyOrNotCharacter* Kicker, float Result);
	void PlayDoorSound(EDoorInteraction DoorInteraction, class AReadyOrNotCharacter* DoorInteractionInstigator, const TArray<struct FMODParam>& Params_0);
	float PushDoor(class AReadyOrNotCharacter* DoorPusherCharacter, float InIncrementAngle, bool bAnimateDoorHandle, bool bPlaySound);
	void PushDoor_SpecificAngle(class AReadyOrNotCharacter* DoorPusherCharacter, float CustomTargetAngle, bool bAnimateDoorHandle);
	float RamDoor(class AReadyOrNotCharacter* DoorRamCharacter, bool bPlayRamSound);
	void RemoveWedges();
	void ResetDoorLockKnowledge();
	void ResetDoorTrapKnowledge();
	void Restore();
	void Server_SetLockKnowledgeState(bool bSuspectTeam, bool bNewKnowledgeState);
	void Server_SetTrapKnowledgeState(bool bSuspectTeam, bool bNewKnowledgeState);
	void SetDoorLockKnowledge(bool bSuspectTeam, bool bKnowledge);
	void SetDoorTrapKnowledge(bool bSuspectTeam, bool bKnowledge);
	void SetLocked(bool bNewLocked);
	void Setup();
	void Tick_DoorBreach();
	void Tick_DoorExplode();
	void Tick_DoorHandle_Open();
	void Tick_DoorHandle_Push();
	void Tick_DoorHandleLocked();
	void Tick_DoorKick_Fail();
	void Tick_DoorKick_Success();
	void Tick_DoorLocked();
	void Tick_DoorOpenClose();
	void Tick_DoorPush();
	void Tick_DoorRam();
	void ToggleLightBlocker();
	void UnblockAllDoorways();
	void UnlockDoor(bool bUnlockSubDoor);

	bool AllBottomDoorChunksBroken() const;
	bool AllMajorDoorChunksDestroyed() const;
	bool AllMiddleDoorChunksBroken() const;
	bool AllTopDoorChunksBroken() const;
	bool AnyBottomDoorChunksBroken() const;
	bool AnyChunksDestroyed() const;
	bool AnyHingesLeft() const;
	bool AnyMiddleDoorChunksBroken() const;
	bool AnyTopDoorChunksBroken() const;
	struct FVector CalculateClosestPoint(const struct FVector& Location) const;
	bool CanCloseDoor(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanCloseDoorIfOrdered(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanDeployWedge(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanEquipBatteringRam(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanEquipBreachingShotgun(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanEquipC2Explosive(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanEquipMultitool(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanEquipOptiwand(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanEquipWedge(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanKickDoor(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanLockpickDoor(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanMirrorUnderDoor(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanOpenDoor(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanPeekDoor(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanPlaceC2Explosive(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanPullDoor(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanPushDoor(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanPushDoorWhileBroken() const;
	bool CanRamDoor(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool CanSpawnTrap() const;
	bool CanTakeDamage(float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser) const;
	bool DoesSuspectKnowTrapState() const;
	bool DoesSWATKnowTrapState() const;
	EStackupGenArea FindStackUpAreaFromLocation(const struct FVector& InInteractionLocation) const;
	class ATrapActorAttachedToDoor* GetAttachedTrap() const;
	class ADoorJam* GetAttachedWedge() const;
	class FName GetBackThreatOwningRoom() const;
	struct FVector GetBestDoorInteraction(const struct FVector& Location) const;
	struct FVector GetBestDoorInteraction_FromLocation(const struct FVector& InInteractionLocation, bool bDoorwayBased) const;
	struct FVector GetBestDoorInteraction_FromStackUpArea(const EStackupGenArea& InStackUpArea, bool bDoorwayBased) const;
	struct FVector GetBestOneWayDoorInteraction(const struct FVector& Location) const;
	TMap<EDoorDamageType, float> GetDoorKillDistance() const;
	struct FVector GetDoorMidLocation() const;
	TMap<EDoorDamageType, float> GetDoorStunDistance() const;
	class FName GetFrontThreatOwningRoom() const;
	float GetIncrementAngle() const;
	class AReadyOrNotCharacter* GetLastDoorUser() const;
	float GetMaxOpenAmount() const;
	float GetOpenAmount() const;
	float GetOpenAmountAsPercentage() const;
	float GetOpenThreshold() const;
	float GetOverrideLockChance() const;
	class APlacedC2Explosive* GetPlacedC2() const;
	float GetPseudoVelocity() const;
	struct FVector GetStackUpLocation(EStackupGenArea StackUpArea, ESquadPosition StackUpPosition) const;
	TArray<class AStackUpActor*> GetStackupsForArea(EStackupGenArea StackUpArea) const;
	float GetStartingOpenAngle() const;
	class ADoor* GetSubDoor() const;
	bool GetSuspectKnowsLockState() const;
	bool GetSWATKnowsLockState() const;
	float GetTargetAngle() const;
	struct FVector GetWedgeLocation() const;
	bool HasEverBeenOpened() const;
	bool HasTrapAndSuspectKnowsTrap() const;
	bool HasTrapAndSWATKnowsTrap() const;
	bool IsActorBehindDoor_Relative(class AActor* Actor) const;
	bool IsActorInFrontOfDoor(class AActor* Actor) const;
	bool IsActorInFrontOfDoorway(class AActor* Actor) const;
	bool IsActorRightOfDoorway(class AActor* Actor) const;
	bool IsActorSameSideAsTrap(class AActor* InActor) const;
	bool IsAlwaysLocked() const;
	bool IsAnyAIClosing() const;
	bool IsAnyAIOpening() const;
	bool IsAnyInteractionPlaying() const;
	bool IsAttachedToRoot() const;
	bool IsC2Placed() const;
	bool IsClosed() const;
	bool IsClosing() const;
	bool IsDestructible() const;
	bool IsDoorBroken() const;
	bool IsDoorChunkDestroyed(class UDestructibleDoorChunkComponent* InChunkComponent) const;
	bool IsDoorInteractionPlaying() const;
	bool IsDoorwayOnly() const;
	bool IsElectronicDoor() const;
	bool IsFullyOpen() const;
	bool IsFullyOpen_Backward() const;
	bool IsFullyOpen_Forward() const;
	bool IsHalfwayOpen() const;
	bool IsHandleBroken() const;
	bool IsJammed() const;
	bool IsLocationSameSideAsTrap(const struct FVector& InLocation) const;
	bool IsLockable() const;
	bool IsLockChanceOverridden() const;
	bool IsLocked() const;
	bool IsMainSubdoor() const;
	bool IsMiddleChunkBroken() const;
	bool IsMirrorBlocked() const;
	bool IsNonDoorInteractionPlaying() const;
	bool IsNonMainSubdoor() const;
	bool IsOneWayAndOpensTowardsPoint(const struct FVector& Vector) const;
	bool IsOpen() const;
	bool IsOpen_Backward() const;
	bool IsOpen_Forward() const;
	bool IsOpenAtOrBeyond(float Percentage) const;
	bool IsOpenAtOrBeyond_Angle(float Angle) const;
	bool IsOpenBeyond(float Percentage) const;
	bool IsOpenBeyond_Angle(float Angle) const;
	bool IsOpenBeyondCloseThreshold() const;
	bool IsOpenBeyondIncrementThreshold() const;
	bool IsOpenBy(float Percentage) const;
	bool IsOpenBy_Angle(float Angle) const;
	bool IsOpening() const;
	bool IsOutlineDisabled() const;
	bool IsOutlineEnabled(EActorOutlineType OutlineType) const;
	bool IsOverridingLockChance() const;
	bool IsPendingSubDoorKick() const;
	bool IsPointInFrontOfDoor(const struct FVector& Vector) const;
	bool IsPointRightOfDoorway(const struct FVector& Vector) const;
	bool IsStackUpDisabled(const struct FVector& CommandLocation) const;
	bool IsTooFarForKick() const;
	bool IsTrapLive() const;
	bool MainSubDoor_CanShowOpenDoorPrompt() const;
	bool NonMainSubDoor_CanShowOpenDoorPrompt() const;
	bool SubDoor_CanCloseDoors(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool SubDoor_CanOpenDoors(class AReadyOrNotCharacter* PlayerCharacter) const;
	bool TeamKnowsDoorLockState(bool bSuspectTeam) const;
	bool TeamKnowsDoorTrapState(bool bSuspectTeam) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Door")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Door")
	}
	static class ADoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADoor>();
	}
};
DUMPER7_ASSERTS_ADoor;

// Class ReadyOrNot.DoorBreachActivity
// 0x0020 (0x0278 - 0x0258)
class UDoorBreachActivity : public UDoorInteractionActivity
{
public:
	class ABaseItem*                              BreachItem;                                        // 0x0258(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UBaseActivity* Activity, class ACyberneticController* Controller)> OnBreachFinished; // 0x0260(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_270[0x8];                                      // 0x0270(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnterBreachedStage();
	void ExitBreachedStage();
	void FinishDoorBreach();
	void OnBreacherKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void TickBreachedStage(float DeltaTime, float Uptime);

	bool IsBreachFinished() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DoorBreachActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DoorBreachActivity")
	}
	static class UDoorBreachActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDoorBreachActivity>();
	}
};
DUMPER7_ASSERTS_UDoorBreachActivity;

// Class ReadyOrNot.InvestigateActivity
// 0x0000 (0x02A0 - 0x02A0)
class UInvestigateActivity final : public UWorldBuildingActivity
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InvestigateActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InvestigateActivity")
	}
	static class UInvestigateActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInvestigateActivity>();
	}
};
DUMPER7_ASSERTS_UInvestigateActivity;

// Class ReadyOrNot.KickDoorActivity
// 0x0008 (0x0280 - 0x0278)
class UKickDoorActivity final : public UDoorBreachActivity
{
public:
	uint8                                         Pad_278[0x8];                                      // 0x0278(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDoorKicked();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("KickDoorActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"KickDoorActivity")
	}
	static class UKickDoorActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKickDoorActivity>();
	}
};
DUMPER7_ASSERTS_UKickDoorActivity;

// Class ReadyOrNot.C2DoorActivity
// 0x0010 (0x0288 - 0x0278)
class UC2DoorActivity final : public UDoorBreachActivity
{
public:
	uint8                                         Pad_278[0x10];                                     // 0x0278(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnterDetonateC2Stage();
	void OnC2Detonate();
	void OnC2Placed();
	void PerformDetonateC2Stage(float DeltaTime, float Uptime);

	bool CanDetonateC2() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("C2DoorActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"C2DoorActivity")
	}
	static class UC2DoorActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UC2DoorActivity>();
	}
};
DUMPER7_ASSERTS_UC2DoorActivity;

// Class ReadyOrNot.MeleeWeapon
// 0x0020 (0x13A0 - 0x1380)
class AMeleeWeapon : public ABaseWeapon
{
public:
	class FString                                 MeleeMontage;                                      // 0x1380(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyBleed;                                       // 0x1390(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1391[0x3];                                     // 0x1391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MeleeDamage;                                       // 0x1394(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1398[0x8];                                     // 0x1398(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MeleeWeapon")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MeleeWeapon")
	}
	static class AMeleeWeapon* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMeleeWeapon>();
	}
};
DUMPER7_ASSERTS_AMeleeWeapon;

// Class ReadyOrNot.ShotgunDoorActivity
// 0x0008 (0x0280 - 0x0278)
class UShotgunDoorActivity final : public UDoorBreachActivity
{
public:
	uint8                                         Pad_278[0x8];                                      // 0x0278(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDoorKicked();
	void OnDoorShotgunned();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShotgunDoorActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShotgunDoorActivity")
	}
	static class UShotgunDoorActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShotgunDoorActivity>();
	}
};
DUMPER7_ASSERTS_UShotgunDoorActivity;

// Class ReadyOrNot.TableTennisMachine
// 0x00C0 (0x0358 - 0x0298)
class ATableTennisMachine final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GameRenderDistance;                                // 0x02A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxScore;                                          // 0x02A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTableTennisGame                       Game;                                              // 0x02A8(0x0048)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class ATableTennisPlayer*                     LeftPlayer;                                        // 0x02F0(0x0008)(Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATableTennisPlayer*                     RightPlayer;                                       // 0x02F8(0x0008)(Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                 GameRenderTarget;                                  // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bHasInsertedCoin : 1;                              // 0x0308(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableComponent*                 LeftPlayerInteractable;                            // 0x0310(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 RightPlayerInteractable;                           // 0x0318(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 InsertCoinInteractable;                            // 0x0320(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             NumberTexture;                                     // 0x0328(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             BackgroundTexture;                                 // 0x0330(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             StartTexture;                                      // 0x0338(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             ReadyTexture;                                      // 0x0340(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             InsertCoinTexture;                                 // 0x0348(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             GameOverTexture;                                   // 0x0350(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnCoinInserted();
	void OnLeftPaddleHit();
	void OnRightPaddleHit();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TableTennisMachine")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TableTennisMachine")
	}
	static class ATableTennisMachine* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATableTennisMachine>();
	}
};
DUMPER7_ASSERTS_ATableTennisMachine;

// Class ReadyOrNot.RamDoorActivity
// 0x0008 (0x0280 - 0x0278)
class URamDoorActivity final : public UDoorBreachActivity
{
public:
	uint8                                         Pad_278[0x8];                                      // 0x0278(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDoorRammed();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RamDoorActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RamDoorActivity")
	}
	static class URamDoorActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<URamDoorActivity>();
	}
};
DUMPER7_ASSERTS_URamDoorActivity;

// Class ReadyOrNot.IncriminationGS
// 0x00D8 (0x0A00 - 0x0928)
class AIncriminationGS : public AReadyOrNotGameState
{
public:
	TMulticastInlineDelegate<void(class AEvidenceActor* EvidenceActor, EEvidenceActorState NewEvidenceState, bool bExtracted)> OnIntelStateChanged; // 0x0928(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ASplineTrigger_Incrimination* EvidenceSearchArea)> OnIntelSearchAreaChosen; // 0x0938(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABuildingTrigger_Incrimination* EvidenceSearchArea)> OnIntelBuildingChosen; // 0x0948(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AIncriminationClue* ActiveClue)> OnActiveClueChanged;        // 0x0958(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AIncriminationClue* ActiveClue)> OnPreviousActiveClueChanged; // 0x0968(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const TArray<class AIncriminationClue*>& Clues)> OnCluesChanged;   // 0x0978(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AEvidenceSpawnPoint*                    ChosenEvidenceSpawn;                               // 0x0988(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AEvidenceActor*                         ChosenEvidenceActor;                               // 0x0990(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AEvidenceExtractionDevice_Incrim*       ChosenExtractionDevice;                            // 0x0998(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AIncriminationClue*>             Clues;                                             // 0x09A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AIncriminationClueSpawnPoint*>   ClueSpawnPoints;                                   // 0x09B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class AIncriminationClue*                     ActiveClue;                                        // 0x09C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AIncriminationClue*                     PreviousActiveClue;                                // 0x09C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASplineTrigger_Incrimination*           ChosenEvidenceSearchArea;                          // 0x09D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingTrigger_Incrimination*         ChosenEvidenceBuilding;                            // 0x09D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASplineTrigger_Incrimination*>   NonMainIntelSearchZones;                           // 0x09E0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class AEvidenceExtractionDevice*              CurrentExtractionDevice;                           // 0x09F0(0x0008)(BlueprintVisible, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeamType                                     PickupTeam;                                        // 0x09F8(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEvidenceActorState                           IntelState;                                        // 0x09F9(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIntelExtracted;                                   // 0x09FA(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9FB[0x5];                                      // 0x09FB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool AnyHigherCluesFound(int32 ClueNumber);
	bool AnyLowerCluesFound(int32 ClueNumber);
	bool DoesPlayerPossessAnyClue(class APlayerCharacter* PlayerCharacter);
	TArray<class AIncriminationClue*> GetAllCluesOfNumber(int32 ClueNumber);
	class AIncriminationClue* GetClue(int32 ClueNumber, bool* bSuccess, bool bMustBeFound);
	void OnRep_OnActiveClueChanged();
	void OnRep_OnCluesChanged();
	void OnRep_OnIntelBuildingChosen();
	void OnRep_OnIntelSearchAreaChosen();
	void OnRep_OnIntelStateChanged();
	void OnRep_OnPreviousActiveClueChanged();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IncriminationGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IncriminationGS")
	}
	static class AIncriminationGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIncriminationGS>();
	}
};
DUMPER7_ASSERTS_AIncriminationGS;

// Class ReadyOrNot.LaunchGrenadeThroughDoorActivity
// 0x0018 (0x0290 - 0x0278)
class ULaunchGrenadeThroughDoorActivity final : public UDoorBreachActivity
{
public:
	TMulticastInlineDelegate<void()>              OnLauncherReady;                                   // 0x0278(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_288[0x8];                                      // 0x0288(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LaunchGrenadeThroughDoorActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LaunchGrenadeThroughDoorActivity")
	}
	static class ULaunchGrenadeThroughDoorActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULaunchGrenadeThroughDoorActivity>();
	}
};
DUMPER7_ASSERTS_ULaunchGrenadeThroughDoorActivity;

// Class ReadyOrNot.TugOfWarMover
// 0x0048 (0x02E0 - 0x0298)
class ATugOfWarMover final : public AActor
{
public:
	class USplineComponent*                       MoverPath;                                         // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 MoverMesh;                                         // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A8[0x10];                                     // 0x02A8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MoverSpeed;                                        // 0x02B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertVictoryPositions;                           // 0x02BC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMoverForward;                                     // 0x02BD(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMoverMoving;                                      // 0x02BE(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BF[0x1];                                      // 0x02BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MoverStartingPosition;                             // 0x02C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MoverCurrentPosition;                              // 0x02C4(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bContested;                                        // 0x02C8(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerCharacter*>               Influencers;                                       // 0x02D0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TugOfWarMover")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TugOfWarMover")
	}
	static class ATugOfWarMover* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATugOfWarMover>();
	}
};
DUMPER7_ASSERTS_ATugOfWarMover;

// Class ReadyOrNot.ThrowItemThroughDoorActivity
// 0x0040 (0x02B8 - 0x0278)
class UThrowItemThroughDoorActivity : public UDoorBreachActivity
{
public:
	TSubclassOf<class ABaseItem>                  ThrowItemClass;                                    // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnThrowReady;                                      // 0x0280(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnThrowingItem;                                    // 0x0290(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A0[0x8];                                      // 0x02A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              ThrownItem;                                        // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B0[0x8];                                      // 0x02B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ThrowItemThroughDoorActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ThrowItemThroughDoorActivity")
	}
	static class UThrowItemThroughDoorActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UThrowItemThroughDoorActivity>();
	}
};
DUMPER7_ASSERTS_UThrowItemThroughDoorActivity;

// Class ReadyOrNot.ThrowGrenadeThroughDoorActivity
// 0x0000 (0x02B8 - 0x02B8)
class UThrowGrenadeThroughDoorActivity final : public UThrowItemThroughDoorActivity
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ThrowGrenadeThroughDoorActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ThrowGrenadeThroughDoorActivity")
	}
	static class UThrowGrenadeThroughDoorActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UThrowGrenadeThroughDoorActivity>();
	}
};
DUMPER7_ASSERTS_UThrowGrenadeThroughDoorActivity;

// Class ReadyOrNot.KingOfTheHostageGS
// 0x0008 (0x0930 - 0x0928)
class AKingOfTheHostageGS final : public AReadyOrNotGameState
{
public:
	float                                         RedTeam_RoundTimeRemaining;                        // 0x0928(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlueTeam_RoundTimeRemaining;                       // 0x092C(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("KingOfTheHostageGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"KingOfTheHostageGS")
	}
	static class AKingOfTheHostageGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<AKingOfTheHostageGS>();
	}
};
DUMPER7_ASSERTS_AKingOfTheHostageGS;

// Class ReadyOrNot.SwatTeamStatusWidget
// 0x0080 (0x0348 - 0x02C8)
class USwatTeamStatusWidget : public UUserWidget
{
public:
	class UVerticalBox*                           SWAT_Status_Container;                             // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandStatusWidget*               SWAT_Alpha_Status;                                 // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandStatusWidget*               SWAT_Beta_Status;                                  // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandStatusWidget*               SWAT_Charlie_Status;                               // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandStatusWidget*               SWAT_Delta_Status;                                 // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandStatusWidget*               SWAT_Lead_Status;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<ESquadPosition, class ASWATCharacter*>   InitialSquadMap;                                   // 0x02F8(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	void OnDefaultCommandIssued(class APlayerCharacter* Issuer, ESwatCommand CommandIssued);
	void UpdateStatus();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SwatTeamStatusWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SwatTeamStatusWidget")
	}
	static class USwatTeamStatusWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USwatTeamStatusWidget>();
	}
};
DUMPER7_ASSERTS_USwatTeamStatusWidget;

// Class ReadyOrNot.CustomDoorBreachActivity
// 0x0000 (0x0278 - 0x0278)
class UCustomDoorBreachActivity final : public UDoorBreachActivity
{
public:
	void TickBreachDoor(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomDoorBreachActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomDoorBreachActivity")
	}
	static class UCustomDoorBreachActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomDoorBreachActivity>();
	}
};
DUMPER7_ASSERTS_UCustomDoorBreachActivity;

// Class ReadyOrNot.ItemSlotTactical_V2
// 0x0068 (0x0358 - 0x02F0)
class UItemSlotTactical_V2 : public UCommonUserWidget
{
public:
	ELoadoutTacticalSlotType                      SlotType;                                          // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ABaseItem>                  SlotItem;                                          // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotAmmunitionName;                                // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   SlotName;                                          // 0x0308(0x0018)(Edit, NativeAccessSpecifierPublic)
	TDelegate<void(EUINavigation Navigation)>     NavigationDelegate;                                // 0x0320(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             ItemName;                                          // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             ItemType;                                          // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             ItemCount;                                         // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                LeftArrow;                                         // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                RightArrow;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class FText GetItemDescription();
	class FText GetItemName();
	class UWidget* OnNavigateLeft(EUINavigation NavigationRule);
	class UWidget* OnNavigateRight(EUINavigation NavigationRule);
	void OnSlotsUpdated();
	void Refresh();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ItemSlotTactical_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ItemSlotTactical_V2")
	}
	static class UItemSlotTactical_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemSlotTactical_V2>();
	}
};
DUMPER7_ASSERTS_UItemSlotTactical_V2;

// Class ReadyOrNot.DoorJam
// 0x0040 (0x0CC0 - 0x0C80)
class ADoorJam : public ABaseItem
{
public:
	uint8                                         Pad_C78[0x8];                                      // 0x0C78(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bSet : 1;                                          // 0x0C80(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_C81[0x7];                                      // 0x0C81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   PlacedBy;                                          // 0x0C88(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADoor*                                  PendingPlacement;                                  // 0x0C90(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADoor*                                  JammedDoor;                                        // 0x0C98(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DoorJamSocket;                                     // 0x0CA0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          PlacedMesh;                                        // 0x0CA8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlacementTimer;                                    // 0x0CB0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WedgeRemovalTime;                                  // 0x0CB4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CB8[0x8];                                      // 0x0CB8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void JamDoor(class ADoor* Door);
	void Multicast_StartPlacement();
	void OnRep_DoorjamSet();
	void Server_FinishDoorjamPlacement(class ADoor* PendingDoor);
	void Server_StartDoorjamPlacement(class ADoor* PendingDoor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DoorJam")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DoorJam")
	}
	static class ADoorJam* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADoorJam>();
	}
};
DUMPER7_ASSERTS_ADoorJam;

// Class ReadyOrNot.DoorRam
// 0x0120 (0x0DA0 - 0x0C80)
class ADoorRam : public ABaseDeployableGear
{
public:
	TArray<TSubclassOf<class AActor>>             AcceptableHitWhitelist;                            // 0x0C78(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         MaxHitDistance;                                    // 0x0C88(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C8C[0x4];                                      // 0x0C8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UDamageType>                RamDamageTypeDefault;                              // 0x0C90(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageType>                RamDamageTypeCrumble;                              // 0x0C98(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageType>                RamDamageTypePlayer;                               // 0x0CA0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrikePlayerDamage;                                // 0x0CA8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CAC[0x4];                                      // 0x0CAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             LastGoodHit;                                       // 0x0CB0(0x00E8)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_D98[0x8];                                      // 0x0D98(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnBatteringRamHit();
	void Server_StrikeDoor(class ADoor* TargetDoor);
	void Server_StrikeGlass(class ABreakableGlass* TargetGlass);
	void Server_StrikePlayer(class APlayerCharacter* TargetPlayer);

	bool CanHitActor(const struct FHitResult& TestHit) const;
	struct FHitResult TryGetHitPosition() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DoorRam")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DoorRam")
	}
	static class ADoorRam* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADoorRam>();
	}
};
DUMPER7_ASSERTS_ADoorRam;

// Class ReadyOrNot.DoorwayComponent
// 0x0000 (0x05B0 - 0x05B0)
class UDoorwayComponent final : public UBoxComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DoorwayComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DoorwayComponent")
	}
	static class UDoorwayComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDoorwayComponent>();
	}
};
DUMPER7_ASSERTS_UDoorwayComponent;

// Class ReadyOrNot.WeaponAttachment
// 0x0130 (0x10D0 - 0x0FA0)
class UWeaponAttachment : public USkeletalMeshComponent
{
public:
	TArray<class UMaterialInstanceDynamic*>       SkinMaterials;                                     // 0x0FA0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	EWeaponAttachmentType                         WeaponAttachmentType;                              // 0x0FB0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FB1[0x7];                                      // 0x0FB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EWeaponAttachmentType>                 RemovesWeaponAttachmentTypes;                      // 0x0FB8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	EWeaponUnderbarrelAnimationType               UnderbarrelAnimationType;                          // 0x0FC8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedNotAttach;                                    // 0x0FC9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNullAttachmentOnly;                               // 0x0FCA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FCB[0x1];                                      // 0x0FCB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketAttachment;                                  // 0x0FCC(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FD4[0x4];                                      // 0x0FD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ItemName;                                          // 0x0FD8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         PointCost;                                         // 0x0FF0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FF4[0x4];                                      // 0x0FF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttachmentUIElements                  UIElements;                                        // 0x0FF8(0x0078)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<EItemAttachment>                       AdditionalAttachments;                             // 0x1070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         AttachmentWeight;                                  // 0x1080(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VerticalRecoilMultiplier;                          // 0x1084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HorizontalRecoilMultiplier;                        // 0x1088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpreadMultiplier;                                  // 0x108C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DeadzoneMultiplier;                                // 0x1090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MuzzleVelocityMultiplier;                          // 0x1094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LowReadyLengthMultiplier;                          // 0x1098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldSupressWeapon;                              // 0x109C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHidesMuzzleFlash;                                 // 0x109D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideMuzzleFlash;                              // 0x109E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109F[0x1];                                     // 0x109F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        MuzzleFlashParticle;                               // 0x10A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        MuzzleSmokeParticle;                               // 0x10A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10B0[0x4];                                     // 0x10B0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MagazineAmmoIncrease;                              // 0x10B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   HideBoneOnMesh;                                    // 0x10B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraBobAdditionFactor;                           // 0x10C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ADS_Speed_Multiplier;                              // 0x10C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             ToggleSound;                                       // 0x10C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void ApplyWetness(float Wetness, float RainAmount);
	void PlayToggleSound();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponAttachment")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponAttachment")
	}
	static class UWeaponAttachment* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponAttachment>();
	}
};
DUMPER7_ASSERTS_UWeaponAttachment;

// Class ReadyOrNot.LaserAttachment
// 0x0040 (0x1110 - 0x10D0)
class ULaserAttachment : public UWeaponAttachment
{
public:
	bool                                          bRequireNVG;                                       // 0x10D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10D1[0x7];                                     // 0x10D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               LaserParticleComponent;                            // 0x10D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               LaserBeamEndComponent;                             // 0x10E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        LaserParticle;                                     // 0x10E8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        LaserBeamEnd;                                      // 0x10F0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRepOn;                                            // 0x10F8(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_10F9[0x7];                                     // 0x10F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ALensFlare>                 LensFlareClass;                                    // 0x1100(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ALensFlare*                             SpawnedLensFlare;                                  // 0x1108(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnRep_On();
	void ToggleLaser(bool bOn);

	bool IsLaserOn() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LaserAttachment")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LaserAttachment")
	}
	static class ULaserAttachment* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULaserAttachment>();
	}
};
DUMPER7_ASSERTS_ULaserAttachment;

// Class ReadyOrNot.UnmannedVehicle
// 0x0048 (0x0368 - 0x0320)
class AUnmannedVehicle : public APawn
{
public:
	uint8                                         Pad_320[0x8];                                      // 0x0320(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       Pilot;                                             // 0x0328(0x0008)(BlueprintVisible, Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Health;                                            // 0x0330(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDead;                                             // 0x0334(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_335[0x3];                                      // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxHealth;                                         // 0x0338(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   VehicleTabletName;                                 // 0x0340(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSubclassOf<class AHUD>                       PreviousHUD;                                       // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AHUD>                       VehicleHUD;                                        // 0x0360(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void AssumeTabletControl(class APlayerCharacter* TabletOwner);
	bool CanControlWithTablet(class APlayerCharacter* TabletOwner);
	bool CanTabletViewMe(class APlayerCharacter* TabletOwner, class AReadyOrNotGameState* GameState);
	void Die(class AController* EventInstigator, class AActor* DamageCauser);
	float GetHealth();
	class APlayerCharacter* GetPilot();
	class FText GetTabletNameText();
	class USceneComponent* GetTabletViewComponent();
	ETeamType GetTabletViewTeamColor();
	void HideActorsForTabletView(class USceneCaptureComponent2D* Component);
	bool IsAlive();
	void OnDeath(class AController* EventInstigator, class AActor* DamageCauser);
	void Server_StartPiloting(class AReadyOrNotPlayerController* NewController);
	void Server_StopPiloting(class AReadyOrNotPlayerController* CallingController);
	float TakeDamage(float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UnmannedVehicle")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UnmannedVehicle")
	}
	static class AUnmannedVehicle* GetDefaultObj()
	{
		return GetDefaultObjImpl<AUnmannedVehicle>();
	}
};
DUMPER7_ASSERTS_AUnmannedVehicle;

// Class ReadyOrNot.GamepadButtonImage
// 0x0018 (0x02E0 - 0x02C8)
class UGamepadButtonImage : public UUserWidget
{
public:
	class UDataTable*                             ImageSet;                                          // 0x02C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 ButtonImage;                                       // 0x02D0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TagOrId;                                           // 0x02D8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	struct FSlateBrush GetBrush(const class FString& GamepadName);
	void SetBrush();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GamepadButtonImage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GamepadButtonImage")
	}
	static class UGamepadButtonImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadButtonImage>();
	}
};
DUMPER7_ASSERTS_UGamepadButtonImage;

// Class ReadyOrNot.Drone
// 0x0358 (0x06C0 - 0x0368)
class ADrone final : public AUnmannedVehicle
{
public:
	TSubclassOf<class UUserWidget>                DroneWidgetClass;                                  // 0x0368(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            FPCameraRotationCurve;                             // 0x0370(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FPCameraRotationResetSpeed;                        // 0x0378(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           FPDamageCurve;                                     // 0x0380(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FPDamageSpeed;                                     // 0x0388(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxPitchTilt;                                      // 0x038C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxRollTilt;                                       // 0x0390(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxRPM;                                            // 0x0394(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         IdleRPM;                                           // 0x0398(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RPMThrottleMultiplier;                             // 0x039C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ThrottleInterpSpeed;                               // 0x03A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RotationInterpSpeed;                               // 0x03A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TurnSpeed;                                         // 0x03A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RotationInterpSpeedWhenSteady;                     // 0x03AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TurnSpeedWhenSteady;                               // 0x03B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinSpeed;                                          // 0x03B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxSpeed;                                          // 0x03B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SpeedIncrementRate;                                // 0x03BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<EDroneDamageSpeed, float>                DroneSpeedToDamageValues;                          // 0x03C0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                         InvincibilityTimeAfterDamageApplied;               // 0x0410(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RotorRotation;                                     // 0x0418(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                         RPM;                                               // 0x0430(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CurrentAltitude;                                   // 0x0434(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CurrentPilotDistance;                              // 0x0438(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DroneTransform;                                    // 0x0440(0x0060)(BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                               TargetRotation;                                    // 0x04A0(0x0018)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                               TargetSteadyCameraRotation;                        // 0x04B8(0x0018)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bApplyingInput;                                    // 0x04D0(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSteadyDrone;                                      // 0x04D1(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDroneThirdPerson;                                 // 0x04D2(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4D3[0x5];                                      // 0x04D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWorld*                                 World;                                             // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotPlayerController*            DroneController;                                   // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotPlayerController*            OriginalController;                                // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4F0[0x38];                                     // 0x04F0(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          FlightBox;                                         // 0x0528(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0530(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USphereComponent*                       DetectionSphere;                                   // 0x0538(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFloatingPawnMovement*                  FloatingMovementComponent;                         // 0x0540(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpringArmComponent*                    TPCameraArm;                                       // 0x0548(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraComponent*                       TPCamera;                                          // 0x0550(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                        Audio;                                             // 0x0558(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraComponent*                       FPCamera;                                          // 0x0560(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                            DroneWidgetHUD;                                    // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_570[0x150];                                    // 0x0570(0x0150)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Client_UpdateDrone(const struct FTransform& NewTransform, float InRPM);
	void ExitDrone();
	void Finished_CameraDamage();
	void IncrementSpeed(float Value);
	bool IsSpeedThresholdMet(float InSpeedAsPercentage);
	void OnDetectionSphereOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnDroneHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void QuickTurn();
	void Server_UpdateDrone(const struct FTransform& NewTransform, float InRPM);
	void SteadyDrone();
	void Tick_CameraDamage();
	void Tick_CameraReset();
	void ToggleThirdPerson();
	void UpdatePilotingInfo();

	float GetAltitude() const;
	struct FVector GetCurrentMovementDirection() const;
	float GetCurrentRPM() const;
	float GetCurrentSpeedAsPercentage() const;
	float GetDistanceToPilot() const;
	class AReadyOrNotPlayerController* GetDroneController() const;
	float GetIdleRPM() const;
	float GetMaxRPM() const;
	float GetMaxSpeed() const;
	float GetMinSpeed() const;
	bool HasPilot() const;
	bool IsApplyingInput() const;
	bool IsInThirdPersonMode() const;
	bool IsInvincible() const;
	bool IsMoving() const;
	bool IsMovingBackward() const;
	bool IsMovingForward() const;
	bool IsMovingLeft() const;
	bool IsMovingRight() const;
	bool IsStabilized() const;
	void RetrieveLastHitDamageInfo(EDroneDamageSpeed* InDroneDamageSpeed, float* InDamageAmount) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Drone")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Drone")
	}
	static class ADrone* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADrone>();
	}
};
DUMPER7_ASSERTS_ADrone;

// Class ReadyOrNot.DroneVehicle
// 0x01D8 (0x0540 - 0x0368)
class ADroneVehicle final : public AUnmannedVehicle
{
public:
	class UBoxComponent*                          FlightBox;                                         // 0x0368(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0370(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                        Audio;                                             // 0x0378(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraComponent*                       FirstPersonCamera;                                 // 0x0380(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpringArmComponent*                    ThirdPersonSpringArm;                              // 0x0388(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraComponent*                       ThirdPersonCamera;                                 // 0x0390(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFloatingPawnMovement*                  FloatingMovementComponent;                         // 0x0398(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTilt;                                           // 0x03A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRPM;                                            // 0x03A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IdleRPM;                                           // 0x03A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RPMForceScale;                                     // 0x03AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RPMThrottleMultiplier;                             // 0x03B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ThrottleInterpSpeed;                               // 0x03B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationInterpSpeed;                               // 0x03B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurnSpeed;                                         // 0x03BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationInterpSpeedWhenSteady;                     // 0x03C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurnSpeedWhenSteady;                               // 0x03C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSpeed;                                          // 0x03C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSpeed;                                          // 0x03CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedIncrementRate;                                // 0x03D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InvincibilityTimeAfterDamageApplied;               // 0x03D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RPM;                                               // 0x03D8(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RotorRotation;                                     // 0x03E0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         CurrentAltitude;                                   // 0x03F8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentPilotDistance;                              // 0x03FC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             DroneTransform;                                    // 0x0400(0x0060)(BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               TargetRotation;                                    // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_478[0x68];                                     // 0x0478(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bApplyingInput;                                    // 0x04E0(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSteadyDrone;                                      // 0x04E1(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E2[0x3E];                                     // 0x04E2(0x003E)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       DroneOwner;                                        // 0x0520(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWorld*                                 World;                                             // 0x0528(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_530[0x10];                                     // 0x0530(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Drone_Exit();
	void Drone_MoveForward(float Val);
	void Drone_QuickTurn();
	void Drone_Right(float Val);
	void Drone_Steady();
	void Drone_Throttle(float Val);
	void Drone_ToggleThirdPerson();
	void Drone_Yaw(float Val);
	void OnDroneHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnRep_DroneMovement();
	void Server_UpdateDroneTransform(const struct FTransform& NewTransform);
	void UpdatePilotingInfo();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DroneVehicle")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DroneVehicle")
	}
	static class ADroneVehicle* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADroneVehicle>();
	}
};
DUMPER7_ASSERTS_ADroneVehicle;

// Class ReadyOrNot.LicenseSave
// 0x0008 (0x0030 - 0x0028)
class ULicenseSave final : public USaveGame
{
public:
	bool                                          bAcceptedAlphaNonDisclosureAgreement;              // 0x0028(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AcceptAlphaNDA();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LicenseSave")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LicenseSave")
	}
	static class ULicenseSave* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULicenseSave>();
	}
};
DUMPER7_ASSERTS_ULicenseSave;

// Class ReadyOrNot.DropWeaponAnimNotify
// 0x0000 (0x0038 - 0x0038)
class UDropWeaponAnimNotify final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DropWeaponAnimNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DropWeaponAnimNotify")
	}
	static class UDropWeaponAnimNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDropWeaponAnimNotify>();
	}
};
DUMPER7_ASSERTS_UDropWeaponAnimNotify;

// Class ReadyOrNot.DuelingCombatMove
// 0x0038 (0x0268 - 0x0230)
class UDuelingCombatMove final : public UBaseCombatMoveActivity
{
public:
	uint8                                         Pad_230[0x38];                                     // 0x0230(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DuelingCombatMove")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DuelingCombatMove")
	}
	static class UDuelingCombatMove* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDuelingCombatMove>();
	}
};
DUMPER7_ASSERTS_UDuelingCombatMove;

// Class ReadyOrNot.KingOfTheHillGS
// 0x0008 (0x0930 - 0x0928)
class AKingOfTheHillGS : public AReadyOrNotGameState
{
public:
	class ATugOfWarMover*                         Mover;                                             // 0x0928(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("KingOfTheHillGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"KingOfTheHillGS")
	}
	static class AKingOfTheHillGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<AKingOfTheHillGS>();
	}
};
DUMPER7_ASSERTS_AKingOfTheHillGS;

// Class ReadyOrNot.DynamicInteractableWorldItem
// 0x00A0 (0x0338 - 0x0298)
class ADynamicInteractableWorldItem final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bRestartOnToggle;                                  // 0x02A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanToggleIfDestroyed;                             // 0x02A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bItemOn;                                           // 0x02A2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bItemDestroyed;                                    // 0x02A3(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableComponent*                 InteractableComponent;                             // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioComponent*                    InteractAudioFMOD;                                 // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioComponent*                    IntactRunningAudioFMOD1;                           // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioComponent*                    DestroyedRunningAudioFMOD;                         // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioComponent*                    ImpactAudioFMOD;                                   // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>             IntactOnMaterials;                                 // 0x02D0(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>             IntactOffMaterials;                                // 0x02E0(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>             DestroyedOnMaterials;                              // 0x02F0(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>             DestroyedOffMaterials;                             // 0x0300(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   ItemMesh;                                          // 0x0310(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                            PostDestructionMesh;                               // 0x0318(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*               ImpactParticle;                                    // 0x0320(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     PhysicsImpactDecal;                                // 0x0328(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PhysicsImpactDecalScale;                           // 0x0330(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Multicast_DestroyItem();
	void Multicast_ItemStateToggle();
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnItemDestroyed();
	void OnItemStateToggled();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DynamicInteractableWorldItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DynamicInteractableWorldItem")
	}
	static class ADynamicInteractableWorldItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADynamicInteractableWorldItem>();
	}
};
DUMPER7_ASSERTS_ADynamicInteractableWorldItem;

// Class ReadyOrNot.TeamStatusWidget
// 0x01B0 (0x04A0 - 0x02F0)
class UTeamStatusWidget final : public UBaseWidget
{
public:
	class UImage*                                 TeamEmblem_Image_LeftAligned;                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         Teammates_Container_LeftAligned;                   // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 TeamEmblem_Image_RightAligned;                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         Teammates_Container_RightAligned;                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHorizontalAlignment                          Alignment;                                         // 0x0310(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_311[0xF];                                      // 0x0311(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            TeamEmblemBrush;                                   // 0x0320(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	ETeamType                                     Team;                                              // 0x03F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UTeamPaperdollWidget>       PaperdollWidgetClass;                              // 0x03F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   EmptyTeamText;                                     // 0x0400(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	struct FSlateColor                            EmptyTeamTextColor;                                // 0x0418(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         EmptyTeamTextFont;                                 // 0x0430(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTeamPaperdollWidget*>           TeamPaperdolls;                                    // 0x0488(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                             EmptyTeam_Text;                                    // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void InitializeTeam();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TeamStatusWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TeamStatusWidget")
	}
	static class UTeamStatusWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTeamStatusWidget>();
	}
};
DUMPER7_ASSERTS_UTeamStatusWidget;

// Class ReadyOrNot.DynamicWorldActor
// 0x0010 (0x02A8 - 0x0298)
class ADynamicWorldActor final : public AActor
{
public:
	class FName                                   DynamicLabel;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReplicateSpawn;                                   // 0x02A0(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CheckDynamicSpawn();
	void OnDynamicallySpawned();
	void OnRep_ReplicateSpawn();
	void SetDynamicSpawn(bool bShouldSpawn);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DynamicWorldActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DynamicWorldActor")
	}
	static class ADynamicWorldActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADynamicWorldActor>();
	}
};
DUMPER7_ASSERTS_ADynamicWorldActor;

// Class ReadyOrNot.LightningGenerator
// 0x00A8 (0x0340 - 0x0298)
class ALightningGenerator final : public AActor
{
public:
	uint8                                         Pad_298[0x10];                                     // 0x0298(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneRoot;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                        Thunder;                                           // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               ParticleComponent;                                 // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ParticleSpawnChance;                               // 0x02C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UParticleSystem*>                ParticleTemplates;                                 // 0x02C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class USoundBase*>                     ThunderSounds;                                     // 0x02D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UDirectionalLightComponent*             Lightning;                                         // 0x02E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ThunderDelayMin;                                   // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ThunderDelayMax;                                   // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LightningColorMin;                                 // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LightningColorMax;                                 // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightningDelayMin;                                 // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightningDelayMax;                                 // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightningIntensityMin;                             // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightningIntensityMax;                             // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightningIntensityDecay;                           // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightningIntensityJitterMin;                       // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightningIntensityJitterMax;                       // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightningIntensityJitterTimeMin;                   // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightningIntensityJitterTimeMax;                   // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightningJitterTimeRemaining;                      // 0x033C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void PlayLightning();
	void PlayThunder();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LightningGenerator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LightningGenerator")
	}
	static class ALightningGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALightningGenerator>();
	}
};
DUMPER7_ASSERTS_ALightningGenerator;

// Class ReadyOrNot.DynamicWorldItem
// 0x0038 (0x02D0 - 0x0298)
class ADynamicWorldItem final : public AActor
{
public:
	class UStaticMeshComponent*                   ItemMesh;                                          // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*               ImpactParticle;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioComponent*                    ImpactAudioFMOD;                                   // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                            PostImpactMesh;                                    // 0x02B0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     PostImpactMaterial;                                // 0x02B8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     PhysicsImpactDecal;                                // 0x02C0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PhysicsImpactDecalScale;                           // 0x02C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bItemDestroyed;                                    // 0x02CC(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Multicast_DestroyItem();
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnItemDestroyed();
	void OnRep_ItemDestroyed();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DynamicWorldItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DynamicWorldItem")
	}
	static class ADynamicWorldItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADynamicWorldItem>();
	}
};
DUMPER7_ASSERTS_ADynamicWorldItem;

// Class ReadyOrNot.Elevator
// 0x0070 (0x0308 - 0x0298)
class AElevator final : public AActor
{
public:
	class USplineComponent*                       ElevatorPath;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMoveElevator;                                     // 0x02A0(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCloseDoors;                                       // 0x02A1(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 ElevatorMesh;                                      // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODAudioComponent*                    DestinationReachedSound;                           // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODAudioComponent*                    FloorReachedSound;                                 // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODAudioComponent*                    DoorOpenSoundFMOD;                                 // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODAudioComponent*                    DoorCloseSoundFMOD;                                // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                DefaultElevatorLoc;                                // 0x02D0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Floors;                                            // 0x02E8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ElevatorSpeed;                                     // 0x02EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentFloor;                                      // 0x02F0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MoveElevatorDelay;                                 // 0x02F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                           MoveElevatorDelay_Handle;                          // 0x02F8(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SelectedFloor;                                     // 0x0300(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Multicast_PlayDestinationReachedSound();
	void Multicast_PlayDoorCloseSound();
	void Multicast_PlayDoorOpenSound();
	void Multicast_PlayFloorReachedSound();
	void Server_OpenCloseDoors(bool bShouldCloseDoors);
	void Server_SetSelectedFloor(int32 Floor);
	void SetSelectedFloor(int32 Floor);
	void StartMovingElevator();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Elevator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Elevator")
	}
	static class AElevator* GetDefaultObj()
	{
		return GetDefaultObjImpl<AElevator>();
	}
};
DUMPER7_ASSERTS_AElevator;

// Class ReadyOrNot.WeaponCacheResourceComponent
// 0x0010 (0x0110 - 0x0100)
class UWeaponCacheResourceComponent final : public UCacheResourceComponent
{
public:
	TArray<TSubclassOf<class ABaseMagazineWeapon>> AvailableWeapons;                                 // 0x0100(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponCacheResourceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponCacheResourceComponent")
	}
	static class UWeaponCacheResourceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponCacheResourceComponent>();
	}
};
DUMPER7_ASSERTS_UWeaponCacheResourceComponent;

// Class ReadyOrNot.ElevatorButtonComponent
// 0x0040 (0x0670 - 0x0630)
class UElevatorButtonComponent final : public UStaticMeshComponent
{
public:
	uint8                                         Pad_628[0x10];                                     // 0x0628(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bOverrideButtonPromptText;                         // 0x0638(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_639[0x7];                                      // 0x0639(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ButtonPromptText;                                  // 0x0640(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class AElevator*                              OwningElevator;                                    // 0x0658(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDoorButton;                                       // 0x0660(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDoorClose;                                        // 0x0661(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_662[0x2];                                      // 0x0662(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Floor;                                             // 0x0664(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_668[0x8];                                      // 0x0668(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ElevatorButtonComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ElevatorButtonComponent")
	}
	static class UElevatorButtonComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UElevatorButtonComponent>();
	}
};
DUMPER7_ASSERTS_UElevatorButtonComponent;

// Class ReadyOrNot.EngageTargetLessLethalActivity
// 0x0018 (0x0208 - 0x01F0)
class UEngageTargetLessLethalActivity final : public UBaseActivity
{
public:
	class AReadyOrNotCharacter*                   TargetCharacter;                                   // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F8[0x10];                                     // 0x01F8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EngageTargetLessLethalActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EngageTargetLessLethalActivity")
	}
	static class UEngageTargetLessLethalActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEngageTargetLessLethalActivity>();
	}
};
DUMPER7_ASSERTS_UEngageTargetLessLethalActivity;

// Class ReadyOrNot.EntitlementsSubsystem
// 0x0018 (0x0048 - 0x0030)
class UEntitlementsSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsFullyInitialized() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EntitlementsSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EntitlementsSubsystem")
	}
	static class UEntitlementsSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEntitlementsSubsystem>();
	}
};
DUMPER7_ASSERTS_UEntitlementsSubsystem;

// Class ReadyOrNot.HelicopterUnlockPathNodeComponent
// 0x0008 (0x00B0 - 0x00A8)
class UHelicopterUnlockPathNodeComponent final : public UHelicopterTriggerComponent
{
public:
	class AHelicopterPathNode*                    Node;                                              // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HelicopterUnlockPathNodeComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HelicopterUnlockPathNodeComponent")
	}
	static class UHelicopterUnlockPathNodeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHelicopterUnlockPathNodeComponent>();
	}
};
DUMPER7_ASSERTS_UHelicopterUnlockPathNodeComponent;

// Class ReadyOrNot.EnvQueryContext_GasSafePoints
// 0x0000 (0x0028 - 0x0028)
class UEnvQueryContext_GasSafePoints final : public UEnvQueryContext
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EnvQueryContext_GasSafePoints")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EnvQueryContext_GasSafePoints")
	}
	static class UEnvQueryContext_GasSafePoints* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnvQueryContext_GasSafePoints>();
	}
};
DUMPER7_ASSERTS_UEnvQueryContext_GasSafePoints;

// Class ReadyOrNot.LevelData
// 0x0890 (0x08C0 - 0x0030)
class ULevelData : public UPrimaryDataAsset
{
public:
	class FString                                 LevelName;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLevelDataLookupTable                  Data;                                              // 0x0040(0x0880)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LevelData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LevelData")
	}
	static class ULevelData* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULevelData>();
	}
};
DUMPER7_ASSERTS_ULevelData;

// Class ReadyOrNot.EnvQueryContext_GasSources
// 0x0000 (0x0028 - 0x0028)
class UEnvQueryContext_GasSources final : public UEnvQueryContext
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EnvQueryContext_GasSources")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EnvQueryContext_GasSources")
	}
	static class UEnvQueryContext_GasSources* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnvQueryContext_GasSources>();
	}
};
DUMPER7_ASSERTS_UEnvQueryContext_GasSources;

// Class ReadyOrNot.EnvQueryContext_NavProjectedQuerier
// 0x0000 (0x0028 - 0x0028)
class UEnvQueryContext_NavProjectedQuerier final : public UEnvQueryContext
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EnvQueryContext_NavProjectedQuerier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EnvQueryContext_NavProjectedQuerier")
	}
	static class UEnvQueryContext_NavProjectedQuerier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnvQueryContext_NavProjectedQuerier>();
	}
};
DUMPER7_ASSERTS_UEnvQueryContext_NavProjectedQuerier;

// Class ReadyOrNot.EnvQueryGenerator_GasPoints
// 0x00B8 (0x0148 - 0x0090)
class UEnvQueryGenerator_GasPoints final : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct FAIDataProviderFloatValue              GridRadius;                                        // 0x0090(0x0038)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue              SpaceBetween;                                      // 0x00C8(0x0038)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TSubclassOf<class UEnvQueryContext>           GenerateAround;                                    // 0x0100(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UNavigationQueryFilter>     NavigationFilter;                                  // 0x0108(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue              SafePointsBufferDistance;                          // 0x0110(0x0038)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EnvQueryGenerator_GasPoints")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EnvQueryGenerator_GasPoints")
	}
	static class UEnvQueryGenerator_GasPoints* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnvQueryGenerator_GasPoints>();
	}
};
DUMPER7_ASSERTS_UEnvQueryGenerator_GasPoints;

// Class ReadyOrNot.HitRegistrationSettings
// 0x0030 (0x0068 - 0x0038)
class UHitRegistrationSettings final : public UDeveloperSettings
{
public:
	bool                                          bEnableValidation;                                 // 0x0038(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HitscanForgiveness;                                // 0x003C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShooterForgiveness;                                // 0x0040(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceDistanceForgiveness;                          // 0x0044(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SnapshotVelocityFactor;                            // 0x0048(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MinimumSnapshotExtent;                             // 0x0050(0x0018)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HitRegistrationSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HitRegistrationSettings")
	}
	static class UHitRegistrationSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitRegistrationSettings>();
	}
};
DUMPER7_ASSERTS_UHitRegistrationSettings;

// Class ReadyOrNot.EnvQueryTest_GasPath
// 0x0070 (0x02F0 - 0x0280)
class UEnvQueryTest_GasPath final : public UEnvQueryTest_Pathfinding
{
public:
	struct FAIDataProviderBoolValue               CalculatePathLengthToAllContexts;                  // 0x0280(0x0038)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue              SafePointsBufferDistance;                          // 0x02B8(0x0038)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EnvQueryTest_GasPath")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EnvQueryTest_GasPath")
	}
	static class UEnvQueryTest_GasPath* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnvQueryTest_GasPath>();
	}
};
DUMPER7_ASSERTS_UEnvQueryTest_GasPath;

// Class ReadyOrNot.ItemWheelElement
// 0x0108 (0x03D0 - 0x02C8)
class UItemWheelElement : public UUserWidget
{
public:
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	EItemCategory                                 ElementCategory;                                   // 0x02D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 ElementImage;                                      // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                            ElementBrush;                                      // 0x02E0(0x00D0)(Edit, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                             CounterText;                                       // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B8[0x18];                                     // 0x03B8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsSelectable();
	void Selected(bool Selected_0);
	bool ShowCounter();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ItemWheelElement")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ItemWheelElement")
	}
	static class UItemWheelElement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemWheelElement>();
	}
};
DUMPER7_ASSERTS_UItemWheelElement;

// Class ReadyOrNot.EOSMultiplayerSubsystem
// 0x0330 (0x0360 - 0x0030)
class alignas(0x10) UEOSMultiplayerSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x68];                                      // 0x0030(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bMultiplayerConnectionAvailable)> OnMultiplayerConnectionStatusChanged; // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_A8[0x228];                                     // 0x00A8(0x0228)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          IsAsyncOperationInProgress;                        // 0x02D0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D1[0x8F];                                     // 0x02D1(0x008F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool EnableAccountLinkingUI();
	bool IsNetworkConnected();
	bool TryLinkEpicAccount();

	bool CanLinkEpicAccount() const;
	class FString GetEOSAccountName() const;
	class FString GetHostRegion() const;
	class FString GetMatchmakingRegions() const;
	int32 GetMultiplayerConnectionStatus() const;
	bool IsAccountLinked() const;
	bool IsConnectionStatusMatchingWithFilters(int32 ConnectionFilters) const;
	bool IsLoginComplete() const;
	bool IsLoginSuccessful() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EOSMultiplayerSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EOSMultiplayerSubsystem")
	}
	static class UEOSMultiplayerSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSMultiplayerSubsystem>();
	}
};
DUMPER7_ASSERTS_UEOSMultiplayerSubsystem;

// Class ReadyOrNot.EOSMultiplayerStatics
// 0x0000 (0x0028 - 0x0028)
class UEOSMultiplayerStatics final : public UBlueprintFunctionLibrary
{
public:
	static class FString BPUniqueNetIDToString(const struct FBPUniqueNetId& UniqueNetId);
	static bool CanChangeMutedState(class UObject* WorldContextObject, const class FString& UniqueNetId);
	static bool EqualUniqueNetID(const struct FBPUniqueNetId& A, const struct FBPUniqueNetId& B);
	static int32 GetMaxPlayers(class UObject* WorldContextObject);
	static void GetUniqueNetIDString(const class APlayerController* InPlayerController, class FString* OutString);
	static bool IsPlayerBlocked(class UObject* WorldContextObject, const class FString& UniqueNetIdStr);
	static bool IsValidBPUniqueNetID(const struct FBPUniqueNetId& UniqueNetId);
	static bool IsValidUniqueNetID(const class APlayerController* InPlayerController);
	static void SetMaxPlayers(class UObject* WorldContextObject, int32 InMaxPlayers);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EOSMultiplayerStatics")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EOSMultiplayerStatics")
	}
	static class UEOSMultiplayerStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSMultiplayerStatics>();
	}
};
DUMPER7_ASSERTS_UEOSMultiplayerStatics;

// Class ReadyOrNot.EventFiredEventCondition
// 0x0008 (0x0048 - 0x0040)
class UEventFiredEventCondition final : public UMissionEventCondition
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0040(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void HandleEventFired(const struct FGameplayTag& SourceTag);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EventFiredEventCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EventFiredEventCondition")
	}
	static class UEventFiredEventCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventFiredEventCondition>();
	}
};
DUMPER7_ASSERTS_UEventFiredEventCondition;

// Class ReadyOrNot.HotkeyWidget
// 0x0118 (0x03E0 - 0x02C8)
class UHotkeyWidget : public UUserWidget
{
public:
	class UTextBlock*                             Hotkey_Text;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Hotkey_Image;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 HotkeyDivider_Image;                               // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             RemainingUses_Text;                                // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Anim_Pressed;                                      // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Anim_Released;                                     // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   InputName;                                         // 0x02F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                            Icon;                                              // 0x0300(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                         bCustomAnimation : 1;                              // 0x03D0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bShowRemainingUses : 1;                            // 0x03D0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_3D1[0xF];                                      // 0x03D1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void PlayPressedAnimation();
	void PlayReleasedAnimation();
	void RefreshHotkey();
	void SetHotkeyImage(const struct FSlateBrush& Brush);
	void SetHotkeyRemainingUses(int32 InRemainingUses);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HotkeyWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HotkeyWidget")
	}
	static class UHotkeyWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHotkeyWidget>();
	}
};
DUMPER7_ASSERTS_UHotkeyWidget;

// Class ReadyOrNot.EvidenceActor
// 0x0060 (0x0360 - 0x0300)
class AEvidenceActor : public APickupActor
{
public:
	uint8                                         Pad_300[0x18];                                     // 0x0300(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UScoringComponent*                      ScoringComponent;                                  // 0x0318(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEvidenceComponent*                     EvidenceComponent;                                 // 0x0320(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          InteractionBox;                                    // 0x0328(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   EvidenceName;                                      // 0x0330(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                         bInteractHeld : 1;                                 // 0x0348(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AEvidenceActor* CollectedEvidence, class AReadyOrNotCharacter* Collector)> OnEvidenceCollected; // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)

public:
	void OnEvidenceStateChanged(EEvidenceActorState NewState);

	class FText GetEvidenceName() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EvidenceActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EvidenceActor")
	}
	static class AEvidenceActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEvidenceActor>();
	}
};
DUMPER7_ASSERTS_AEvidenceActor;

// Class ReadyOrNot.EvidenceComponent
// 0x0068 (0x0108 - 0x00A0)
class UEvidenceComponent final : public UActorComponent
{
public:
	float                                         CurrentCollectionTime;                             // 0x00A0(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxCollectionTime;                                 // 0x00A4(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBeingCollected;                                 // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bEvidenceExtracted : 1;                            // 0x00A9(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   CollectingCharacter;                               // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMarkAsEvidenceWhenNoOwner;                        // 0x00B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPackageOnCollection;                              // 0x00B9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ACollectedEvidenceActor>    CollectedEvidenceClass;                            // 0x00C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputEvent                                   CollectionInputEventType;                          // 0x00C8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEvidenceActorState                           EvidenceState;                                     // 0x00C9(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEvidenceActorState                           PreviousEvidenceState;                             // 0x00CA(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableComponent*                 EvidenceInteractableComponent;                     // 0x00D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D8[0x20];                                      // 0x00D8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AReadyOrNotCharacter* CollectingCharacter)> OnEvidenceCollected; // 0x00F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void OnRep_EvidenceState();

	bool CanBeCollected() const;
	bool CanBeDropped() const;
	float GetCurrentCollectionProgress() const;
	EEvidenceActorState GetEvidenceState() const;
	bool IsBeingCollected() const;
	bool IsEvidenceCollected() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EvidenceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EvidenceComponent")
	}
	static class UEvidenceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEvidenceComponent>();
	}
};
DUMPER7_ASSERTS_UEvidenceComponent;

// Class ReadyOrNot.StandardModal
// 0x00A8 (0x04C0 - 0x0418)
class UStandardModal : public UCommonActivatableWidget
{
public:
	class FText                                   TitleBar;                                          // 0x0418(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	class FText                                   ModalDescription;                                  // 0x0430(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	bool                                          ShowApplyButton;                                   // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowCancelButton;                                  // 0x0449(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowOkButton;                                      // 0x044A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44B[0x5];                                      // 0x044B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ApplyButtonText;                                   // 0x0450(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	class FText                                   CancelButtonText;                                  // 0x0468(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	class FText                                   OkButtonText;                                      // 0x0480(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	bool                                          RequireScrollToBottom;                             // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Size;                                              // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UStandardModal* CallingModal)> OnCancelClicked;              // 0x04B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	bool HasCrossplayPrivilege();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StandardModal")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StandardModal")
	}
	static class UStandardModal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStandardModal>();
	}
};
DUMPER7_ASSERTS_UStandardModal;

// Class ReadyOrNot.IllegalUnbindModal
// 0x0000 (0x04C0 - 0x04C0)
class UIllegalUnbindModal : public UStandardModal
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IllegalUnbindModal")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IllegalUnbindModal")
	}
	static class UIllegalUnbindModal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIllegalUnbindModal>();
	}
};
DUMPER7_ASSERTS_UIllegalUnbindModal;

// Class ReadyOrNot.ThrownGrenade
// 0x0000 (0x05F8 - 0x05F8)
class AThrownGrenade : public AThrownItem
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ThrownGrenade")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ThrownGrenade")
	}
	static class AThrownGrenade* GetDefaultObj()
	{
		return GetDefaultObjImpl<AThrownGrenade>();
	}
};
DUMPER7_ASSERTS_AThrownGrenade;

// Class ReadyOrNot.EvidenceExtractionDevice
// 0x0020 (0x02B8 - 0x0298)
class AEvidenceExtractionDevice : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   StaticMeshComponent;                               // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 InteractableComponent;                             // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         EvidenceExtractionTime;                            // 0x02B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void TryExtractEvidence(class APlayerCharacter* EvidencePossessor);

	bool CanCollectEvidence() const;
	bool CanStartExtraction() const;
	bool HasEvidenceToExtract() const;
	bool IsExtracting() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EvidenceExtractionDevice")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EvidenceExtractionDevice")
	}
	static class AEvidenceExtractionDevice* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEvidenceExtractionDevice>();
	}
};
DUMPER7_ASSERTS_AEvidenceExtractionDevice;

// Class ReadyOrNot.LadderSnapZone
// 0x0048 (0x02E0 - 0x0298)
class ALadderSnapZone : public AActor
{
public:
	class UBoxComponent*                          SelectionZone;                                     // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 GhostLadder;                                       // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                          Collision;                                         // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        SceneRoot;                                         // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                              ValidPlacementMaterial;                            // 0x02B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                              InvalidPlacementMaterial;                          // 0x02C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRetractedRungCount;                             // 0x02C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHorizontal;                                       // 0x02CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATelescopicLadder*                      AttachedLadder;                                    // 0x02D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUnableToPlace;                                    // 0x02D8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOverlappers;                                 // 0x02DC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void DisableCollision();
	void EnableCollision();
	void Multicast_StartShowingGhostMesh(bool bAbleToPlace);
	void Multicast_StopShowingGhostMesh();
	void OnCollisionOverlapBegin(class UPrimitiveComponent* Comp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnCollisionOverlapEnd(class UPrimitiveComponent* Comp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LadderSnapZone")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LadderSnapZone")
	}
	static class ALadderSnapZone* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALadderSnapZone>();
	}
};
DUMPER7_ASSERTS_ALadderSnapZone;

// Class ReadyOrNot.EvidenceExtractionDevice_Incrim
// 0x0028 (0x02E0 - 0x02B8)
class AEvidenceExtractionDevice_Incrim final : public AEvidenceExtractionDevice
{
public:
	class UObjectiveMarkerComponent*              ObjectiveMarkerComponent;                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObjectiveMarkerComponent*              ObjectiveMarkerComponent_WayPoint;                 // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMapActorComponent*                     MapActorComponent;                                 // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 MapSectionName;                                    // 0x02D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EvidenceExtractionDevice_Incrim")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EvidenceExtractionDevice_Incrim")
	}
	static class AEvidenceExtractionDevice_Incrim* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEvidenceExtractionDevice_Incrim>();
	}
};
DUMPER7_ASSERTS_AEvidenceExtractionDevice_Incrim;

// Class ReadyOrNot.Zipcuffs
// 0x0160 (0x0DE0 - 0x0C80)
class AZipcuffs : public ABaseItem
{
public:
	class APlayerCharacter*                       PendingArrestCharacter;                            // 0x0C78(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotCharacter*                   TargetedCharacter;                                 // 0x0C80(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bArresting;                                        // 0x0C88(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C89[0x7];                                      // 0x0C89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ArrestMaxDistance;                                 // 0x0C90(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C94[0x4];                                      // 0x0C94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECollisionChannel>                     ArrestCollisionChannels;                           // 0x0C98(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAnimMontage*                           UseZipcuffs_1P;                                    // 0x0CA8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           UseZipcuffs_3P;                                    // 0x0CB0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ArrestTime;                                        // 0x0CB8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CBC[0x14];                                     // 0x0CBC(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractionsData*                      ForcedInteractionData;                             // 0x0CD0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UInteractionsData*>              StandingArrestInteractionSuspects;                 // 0x0CD8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UInteractionsData*>              StandingArrestInteractionCivilians;                // 0x0CE8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UInteractionsData*>              PvPArrestInteraction;                              // 0x0CF8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UInteractionsData*                      ArrestRagdoll_Up;                                  // 0x0D08(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractionsData*                      ArrestRagdoll_Down;                                // 0x0D10(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractionsData*                      ArrestRagdoll_Left;                                // 0x0D18(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractionsData*                      ArrestRagdoll_Right;                               // 0x0D20(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class APlacedZipcuffs>            SpawnedZipcuffsClass;                              // 0x0D28(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ZipcuffBone;                                       // 0x0D30(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D38[0x8];                                      // 0x0D38(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnCuffsTransform;                               // 0x0D40(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               SpawnCuffsRelativeRotation;                        // 0x0DA0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                SpawnCuffsRelativeTranslation;                     // 0x0DB8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             FMODZipcuffsArrest;                                // 0x0DD0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DD8[0x8];                                      // 0x0DD8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Client_ArrestComplete();
	void Multicast_OnRagdollArrestStart(class AReadyOrNotCharacter* ArrestTarget);
	void OnRagdollArrestComplete_Driver(class AActor* Driver);
	void OnRagdollArrestComplete_Slave(class AActor* Slave);
	void OnRagdollArrestInteractionStarted();
	void Server_ArrestCancelled();
	void Server_ArrestComplete();
	void Server_ArrestManualComplete();
	void Server_ArrestStart(class AReadyOrNotCharacter* TargetedChar);
	void Server_ManualArrestCancelled();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Zipcuffs")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Zipcuffs")
	}
	static class AZipcuffs* GetDefaultObj()
	{
		return GetDefaultObjImpl<AZipcuffs>();
	}
};
DUMPER7_ASSERTS_AZipcuffs;

// Class ReadyOrNot.EvidenceSpawnPoint
// 0x0018 (0x02C8 - 0x02B0)
class AEvidenceSpawnPoint final : public AActorSpawnPoint
{
public:
	TSubclassOf<class AEvidenceActor>             EvidenceActorClass;                                // 0x02B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASplineTrigger_Incrimination*           EvidenceSearchArea;                                // 0x02B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingTrigger_Incrimination*         EvidenceBuilding;                                  // 0x02C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EvidenceSpawnPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EvidenceSpawnPoint")
	}
	static class AEvidenceSpawnPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEvidenceSpawnPoint>();
	}
};
DUMPER7_ASSERTS_AEvidenceSpawnPoint;

// Class ReadyOrNot.ExfilActor
// 0x0020 (0x02B8 - 0x0298)
class AExfilActor final : public AActor
{
public:
	uint8                                         Pad_298[0x10];                                     // 0x0298(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   BaseMesh;                                          // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B0[0x8];                                      // 0x02B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ExfilActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ExfilActor")
	}
	static class AExfilActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AExfilActor>();
	}
};
DUMPER7_ASSERTS_AExfilActor;

// Class ReadyOrNot.ExperienceActionSet
// 0x0020 (0x0050 - 0x0030)
class UExperienceActionSet final : public UPrimaryDataAsset
{
public:
	TArray<class UGameFeatureAction*>             Actions;                                           // 0x0030(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class FString>                         GameFeaturesToEnable;                              // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ExperienceActionSet")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ExperienceActionSet")
	}
	static class UExperienceActionSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UExperienceActionSet>();
	}
};
DUMPER7_ASSERTS_UExperienceActionSet;

// Class ReadyOrNot.ExperienceSettings
// 0x0010 (0x0048 - 0x0038)
class UExperienceSettings final : public UDeveloperSettings
{
public:
	struct FPrimaryAssetId                        DefaultExperience;                                 // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ExperienceSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ExperienceSettings")
	}
	static class UExperienceSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UExperienceSettings>();
	}
};
DUMPER7_ASSERTS_UExperienceSettings;

// Class ReadyOrNot.ExplosionGibs
// 0x0008 (0x02A0 - 0x0298)
class AExplosionGibs : public AActor
{
public:
	class UBloodData*                             BloodData;                                         // 0x0298(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetupGibsForSkeletalMesh(const class USkeletalMeshComponent* Mesh);
	void SpawnBloodDecal(const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ExplosionGibs")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ExplosionGibs")
	}
	static class AExplosionGibs* GetDefaultObj()
	{
		return GetDefaultObjImpl<AExplosionGibs>();
	}
};
DUMPER7_ASSERTS_AExplosionGibs;

// Class ReadyOrNot.FirefightGM
// 0x0060 (0x0A80 - 0x0A20)
class AFirefightGM : public AReadyOrNotGameMode_PVP
{
public:
	bool                                          bSuddenDeath;                                      // 0x0A20(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A21[0x7];                                      // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             TeamKilledSound_SERT_RED;                          // 0x0A28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             TeamKilledSound_SERT_BLUE;                         // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MatchLoopMusic;                                    // 0x0A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MatchStartMusic;                                   // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MatchEndMusic;                                     // 0x0A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSavedLoadout>                  RandomLoadouts;                                    // 0x0A50(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSavedLoadout>                  GeneratedLoadouts;                                 // 0x0A60(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         NumRedSpawned;                                     // 0x0A70(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumBlueSpawned;                                    // 0x0A74(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A78[0x8];                                      // 0x0A78(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 GetNumberOfActivePlayersOnTeam(ETeamType Team);
	void RegenerateRandomLoadouts();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FirefightGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FirefightGM")
	}
	static class AFirefightGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFirefightGM>();
	}
};
DUMPER7_ASSERTS_AFirefightGM;

// Class ReadyOrNot.FireOnDroppedAnimNotify
// 0x0008 (0x0040 - 0x0038)
class UFireOnDroppedAnimNotify final : public UAnimNotify
{
public:
	float                                         ChanceToFire;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FireOnDroppedAnimNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FireOnDroppedAnimNotify")
	}
	static class UFireOnDroppedAnimNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFireOnDroppedAnimNotify>();
	}
};
DUMPER7_ASSERTS_UFireOnDroppedAnimNotify;

// Class ReadyOrNot.FlankingCombatMove
// 0x0060 (0x0290 - 0x0230)
class UFlankingCombatMove final : public UBaseCombatMoveActivity
{
public:
	class AReadyOrNotCharacter*                   FlankingAgainstCharacter;                          // 0x0230(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFlankingAvoidanceVolume*               FlankingAvoidanceVolume;                           // 0x0238(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_240[0x50];                                     // 0x0240(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FlankingCombatMove")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FlankingCombatMove")
	}
	static class UFlankingCombatMove* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFlankingCombatMove>();
	}
};
DUMPER7_ASSERTS_UFlankingCombatMove;

// Class ReadyOrNot.FlashLightTrackingPoint
// 0x0038 (0x02D0 - 0x0298)
class AFlashLightTrackingPoint final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bIsPrimary : 1;                                    // 0x02A0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   MeshComp;                                          // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIPerceptionStimuliSourceComponent*    PerceptionStimuliComp;                             // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ACyberneticController*>          SensedByControllers;                               // 0x02B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FlashLightTrackingPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FlashLightTrackingPoint")
	}
	static class AFlashLightTrackingPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFlashLightTrackingPoint>();
	}
};
DUMPER7_ASSERTS_AFlashLightTrackingPoint;

// Class ReadyOrNot.FMODAudioPropagationComponent
// 0x0050 (0x04C0 - 0x0470)
class UFMODAudioPropagationComponent final : public UFMODAudioComponent
{
public:
	uint8                                         Pad_470[0x18];                                     // 0x0470(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AudioPlayLocation;                                 // 0x0488(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         volumeToSet;                                       // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         silentDistance;                                    // 0x04A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OcclusionAmount;                                   // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         minDistance;                                       // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bPlayPropagation;                                  // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4B1[0xF];                                      // 0x04B1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool CheckOcclusion();
	struct FFMODEventInstance PlayEvent(class UFMODEvent* EventToPlay, const struct FVector& Origin, const TArray<struct FMODParam>& Params_0);
	void PlayEventAttached(class UFMODEvent* EventToPlay, class USceneComponent* CompToAttach, class FName AttachPoint, const TArray<struct FMODParam>& Params_0);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FMODAudioPropagationComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FMODAudioPropagationComponent")
	}
	static class UFMODAudioPropagationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFMODAudioPropagationComponent>();
	}
};
DUMPER7_ASSERTS_UFMODAudioPropagationComponent;

// Class ReadyOrNot.FootstepFoleyVolume
// 0x0018 (0x02E8 - 0x02D0)
class AFootstepFoleyVolume final : public AVolume
{
public:
	class UFMODEvent*                             FootstepFoleyEvent;                                // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             FootstepFoleyEventFirstPerson;                     // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNPCsTriggerFootstepFoley;                         // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FootstepFoleyVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FootstepFoleyVolume")
	}
	static class AFootstepFoleyVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFootstepFoleyVolume>();
	}
};
DUMPER7_ASSERTS_AFootstepFoleyVolume;

// Class ReadyOrNot.FootstepNativeAnimNotify
// 0x0000 (0x0038 - 0x0038)
class UFootstepNativeAnimNotify final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FootstepNativeAnimNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FootstepNativeAnimNotify")
	}
	static class UFootstepNativeAnimNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFootstepNativeAnimNotify>();
	}
};
DUMPER7_ASSERTS_UFootstepNativeAnimNotify;

// Class ReadyOrNot.FreeMode
// 0x0010 (0x09D0 - 0x09C0)
class AFreeMode : public AReadyOrNotGameMode
{
public:
	float                                         RespawnTime;                                       // 0x09C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C4[0xC];                                      // 0x09C4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FreeMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FreeMode")
	}
	static class AFreeMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFreeMode>();
	}
};
DUMPER7_ASSERTS_AFreeMode;

// Class ReadyOrNot.GameFeatureLibrary
// 0x0000 (0x0028 - 0x0028)
class UGameFeatureLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void ClearGameFeatureCache();
	static EGamePlatform GetPlatform();
	static bool IsFeatureEnabled(EGameFeature InFeature);
	static bool IsFullGame();
	static bool IsGameDemo();
	static bool IsGameVersionEnabled(EGameVersionRestriction InFeature);
	static bool IsRunningInGeforceNow();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameFeatureLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameFeatureLibrary")
	}
	static class UGameFeatureLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureLibrary>();
	}
};
DUMPER7_ASSERTS_UGameFeatureLibrary;

// Class ReadyOrNot.GamepadControlSchemeRadial
// 0x0000 (0x0028 - 0x0028)
class UGamepadControlSchemeRadial final : public UGamepadControlScheme
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GamepadControlSchemeRadial")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GamepadControlSchemeRadial")
	}
	static class UGamepadControlSchemeRadial* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadControlSchemeRadial>();
	}
};
DUMPER7_ASSERTS_UGamepadControlSchemeRadial;

// Class ReadyOrNot.GamepadLayout
// 0x00D0 (0x04E8 - 0x0418)
class UGamepadLayout : public UCommonActivatableWidget
{
public:
	TSubclassOf<class UGamepadControlScheme>      ControlSchemeClass;                                // 0x0418(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideOnSteamDeck;                                  // 0x0420(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetSwitcher*                        InputTypeSwitcher;                                 // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       InputTagPosition;                                  // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_438[0xB0];                                     // 0x0438(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CreateInputWidgets(const class UGamepadLayoutVerticalBox* TargetBox, const TArray<struct FGamepadControlSchemeAction>& Actions, bool bIsLeftDirection);
	void RebuildActions();
	void SetControlScheme(TSubclassOf<class UGamepadControlScheme> InClass);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GamepadLayout")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GamepadLayout")
	}
	static class UGamepadLayout* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadLayout>();
	}
};
DUMPER7_ASSERTS_UGamepadLayout;

// Class ReadyOrNot.GamepadSubsystem
// 0x0010 (0x0040 - 0x0030)
class UGamepadSubsystem final : public ULocalPlayerSubsystem
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UpdateAdaptiveTriggerSettings();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GamepadSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GamepadSubsystem")
	}
	static class UGamepadSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadSubsystem>();
	}
};
DUMPER7_ASSERTS_UGamepadSubsystem;

// Class ReadyOrNot.GasNavLinkGenerator
// 0x0008 (0x02A0 - 0x0298)
class AGasNavLinkGenerator final : public AActor
{
public:
	class UBillboardComponent*                    BillboardComponent;                                // 0x0298(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void GenerateNavLinks();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GasNavLinkGenerator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GasNavLinkGenerator")
	}
	static class AGasNavLinkGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGasNavLinkGenerator>();
	}
};
DUMPER7_ASSERTS_AGasNavLinkGenerator;

// Class ReadyOrNot.GasVolumeComponent
// 0x0020 (0x05D0 - 0x05B0)
class UGasVolumeComponent final : public UBoxComponent
{
public:
	uint8                                         Pad_5B0[0x20];                                     // 0x05B0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GasVolumeComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GasVolumeComponent")
	}
	static class UGasVolumeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGasVolumeComponent>();
	}
};
DUMPER7_ASSERTS_UGasVolumeComponent;

// Class ReadyOrNot.GetFriendlyName
// 0x0000 (0x0000 - 0x0000)
class IGetFriendlyName final
{
public:
	class UTexture2D* GetFriendlyIcon();
	class FString GetFriendlyName();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GetFriendlyName")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GetFriendlyName")
	}
	static class IGetFriendlyName* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGetFriendlyName>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGetFriendlyName;

// Class ReadyOrNot.GlassActor
// 0x0030 (0x02C8 - 0x0298)
class AGlassActor final : public AActor
{
public:
	TArray<class UMaterialInstance*>              RandomGlassMaterial;                               // 0x0298(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstance*>              RandomShatteredGlassMaterial;                      // 0x02A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float DamageAmount, const struct FVector& HitLocation, const struct FVector& ImpulseDir, float ImpulseStrength)> OnApplyDamageToWindow; // 0x02B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	class UMaterialInterface* GetRandomGlassMaterial();
	class UMaterialInterface* GetRandomShatteredGlassMaterial();
	void Multicast_ApplyDamageToWindow(float DamageAmount, const struct FVector& HitLocation, const struct FVector& ImpulseDir, float ImpulseStrength);
	void Multicast_TakeDamage(float DamageAmount, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GlassActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GlassActor")
	}
	static class AGlassActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGlassActor>();
	}
};
DUMPER7_ASSERTS_AGlassActor;

// Class ReadyOrNot.GrenadeProjectile
// 0x00B0 (0x04E0 - 0x0430)
class AGrenadeProjectile final : public ABulletProjectile
{
public:
	class URadialForceComponent*                  DetonationRadialForce;                             // 0x0430(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AGrenadeProjectile* Projectile)> OnGrenadeDetonated;         // 0x0438(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector_NetQuantize                    ProjectileLocation;                                // 0x0450(0x0018)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DetonationTime;                                    // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DetonationBetweenTime;                             // 0x046C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ElapsedTime;                                       // 0x0470(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DetonationCount;                                   // 0x0474(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DetonationMax;                                     // 0x0478(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGrenadeDamage>                 GrenadeDamage;                                     // 0x0480(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIncreaseRadiusOverTime;                           // 0x0490(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             DetonationSound;                                   // 0x0498(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bPlayDetonationSoundOnce : 1;                      // 0x04A0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        BounceLocations;                                   // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bDetonateOnValidation;                             // 0x04B8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B9[0x3];                                      // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LocationRecordingRate;                             // 0x04BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecordDistanceThreshold;                           // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        PastLocations;                                     // 0x04C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D8[0x8];                                      // 0x04D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDetonate();
	void OnDetonate_Blueprint();
	void OnDetonationComplete_Blueprint();
	void RecordLocation();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GrenadeProjectile")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GrenadeProjectile")
	}
	static class AGrenadeProjectile* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGrenadeProjectile>();
	}
};
DUMPER7_ASSERTS_AGrenadeProjectile;

// Class ReadyOrNot.GunGameGS
// 0x0000 (0x0928 - 0x0928)
class AGunGameGS : public AReadyOrNotGameState
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GunGameGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GunGameGS")
	}
	static class AGunGameGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGunGameGS>();
	}
};
DUMPER7_ASSERTS_AGunGameGS;

// Class ReadyOrNot.HardcoreMoneyGS
// 0x0000 (0x0A40 - 0x0A40)
class AHardcoreMoneyGS final : public ACoopGS
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HardcoreMoneyGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HardcoreMoneyGS")
	}
	static class AHardcoreMoneyGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHardcoreMoneyGS>();
	}
};
DUMPER7_ASSERTS_AHardcoreMoneyGS;

// Class ReadyOrNot.Headwear
// 0x0EA0 (0x1B90 - 0x0CF0)
#pragma pack(push, 0x1)
class alignas(0x10) AHeadwear : public ABaseArmour
{
public:
	bool                                          bHasHelmet;                                        // 0x0CE8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasHeadset;                                       // 0x0CE9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CEA[0x2];                                      // 0x0CEA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CustomizationHelmetTag;                            // 0x0CEC(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CF4[0x4];                                      // 0x0CF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCustomizationHelmet>    DefaultCustomizationHelmet;                        // 0x0CF8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   HelmetTag;                                         // 0x0D20(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCheckForCompatibility;                            // 0x0D28(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D29[0x7];                                      // 0x0D29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           HelmetCompatibilityTags;                           // 0x0D30(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         Durability;                                        // 0x0D40(0x0004)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageReduction;                                   // 0x0D44(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RicochetChance;                                    // 0x0D48(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D4C[0x4];                                      // 0x0D4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             RicochetEvent;                                     // 0x0D50(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bProtectsAgainstInstantKnockout;                   // 0x0D58(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseMaskVoiceFilter;                               // 0x0D59(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D5A[0x6];                                      // 0x0D5A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             PaperdollTexture_WithHelmet;                       // 0x0D60(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             PaperdollTexture_WithHelmet_Crouch;                // 0x0D68(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             PaperdollTexture_NoHelmet;                         // 0x0D70(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             PaperdollTexture_NoHelmet_Crouch;                  // 0x0D78(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             VoiceLineEventOverrideSpatalized;                  // 0x0D80(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             VoiceLineEventOverrideLocal;                       // 0x0D88(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>                MaskOverlay;                                       // 0x0D90(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnablePostProcess;                                // 0x0D98(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D99[0x7];                                      // 0x0D99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   MaskPostProcess;                                   // 0x0DA0(0x06E0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FPostProcessSettings                   MaskSupressionPostProcess;                         // 0x1480(0x06E0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          bOverrideBreathingSound;                           // 0x1B60(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B61[0x7];                                     // 0x1B61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USoundCue*>                      OverriddenBreathingSounds;                         // 0x1B68(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                         GapBetweenBreaths;                                 // 0x1B78(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSpawnedOverlay;                                   // 0x1B7C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B7D[0x3];                                     // 0x1B7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            SpawnedMaskOverlay;                                // 0x1B80(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Headwear")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Headwear")
	}
	static class AHeadwear* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHeadwear>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_AHeadwear;

// Class ReadyOrNot.Helicopter
// 0x0130 (0x03C8 - 0x0298)
class AHelicopter final : public AActor
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                      CapsuleComponent;                                  // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URadialTrackingComponent*               RadialTrackingComponent;                           // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTrackingSpotlightComponent*            TrackingSpotlightComponent;                        // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTrackingCameraComponent*               TrackingCameraComponent;                           // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDiegeticSoundComponent*                CoreSoundLoopComponent;                            // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScoringComponent*                      ScoringComponent;                                  // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxFriendlyFireEvents;                             // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FriendlyFireCooldown;                              // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AHelicopterPath*                        DefaultPath;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DefaultSpeed;                                      // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DefaultRotationRate;                               // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         VelocitySmoothingRate;                             // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LastDirection;                                     // 0x02F0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                LastVelocity;                                      // 0x0308(0x0018)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                SmoothedVelocity;                                  // 0x0320(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TargetAudioCooldown;                               // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NetworkMovementSmoothingRate;                      // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AHelicopterPath*                        CurrentPath;                                       // 0x0340(0x0008)(Net, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EHelicopterState                              CurrentState;                                      // 0x0348(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ServerLocation;                                    // 0x0350(0x0018)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                               ServerRotation;                                    // 0x0368(0x0018)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_380[0x48];                                     // 0x0380(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AllowFriendlyFire();
	void AllowTargetAudio();
	void DisableFeatures();
	void EnableFeatures(const struct FRadialTrackingInitStruct& trackingInitData, const struct FTrackingCameraInitStruct& cameraInitStruct, const struct FTrackingSpotlightInitStruct& spotlightInitStruct);
	void MulticastDisableFeatures();
	void MulticastEnableCamera(const struct FTrackingCameraInitStruct& cameraInitStruct);
	void MulticastEnableSpotLight(const struct FTrackingSpotlightInitStruct& spotlightInitStruct);
	void MulticastFriendlyFire();
	void OnSceneCaptureVisibilityChange(bool bVisible);
	void OnTargetFound(class ACyberneticCharacter* Target);
	void OnTargetLost(ETrackingTargetLoseReason LoseReason);
	void StartPath(class AHelicopterPath* Path, EPathTransitionType TransitionType);

	class UTrackingCameraComponent* GetTrackingCameraComponent() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Helicopter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Helicopter")
	}
	static class AHelicopter* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHelicopter>();
	}
};
DUMPER7_ASSERTS_AHelicopter;

// Class ReadyOrNot.HelicopterFeatureZoneComponent
// 0x0038 (0x00E0 - 0x00A8)
class UHelicopterFeatureZoneComponent final : public UHelicopterTriggerComponent
{
public:
	class AHelicopter*                            Helicopter;                                        // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRadialTrackingInitStruct              TrackingInitStruct;                                // 0x00B0(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FTrackingCameraInitStruct              cameraInitStruct;                                  // 0x00C8(0x000C)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTrackingSpotlightInitStruct           spotlightInitStruct;                               // 0x00D4(0x0008)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HelicopterFeatureZoneComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HelicopterFeatureZoneComponent")
	}
	static class UHelicopterFeatureZoneComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHelicopterFeatureZoneComponent>();
	}
};
DUMPER7_ASSERTS_UHelicopterFeatureZoneComponent;

// Class ReadyOrNot.HelicopterPath
// 0x0038 (0x02D0 - 0x0298)
class alignas(0x10) AHelicopterPath final : public AActor
{
public:
	TArray<class AHelicopterPathNode*>            PathNodes;                                         // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bLoop;                                             // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInterruptOnTargetFound;                           // 0x02A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2AA[0x16];                                     // 0x02AA(0x0016)(Fixing Size After Last Property [ Dumper-7 ])
	class AHelicopterPathNode*                    CurrentNode;                                       // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class AHelicopterPathNode* GetCurrentNode();
	void NextNode();
	void ResetPath(bool bMoveToNearest, const struct FVector& helicopterLocation);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HelicopterPath")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HelicopterPath")
	}
	static class AHelicopterPath* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHelicopterPath>();
	}
};
DUMPER7_ASSERTS_AHelicopterPath;

// Class ReadyOrNot.HelicopterSetPathComponent
// 0x0018 (0x00C0 - 0x00A8)
class UHelicopterSetPathComponent final : public UHelicopterTriggerComponent
{
public:
	class AHelicopter*                            Helicopter;                                        // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AHelicopterPath*                        Path;                                              // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EPathTransitionType                           TransitionType;                                    // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HelicopterSetPathComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HelicopterSetPathComponent")
	}
	static class UHelicopterSetPathComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHelicopterSetPathComponent>();
	}
};
DUMPER7_ASSERTS_UHelicopterSetPathComponent;

// Class ReadyOrNot.HelicopterViewWidget
// 0x0008 (0x0420 - 0x0418)
class UHelicopterViewWidget : public UCommonActivatableWidget
{
public:
	class AHelicopter*                            Helicopter;                                        // 0x0418(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HandleVisibilityChange(bool bVisible);
	bool IsHelicopterAvailable();
	void OnRenderTargetSet(class UTextureRenderTarget2D* InRenderTarget);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HelicopterViewWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HelicopterViewWidget")
	}
	static class UHelicopterViewWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHelicopterViewWidget>();
	}
};
DUMPER7_ASSERTS_UHelicopterViewWidget;

// Class ReadyOrNot.HighgroundVolume
// 0x0070 (0x0308 - 0x0298)
class AHighgroundVolume final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AudioDebounce;                                     // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          Bounds;                                            // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                        AudioComp;                                         // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWatching;                                         // 0x02B8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SierraDesignation;                                 // 0x02BC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   VolumeLabel;                                       // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USoundBase*>                     ContactEnteredVolumeAudio;                         // 0x02C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class USoundBase*>                     ContactExitedVolumeAudio;                          // 0x02D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class USoundBase*>                     SwatEnteredVolumeAudio;                            // 0x02E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class USoundBase*>                     SwatExitedVolumeAudio;                             // 0x02F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	void OnAudioFinished();
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HighgroundVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HighgroundVolume")
	}
	static class AHighgroundVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHighgroundVolume>();
	}
};
DUMPER7_ASSERTS_AHighgroundVolume;

// Class ReadyOrNot.HotkeysWidget
// 0x0530 (0x0820 - 0x02F0)
class UHotkeysWidget : public UBaseWidget
{
public:
	class UOverlay*                               Hotkeys_Overlay;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         Hotkeys_Container;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHotkeyWidget*                          Hotkey_Grenade;                                    // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHotkeyWidget*                          Hotkey_Chemlight;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHotkeyWidget*                          Hotkey_NVG;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHotkeyWidget*                          Hotkey_Scope;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        IlluminatorAttachment_Switcher;                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHotkeyWidget*                          Hotkey_Laser;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHotkeyWidget*                          Hotkey_Flashlight;                                 // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                            NVGOnIcon;                                         // 0x0340(0x00D0)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                            NVGOffIcon;                                        // 0x0410(0x00D0)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                            LaserIconOn;                                       // 0x04E0(0x00D0)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                            LaserIconOff;                                      // 0x05B0(0x00D0)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                            FlashlightIconOn;                                  // 0x0680(0x00D0)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                            FlashlightIconOff;                                 // 0x0750(0x00D0)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	void RefreshFlashlightIcon();
	void RefreshHotkeyInput();
	void RefreshLaserIcon();
	void RefreshNVGIcon();
	void SetHotkeyVisibility(class UWidget* Widget, bool bCondition);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HotkeysWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HotkeysWidget")
	}
	static class UHotkeysWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHotkeysWidget>();
	}
};
DUMPER7_ASSERTS_UHotkeysWidget;

// Class ReadyOrNot.HumanCharacterHUD_V2
// 0x0150 (0x0590 - 0x0440)
class UHumanCharacterHUD_V2 : public UActivatableBaseWidget
{
public:
	TMulticastInlineDelegate<void(class FText InText, bool ClearText, bool bAnimate, bool bLoopAnimation)> OnSlot1Updated; // 0x0440(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class FText InText, bool ClearText, bool bAnimate, bool bLoopAnimation)> OnSlot2Updated; // 0x0450(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class FText InText, bool ClearText, bool bAnimate, bool bLoopAnimation)> OnSlot3Updated; // 0x0460(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class FText InText, bool ClearText, bool bAnimate, bool bLoopAnimation)> OnSlot4Updated; // 0x0470(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class FText InText, class FText InTextGamepad, bool ClearText, bool bAnimate, bool bLoopAnimation)> OnSlotReserved1Updated; // 0x0480(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class FText InText, class FText InTextGamepad, bool ClearText, bool bAnimate, bool bLoopAnimation)> OnSlotReserved2Updated; // 0x0490(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_FadeInHUD;                                    // 0x04A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                           CanvasPanel_Main;                                  // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           CanvasPanel_Gamepad;                               // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URetainerBox*                           RetainerBox_SwayableElements;                      // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerActionPromptWidget*              PlayerActionText_Slot_1;                           // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerActionPromptWidget*              PlayerActionText_Slot_2;                           // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerActionPromptWidget*              PlayerActionText_Slot_3;                           // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerActionPromptWidget*              PlayerActionText_Slot_4;                           // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerActionPromptWidget*              PlayerActionText_Slot_Reserved_1;                  // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerActionPromptWidget*              PlayerActionText_Slot_Reserved_2;                  // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemWheel*                             ItemWheel;                                         // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWheel*                          CommandWheel;                                      // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         GamepadStopLeanText;                               // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UConsoleHotkeys*                        ConsoleHotkeys;                                    // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHUDStyle                                     HUDStyle;                                          // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ObjectiveMarker_WidgetFadeZones;                   // 0x0518(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         bEnableHUDSway : 1;                                // 0x0528(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_529[0x7];                                      // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              MaxHUDSwayMovement;                                // 0x0530(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              SwayStrength;                                      // 0x0540(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              SwaySpeed;                                         // 0x0550(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bEnableCurvedHUD : 1;                              // 0x0560(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_561[0x3];                                      // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurvedHUDStrength;                                 // 0x0564(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x0568(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotPlayerController*            PlayerController;                                  // 0x0570(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              AccumulatedMouseDelta;                             // 0x0578(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bConsoleHotkeysHidden;                             // 0x0588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UMapActorWidget* AddMapActor(class UMapActorComponent* MapActorComponent, TSubclassOf<class UMapActorWidget> MapActorIconWidgetClass, const struct FSlateBrush& IconBrush, const struct FLinearColor& IconColor, const struct FLinearColor& IconTextColor, float RotationOffset);
	void AddObjectivePopup(const class FText& PopupText);
	void AddScorePopup(const class FText& ScoreText, int32 ScoreValue, bool bGive);
	void AssignPlayerActionPrompt(int32 InSlot, const struct FKey& InputKey, EInputEvent InputEvent, const class FText& InActionText, const class FString& InColorLabel, bool bAnimate, bool bLoopAnimation);
	void AssignPlayerActionPrompt_Custom(int32 InSlot, const class FText& InCustomPromptText, bool bAnimate, bool bLoopAnimation);
	void AssignPlayerActionPrompt_Reserved(int32 InSlot, EInputEvent InputEvent, const class FText& InActionText, const class FString& InColorLabel, bool bAnimate, bool bLoopAnimation);
	void AssignPlayerActionPromptToFreeSlot(const struct FKey& InputKey, EInputEvent InputEvent, const class FText& InActionText, const class FString& InColorLabel, bool bAnimate, bool bLoopAnimation);
	int32 AssignPlayerActionPromptToFreeSlot_Reserved(const struct FKey& MKBKey, const struct FKey& GamepadKey, EInputEvent InputEvent, const class FText& InActionText, const class FString& InColorLabel, bool bAnimate, bool bLoopAnimation);
	void ChatPressed();
	void ClearAllPlayerActionPrompts();
	class UCommandWheel* GetCommandWheel();
	class UConsoleHotkeys* GetConsoleHotkeys();
	class UItemWheel* GetItemWheel();
	class UScreenspaceMarkerWidget* GetRoundupWidget();
	class UScreenspaceMarkerWidget* GetScreenspaceMarkerWidget();
	class UTutorialWidget* GetTutorialWidget();
	void HideHUD();
	void HideTutorialOverview(const class FString& MessageID);
	void HideTutorialPrompt(const class FString& MessageID);
	void LocalReadyStateChanged(bool bReady);
	void OnInventoryItemsChanged();
	void OnTabletClose();
	void OnTabletNotificationEvent();
	void OnTabletOpen();
	void ReadiedPlayersChanged();
	void ReflectHUDSettings();
	void RemoveMapActor(class UMapActorComponent* MapActorComponent);
	void RemovePlayerActionPrompt(int32 InSlot);
	void RemovePlayerActionPrompt_Reserved(int32 InSlot);
	void SetMissionCountdownTime(float Time);
	void ShowHUD();
	void ShowTutorialOverview(const class FString& MessageID, const class FText& MessageTitle, const TArray<class FText>& MessageContent);
	void ShowTutorialPrompt(const class FString& MessageID, bool bFirstShowing, const class FText& MessageTitle, const TArray<class FText>& MessageContent);
	void TeamChatPressed();
	void UpdateMapFloors(const TArray<struct FBuildingFloor>& Floors);

	bool IsActionSlotInUse(int32 InSlot) const;
	bool IsActionSlotInUse_Reserved(int32 InSlot) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HumanCharacterHUD_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HumanCharacterHUD_V2")
	}
	static class UHumanCharacterHUD_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHumanCharacterHUD_V2>();
	}
};
DUMPER7_ASSERTS_UHumanCharacterHUD_V2;

// Class ReadyOrNot.ImpactEffect
// 0x0A50 (0x0D30 - 0x02E0)
class AImpactEffect : public APooledActor
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x02E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               ParticleSystemComponent;                           // 0x02E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraComponent*                      NiagaraComponent;                                  // 0x02F0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODAudioComponent*                    FMODAudioComponent;                                // 0x02F8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDecalComponent*                        DecalComponent;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFXSystemComponent*>             SpawnedParticles;                                  // 0x0308(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_318[0x1D0];                                    // 0x0318(0x01D0)(Fixing Size After Last Property [ Dumper-7 ])
	EImpactEffectType                             Type;                                              // 0x04E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayDefaultIfNull;                                // 0x04E9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4EA[0x2];                                      // 0x04EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DecalScale;                                        // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4F0[0x8];                                      // 0x04F0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DecalMinSize;                                      // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DecalMaxSize;                                      // 0x04FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ParticleScale;                                     // 0x0500(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReflectImpactEffectAcrossNormal;                  // 0x0504(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_505[0x3];                                      // 0x0505(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             FMODSoundFx;                                       // 0x0508(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             FMODHitmarker;                                     // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxDecalMeshes;                                    // 0x0518(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DecalMeshScaleMultiplier;                          // 0x051C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBulletGoneThroughPlayer;                          // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bArmorImpact;                                      // 0x0521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpawnParticle;                                    // 0x0522(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTraceComplex;                                     // 0x0523(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             BloodExitDecals;                                   // 0x0528(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FImpactFx                              DefaultImpactFx;                                   // 0x0538(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Aluminium;                                     // 0x0560(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Asphalt;                                       // 0x0588(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Brick;                                         // 0x05B0(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_CarbonFibre;                                   // 0x05D8(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Cardboard;                                     // 0x0600(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Ceramic;                                       // 0x0628(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_ConcreteSoft;                                  // 0x0650(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_ConcreteStrong;                                // 0x0678(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Dirt;                                          // 0x06A0(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Drywall;                                       // 0x06C8(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Electrical;                                    // 0x06F0(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_EnergyShield;                                  // 0x0718(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Fabric_Carpet;                                 // 0x0740(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Fabric_Stuffing;                               // 0x0768(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Fabric_Thin;                                   // 0x0790(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Flesh;                                         // 0x07B8(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Galvanized;                                    // 0x07E0(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Glass_Plate;                                   // 0x0808(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Glass_Windshield;                              // 0x0830(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Grass;                                         // 0x0858(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Gravel;                                        // 0x0880(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Ice;                                           // 0x08A8(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Lava;                                          // 0x08D0(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Lead;                                          // 0x08F8(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Leaves;                                        // 0x0920(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Limestone;                                     // 0x0948(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Mahogany;                                      // 0x0970(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Marble_Coated;                                 // 0x0998(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Marble_Thick;                                  // 0x09C0(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Mud;                                           // 0x09E8(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Oil;                                           // 0x0A10(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Paper;                                         // 0x0A38(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Pine;                                          // 0x0A60(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Plaster;                                       // 0x0A88(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Plastic;                                       // 0x0AB0(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Plywood;                                       // 0x0AD8(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Polystyrene;                                   // 0x0B00(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Powder;                                        // 0x0B28(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Rock;                                          // 0x0B50(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Rubber;                                        // 0x0B78(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Sand;                                          // 0x0BA0(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Snow;                                          // 0x0BC8(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Soil;                                          // 0x0BF0(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Steel;                                         // 0x0C18(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Tin;                                           // 0x0C40(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Treewood;                                      // 0x0C68(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Wallpaper;                                     // 0x0C90(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Water;                                         // 0x0CB8(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Vehicle;                                       // 0x0CE0(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFx                              RON_Bulletproof_Glass;                             // 0x0D08(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ImpactEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ImpactEffect")
	}
	static class AImpactEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<AImpactEffect>();
	}
};
DUMPER7_ASSERTS_AImpactEffect;

// Class ReadyOrNot.IncriminationGM
// 0x0020 (0x0A40 - 0x0A20)
class AIncriminationGM : public AReadyOrNotGameMode_PVP
{
public:
	uint8                                         MaxCluesToFind;                                    // 0x0A20(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A21[0x7];                                      // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpawnGenerator*                        ChosenSpawnGroup_BlueTeam;                         // 0x0A28(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASpawnGenerator*                        ChosenSpawnGroup_RedTeam;                          // 0x0A30(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A38[0x8];                                      // 0x0A38(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnClueFound(class AIncriminationClue* ClueActor, class AActor* ClueFounder);
	void OnEvidenceDropped(class AActor* DropActor);
	void OnEvidencePickedUp(class AActor* PickupActor);

	bool HasVisitedAllEvidenceSpawns() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IncriminationGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IncriminationGM")
	}
	static class AIncriminationGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIncriminationGM>();
	}
};
DUMPER7_ASSERTS_AIncriminationGM;

// Class ReadyOrNot.InGameLogSubsystem
// 0x0040 (0x0070 - 0x0030)
class alignas(0x10) UInGameLogSubsystem final : public UWorldSubsystem
{
public:
	TMulticastInlineDelegate<void()>              OnLogMessageEnqueued;                              // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnLogMessageDequeued;                              // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x20];                                      // 0x0050(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnqueueLogMessage(const struct FInGameLogMessage& InLogMessage);
	void EnqueueLogMessages(const TArray<struct FInGameLogMessage>& InLogMessages);
	void EnqueuePVPMessage(const struct FInGameLogMessage_PVP& InLogMessage);
	void EnqueuePVPMessages(const TArray<struct FInGameLogMessage_PVP>& InLogMessages);
	bool GetNextLogMessage(struct FInGameLogMessage* OutLogMessage);
	bool GetNextLogMessage_PVP(struct FInGameLogMessage_PVP* OutLogMessage);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InGameLogSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InGameLogSubsystem")
	}
	static class UInGameLogSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInGameLogSubsystem>();
	}
};
DUMPER7_ASSERTS_UInGameLogSubsystem;

// Class ReadyOrNot.InteractWithDoorObjective
// 0x0020 (0x0340 - 0x0320)
class AInteractWithDoorObjective final : public AObjective
{
public:
	TArray<class ADoor*>                          Doors;                                             // 0x0320(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class FName                                   DoorTag;                                           // 0x0330(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EObjectiveDoorInteractions                    DoorInteractionType;                               // 0x0338(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDoorKicked(class ADoor* Door, class AReadyOrNotCharacter* InstigatorCharacter, bool bSuccess);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InteractWithDoorObjective")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InteractWithDoorObjective")
	}
	static class AInteractWithDoorObjective* GetDefaultObj()
	{
		return GetDefaultObjImpl<AInteractWithDoorObjective>();
	}
};
DUMPER7_ASSERTS_AInteractWithDoorObjective;

// Class ReadyOrNot.InterestOverrideZone
// 0x00D0 (0x03A0 - 0x02D0)
class AInterestOverrideZone final : public AVolume
{
public:
	TArray<struct FInterestPoint>                 InterestPoints;                                    // 0x02D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<struct FInterestStationPoint>          StationPoints;                                     // 0x02E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<class ACyberneticCharacter*>           CharactersInZone;                                  // 0x02F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<class ACyberneticCharacter*, uint8>      FocusIndexMap;                                     // 0x0300(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<class ACyberneticCharacter*, uint8>      MoveIndexMap;                                      // 0x0350(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)

public:
	void OnBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnWorldBeginPlay();

	bool GetCurrentInterestInfo(class ACyberneticCharacter* AI, struct FVector* OutLocation, class AActor** OutActor) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InterestOverrideZone")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InterestOverrideZone")
	}
	static class AInterestOverrideZone* GetDefaultObj()
	{
		return GetDefaultObjImpl<AInterestOverrideZone>();
	}
};
DUMPER7_ASSERTS_AInterestOverrideZone;

// Class ReadyOrNot.InvestigateStimulusActivity
// 0x0088 (0x0278 - 0x01F0)
class UInvestigateStimulusActivity final : public UBaseActivity
{
public:
	struct FAIStimulus                            Stimulus;                                          // 0x01F0(0x0058)(BlueprintVisible, BlueprintReadOnly, NoDestructor, ExposeOnSpawn, NativeAccessSpecifierPublic)
	class AReadyOrNotCharacter*                   Instigator;                                        // 0x0248(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_250[0x28];                                     // 0x0250(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InvestigateStimulusActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InvestigateStimulusActivity")
	}
	static class UInvestigateStimulusActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInvestigateStimulusActivity>();
	}
};
DUMPER7_ASSERTS_UInvestigateStimulusActivity;

// Class ReadyOrNot.AmmoCacheResourceComponent
// 0x0000 (0x0100 - 0x0100)
class UAmmoCacheResourceComponent final : public UCacheResourceComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AmmoCacheResourceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AmmoCacheResourceComponent")
	}
	static class UAmmoCacheResourceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAmmoCacheResourceComponent>();
	}
};
DUMPER7_ASSERTS_UAmmoCacheResourceComponent;

// Class ReadyOrNot.CacheRetrievalPoint
// 0x0010 (0x02B0 - 0x02A0)
class UCacheRetrievalPoint final : public USceneComponent
{
public:
	bool                                          bEnabled;                                          // 0x02A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInUse;                                            // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACyberneticCharacter*                   UsingCharacter;                                    // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CacheRetrievalPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CacheRetrievalPoint")
	}
	static class UCacheRetrievalPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCacheRetrievalPoint>();
	}
};
DUMPER7_ASSERTS_UCacheRetrievalPoint;

// Class ReadyOrNot.ItemData
// 0x0418 (0x0448 - 0x0030)
class UItemData final : public UDataAsset
{
public:
	TSoftObjectPtr<class UStaticMesh>             PreArrestCuffsMesh;                                // 0x0030(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ABaseItem>                  NullFacewearClass;                                 // 0x0058(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeaponData>                    BluePVPUniquePrimaryWeapons;                       // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponData>                    RedPVPUniquePrimaryWeapons;                        // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class ABaseItem>                  NullItem;                                          // 0x0080(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponAttachment>          NullPrimaryScopeAttachment;                        // 0x0088(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponAttachment>          NullMuzzleAttachment;                              // 0x0090(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponAttachment>          NullOverbarrelAttachment;                          // 0x0098(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponAttachment>          NullUnderbarrelAttachment;                         // 0x00A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponAttachment>          NullStockAttachment;                               // 0x00A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponAttachment>          NullGripAttachment;                                // 0x00B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponAttachment>          NullIlluminatorAttachment;                         // 0x00B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponAttachment>          NullAmmunitionAttachment;                          // 0x00C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ABaseItem>>          DefaultItemsGivenToPlayer;                         // 0x00C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class USkinComponent>             FactorySkin;                                       // 0x00D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSavedLoadout>                  DefaultLoadouts;                                   // 0x00E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          ModularCharacterBaseMesh;                          // 0x00F0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSavedCustomization                    DefaultCustomization;                              // 0x00F8(0x0140)(Edit, NativeAccessSpecifierPublic)
	TMap<EEquippingSwat, struct FDefaultCharacterCustomization> DefaultCharacters;                   // 0x0238(0x0050)(Edit, NativeAccessSpecifierPublic)
	struct FSavedCustomization                    TrailerCustomization;                              // 0x0288(0x0140)(Edit, NativeAccessSpecifierPublic)
	TArray<class UCustomizationCharacter*>        TrailerCharacters;                                 // 0x03C8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class USkinComponent>>     UniformSelection;                                  // 0x03D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FCharacterData>                 CharacterSelection;                                // 0x03E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              DefaultItemImage;                                  // 0x03F8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                           PersonnelNames;                                    // 0x0420(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           PersonnelDescriptions;                             // 0x0430(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         AttachmentPointsBase;                              // 0x0440(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ItemData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ItemData")
	}
	static class UItemData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemData>();
	}
};
DUMPER7_ASSERTS_UItemData;

// Class ReadyOrNot.ItemSlot_V2
// 0x0038 (0x0328 - 0x02F0)
class UItemSlot_V2 : public UCommonUserWidget
{
public:
	class ABaseItem*                              BaseItem;                                          // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArmourMaterial*                        ArmorMaterial;                                     // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             ItemName;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             ItemType;                                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         PrefixText;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 PresetName;                                        // 0x0318(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetArmorMaterial(class UArmourMaterial* Armor);
	void SetItem(class ABaseItem* Item);
	void SetTexts(const class FText& Name_0, const class FText& Type);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ItemSlot_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ItemSlot_V2")
	}
	static class UItemSlot_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemSlot_V2>();
	}
};
DUMPER7_ASSERTS_UItemSlot_V2;

// Class ReadyOrNot.ItemWheel
// 0x0218 (0x04E0 - 0x02C8)
class alignas(0x10) UItemWheel : public UUserWidget
{
public:
	class UDataTable*                             ItemWheelDataTable;                                // 0x02C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentIndex;                                      // 0x02D0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         PreviousNavSelectionIndex;                         // 0x02D4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            MainWheel;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            SubWheel;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FItemWheelOption>               CurrentItemWheelOptions;                           // 0x02E8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                             HeaderText;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               HeaderOverlay;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGamepadButtonImage*                    NavigateBackImage;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            InnerWheel;                                        // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                            OuterWheel;                                        // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_320[0x1C0];                                    // 0x0320(0x01C0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ForceSetInDeadzone(bool bInDeadzone);
	int32 GetNumSubOptions(const struct FItemWheelOption& Option);
	void ItemAdded(class ABaseItem* Item);
	void ItemEquipped(class ABaseItem* Item);
	void ItemRemoved(class ABaseItem* Item);
	void ItemWheelCollapsed();
	void ItemWheelDisabled();
	void ItemWheelEnabled();
	void ItemWheelExpanded();
	void SetWheelOptions(const class UUserWidget* ItemWheel, const TArray<struct FItemWheelOption>& ItemWheelOptions, const int32& SelectedIndex);
	void SetWheelSegments(const class UUserWidget* ItemWheel, const uint8& Amount);
	void SetWheelSelection(const class UUserWidget* ItemWheel, const struct FVector& Direction);

	bool IsSegmentEnabled(const int32& SegmentIndex) const;
	void ResetHeaderText() const;
	void SetHeaderText(const class FText& Title) const;
	bool ValidWithoutSubOptions(const int32& SegmentIndex) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ItemWheel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ItemWheel")
	}
	static class UItemWheel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemWheel>();
	}
};
DUMPER7_ASSERTS_UItemWheel;

// Class ReadyOrNot.ItemWheelMagazineElement
// 0x0030 (0x0400 - 0x03D0)
class UItemWheelMagazineElement final : public UItemWheelElement
{
public:
	uint8                                         Pad_3D0[0x10];                                     // 0x03D0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             MagazineType;                                      // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E8[0x18];                                     // 0x03E8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ItemWheelMagazineElement")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ItemWheelMagazineElement")
	}
	static class UItemWheelMagazineElement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemWheelMagazineElement>();
	}
};
DUMPER7_ASSERTS_UItemWheelMagazineElement;

// Class ReadyOrNot.KingOfTheHillGM
// 0x0040 (0x0A60 - 0x0A20)
class AKingOfTheHillGM : public AReadyOrNotGameMode_PVP
{
public:
	TArray<class APlayerCharacter*>               ArrestedBlueCharacters;                            // 0x0A20(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class APlayerCharacter*>               ArrestedRedCharacters;                             // 0x0A30(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UFMODEvent*                             TOWVictorySound;                                   // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MatchLoopMusic;                                    // 0x0A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MatchStartMusic;                                   // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MatchEndMusic;                                     // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("KingOfTheHillGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"KingOfTheHillGM")
	}
	static class AKingOfTheHillGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<AKingOfTheHillGM>();
	}
};
DUMPER7_ASSERTS_AKingOfTheHillGM;

// Class ReadyOrNot.KingOfTheHostageGM
// 0x0030 (0x0A50 - 0x0A20)
class AKingOfTheHostageGM final : public AReadyOrNotGameMode_PVP
{
public:
	TArray<class APawn*>                          SpawnedHostages;                                   // 0x0A20(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_A30[0x10];                                     // 0x0A30(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Start_RoundTime;                                   // 0x0A40(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBlueTeamOnAttack;                                 // 0x0A44(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A45[0xB];                                      // 0x0A45(0x000B)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool AreAllHostagesSafe();
	class APawn* SpawnHostage(TSubclassOf<class APawn> HostageClass, const TArray<struct FVector>& SpawnLocations);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("KingOfTheHostageGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"KingOfTheHostageGM")
	}
	static class AKingOfTheHostageGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<AKingOfTheHostageGM>();
	}
};
DUMPER7_ASSERTS_AKingOfTheHostageGM;

// Class ReadyOrNot.Ladder
// 0x0010 (0x02A8 - 0x0298)
class ALadder final : public AActor
{
public:
	class UBoxComponent*                          BoxCollision;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                   LadderMesh;                                        // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Ladder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Ladder")
	}
	static class ALadder* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALadder>();
	}
};
DUMPER7_ASSERTS_ALadder;

// Class ReadyOrNot.LensFlare
// 0x02E8 (0x0580 - 0x0298)
class ALensFlare : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Scene;                                             // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialBillboardComponent*            LensFlare;                                         // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotCharacter*                   OwningCharacter;                                   // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     FlareMat;                                          // 0x02B8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              BaseSize;                                          // 0x02C0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinimumRotationDeltaToBeVisible;                   // 0x02D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               FlareMatInstance;                                  // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E0[0x4];                                      // 0x02E0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GlobalBrightness;                                  // 0x02E4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         GhostsBrightness;                                  // 0x02E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlickerIntensity;                                  // 0x02EC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlickerTime;                                       // 0x02F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           GlobalColor;                                       // 0x02F4(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FadeDistance;                                      // 0x0304(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseFadeDistance;                                  // 0x0308(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IncreasingBloomByDistance;                         // 0x030C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseDistanceBloom;                                 // 0x0310(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HaloOpacity;                                       // 0x0314(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         HaloInnerRadius;                                   // 0x0318(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         HaloBrightness;                                    // 0x031C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           HaloOuterColor;                                    // 0x0320(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           HaloInnerColor;                                    // 0x0330(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                               HaloTexture;                                       // 0x0340(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         HaloTextureSize;                                   // 0x0348(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         HaloContrast;                                      // 0x034C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CentreFlareBrightness;                             // 0x0350(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CentreFlareTexture;                                // 0x0358(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           CentreFlareColor;                                  // 0x0360(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CentreFlareSize;                                   // 0x0370(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CentreFlareContrast;                               // 0x0374(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MainFlareBrightness;                               // 0x0378(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               MainFlare;                                         // 0x0380(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MainFlareInnerRadius;                              // 0x0388(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           MainOuterColor;                                    // 0x038C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           MainLensInnerColor;                                // 0x039C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MainFlareSize;                                     // 0x03AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MainFlareContrast;                                 // 0x03B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReflectionSize;                                    // 0x03B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                               ReflectionCentreTexture;                           // 0x03B8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           ReflectionColor;                                   // 0x03C0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReflectionBrightness;                              // 0x03D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReflectionContrast;                                // 0x03D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OppositeFlaresAxisProjection;                      // 0x03D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlareOppositeSize01;                               // 0x03DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlareOppositeSize02;                               // 0x03E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           FlareOppositeColor01;                              // 0x03E4(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           FlareOppositeColor02;                              // 0x03F4(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlareOppositeBrightness01;                         // 0x0404(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlareOppositeBrightness02;                         // 0x0408(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlareOppositeContrast01;                           // 0x040C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlareOppositeContrast02;                           // 0x0410(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               FlareOpposite01;                                   // 0x0418(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                               FlareOpposite02;                                   // 0x0420(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FrontFlaresAxisProjection;                         // 0x0428(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlareFrontSize01;                                  // 0x042C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlareFrontSize02;                                  // 0x0430(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           FlareFrontColor01;                                 // 0x0434(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           FlareFrontColor02;                                 // 0x0444(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlareFrontProximityCentre01;                       // 0x0454(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlareFrontProximityCentre02;                       // 0x0458(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               FlareFront01;                                      // 0x0460(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                               FlareFront02;                                      // 0x0468(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlareFrontContrast01;                              // 0x0470(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlareFrontContrast02;                              // 0x0474(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlareFrontBrightness01;                            // 0x0478(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlareFrontBrightness02;                            // 0x047C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReflectedFlareSize01;                              // 0x0480(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReflectedFlareSize02;                              // 0x0484(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReflectedFlareProximityCentre01;                   // 0x0488(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReflectedFlareProximityCentre02;                   // 0x048C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                               ReflectedFlare01;                                  // 0x0490(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                               ReflectedFlare02;                                  // 0x0498(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           ReflectedFlareColor01;                             // 0x04A0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           ReflectedFlareColor02;                             // 0x04B0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReflectedFlareContrast01;                          // 0x04C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReflectedFlareContrast02;                          // 0x04C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReflectedFlareBrightness01;                        // 0x04C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReflectedFlareBrightness02;                        // 0x04CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinorFlareProximityCentre01;                       // 0x04D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinorFlareSize01;                                  // 0x04D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinorFlareSizeRandom01;                            // 0x04D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               MinorFlare01;                                      // 0x04E0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           MinorFlareColor01;                                 // 0x04E8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinorFlareContrast01;                              // 0x04F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinorFlareBrightness01;                            // 0x04FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           MinorFlareColor02;                                 // 0x0500(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinorFlareContrast02;                              // 0x0510(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinorFlareBrightness02;                            // 0x0514(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinorFlareProximityCentre02;                       // 0x0518(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinorFlareSize02;                                  // 0x051C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinorFlareSizeRandom02;                            // 0x0520(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               MinorFlare02;                                      // 0x0528(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                               Iris;                                              // 0x0530(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         IrisSize;                                          // 0x0538(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         IrisProximityCentre;                               // 0x053C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         IrisBrightness;                                    // 0x0540(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         IrisContrast;                                      // 0x0544(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           IrisColor;                                         // 0x0548(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                               AdditionalFlare;                                   // 0x0558(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AdditionalFlareSize;                               // 0x0560(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AdditionalFlareContrast;                           // 0x0564(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AdditionalFlareBrightness;                         // 0x0568(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           AdditionalFlareColor;                              // 0x056C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LensFlare")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LensFlare")
	}
	static class ALensFlare* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALensFlare>();
	}
};
DUMPER7_ASSERTS_ALensFlare;

// Class ReadyOrNot.ModLevelData
// 0x0890 (0x08C0 - 0x0030)
class UModLevelData final : public UPrimaryDataAsset
{
public:
	class FName                                   LevelName;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowInMissionSelect;                              // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLevelDataLookupTable                  Data;                                              // 0x0040(0x0880)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ModLevelData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ModLevelData")
	}
	static class UModLevelData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModLevelData>();
	}
};
DUMPER7_ASSERTS_UModLevelData;

// Class ReadyOrNot.LightAttachmentSpotLight
// 0x0000 (0x0430 - 0x0430)
class ULightAttachmentSpotLight : public USpotLightComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LightAttachmentSpotLight")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LightAttachmentSpotLight")
	}
	static class ULightAttachmentSpotLight* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULightAttachmentSpotLight>();
	}
};
DUMPER7_ASSERTS_ULightAttachmentSpotLight;

// Class ReadyOrNot.LightAttachmentPointLight
// 0x0000 (0x0420 - 0x0420)
class ULightAttachmentPointLight : public UPointLightComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LightAttachmentPointLight")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LightAttachmentPointLight")
	}
	static class ULightAttachmentPointLight* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULightAttachmentPointLight>();
	}
};
DUMPER7_ASSERTS_ULightAttachmentPointLight;

// Class ReadyOrNot.LightAttachment
// 0x0120 (0x11F0 - 0x10D0)
class ULightAttachment : public UWeaponAttachment
{
public:
	TSubclassOf<class ULightAttachmentSpotLight>  SpotLightClass;                                    // 0x10D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULightAttachmentPointLight> PointLightClass;                                   // 0x10D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpotLightComponent*                    SpotLightComponent;                                // 0x10E0(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPointLightComponent*                   PointLightComponent;                               // 0x10E8(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRepOn;                                            // 0x10F0(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10F1[0x7];                                     // 0x10F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Intensity;                                         // 0x10F8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BouncedIntensity;                                  // 0x10FC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Attenuation;                                       // 0x1100(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InnerConeAngle;                                    // 0x1104(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OuterConeAngle;                                    // 0x1108(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LightColor;                                        // 0x110C(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111C[0x4];                                     // 0x111C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     LightFunctionMaterial;                             // 0x1120(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LightFunctionScale;                                // 0x1128(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ALensFlare>                 LensFlareClass;                                    // 0x1140(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ALensFlare*                             SpawnedLensFlare;                                  // 0x1148(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumOfFlashLightTrackingPoints;                     // 0x1150(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1154[0x4];                                     // 0x1154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFlashLightTrackingPoint*>       FlashLightTrackingPoints;                          // 0x1158(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	class AFlashLightTrackingPoint*               PrimaryTrackingPoint;                              // 0x1168(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1170[0x80];                                    // 0x1170(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsLightOn();
	void OnRep_On();
	void ToggleLight(bool bOn);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LightAttachment")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LightAttachment")
	}
	static class ULightAttachment* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULightAttachment>();
	}
};
DUMPER7_ASSERTS_ULightAttachment;

// Class ReadyOrNot.LipSyncSubsystem
// 0x0050 (0x0080 - 0x0030)
class ULipSyncSubsystem final : public UGameInstanceSubsystem
{
public:
	TMap<class FString, struct FCharacterLipSyncData> CharacterLipSyncDataMap;                       // 0x0030(0x0050)(NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LipSyncSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LipSyncSubsystem")
	}
	static class ULipSyncSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULipSyncSubsystem>();
	}
};
DUMPER7_ASSERTS_ULipSyncSubsystem;

// Class ReadyOrNot.ListenForDeath
// 0x0000 (0x0000 - 0x0000)
class IListenForDeath final
{
public:
	void OnCharacterDied(class AReadyOrNotCharacter* Victim, class AReadyOrNotCharacter* Killer, class AActor* Inflictor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ListenForDeath")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ListenForDeath")
	}
	static class IListenForDeath* GetDefaultObj()
	{
		return GetDefaultObjImpl<IListenForDeath>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IListenForDeath;

// Class ReadyOrNot.ListenForGameStart
// 0x0000 (0x0000 - 0x0000)
class IListenForGameStart final
{
public:
	void OnGameStarted();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ListenForGameStart")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ListenForGameStart")
	}
	static class IListenForGameStart* GetDefaultObj()
	{
		return GetDefaultObjImpl<IListenForGameStart>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IListenForGameStart;

// Class ReadyOrNot.LoadingScreen
// 0x00F8 (0x0510 - 0x0418)
class ULoadingScreen : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        StreamedLevel;                                     // 0x0420(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowLoadingScreenPercetage;                       // 0x0428(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_429[0xD7];                                     // 0x0429(0x00D7)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FriendlyLevelName;                                 // 0x0500(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void GetLoadingScreenDetails(class FString* OutMap, class FString* OutMode, class FString* OutSessionName);
	void SetLoadingScreen(const class FString& InMap, const class FString& InMode, const class FString& InSessionName, bool bSeamlessTravel);
	void UpdateTip(class UTextBlock* TipBlock);

	float GetLoadingPercentage() const;
	class FString GetMapName() const;
	bool ShouldShowLoadingPercentage() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoadingScreen")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoadingScreen")
	}
	static class ULoadingScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadingScreen>();
	}
};
DUMPER7_ASSERTS_ULoadingScreen;

// Class ReadyOrNot.LoadoutInformationTableWidget
// 0x0050 (0x0318 - 0x02C8)
class ULoadoutInformationTableWidget final : public UUserWidget
{
public:
	TMulticastInlineDelegate<void(class ABaseItem* ItemToModify)> OnModifyWeaponButtonClicked;       // 0x02C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnInfoPanelRemoved;                                // 0x02D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCancelRefresh;                                   // 0x02E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EWeaponAttachmentType WeaponSlot, class UWeaponAttachment* AttachmentData)> OnInfoPanelAttachmentClicked; // 0x02F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EWeaponAttachmentType WeaponSlot)> OnInfoPanelRemoveAttachmentClicked; // 0x0308(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void RefreshPanelAmmoInfo(const struct FAmmoTypeData& AmmoType, TSubclassOf<class ABaseItem> ItemClass);
	void RefreshPanelArmourMaterial(class UArmourMaterial* ArmourMaterial);
	void RefreshPanelItemInfo(const struct FSavedLoadout& ActiveLoadout, TSubclassOf<class ABaseItem> ItemClass, EItemCategory LoadoutSlot, bool bRestricted);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoadoutInformationTableWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoadoutInformationTableWidget")
	}
	static class ULoadoutInformationTableWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadoutInformationTableWidget>();
	}
};
DUMPER7_ASSERTS_ULoadoutInformationTableWidget;

// Class ReadyOrNot.LoadoutOverviewWidget
// 0x0060 (0x0328 - 0x02C8)
class ULoadoutOverviewWidget final : public UUserWidget
{
public:
	TMulticastInlineDelegate<void(class ULoadoutSlotWidget* TriggeringSlot)> OnOverviewItemClicked;  // 0x02C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ULoadoutSlotWidget* TriggeringSlot)> OnOverviewItemHovered;  // 0x02D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ULoadoutSlotWidget* TriggeringSlot)> OnOverviewItemUnhovered; // 0x02E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ULoadoutSlotAttachmentWidget* AttachmentSlot)> OnAttachmentSlotClicked; // 0x02F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ULoadoutSlotAttachmentWidget* AttachmentSlot)> OnAttachmentSlotHovered; // 0x0308(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ULoadoutSlotAttachmentWidget* AttachmentSlot)> OnAttachmentSlotUnhovered; // 0x0318(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void InitializeOverviewList(bool bRemotePlayer);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoadoutOverviewWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoadoutOverviewWidget")
	}
	static class ULoadoutOverviewWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadoutOverviewWidget>();
	}
};
DUMPER7_ASSERTS_ULoadoutOverviewWidget;

// Class ReadyOrNot.LoadoutPortal
// 0x0090 (0x0328 - 0x0298)
class ALoadoutPortal final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableComponent*                 InteractableComponent;                             // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>           CompsToOutline;                                    // 0x02A8(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class ULightComponent*>                LightsToEnable;                                    // 0x02B8(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	class ULevelSequence*                         LevelSequence;                                     // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULevelSequencePlayer*                   LevelSequencePlayer;                               // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ALevelSequenceActor*                    LevelSequenceActor;                                // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOpenCustomization;                                // 0x02E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LightActorsOfTag;                                  // 0x02E4(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          IsActive;                                          // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULoadout_V2*                            LoadoutWidget;                                     // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APlayerController*                      CurrentController;                                 // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_300[0x8];                                      // 0x0300(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADirectionalLight*>              HiddenDirectionalLights;                           // 0x0308(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class APostProcessVolume*>             HiddenPostProcessVolumes;                          // 0x0318(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	void LoadLoadout();
	void OnLoadoutFadeIn();
	void OnLoadoutFadeOut();
	void OnLoadoutHidden();
	void OnLoadoutLoaded();
	void OnLoadoutShown();
	void OnLoadoutUnloaded();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoadoutPortal")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoadoutPortal")
	}
	static class ALoadoutPortal* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALoadoutPortal>();
	}
};
DUMPER7_ASSERTS_ALoadoutPortal;

// Class ReadyOrNot.LoadoutSlotAttachmentWidget
// 0x0000 (0x02C8 - 0x02C8)
class ULoadoutSlotAttachmentWidget final : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoadoutSlotAttachmentWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoadoutSlotAttachmentWidget")
	}
	static class ULoadoutSlotAttachmentWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadoutSlotAttachmentWidget>();
	}
};
DUMPER7_ASSERTS_ULoadoutSlotAttachmentWidget;

// Class ReadyOrNot.LoadoutSlot_V2
// 0x00B8 (0x03A8 - 0x02F0)
class ULoadoutSlot_V2 : public UCommonUserWidget
{
public:
	class ABaseItem*                              BaseItem;                                          // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ABaseItem>                  BaseItemClass;                                     // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABaseWeapon*                            BaseWeapon;                                        // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABaseArmour*                            BaseArmor;                                         // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArmourMaterial*                        ArmorMaterial;                                     // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   AmmunitionName;                                    // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             ItemImage;                                         // 0x0320(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             EmptyImage;                                        // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   ItemName;                                          // 0x0330(0x0018)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   ItemType;                                          // 0x0348(0x0018)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   ItemSubtext;                                       // 0x0360(0x0018)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	int32                                         SlotCount;                                         // 0x0378(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWeaponAttachmentType                         AttachmentType;                                    // 0x037C(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_37D[0x3];                                      // 0x037D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponAttachment*                      Attachment;                                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ELoadoutMunitionSlotType                      MunitionType;                                      // 0x0388(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHovered;                                          // 0x0389(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bPressed;                                          // 0x038A(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseGamepad;                                       // 0x038B(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAttachment;                                       // 0x038C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_38D[0x3];                                      // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotGameState*                   gs;                                                // 0x0390(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UReadyOrNotLoadoutManager*              LoadoutFunctionLibrary;                            // 0x0398(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEquipped;                                         // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DecrementSlots();
	TSubclassOf<class UWeaponAttachment> GetAttachmentClass();
	bool GetEquipped();
	void IncrementSlots();
	void OnEquipped();
	void OnSlotsUpdated();
	void RefreshAttachmentImage();
	void RefreshInfo();
	void RefreshItemImage();
	void SetAmmoMunition(class FName AmmoName, bool Secondary);
	void SetArmorMaterial(class UArmourMaterial* Item);
	void SetAttachment(class UWeaponAttachment* WeaponAttachment);
	void SetEquipped(bool IsEquipped);
	void SetItem(class ABaseItem* Item);
	void SetStyle(bool UseGamepad);
	void SetTacticalMunition(ELoadoutMunitionSlotType Munition, class ABaseItem* TacticalItem);
	void SetVisualState(bool Hovered, bool Pressed, bool Equipped);
	void ShowSubtext(const class FText& Text, bool Show);
	void UpdateSlotCount();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoadoutSlot_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoadoutSlot_V2")
	}
	static class ULoadoutSlot_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadoutSlot_V2>();
	}
};
DUMPER7_ASSERTS_ULoadoutSlot_V2;

// Class ReadyOrNot.LoadoutUnitSelectWidget
// 0x0000 (0x02C8 - 0x02C8)
class ULoadoutUnitSelectWidget final : public UUserWidget
{
public:
	void Init();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoadoutUnitSelectWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoadoutUnitSelectWidget")
	}
	static class ULoadoutUnitSelectWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadoutUnitSelectWidget>();
	}
};
DUMPER7_ASSERTS_ULoadoutUnitSelectWidget;

// Class ReadyOrNot.LoadoutVerticalItemListWidget
// 0x0040 (0x0458 - 0x0418)
class ULoadoutVerticalItemListWidget final : public UCommonActivatableWidget
{
public:
	TMulticastInlineDelegate<void(class ULoadoutSlotWidget* TriggeringSlot)> OnOverviewItemHovered;  // 0x0418(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ULoadoutSlotWidget* TriggeringSlot)> OnOverviewItemUnhovered; // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ULoadoutSlotAttachmentWidget* AttachmentSlot)> OnAttachmentSlotHovered; // 0x0438(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ULoadoutSlotAttachmentWidget* AttachmentSlot)> OnAttachmentSlotUnhovered; // 0x0448(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoadoutVerticalItemListWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoadoutVerticalItemListWidget")
	}
	static class ULoadoutVerticalItemListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadoutVerticalItemListWidget>();
	}
};
DUMPER7_ASSERTS_ULoadoutVerticalItemListWidget;

// Class ReadyOrNot.LoadoutWidget
// 0x01F0 (0x0D68 - 0x0B78)
class ULoadoutWidget final : public UPreMissionPlanning
{
public:
	TSubclassOf<class UUserWidget>                HUDWidgetClass;                                    // 0x0B78(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULoadoutUnitSelectWidget*               WLoadoutCharacterSelect;                           // 0x0B80(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULoadoutOverviewWidget*                 WLoadoutOverview;                                  // 0x0B88(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULoadoutVerticalItemListWidget*         VerticalItemList;                                  // 0x0B90(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULoadoutInformationTableWidget*         InfoPanel;                                         // 0x0B98(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EItemCategory, class FName>              CategoryCameraTags;                                // 0x0BA0(0x0050)(Edit, NativeAccessSpecifierPrivate)
	TMap<EItemCategory, class FString>            CategoryPoses;                                     // 0x0BF0(0x0050)(Edit, NativeAccessSpecifierPrivate)
	class FString                                 PrimaryDrawAnim;                                   // 0x0C40(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 SidearmDrawAnim;                                   // 0x0C50(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 PrimaryHolsterAnim;                                // 0x0C60(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 SidearmHolsterAnim;                                // 0x0C70(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFMODEvent*                             WeaponHolsteredSound;                              // 0x0C80(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C88[0xE0];                                     // 0x0C88(0x00E0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class ULoadoutWidget* GetLoadoutWidget();

	void ApplyLoadoutPreset(const struct FLoadoutPreset& LoadoutPreset);
	void AttachmentClicked(class ULoadoutSlotAttachmentWidget* AttachmentSlot);
	void AttachmentHovered(class ULoadoutSlotAttachmentWidget* AttachmentSlot);
	void AttachmentUnhovered(class ULoadoutSlotAttachmentWidget* AttachmentSlot);
	void CheckPreset();
	void CleanCurrentWeapon();
	void ClearPreset();
	void CloseLoadout();
	void DeleteLoadoutPreset(class UUserWidget* TriggeringModal, const class FText& TextEntry);
	void DeselectAttachmentSlot();
	void DeselectLoadoutSlot();
	void DoItemUnhover();
	void EquipArmor(class ABaseItem* ItemData);
	void EquipArmourMaterial(class UArmourMaterial* ArmourMaterial);
	void EquipAttachment(class ABaseItem* AttachingWeapon, class UWeaponAttachment* AttachmentData);
	void EquipGrenades(const TArray<class ABaseItem*>& ItemData);
	void EquipHeadwear(class ABaseItem* ItemData);
	void EquipItem(class ABaseItem* ItemData);
	void EquipLongTactical(class ABaseItem* ItemData);
	void EquipPrimaryAmmo(const TArray<class FName>& PrimaryAmmo);
	void EquipPrimaryAttachments(EWeaponAttachmentType AttachmentType, class UWeaponAttachment* AttachmentData, class ABaseItem* AttachingWeapon);
	void EquipSidearmAmmo(const TArray<class FName>& SidearmAmmo);
	void EquipSidearmAttachments(EWeaponAttachmentType AttachmentType, class UWeaponAttachment* AttachmentData, class ABaseItem* AttachingWeapon);
	void EquipTactical(const TArray<class ABaseItem*>& ItemData);
	void GoBack();
	void HideHUD();
	void HideItemInfoPanel();
	void HideItemList();
	bool HolsterPreviewCharacterWeapon();
	void InitializeAttachmentSelectionPanel(class ULoadoutSlotWidget* TriggeringSlot);
	void InitializeItemSelectionPanel(class ULoadoutSlotWidget* TriggeringSlot);
	void InitializeItemSelectionRemote(class ULoadoutSlotWidget* TriggeringSlot);
	void InitializeOverview();
	void InitializeQuartermaster();
	void InitializeWeaponAttachmentMap();
	bool IsNullAttachment(TSubclassOf<class UWeaponAttachment> Attachment);
	void ItemClicked(class ULoadoutSlotWidget* TriggeringSlot);
	void ItemHovered(class ULoadoutSlotWidget* TriggeringSlot);
	void ItemUnhovered(class ULoadoutSlotWidget* TriggeringSlot);
	void LoadDefaultLoadout();
	void LookAtAttachmentSlot(EWeaponAttachmentType AttachmentSlot);
	void OpenAmmoList(bool bVerticalList, class FName ExcludedAmmoType, TSubclassOf<class ABaseItem> Weapon);
	void OpenArmorQuartermaster(class ABaseItem* ItemToModify);
	void OpenArmourMaterialList(bool bVerticalList);
	void OpenAttachmentList(bool bVerticalList, TSubclassOf<class ABaseItem> ItemData, EWeaponAttachmentType AttachmentType);
	void OpenDeployableList(bool bVerticalList, EItemCategory LoadoutSlot, const TArray<struct ReadyOrNot::FLoadoutCategory>& GearCategoryClasses, const TArray<TSubclassOf<class ABaseItem>>& ExcludedItems);
	void OpenItemList(bool bVerticalList, EItemCategory LoadoutSlot, const TArray<struct ReadyOrNot::FLoadoutCategory>& GearCategoryClasses);
	void OpenLoadoutPresetModal(const class FString& CurrentPreset, bool bDelete);
	void OpenWeaponQuartermaster(class ABaseItem* ItemToModify);
	void PlaySetPreMissionCameraAnimation();
	void PrimaryChanged();
	void RefreshAttachmentInfoPanel(class ULoadoutSlotWidget* LoadoutSlot);
	void RefreshItemInfoPanel(class ULoadoutSlotWidget* LoadoutSlot);
	void SaveActiveLoadoutOld();
	void SaveArmorCoverage(EArmourCoverage ArmourCoverage);
	void SaveGrenadeSlotCount(int32 GrenadeSlotsCount);
	void SaveLoadoutPreset(class UUserWidget* TriggeringModal, const class FText& TextEntry);
	void SavePrimaryAmmoSlotCount(int32 PrimaryAmmoSlotCount);
	void SaveSidearmAmmoSlotCount(int32 SidearmAmmoSlotCount);
	void SaveTacticalSlotcount(int32 TacticalSlotsCount);
	void SaveWeaponPreset(class UUserWidget* TriggeringModal, const class FText& TextEntry);
	void SetActiveLoadout(const class FString& LoadoutName, class AReadyOrNotPlayerState* RoNPlayerState, EEquippingSwat EquippingUnit);
	void SetActiveQuartermasterSlot();
	void SetPreMissionCamera(class FName Tag, const class FString& Animation, float BlendTime);
	void SetPreMissionCameraBySlot(EItemCategory LoadoutSlot, float BlendTime);
	void SetPresetModified(bool bPresetDirty);
	void SetupBindings();
	void SetupWorkbenchCamera();
	void ShowHUD();
	void ShowItemInfoPanel(class ULoadoutSlotWidget* LoadoutSlot);
	void ShowToolTip(const struct FLevelDataLookupTable& MissionDetails);
	void SidearmChanged();
	void UpdateAllPreviewWeaponAttachments(bool bIsWorkbench, TSubclassOf<class ABaseItem> Weapon, bool bIsSidearm);
	void UpdateCurrentItem();
	void UpdateHUDStates();
	void UpdatePreview(EItemCategory Selection);
	void UpdateWorkbenchCameraRotation(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LoadoutWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LoadoutWidget")
	}
	static class ULoadoutWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadoutWidget>();
	}
};
DUMPER7_ASSERTS_ULoadoutWidget;

// Class ReadyOrNot.Loadout_ArmorSelection_V2
// 0x0000 (0x0418 - 0x0418)
class ULoadout_ArmorSelection_V2 final : public UCommonActivatableWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Loadout_ArmorSelection_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Loadout_ArmorSelection_V2")
	}
	static class ULoadout_ArmorSelection_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadout_ArmorSelection_V2>();
	}
};
DUMPER7_ASSERTS_ULoadout_ArmorSelection_V2;

// Class ReadyOrNot.ZoneManager
// 0x0060 (0x02F8 - 0x0298)
class AZoneManager final : public AInfo
{
public:
	TArray<class ACombatMoveZone*>                AllZones;                                          // 0x0298(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A8[0x50];                                     // 0x02A8(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class ACombatMoveZone* FindNextZone(class ACyberneticCharacter* Character);
	bool HasValidZone(class ACyberneticCharacter* Character, ECurrentZoneTransitionState ZoneDirection);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ZoneManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ZoneManager")
	}
	static class AZoneManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AZoneManager>();
	}
};
DUMPER7_ASSERTS_AZoneManager;

// Class ReadyOrNot.Loadout_Carousel_V3
// 0x0008 (0x02D0 - 0x02C8)
class ULoadout_Carousel_V3 final : public UUserWidget
{
public:
	class UTextBlock*                             Text;                                              // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetText(const class FText& inputText);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Loadout_Carousel_V3")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Loadout_Carousel_V3")
	}
	static class ULoadout_Carousel_V3* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadout_Carousel_V3>();
	}
};
DUMPER7_ASSERTS_ULoadout_Carousel_V3;

// Class ReadyOrNot.Loadout_SubSelection_V2
// 0x0000 (0x02F0 - 0x02F0)
class ULoadout_SubSelection_V2 final : public UCommonUserWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Loadout_SubSelection_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Loadout_SubSelection_V2")
	}
	static class ULoadout_SubSelection_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadout_SubSelection_V2>();
	}
};
DUMPER7_ASSERTS_ULoadout_SubSelection_V2;

// Class ReadyOrNot.Loadout_TacticalSelection_V2
// 0x0000 (0x0418 - 0x0418)
class ULoadout_TacticalSelection_V2 final : public UCommonActivatableWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Loadout_TacticalSelection_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Loadout_TacticalSelection_V2")
	}
	static class ULoadout_TacticalSelection_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadout_TacticalSelection_V2>();
	}
};
DUMPER7_ASSERTS_ULoadout_TacticalSelection_V2;

// Class ReadyOrNot.Loadout_V2
// 0x0488 (0x08A0 - 0x0418)
class ULoadout_V2 : public UCommonActivatableWidget
{
public:
	class UOverview_V2*                           OverviewWidget;                                    // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonActivatableWidgetStack*          WidgetStack;                                       // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotGameState*                   gs;                                                // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotPlayerController*            PC;                                                // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotPlayerState*                 ps;                                                // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_440[0x8];                                      // 0x0440(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerState*                 PreviewPlayerState;                                // 0x0448(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class AReadyOrNotCharacter*, class AReadyOrNotPlayerState*> PlayerStatePreviewMap;          // 0x0450(0x0050)(Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   RedTeamClass;                                      // 0x04A0(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   BlueTeamClass;                                     // 0x04C8(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   VIPClass;                                          // 0x04F0(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<TSubclassOf<class ABaseItem>, struct FSavedWeaponPreset> WeaponToWeaponPresetsMap;          // 0x0518(0x0050)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class AReadyOrNotPlayerState*                 EquippingPlayerState;                              // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_570[0x8];                                      // 0x0570(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EEquippingSwat, struct FSavedLoadout>    LastSavedLoadout;                                  // 0x0578(0x0050)(Protected, NativeAccessSpecifierProtected)
	TMap<EEquippingSwat, struct FSavedLoadout>    LastEquippedPreviewLoadout;                        // 0x05C8(0x0050)(Protected, NativeAccessSpecifierProtected)
	class FString                                 PrimaryDrawAnim;                                   // 0x0618(0x0010)(BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 PrimaryHolsterAnim;                                // 0x0628(0x0010)(BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 SidearmDrawAnim;                                   // 0x0638(0x0010)(BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 SidearmHolsterAnim;                                // 0x0648(0x0010)(BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 CurrentPreviewAnimation;                           // 0x0658(0x0010)(BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   CurrentCameraTag;                                  // 0x0668(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         HolsterTimeRemaining;                              // 0x0670(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_674[0x4];                                      // 0x0674(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EItemCategory, class FName>              CategoryCameraTags;                                // 0x0678(0x0050)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<EItemCategory, class FString>            CategoryPoses;                                     // 0x06C8(0x0050)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                          ApplyingPresets;                                   // 0x0718(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          UsingPreset;                                       // 0x0719(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          PresetDirty;                                       // 0x071A(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          VerticalListOpen;                                  // 0x071B(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          ListVisible;                                       // 0x071C(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_71D[0x3];                                      // 0x071D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       AnimExtendListSlide;                               // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, class ABaseItem*>           WorkBenchItemPtrMap;                               // 0x0728(0x0050)(BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<TSubclassOf<class ABaseItem>, struct FSavedWeaponAttachmentData> WeaponToAttachmentsMap;    // 0x0778(0x0050)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                          bIsCustomizingPrimary;                             // 0x07C8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7C9[0x13];                                     // 0x07C9(0x0013)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ActiveCameraTag;                                   // 0x07DC(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7E4[0x5C];                                     // 0x07E4(0x005C)(Fixing Size After Last Property [ Dumper-7 ])
	class ULoadoutSlotWidget*                     CurrentActiveSlot;                                 // 0x0840(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       FadeOut;                                           // 0x0848(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotCharacter*                   LoadoutPreviewCharacter;                           // 0x0850(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_858[0x40];                                     // 0x0858(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UReadyOrNotLoadoutManager*              LoadoutFunctionLibrary;                            // 0x0898(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ApplyLoadoutPreset(const struct FLoadoutPreset& LoadoutPreset);
	void ExitLoadout();
	class AReadyOrNotCharacter* GetDefaultPreviewCharacter();
	bool GetInputLocked();
	void GrabCharacter();
	void HidePrimary(bool bIsHidden);
	void HidePrimaryAndSecondary();
	void LoadAddAttachment(class ABaseWeapon* BaseWeapon, TSubclassOf<class UWeaponAttachment> Attachment, bool bReplicateAttachment);
	void LoadStoredWeaponAttachments();
	void LoadWeaponPresets();
	void OnFocusFullyLost();
	void OnLoadoutItemAttachmentsLoaded();
	void OnLoadoutItemAttachmentsSaved();
	void OnLoadoutItemPresetsLoaded();
	void OnLoadoutItemPresetsSaved();
	void OnLoadoutLoaded();
	void OnLoadoutPresetsLoaded();
	void OnLoadoutPresetsSaved();
	void OnLoadoutSaved();
	void OnSwatCharacterChanged();
	void OpenCustomization();
	void PlayAnimationOnPreviewCharacter(const class FString& Animation);
	void ReleaseCharacter();
	void RotateLoadoutCharacter(float InRotation, bool bSetVelocity);
	void SaveStoredWeaponAttachments();
	void SetActiveCameraByTag(class FName Tag, float BlendTime);
	void SetActiveCameraByTagWithFade(class FName Tag, float BlendTime, float FadeTime);
	void SetBodyArmour(TSubclassOf<class ABaseItem> BodyArmour);
	void SetDefaultCamera(float BlendTime);
	void SetFacewear(TSubclassOf<class ABaseItem> Facewear);
	void SetHeadwear(TSubclassOf<class ABaseItem> Headwear);
	void SetHelmetMount(TSubclassOf<class ABaseItem> HelmetMount);
	void SetItem(EItemType ItemType, TSubclassOf<class ABaseItem> ItemClass);
	void SetLockInput(bool bShouldLockInput);
	void SetLongTactical(TSubclassOf<class ABaseItem> LongTactical);
	void SetNvgStyle(ENVGStyle NvgStyle);
	void SetPrimaryWeapon(const struct FWeaponData& WeaponData);
	void SetSecondaryWeapon(const struct FWeaponData& WeaponData);
	void SetWorkbenchItemClass(TSubclassOf<class ABaseItem> Item, class FName Tag, const struct FSavedLoadout& Loadout);
	void UpdateDefaultPreviewCharacter();
	void UpdatePreviewCharacter(class AReadyOrNotPlayerState* InPreviewPlayerState, class FName Tag);
	void UpdatePreviewCharacterArmour();
	void UpdatePreviewCharacterHeadwear();
	void UpdatePreviewCharacterLongTactical();
	void UpdatePreviewCharacterPrimary();
	void UpdatePreviewCharacterSecondary();
	void UpdatePreviewWeaponAttachments(bool IsSecondary, TSubclassOf<class UWeaponAttachment> Attachment);
	void UpdateWorkbenchItemAttachments(const struct FSavedLoadout& Loadout, bool IsSecondary);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Loadout_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Loadout_V2")
	}
	static class ULoadout_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadout_V2>();
	}
};
DUMPER7_ASSERTS_ULoadout_V2;

// Class ReadyOrNot.ReadyOrNotTriggerVolume
// 0x0028 (0x02C8 - 0x02A0)
class AReadyOrNotTriggerVolume : public ATriggerBox
{
public:
	TArray<TSubclassOf<class AActor>>             OverlappingClasses;                                // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class AActor*>                         TestActors;                                        // 0x02B0(0x0010)(Edit, ZeroConstructor, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C0[0x8];                                      // 0x02C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnActorSpawned(class AActor* Actor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotTriggerVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotTriggerVolume")
	}
	static class AReadyOrNotTriggerVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReadyOrNotTriggerVolume>();
	}
};
DUMPER7_ASSERTS_AReadyOrNotTriggerVolume;

// Class ReadyOrNot.LobbyFiringRangeArea
// 0x0000 (0x02C8 - 0x02C8)
class ALobbyFiringRangeArea final : public AReadyOrNotTriggerVolume
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LobbyFiringRangeArea")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LobbyFiringRangeArea")
	}
	static class ALobbyFiringRangeArea* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALobbyFiringRangeArea>();
	}
};
DUMPER7_ASSERTS_ALobbyFiringRangeArea;

// Class ReadyOrNot.LobbyGM
// 0x00D0 (0x0A90 - 0x09C0)
class ALobbyGM : public AReadyOrNotGameMode
{
public:
	uint8                                         Pad_9C0[0x8];                                      // 0x09C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotPlayerController*>    InitalizedPlayerControllers;                       // 0x09C8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9D8[0x80];                                     // 0x09D8(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommanderProfile*                      CommanderProfile;                                  // 0x0A58(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URosterManager*                         RosterManager;                                     // 0x0A60(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A68[0x10];                                     // 0x0A68(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UCommonActivatableWidget>> PopupQueue;                                  // 0x0A78(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_A88[0x8];                                      // 0x0A88(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLoadingScreenCleared();
	void OpenMissionSelect();
	void OpenRosterSelection();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LobbyGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LobbyGM")
	}
	static class ALobbyGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALobbyGM>();
	}
};
DUMPER7_ASSERTS_ALobbyGM;

// Class ReadyOrNot.LockPickDoorActivity
// 0x0000 (0x0258 - 0x0258)
class ULockPickDoorActivity final : public UDoorInteractionActivity
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LockPickDoorActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LockPickDoorActivity")
	}
	static class ULockPickDoorActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULockPickDoorActivity>();
	}
};
DUMPER7_ASSERTS_ULockPickDoorActivity;

// Class ReadyOrNot.Tool
// 0x0010 (0x0C90 - 0x0C80)
class ATool : public ABaseItem
{
public:
	float                                         MaxOperatingTime;                                  // 0x0C78(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CurrentOperatingTime;                              // 0x0C7C(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bOperating : 1;                                    // 0x0C80(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_C81[0x7];                                      // 0x0C81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0C88(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void Client_FinishedToolUse(class AActor* Target, class APlayerCharacter* PC);
	void Client_StopToolAnimation();
	void Server_StartUsingTool(class AActor* Target);
	void Server_StopUsingTool(class AActor* Target);
	void Server_ToolComplete();
	void StartUsingTool(class AActor* Target);
	void StopUsingTool(class AActor* Target);

	float GetCurrentOperatingTime() const;
	float GetMaxOperatingTime() const;
	bool IsOperating() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Tool")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Tool")
	}
	static class ATool* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATool>();
	}
};
DUMPER7_ASSERTS_ATool;

// Class ReadyOrNot.SwatCommandEntryWidget
// 0x00E8 (0x03B0 - 0x02C8)
class USwatCommandEntryWidget : public UUserWidget
{
public:
	struct FSwatCommand                           SwatCommand;                                       // 0x02C8(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPublic)
	ETeamType                                     ActiveTeamType;                                    // 0x0328(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           RedTeamColor;                                      // 0x032C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           BlueTeamColor;                                     // 0x033C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           GoldTeamColor;                                     // 0x034C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLast;                                             // 0x035C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBack;                                             // 0x035D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExtended;                                         // 0x035E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35F[0x9];                                      // 0x035F(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextWidget*                            CommandText;                                       // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextWidget*                            KeybindText;                                       // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                EntryBorder;                                       // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 ExtendedImage;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             BackIcon;                                          // 0x0388(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Flash;                                             // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               FocusBackground;                                   // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        InputSwitcher;                                     // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         txt_Binding;                                       // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SwatCommandEntryWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SwatCommandEntryWidget")
	}
	static class USwatCommandEntryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USwatCommandEntryWidget>();
	}
};
DUMPER7_ASSERTS_USwatCommandEntryWidget;

// Class ReadyOrNot.LockpickGun
// 0x0000 (0x0C90 - 0x0C90)
class ALockpickGun : public ATool
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LockpickGun")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LockpickGun")
	}
	static class ALockpickGun* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALockpickGun>();
	}
};
DUMPER7_ASSERTS_ALockpickGun;

// Class ReadyOrNot.MagazineAttachment
// 0x0020 (0x10F0 - 0x10D0)
class UMagazineAttachment : public UWeaponAttachment
{
public:
	class UStaticMesh*                            MagazineStaticMesh;                                // 0x10D0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Socket_01;                                         // 0x10D8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Socket_02;                                         // 0x10E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10E8[0x8];                                     // 0x10E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MagazineAttachment")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MagazineAttachment")
	}
	static class UMagazineAttachment* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMagazineAttachment>();
	}
};
DUMPER7_ASSERTS_UMagazineAttachment;

// Class ReadyOrNot.MagMaskingAnimNotify
// 0x0008 (0x0040 - 0x0038)
class UMagMaskingAnimNotify final : public UAnimNotify
{
public:
	bool                                          bIsFirstPerson;                                    // 0x0038(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EMaskMag                                      MaskMag;                                           // 0x0039(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EMaskMagState                                 MagState;                                          // 0x003A(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bDummyCopyMag02;                                   // 0x003B(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MagMaskingAnimNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MagMaskingAnimNotify")
	}
	static class UMagMaskingAnimNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMagMaskingAnimNotify>();
	}
};
DUMPER7_ASSERTS_UMagMaskingAnimNotify;

// Class ReadyOrNot.MainMenu
// 0x0048 (0x0460 - 0x0418)
class UMainMenu final : public UMenuWidget
{
public:
	class UCanvasPanel*                           BackgroundCanvas;                                  // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            PlayBtn;                                           // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            FindCOOPSessionBtn;                                // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            FindPVPSessionBtn;                                 // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            PlayPublicLobbyBtn;                                // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            PlayFriendsOnlyBtn;                                // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             Txt_BackEndConnection;                             // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             Txt_PublicLobbyCooldown;                           // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bEnableFindSessionCOOPButton : 1;                  // 0x0458(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bEnableFindSessionPVPButton : 1;                   // 0x0458(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseModMenu();
	void OpenModMenu();

	bool CanPlayPublicLobby() const;
	class FText GetPublicLobbyCooldown() const;
	class FText GetVersion() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MainMenu")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MainMenu")
	}
	static class UMainMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMainMenu>();
	}
};
DUMPER7_ASSERTS_UMainMenu;

// Class ReadyOrNot.MainMenu_V3
// 0x0070 (0x0488 - 0x0418)
class UMainMenu_V3 : public UCommonActivatableWidget
{
public:
	uint8                                         bEnableFindSessionCOOPButton : 1;                  // 0x0418(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnableFindSessionPVPButton : 1;                   // 0x0418(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStreamingInstallProgress*              StreamingInstall;                                  // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool InWasSuccessful)> OnLocalLoginCompleted;                      // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool InWasSuccessful, const struct FBlueprintSessionResult& Session)> OnJoinCrossplayLobby; // 0x0438(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool InWasSuccessful)> OnLinkEpicAccountCompleted;                 // 0x0448(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_458[0x18];                                     // 0x0458(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UEOSMultiplayerSubsystem*               EOSMultiplayerSubsystem;                           // 0x0470(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_478[0x10];                                     // 0x0478(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UMainMenu_V3* GetWidgetInstance();

	void CloseModioBrowser();
	void DisableMainMenuInputPreprocessor();
	void EnableMainMenuInputPreprocessor();
	bool EOSLoginComplete();
	bool EOSLoginSuccessful();
	void HideCrossplayWarning();
	bool IsModUpdating();
	bool IsNetworkConnected();
	void OnAllChunksIsInstalled();
	void OnModioBrowserClosed();
	void OnModioEmailAuthenticationAccepted();
	void OnModioEmailAuthenticationDenied();
	void OnModMenuClosed();
	void OnModMenuClosedDuringUpdate();
	void OnModsButtonPressed();
	void OnTermsOfServiceAccepted();
	void OnTermsOfServiceDenied();
	void OpenModioBrowser();
	void OpenModioEmailAuthentication();
	void OpenModioTermsOfService();
	void Reconnect();
	bool ShouldShowModsButton();
	bool ShouldShowRestartDialog();
	bool TryLinkEpicAccount();
	void TryShowCrossplayWarning();
	void UpdateStreamingInstallDependentButtons(bool bEnableButtons);

	bool CanLinkEpicAccount() const;
	bool CanPlayPublicLobby() const;
	class FText GetPublicLobbyCooldown() const;
	bool IsServerBrowserEnabled() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MainMenu_V3")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MainMenu_V3")
	}
	static class UMainMenu_V3* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMainMenu_V3>();
	}
};
DUMPER7_ASSERTS_UMainMenu_V3;

// Class ReadyOrNot.MainMenu_Wrapper
// 0x0000 (0x0418 - 0x0418)
class UMainMenu_Wrapper final : public UCommonActivatableWidget
{
public:
	void CloseModMenu();
	void OpenModMenu();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MainMenu_Wrapper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MainMenu_Wrapper")
	}
	static class UMainMenu_Wrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMainMenu_Wrapper>();
	}
};
DUMPER7_ASSERTS_UMainMenu_Wrapper;

// Class ReadyOrNot.MapActorIconWidget
// 0x0010 (0x0350 - 0x0340)
class UMapActorIconWidget final : public UMapActorWidget
{
public:
	class UImage*                                 Icon_Image;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Icon_Image_BG;                                     // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetIconBrushStyle(const struct FSlateBrush& InIconBrush, const struct FLinearColor& InIconColor);
	void SetIconColor(const struct FLinearColor& InIconColor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MapActorIconWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MapActorIconWidget")
	}
	static class UMapActorIconWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMapActorIconWidget>();
	}
};
DUMPER7_ASSERTS_UMapActorIconWidget;

// Class ReadyOrNot.MatchStatusCardWidget
// 0x0010 (0x0300 - 0x02F0)
class UMatchStatusCardWidget final : public UBaseWidget
{
public:
	class UMatchTimeRemainingWidget*              MatchTimeRemaining;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurrentMatchRoundWidget*               CurrentMatchRound;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchStatusCardWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchStatusCardWidget")
	}
	static class UMatchStatusCardWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchStatusCardWidget>();
	}
};
DUMPER7_ASSERTS_UMatchStatusCardWidget;

// Class ReadyOrNot.MatchTimeRemainingWidget
// 0x0010 (0x0300 - 0x02F0)
class UMatchTimeRemainingWidget final : public UBaseWidget
{
public:
	class UTextBlock*                             MatchTimeRemaining_Text;                           // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RoundTimeRemaining;                                // 0x02F8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchTimeRemainingWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchTimeRemainingWidget")
	}
	static class UMatchTimeRemainingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchTimeRemainingWidget>();
	}
};
DUMPER7_ASSERTS_UMatchTimeRemainingWidget;

// Class ReadyOrNot.MemorialViewer
// 0x0020 (0x02B8 - 0x0298)
class AMemorialViewer final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        RootSceneComponent;                                // 0x02A0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractableComponent*                 InteractableComponent;                             // 0x02A8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                            Widget;                                            // 0x02B0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MemorialViewer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MemorialViewer")
	}
	static class AMemorialViewer* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMemorialViewer>();
	}
};
DUMPER7_ASSERTS_AMemorialViewer;

// Class ReadyOrNot.SWATArmour
// 0x0040 (0x0D30 - 0x0CF0)
class ASWATArmour : public ABaseArmour
{
public:
	EArmourCoverage                               MaxArmourCoverage;                                 // 0x0CE8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CE9[0x7];                                      // 0x0CE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UArmourMaterial*                        CarrierMaterial;                                   // 0x0CF0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalSlots;                                        // 0x0CF8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DefaultPrimaryAmmoSlots;                           // 0x0CFC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DefaultSecondaryAmmoSlots;                         // 0x0D00(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DefaultGrenadeSlots;                               // 0x0D04(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DefaultTacticalDeviceSlots;                        // 0x0D08(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EArmourCoverage                               ArmourCoverage;                                    // 0x0D0C(0x0001)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D0D[0x3];                                      // 0x0D0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UArmourMaterial*                        ArmourMaterial;                                    // 0x0D10(0x0008)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<float>                                 Durabilities;                                      // 0x0D18(0x0010)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D28[0x8];                                      // 0x0D28(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SWATArmour")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SWATArmour")
	}
	static class ASWATArmour* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASWATArmour>();
	}
};
DUMPER7_ASSERTS_ASWATArmour;

// Class ReadyOrNot.MemorialWidget
// 0x0010 (0x0428 - 0x0418)
class UMemorialWidget : public UCommonActivatableWidget
{
public:
	TArray<class URosterCharacter*>               MemorialCharacters;                                // 0x0418(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	void CloseMemorialWidget();
	TArray<class URosterCharacter*> GetMemorialCharacters();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MemorialWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MemorialWidget")
	}
	static class UMemorialWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMemorialWidget>();
	}
};
DUMPER7_ASSERTS_UMemorialWidget;

// Class ReadyOrNot.MessagePromptActor
// 0x0050 (0x02E8 - 0x0298)
class AMessagePromptActor final : public AActor
{
public:
	class FString                                 MessageMapID;                                      // 0x0298(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBigPopUp;                                       // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasDisplayedMessage;                              // 0x02A9(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   MessageTitle;                                      // 0x02B0(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<class FText>                           MessageContent;                                    // 0x02C8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMessagePromptContent>          MessageActions;                                    // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	void GenerateMessageContent();
	void HideMessagePopUp();
	void ShowMessageThroughPopUp();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MessagePromptActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MessagePromptActor")
	}
	static class AMessagePromptActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMessagePromptActor>();
	}
};
DUMPER7_ASSERTS_AMessagePromptActor;

// Class ReadyOrNot.MetaGameProfile
// 0x0128 (0x03E8 - 0x02C0)
class UMetaGameProfile final : public UBaseProfile
{
public:
	uint8                                         Pad_2C0[0x8];                                      // 0x02C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MetaGameVersion;                                   // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LastCampaignSave;                                  // 0x02D0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxCampaignSlots;                                  // 0x02E0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           LastSelectedDifficulty;                            // 0x02E4(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalLobbyLogins;                                  // 0x02EC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasCompletedTutorial;                             // 0x02F0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasShownQuickPlayPopup;                           // 0x02F1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasShownCommanderPopup;                           // 0x02F2(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasShownCrossplayPopup;                           // 0x02F3(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EGameVersionRestriction>               AcknowledgedGameVersions;                          // 0x02F8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bHasUpgradedForDLC3;                               // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CompletedLevels;                                   // 0x0310(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class FString>                         CompletedMultiplayerLevels;                        // 0x0320(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TSet<class FName>                             ProgressionTags;                                   // 0x0330(0x0050)(NativeAccessSpecifierPrivate)
	struct FMetaGameProfileTemporaryData          TemporaryData;                                     // 0x0380(0x0068)(NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MetaGameProfile")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MetaGameProfile")
	}
	static class UMetaGameProfile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMetaGameProfile>();
	}
};
DUMPER7_ASSERTS_UMetaGameProfile;

// Class ReadyOrNot.Mirror
// 0x0088 (0x0320 - 0x0298)
class AMirror final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             VisibilityBoundsTransform;                         // 0x02A0(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                VisibilityBoundsExtent;                            // 0x0300(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bDynamicShadowsDisabled : 1;                       // 0x0318(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Mirror")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Mirror")
	}
	static class AMirror* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMirror>();
	}
};
DUMPER7_ASSERTS_AMirror;

// Class ReadyOrNot.MirrorUnderDoorActivity
// 0x0028 (0x0280 - 0x0258)
class UMirrorUnderDoorActivity final : public UDoorInteractionActivity
{
public:
	EMirrorContactType                            MirrorContactType;                                 // 0x0258(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACyberneticCharacter*>           SpottedCharacters;                                 // 0x0260(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_270[0x10];                                     // 0x0270(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void MirrorForCustom();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MirrorUnderDoorActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MirrorUnderDoorActivity")
	}
	static class UMirrorUnderDoorActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMirrorUnderDoorActivity>();
	}
};
DUMPER7_ASSERTS_UMirrorUnderDoorActivity;

// Class ReadyOrNot.MissionEnd
// 0x0000 (0x0418 - 0x0418)
class UMissionEnd : public UCommonActivatableWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MissionEnd")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MissionEnd")
	}
	static class UMissionEnd* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionEnd>();
	}
};
DUMPER7_ASSERTS_UMissionEnd;

// Class ReadyOrNot.MissionEventController
// 0x0020 (0x02B8 - 0x0298)
class AMissionEventController final : public AActor
{
public:
	TArray<struct FMissionEventData>              Events;                                            // 0x0298(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FMissionEventData>              Instances;                                         // 0x02A8(0x0010)(Edit, ZeroConstructor, EditConst, ContainsInstancedReference, AdvancedDisplay, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MissionEventController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MissionEventController")
	}
	static class AMissionEventController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMissionEventController>();
	}
};
DUMPER7_ASSERTS_AMissionEventController;

// Class ReadyOrNot.MissionInformationSubsystem
// 0x0880 (0x08B0 - 0x0030)
class UMissionInformationSubsystem final : public UWorldSubsystem
{
public:
	struct FLevelDataLookupTable                  CachedLevelData;                                   // 0x0030(0x0880)(NativeAccessSpecifierPrivate)

public:
	struct FDateTime GetCurrentLocalTime() const;
	struct FDateTime GetCurrentZuluTime() const;
	class FText GetFriendlyLocationName() const;
	class FText GetFriendlyMissionName() const;
	struct FVector2D GetLatitudeAndLongitude() const;
	struct FTimespan GetLocalTimeZoneOffset() const;
	float GetSeaLevelOffsetInCentimeters() const;
	struct FDateTime GetStartingLocalTime() const;
	struct FDateTime GetStartingZuluTime() const;
	float GetTrueNorthAngleInDegrees() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MissionInformationSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MissionInformationSubsystem")
	}
	static class UMissionInformationSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionInformationSubsystem>();
	}
};
DUMPER7_ASSERTS_UMissionInformationSubsystem;

// Class ReadyOrNot.MissionPlanManager
// 0x0290 (0x0528 - 0x0298)
class AMissionPlanManager final : public AInfo
{
public:
	struct FPlanningMarkerArray                   MarkerArray;                                       // 0x0298(0x0148)(Net, NativeAccessSpecifierPublic)
	struct FPlanningLineArray                     LineArray;                                         // 0x03E0(0x0148)(Net, NativeAccessSpecifierPublic)

public:
	static class AReadyOrNotPlayerState* GetPlayerStateFromPlanningNumber(const class UObject* WorldContextObject, int32 Number);

	void OnMissionChanged();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MissionPlanManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MissionPlanManager")
	}
	static class AMissionPlanManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMissionPlanManager>();
	}
};
DUMPER7_ASSERTS_AMissionPlanManager;

// Class ReadyOrNot.TeamViewWidget
// 0x00F0 (0x0508 - 0x0418)
class UTeamViewWidget : public UCommonActivatableWidget
{
public:
	bool                                          bAllowHelicopterView;                              // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 PlayerViewImage;                                   // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             PlayerNameText;                                    // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             PlayerHealthStatusText;                            // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 PlayerTeamIndicatorImage;                          // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         SwitchViewRichText;                                // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         CloseViewRichText;                                 // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             CurrentViewIndexText;                              // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               HelicopterNoImage;                                 // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<ETeamType, struct FSlateColor>           TeamColorMap;                                      // 0x0460(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TMap<EPlayerHealthStatus, struct FSlateColor> HealthStatusColorMap;                              // 0x04B0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AHelicopter>             Helicopter;                                        // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class FText FormatKeybindText(const class FText& InputEvent, const class FText& InputAction);
	void OnInputMethodChanged(ECommonInputType InputType);
	void Tick_TeamViewOn();
	void UpdateInputText();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TeamViewWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TeamViewWidget")
	}
	static class UTeamViewWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTeamViewWidget>();
	}
};
DUMPER7_ASSERTS_UTeamViewWidget;

// Class ReadyOrNot.MissionPlanLinesWidget
// 0x0060 (0x01E8 - 0x0188)
class UMissionPlanLinesWidget final : public UWidget
{
public:
	float                                         LineWidth;                                         // 0x0188(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FirstNodeRadius;                                   // 0x018C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NodeRadius;                                        // 0x0190(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     LineMaterial;                                      // 0x0198(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyDrawPreviewLine;                              // 0x01A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionPlanLineColors                 LineColors;                                        // 0x01A4(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D4[0x14];                                     // 0x01D4(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetCurrentFloor(int32 Floor);
	void SetLineColors(const struct FMissionPlanLineColors& InLineColors);
	void SetPreviewLine(const struct FPlanningLine& Line);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MissionPlanLinesWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MissionPlanLinesWidget")
	}
	static class UMissionPlanLinesWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionPlanLinesWidget>();
	}
};
DUMPER7_ASSERTS_UMissionPlanLinesWidget;

// Class ReadyOrNot.MissionPortal
// 0x0128 (0x03F0 - 0x02C8)
class AMissionPortal final : public AReadyOrNotTriggerVolume
{
public:
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableComponent*                 InteractableComponent;                             // 0x02D0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class AReadyOrNotGameMode>> SelectableGameModes;                              // 0x02D8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class AMissionSelect*                         MissionSelect;                                     // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UReadyOrNotProfile*                     Profile;                                           // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommanderProfile*                      CommanderProfile;                                  // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMetaGameProfile*                       MetaGameProfile;                                   // 0x0300(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextRenderComponent*                   WhiteboardText;                                    // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_310[0x8];                                      // 0x0310(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnMissionSelected_Delegate;                        // 0x0318(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                 MissionURL;                                        // 0x0328(0x0010)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ModeURL;                                           // 0x0338(0x0010)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           MissionDifficulty;                                 // 0x0348(0x0008)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SelectedEntryPoint;                                // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UStaticMeshComponent*>           CompsToOutline;                                    // 0x0358(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class ULightComponent*>                LightsToEnable;                                    // 0x0368(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>           CompsToOutlineMissionSelected;                     // 0x0378(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class ULightComponent*>                LightsToEnableMissionSelected;                     // 0x0388(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_398[0x18];                                     // 0x0398(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(float Countdown)> OnCountdownStarted;                              // 0x03B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCountdownCancelled;                              // 0x03C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                         NumReadyPlayers;                                   // 0x03D0(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumPlayersInLobby;                                 // 0x03D4(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotPlayerController*>    ReadiedPlayers;                                    // 0x03D8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E8[0x8];                                      // 0x03E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool DoesLevelExistInBuild(const class FString& InUrl);
	static bool GetPlayersReady(int32* Ready, int32* Total);
	static void GetSelectedMission(class FString* OutMissionURL);
	static bool GetSelectedMode(class FString* OutMode);
	static bool GetSelectedModeName(class FString* OutName);
	static bool IsGameModeSelectable(ECOOPMode InMode);
	static bool IsLevelUnlocked(const class FString& InUrl, bool* OutIsUnlocked, float* OutScoreRequired, class FString* OutLockedUrl);
	static bool IsMissionStarting(bool* bStarting, float* Countdown);
	static void SetDifficulty(const struct FGameplayTag& Difficulty);
	static void SetSelectedEntryPoint(class FName EntryPoint);
	static void SetSelectedMission(const class FString& InMissionURL);
	static void SetSelectedMode(class FName InMode);

	void Multicast_SetTimer(bool bEnabled, float SetTime);
	void OnMissionSelected();
	void OnPlayerJoinedLobby(class AReadyOrNotPlayerController* PlayerController);
	void OnPlayerReadyChange(class AReadyOrNotPlayerController* ReadyOrNotPlayerController, bool bReady);
	void OnRep_MissionDifficulty();
	void OnRep_MissionURL();
	void OnRep_PlayersInLobbyChange();
	void OnRep_ReadiedPlayersChange();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MissionPortal")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MissionPortal")
	}
	static class AMissionPortal* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMissionPortal>();
	}
};
DUMPER7_ASSERTS_AMissionPortal;

// Class ReadyOrNot.MissionSelect
// 0x0130 (0x03C8 - 0x0298)
class AMissionSelect final : public AActor
{
public:
	TSoftObjectPtr<class UWorld>                  LosSuenosLevel;                                    // 0x0298(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PersistentLightingLevelName;                       // 0x02C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LevelOffset;                                       // 0x02C8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CameraTag;                                         // 0x02E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EffectsTag;                                        // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PreloadTag;                                        // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraInterpSpeed;                                 // 0x02F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeOutTime;                                       // 0x02FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeInTime;                                        // 0x0300(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeHoldTime;                                      // 0x0304(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           FadeColor;                                         // 0x0308(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ADirectionalLight*>              HiddenDirectionalLights;                           // 0x0318(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, AdvancedDisplay, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ASkyLight*>                      HiddenSkyLights;                                   // 0x0328(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, AdvancedDisplay, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class APostProcessVolume*>             HiddenPostProcessVolumes;                          // 0x0338(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, AdvancedDisplay, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AExponentialHeightFog*>          HiddenExponentialHeightFogs;                       // 0x0348(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, AdvancedDisplay, UObjectWrapper, NativeAccessSpecifierPublic)
	class AActor*                                 ViewTargetActor;                                   // 0x0358(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OriginalCameraPosition;                            // 0x0360(0x0018)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_378[0x18];                                     // 0x0378(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreamingDynamic*                 CurrentLevel;                                      // 0x0390(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULevelStreamingDynamic*                 InFlightLevel;                                     // 0x0398(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULevelStreaming*                        PersistentLightingLevel;                           // 0x03A0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AReadyOrNotPlayerController*            PlayerController;                                  // 0x03A8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APlayerCameraManager*                   PlayerCameraManager;                               // 0x03B0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACameraActor*                           LoadingCameraActor;                                // 0x03B8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C0[0x8];                                      // 0x03C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseMissionSelect();
	void LoadLevel(TSoftObjectPtr<class UWorld> Level);
	void OnLevelLoaded();
	void OnLevelShown();
	void OpenMissionSelect();
	void PreviewMission(class UMissionSelectLevel* LevelData);
	void SelectMission(class UMissionSelectLevel* LevelData);

	bool IsOpen() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MissionSelect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MissionSelect")
	}
	static class AMissionSelect* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMissionSelect>();
	}
};
DUMPER7_ASSERTS_AMissionSelect;

// Class ReadyOrNot.MissionSelectCampaign
// 0x0050 (0x0078 - 0x0028)
class UMissionSelectCampaign final : public UObject
{
public:
	class FText                                   Name_0;                                            // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class UMissionSelectLevel*>            Levels;                                            // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bIsLocked;                                         // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECampaignLockReason                           LockReason;                                        // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   RequiredCampaign;                                  // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	EGameVersionRestriction                       RequiredDlc;                                       // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MissionSelectCampaign")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MissionSelectCampaign")
	}
	static class UMissionSelectCampaign* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionSelectCampaign>();
	}
};
DUMPER7_ASSERTS_UMissionSelectCampaign;

// Class ReadyOrNot.MissionSelectWidget
// 0x0020 (0x0438 - 0x0418)
class UMissionSelectWidget : public UCommonActivatableWidget
{
public:
	TArray<class UMissionSelectCampaign*>         CachedCampaigns;                                   // 0x0418(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UMetaGameProfile*                       MetaGameProfile;                                   // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommanderProfile*                      CommanderProfile;                                  // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void CloseMissionSelect();
	const TArray<class UMissionSelectCampaign*> GetCampaigns();
	void PreviewMission(class UMissionSelectLevel* Level);
	void SelectMission(class UMissionSelectLevel* Level);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MissionSelectWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MissionSelectWidget")
	}
	static class UMissionSelectWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionSelectWidget>();
	}
};
DUMPER7_ASSERTS_UMissionSelectWidget;

// Class ReadyOrNot.MissionTimeEventCondition
// 0x0020 (0x0060 - 0x0040)
class UMissionTimeEventCondition final : public UMissionEventCondition
{
public:
	bool                                          bUseLevelDataIni;                                  // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SecondsElapsedRequired;                            // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ConfigKey;                                         // 0x0048(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsElapsed;                                    // 0x0058(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MissionTimeEventCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MissionTimeEventCondition")
	}
	static class UMissionTimeEventCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionTimeEventCondition>();
	}
};
DUMPER7_ASSERTS_UMissionTimeEventCondition;

// Class ReadyOrNot.TeamChemlight
// 0x0068 (0x0310 - 0x02A8)
class ATeamChemlight final : public ACustomizationExtra
{
public:
	TMap<ETeamType, TSoftObjectPtr<class UMaterialInterface>> TeamMaterialMap;                       // 0x02A8(0x0050)(Edit, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                         TeamMaterialIndex;                                 // 0x02F8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   StaticMeshComponent;                               // 0x0300(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ETeamType                                     CurrentTeam;                                       // 0x0308(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleTeamChanged(ETeamType Team);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TeamChemlight")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TeamChemlight")
	}
	static class ATeamChemlight* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATeamChemlight>();
	}
};
DUMPER7_ASSERTS_ATeamChemlight;

// Class ReadyOrNot.ModActorSpawnSubsystem
// 0x0000 (0x0030 - 0x0030)
class UModActorSpawnSubsystem final : public UWorldSubsystem
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ModActorSpawnSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ModActorSpawnSubsystem")
	}
	static class UModActorSpawnSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModActorSpawnSubsystem>();
	}
};
DUMPER7_ASSERTS_UModActorSpawnSubsystem;

// Class ReadyOrNot.ModioManager
// 0x0210 (0x0238 - 0x0028)
class UModioManager final : public UObject
{
public:
	uint8                                         Pad_28[0x210];                                     // 0x0028(0x0210)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UModioManager* GetInstance();
	static bool IsModdingEnabled();

	void ClearUserData();
	bool IsModUpdating();

	bool IsRestartRequired() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ModioManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ModioManager")
	}
	static class UModioManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioManager>();
	}
};
DUMPER7_ASSERTS_UModioManager;

// Class ReadyOrNot.ModPersistentObjectSubsystem
// 0x0010 (0x0040 - 0x0030)
class UModPersistentObjectSubsystem final : public UGameInstanceSubsystem
{
public:
	TArray<class UObject*>                        PersistentModObjects;                              // 0x0030(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UObject* CreatePersistentObject(TSubclassOf<class UObject> InClass);
	static void GetAllPersistentObjects(TArray<class UObject*>* OutModObjects);
	static class UObject* GetPersistentObject(TSubclassOf<class UObject> InClass);
	static void RemovePersistentObject(class UObject* InObject);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ModPersistentObjectSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ModPersistentObjectSubsystem")
	}
	static class UModPersistentObjectSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModPersistentObjectSubsystem>();
	}
};
DUMPER7_ASSERTS_UModPersistentObjectSubsystem;

// Class ReadyOrNot.ModPersistentObjectData
// 0x0010 (0x0040 - 0x0030)
class UModPersistentObjectData final : public UDataAsset
{
public:
	TArray<TSubclassOf<class UObject>>            ClassesToInstantiate;                              // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ModPersistentObjectData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ModPersistentObjectData")
	}
	static class UModPersistentObjectData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModPersistentObjectData>();
	}
};
DUMPER7_ASSERTS_UModPersistentObjectData;

// Class ReadyOrNot.MoveActivity
// 0x0020 (0x0220 - 0x0200)
class UMoveActivity final : public UTeamBaseActivity
{
public:
	uint8                                         Pad_200[0x20];                                     // 0x0200(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoveActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoveActivity")
	}
	static class UMoveActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoveActivity>();
	}
};
DUMPER7_ASSERTS_UMoveActivity;

// Class ReadyOrNot.MoveIntoLOSActivity
// 0x0008 (0x01F8 - 0x01F0)
class UMoveIntoLOSActivity final : public UBaseActivity
{
public:
	class AActor*                                 LOSActor;                                          // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoveIntoLOSActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoveIntoLOSActivity")
	}
	static class UMoveIntoLOSActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoveIntoLOSActivity>();
	}
};
DUMPER7_ASSERTS_UMoveIntoLOSActivity;

// Class ReadyOrNot.MoveToActivity
// 0x0020 (0x0210 - 0x01F0)
class UMoveToActivity final : public UBaseActivity
{
public:
	uint8                                         Pad_1F0[0x20];                                     // 0x01F0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoveToActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoveToActivity")
	}
	static class UMoveToActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoveToActivity>();
	}
};
DUMPER7_ASSERTS_UMoveToActivity;

// Class ReadyOrNot.MoveToPlayerSpawn
// 0x0008 (0x0238 - 0x0230)
class UMoveToPlayerSpawn final : public UBaseCombatMoveActivity
{
public:
	bool                                          bBeArrestedOnceReachedLocation;                    // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoveToPlayerSpawn")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoveToPlayerSpawn")
	}
	static class UMoveToPlayerSpawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoveToPlayerSpawn>();
	}
};
DUMPER7_ASSERTS_UMoveToPlayerSpawn;

// Class ReadyOrNot.MoveToZoneCombatMove
// 0x0008 (0x0238 - 0x0230)
class UMoveToZoneCombatMove final : public UBaseCombatMoveActivity
{
public:
	uint8                                         Pad_230[0x8];                                      // 0x0230(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoveToZoneCombatMove")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoveToZoneCombatMove")
	}
	static class UMoveToZoneCombatMove* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoveToZoneCombatMove>();
	}
};
DUMPER7_ASSERTS_UMoveToZoneCombatMove;

// Class ReadyOrNot.Multitool
// 0x0090 (0x0D20 - 0x0C90)
class AMultitool : public ATool
{
public:
	TMap<EMultitoolFunctions, class UReadyOrNotWeaponAnimData*> MultitoolAnimData;                   // 0x0C90(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	class UInteractionsData*                      PvPFreeInteraction;                                // 0x0CE0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMultitoolFunctions                           CurrentToolKit;                                    // 0x0CE8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAudioBasedProgress : 1;                           // 0x0CE9(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_CEA[0x6];                                      // 0x0CEA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             FMODLockpickingSound;                              // 0x0CF0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             FMODKnifeSound;                                    // 0x0CF8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             FMODWirecutterSound;                               // 0x0D00(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             FMODFreeingSound;                                  // 0x0D08(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerCharacter*                       PendingFreeCharacter;                              // 0x0D10(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D18[0x8];                                      // 0x0D18(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ChangeToolkit(EMultitoolFunctions MultitoolFunction, bool bPlayAnimation);
	void Client_ChangeToolkit(EMultitoolFunctions MultitoolFunction, bool bPlayAnimation);
	void Client_PlayMultitoolAudio();
	void Client_StopMultitoolAudio();

	float GetMultitoolOperatingTimeFromActiveToolkit() const;
	float GetMultitoolOperatingTimeFromAudioLength(class UFMODEvent* Event) const;
	float GetMultitoolOperatingTimeFromToolkit(EMultitoolFunctions MultitoolFunction) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Multitool")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Multitool")
	}
	static class AMultitool* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMultitool>();
	}
};
DUMPER7_ASSERTS_AMultitool;

// Class ReadyOrNot.MunitionsSlotElement
// 0x0010 (0x02D8 - 0x02C8)
class UMunitionsSlotElement : public UUserWidget
{
public:
	class UImage*                                 ElementImage;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             ElementText;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MunitionsSlotElement")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MunitionsSlotElement")
	}
	static class UMunitionsSlotElement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMunitionsSlotElement>();
	}
};
DUMPER7_ASSERTS_UMunitionsSlotElement;

// Class ReadyOrNot.MusicData
// 0x0088 (0x00B8 - 0x0030)
class UMusicData final : public UDataAsset
{
public:
	struct FMusicTrack                            PreplanningTrack;                                  // 0x0030(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMusicTrack                            AmbientTrack;                                      // 0x0058(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMusicTrack                            ActionTrack;                                       // 0x0080(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMusicTrackFMOD                        FMODTracks;                                        // 0x00A8(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MusicData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MusicData")
	}
	static class UMusicData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMusicData>();
	}
};
DUMPER7_ASSERTS_UMusicData;

// Class ReadyOrNot.MusicManager
// 0x0020 (0x0050 - 0x0030)
class UMusicManager final : public UWorldSubsystem
{
public:
	class UFMODEvent*                             MusicEvent;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFMODEventInstance                     MusicEventInst;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTimerHandle                           TH_UpdateMusicParameters;                          // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void PauseMusicParametersUpdate();
	void ResumeMusicParametersUpdate();
	void SetMusicParameterValue(const class FString& ParamName, float ParamValue);
	void StartMusicParametersUpdate();
	void StopMusicParametersUpdate();
	void StopTheMusic(bool bGoHome);
	void UpdateMusicParameters();

	TArray<class FString> GetMusicParameters() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MusicManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MusicManager")
	}
	static class UMusicManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMusicManager>();
	}
};
DUMPER7_ASSERTS_UMusicManager;

// Class ReadyOrNot.MusicSequencerUnreal
// 0x0030 (0x02D0 - 0x02A0)
class AMusicSequencerUnreal final : public AMusicSequencerBase
{
public:
	uint8                                         Pad_2A0[0x20];                                     // 0x02A0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        AudioPlayer;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMusicState                                   CurrentState;                                      // 0x02C8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMusicState                                   NextState;                                         // 0x02C9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMusicState                                   NextScriptedState;                                 // 0x02CA(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CB[0x5];                                      // 0x02CB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAudioFinished();
	void OnAudioPlaybackPercent(const class USoundWave* PlayingSoundWave, const float PlaybackPercent);
	void PlayScriptedMusic(class USoundCue* Music, EMusicState NewScriptedState, bool bImmediately);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MusicSequencerUnreal")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MusicSequencerUnreal")
	}
	static class AMusicSequencerUnreal* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMusicSequencerUnreal>();
	}
};
DUMPER7_ASSERTS_AMusicSequencerUnreal;

// Class ReadyOrNot.NameTagCacheSubsystem
// 0x0010 (0x0040 - 0x0030)
class UNameTagCacheSubsystem final : public UGameInstanceSubsystem
{
public:
	TArray<struct FNameTagCacheElement>           Cache;                                             // 0x0030(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NameTagCacheSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NameTagCacheSubsystem")
	}
	static class UNameTagCacheSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNameTagCacheSubsystem>();
	}
};
DUMPER7_ASSERTS_UNameTagCacheSubsystem;

// Class ReadyOrNot.Taser
// 0x03A0 (0x1C50 - 0x18B0)
class ATaser : public ABaseMagazineWeapon
{
public:
	class UMaterialInstanceDynamic*               TaserLightDynamicMaterial;                         // 0x18B0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                             ProjectileHitResult;                               // 0x18B8(0x00E8)(Net, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                         CartridgesPerSlot;                                 // 0x19A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StartingCartridges;                                // 0x19A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SweepForReactionVolumeSize;                        // 0x19A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CartridgeWeight;                                   // 0x19AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFiredCartridge;                                   // 0x19B0(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDetachedProbes;                                   // 0x19B1(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19B2[0x2];                                     // 0x19B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlinkTime;                                         // 0x19B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBlinkState;                                       // 0x19B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19B9[0x3];                                     // 0x19B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxBatteryLevel;                                   // 0x19BC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinCableLength;                                    // 0x19C0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxCableLength;                                    // 0x19C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CableGainRate;                                     // 0x19C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ProbeMaxDistance;                                  // 0x19CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                             DetachSoundEffect;                                 // 0x19D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             DetachSoundEffectFMOD;                             // 0x19D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PingStunDuration;                                  // 0x19E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StunDurationRemaining;                             // 0x19E4(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStartedStun;                                      // 0x19E8(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19E9[0x7];                                     // 0x19E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             CrackleSoundEffectFMOD;                            // 0x19F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             TaserHitEffectFMOD;                                // 0x19F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABulletProjectile*                      LeftProjectile;                                    // 0x1A00(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABulletProjectile*                      RightProjectile;                                   // 0x1A08(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TaserFakeProjectileSpeed;                          // 0x1A10(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A14[0x4];                                     // 0x1A14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        TaserAttachPoint;                                  // 0x1A18(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        TaserFakeProjectilePoint;                          // 0x1A20(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A28[0x8];                                     // 0x1A28(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        TaserImpactParticle_Start;                         // 0x1A30(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               TaserImpactParticleComp_Start;                     // 0x1A38(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        TaserImpactParticle_Loop;                          // 0x1A40(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               TaserImpactParticleComp_LoopLeft;                  // 0x1A48(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               TaserImpactParticleComp_LoopRight;                 // 0x1A50(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A58[0xF0];                                    // 0x1A58(0x00F0)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   StunnedCharacter;                                  // 0x1B48(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DoorBlowOutForce;                                  // 0x1B50(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B54[0x4];                                     // 0x1B54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LeftCableAttachActor;                              // 0x1B58(0x0008)(Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 RightCableAttachActor;                             // 0x1B60(0x0008)(Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           TaserFireLoop1P;                                   // 0x1B68(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           TaserFireLoop3P;                                   // 0x1B70(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         TaserFireLoopCameraShake;                          // 0x1B78(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B80[0x8];                                     // 0x1B80(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCableComponent*                        TopCable;                                          // 0x1B88(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCableComponent*                        BottomCable;                                       // 0x1B90(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 LeftDoor;                                          // 0x1B98(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 RightDoor;                                         // 0x1BA0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioComponent*                    CrackleSoundGeneratorFMOD;                         // 0x1BA8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ULaserAttachment>           LaserAttachmentClass;                              // 0x1BB0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1BB8[0x98];                                    // 0x1BB8(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DetachProbes();
	void HandleMeleeDeffered(const struct FHitResult& Hit);
	void Multicast_DestroyProjectiles();
	void Multicast_HideCables();
	void Multicast_PlayDetachEffect();
	void Multicast_PlayFireEffects(bool bDryFire);
	void Multicast_PlayTaserHitEffect(const struct FHitResult& Hit);
	void Multicast_ResetCableAttachments();
	void Multicast_ResetDoors();
	void Multicast_StartCrackleSoundEffect();
	void Multicast_StopCrackleSoundEffect();
	void OnRep_ProjectileReplicated();
	void Server_DeliverStunToAttachedTarget();
	void Server_DetachProbes();
	void Server_SetHoldingTaser(bool bNewHold);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Taser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Taser")
	}
	static class ATaser* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATaser>();
	}
};
DUMPER7_ASSERTS_ATaser;

// Class ReadyOrNot.NameTag
// 0x0058 (0x0300 - 0x02A8)
class ANameTag final : public ACustomizationExtra
{
public:
	TSoftObjectPtr<class UFont>                   Font;                                              // 0x02A8(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FontFace;                                          // 0x02D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FontSize;                                          // 0x02D8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaterialIndex;                                     // 0x02DC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MaterialParameter;                                 // 0x02E0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   StaticMeshComponent;                               // 0x02E8(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*               MaterialInstance;                                  // 0x02F0(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextureRenderTarget2D*                 RenderTarget;                                      // 0x02F8(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NameTag")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NameTag")
	}
	static class ANameTag* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANameTag>();
	}
};
DUMPER7_ASSERTS_ANameTag;

// Class ReadyOrNot.NavSplinePathRenderingComponent
// 0x00B0 (0x0620 - 0x0570)
class UNavSplinePathRenderingComponent final : public UPrimitiveComponent
{
public:
	uint8                                         Pad_570[0xB0];                                     // 0x0570(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavSplinePathRenderingComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavSplinePathRenderingComponent")
	}
	static class UNavSplinePathRenderingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavSplinePathRenderingComponent>();
	}
};
DUMPER7_ASSERTS_UNavSplinePathRenderingComponent;

// Class ReadyOrNot.NeutralizeSuspectByTag
// 0x0018 (0x0338 - 0x0320)
class ANeutralizeSuspectByTag final : public AObjective
{
public:
	class ACyberneticCharacter*                   suspect;                                           // 0x0320(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   SuspectTag;                                        // 0x0328(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRequireArrest;                                    // 0x0330(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowIncapacitation;                              // 0x0331(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_332[0x6];                                      // 0x0332(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAISpawned();
	void OnSuspectKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NeutralizeSuspectByTag")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NeutralizeSuspectByTag")
	}
	static class ANeutralizeSuspectByTag* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANeutralizeSuspectByTag>();
	}
};
DUMPER7_ASSERTS_ANeutralizeSuspectByTag;

// Class ReadyOrNot.TutorialTextPrompt_Widget
// 0x0000 (0x02C8 - 0x02C8)
class UTutorialTextPrompt_Widget : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialTextPrompt_Widget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialTextPrompt_Widget")
	}
	static class UTutorialTextPrompt_Widget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialTextPrompt_Widget>();
	}
};
DUMPER7_ASSERTS_UTutorialTextPrompt_Widget;

// Class ReadyOrNot.NightvisionGoggles
// 0x0740 (0x22D0 - 0x1B90)
class ANightvisionGoggles : public AHeadwear
{
public:
	class UUserWidget*                            SpawnedWidget;                                     // 0x1B88(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             Green_LUT;                                         // 0x1B90(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             White_LUT;                                         // 0x1B98(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PostProcessingEffectName;                          // 0x1BA0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*           GlobalMaterialParameters;                          // 0x1BA8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NVGGlobalParameterName;                            // 0x1BB0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                NightVisionFirstPersonWidget;                      // 0x1BB8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FirstPersonCameraOffset;                           // 0x1BC0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENVGStyle                                     NvgStyle;                                          // 0x1BC4(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BC5[0xB];                                     // 0x1BC5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   NightVisionPostProcess;                            // 0x1BD0(0x06E0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bNVGOn;                                            // 0x22B0(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTogglingNVG;                                      // 0x22B1(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22B2[0x6];                                     // 0x22B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UDamageType>>        BlockDamageTypesWhileActive;                       // 0x22B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_22C8[0x8];                                     // 0x22C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DestroyNightvisionWidget();
	void OnNightvisionActivated();
	void OnNightvisionDeactivated();
	void Server_SetTogglingNVG(bool bNewTogglingNVG);
	void SpawnNightvisionWidget();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NightvisionGoggles")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NightvisionGoggles")
	}
	static class ANightvisionGoggles* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANightvisionGoggles>();
	}
};
DUMPER7_ASSERTS_ANightvisionGoggles;

// Class ReadyOrNot.ObituaryData
// 0x0060 (0x0090 - 0x0030)
class UObituaryData final : public UDataAsset
{
public:
	TMap<class FName, struct FObituaryForBone>    PointDeathMessages;                                // 0x0030(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<class FText>                           DefaultBulletDeathText;                            // 0x0080(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ObituaryData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ObituaryData")
	}
	static class UObituaryData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UObituaryData>();
	}
};
DUMPER7_ASSERTS_UObituaryData;

// Class ReadyOrNot.ObjectiveMarkerComponent
// 0x0180 (0x0870 - 0x06F0)
class UObjectiveMarkerComponent final : public UWidgetComponent
{
public:
	uint8                                         bEnabled : 1;                                      // 0x06E8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bStartHidden : 1;                                  // 0x06E8(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         BitPad_6E8_2 : 1;                                  // 0x06E8(0x0001)(Fixing Bit-Field Size Between Bits [ Dumper-7 ])
	uint8                                         bCustomLocation : 1;                               // 0x06E8(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bFadeOffscreen : 1;                                // 0x06E8(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDistanceScaleIcon : 1;                            // 0x06E8(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHideIconOffscreen : 1;                            // 0x06E8(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCompletelyFadeWhenOverlappingOtherWidgets : 1;    // 0x06E8(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCompletelyFadeWhenClose : 1;                      // 0x06E9(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_6EA[0x2];                                      // 0x06EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeAtDistance_Close;                              // 0x06EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bCompletelyFadeWhenFar : 1;                        // 0x06F0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_6F1[0x3];                                      // 0x06F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeAtDistance_Far;                                // 0x06F4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bHideDistanceInfo : 1;                             // 0x06F8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_6F9[0x3];                                      // 0x06F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HideDistanceInfoAtDistance;                        // 0x06FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bHideDirectionalArrow : 1;                         // 0x0700(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDisplayMarkerText : 1;                            // 0x0700(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_701[0x7];                                      // 0x0701(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   MarkerText;                                        // 0x0708(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class UObjectiveMarkerWidget>     MarkerWidgetClass;                                 // 0x0720(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_728[0x8];                                      // 0x0728(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            IconBrush;                                         // 0x0730(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FLinearColor                           IconColorAndOpacity;                               // 0x0800(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              IconSize;                                          // 0x0810(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bDebug : 1;                                        // 0x0820(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_821[0x7];                                      // 0x0821(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObjectiveMarkerWidget*                 ObjectiveMarkerWidget_Offscreen;                   // 0x0828(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObjectiveMarkerWidget*                 ObjectiveMarkerWidget_Onscreen;                    // 0x0830(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsOffscreen;                                      // 0x0838(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bRequestingFadeOut;                                // 0x0839(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_83A[0x36];                                     // 0x083A(0x0036)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisableObjectiveMarker();
	void EnableObjectiveMarker();
	void HideIcon();
	void HideMarkerText();
	void HideObjectiveMarker(bool bFadeOut);
	void SetIconBrush(const struct FSlateBrush& NewIconBrush);
	void SetIconColor(const struct FLinearColor& InIconColorAndOpacity);
	void SetIconSize(const struct FVector2D& NewIconSize);
	void SetMarkerText(const class FText& NewMarkerText);
	void SetMarkerTextColor(const struct FLinearColor& InIconColorAndOpacity);
	void SetMarkerTextFontSize(int32 NewFontSize);
	void SetNewFadeDistance(float NewDistance);
	void ShowIcon();
	void ShowMarkerText();
	void ShowObjectiveMarker();
	void ToggleObjectiveMarkerVisibility();

	bool CanShowObjectiveMarker() const;
	bool IsObjectiveMarkerOffscreen() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ObjectiveMarkerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ObjectiveMarkerComponent")
	}
	static class UObjectiveMarkerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UObjectiveMarkerComponent>();
	}
};
DUMPER7_ASSERTS_UObjectiveMarkerComponent;

// Class ReadyOrNot.ObjectiveMarkerWidget
// 0x0060 (0x0350 - 0x02F0)
class UObjectiveMarkerWidget : public UBaseWidget
{
public:
	class UObjectiveMarkerComponent*              ParentComponent;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                           RootCanvasPanel;                                   // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                               Icon_SizeBox;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Icon_Image;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 DirectionalArrow_Image;                            // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             DistanceInMeters_Text;                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             MarkerName_Text;                                   // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                Location;                                          // 0x0328(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DistanceToLocalPlayer;                             // 0x0340(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DirectionAngle;                                    // 0x0344(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bHideDistance : 1;                                 // 0x0348(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideAll();
	void HideIcon();
	void HideMarkerText();
	void OnMarkerVisibilityDisabled();
	void OnMarkerVisibilityEnabled();
	void SetDirectionAngle(float Angle);
	void SetIconColorAndOpacity(const struct FLinearColor& InColor);
	void SetIconImage(const struct FSlateBrush& InBrush);
	void SetIconSize(const struct FVector2D& NewIconSize);
	void SetMarkerNameText(const class FText& NewMarkerNameText);
	void SetMarkerNameTextColorAndOpacity(const struct FLinearColor& InColor);
	void SetMarkerNameTextFontSize(int32 NewFontSize);
	void SetTargetLocation(const struct FVector& NewLocation);
	void ShowAll();
	void ShowIcon();
	void ShowMarkerText();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ObjectiveMarkerWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ObjectiveMarkerWidget")
	}
	static class UObjectiveMarkerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UObjectiveMarkerWidget>();
	}
};
DUMPER7_ASSERTS_UObjectiveMarkerWidget;

// Class ReadyOrNot.OcclusionTestActor
// 0x0048 (0x02E0 - 0x0298)
class AOcclusionTestActor final : public AActor
{
public:
	float                                         OcclusionMultiplier;                               // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FullOcclusionDepth;                                // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TickInterval;                                      // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          GunshotOrFootstep;                                 // 0x02A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             GunshotSound;                                      // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsOutside;                                        // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             FootstepSound;                                     // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             FoleySound;                                        // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHeavyArmor;                                       // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCrouching;                                      // 0x02C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CA[0x6];                                      // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioPropagationComponent*         FMODAudioPropagationComp;                          // 0x02D0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODAudioComponent*                    AudioComponent;                                    // 0x02D8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("OcclusionTestActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"OcclusionTestActor")
	}
	static class AOcclusionTestActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AOcclusionTestActor>();
	}
};
DUMPER7_ASSERTS_AOcclusionTestActor;

// Class ReadyOrNot.OptionsButtonWithStatus
// 0x0010 (0x0300 - 0x02F0)
class UOptionsButtonWithStatus : public UCommonUserWidget
{
public:
	class UUserWidget*                            Button;                                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URichTextBlock*                         StatusText;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SetCheckedState(bool bChecked);
	void SetWidgetStatus(const class FText& NewStatus);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("OptionsButtonWithStatus")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"OptionsButtonWithStatus")
	}
	static class UOptionsButtonWithStatus* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOptionsButtonWithStatus>();
	}
};
DUMPER7_ASSERTS_UOptionsButtonWithStatus;

// Class ReadyOrNot.OptionsGameplay
// 0x0030 (0x0448 - 0x0418)
class UOptionsGameplay : public UCommonActivatableWidget
{
public:
	class UOptionsButtonWithStatus*               LinkAccountButton;                                 // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOptionsButtonWithStatus*               CrossplayButton;                                   // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOptionsButtonWithStatus*               AllowModdedPlayerButton;                           // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOptionsButtonWithStatus*               JoinModdedServersButton;                           // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_438[0x10];                                     // 0x0438(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UpdateEOSButtons(float DeltaTime, const class FText& WaitingForNetwork, const class FText& NetworkErrorText, const class FText& GoToMainMenuText, const class FText& AccountLinkedToText, const class FText& CrossplayRequireEOSText, const class FText& EnableSystemSettingCrossplayXSX, const class FText& EnabledText, const class FText& DisabledText);
	void UpdateModdedButtons(float DeltaTime, const class FText& GoToMainMenuText);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("OptionsGameplay")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"OptionsGameplay")
	}
	static class UOptionsGameplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOptionsGameplay>();
	}
};
DUMPER7_ASSERTS_UOptionsGameplay;

// Class ReadyOrNot.OutOfBoundsVolume
// 0x0008 (0x02A0 - 0x0298)
class AOutOfBoundsVolume final : public AActor
{
public:
	class UBoxComponent*                          Bounds;                                            // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("OutOfBoundsVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"OutOfBoundsVolume")
	}
	static class AOutOfBoundsVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AOutOfBoundsVolume>();
	}
};
DUMPER7_ASSERTS_AOutOfBoundsVolume;

// Class ReadyOrNot.Overview_V2
// 0x0018 (0x0430 - 0x0418)
class UOverview_V2 : public UCommonActivatableWidget
{
public:
	class FString                                 ActiveLoadoutName;                                 // 0x0418(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       SwitchCharacter;                                   // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SavePresets(const struct FSavedLoadout& Loadout, bool isNPC);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Overview_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Overview_V2")
	}
	static class UOverview_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOverview_V2>();
	}
};
DUMPER7_ASSERTS_UOverview_V2;

// Class ReadyOrNot.PairedInteractionDriver
// 0x0188 (0x0420 - 0x0298)
class APairedInteractionDriver final : public AInfo
{
public:
	class UInteractionsData*                      InteractionData;                                   // 0x0298(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 Driver;                                            // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 Slave;                                             // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABaseItem*                              OptionalItem;                                      // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B8[0x100];                                    // 0x02B8(0x0100)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              Event_OnPairedInteractionStarted;                  // 0x03B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* InActor)> Event_OnDriverInteractionFinished;         // 0x03C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* InActor)> Event_OnSlaveInteractionFinished;          // 0x03D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* InDriver, class AActor* InSlave)> Event_OnPairedInteractionFinished; // 0x03E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F8[0x28];                                     // 0x03F8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDriverInteractionFinished();
	void OnEquippedItemHolstered(class ABaseItem* Item);
	void OnInteractionFinished();
	void OnSlaveInteractionFinished();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PairedInteractionDriver")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PairedInteractionDriver")
	}
	static class APairedInteractionDriver* GetDefaultObj()
	{
		return GetDefaultObjImpl<APairedInteractionDriver>();
	}
};
DUMPER7_ASSERTS_APairedInteractionDriver;

// Class ReadyOrNot.PauseMenu_Wrapper
// 0x0020 (0x0310 - 0x02F0)
class UPauseMenu_Wrapper : public UCommonUserWidget
{
public:
	class UCommonActivatableWidgetStack*          WidgetStack;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonActivatableWidget*               PauseMenu;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnPauseMenuClosed;                                 // 0x0300(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void ClosePauseMenu();
	void OnOwnerKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void OpenPauseMenu();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PauseMenu_Wrapper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PauseMenu_Wrapper")
	}
	static class UPauseMenu_Wrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPauseMenu_Wrapper>();
	}
};
DUMPER7_ASSERTS_UPauseMenu_Wrapper;

// Class ReadyOrNot.PenetrationData
// 0x04C8 (0x04F8 - 0x0030)
class UPenetrationData final : public UDataAsset
{
public:
	struct FMaterialPenetration                   DefaultPenetrationData;                            // 0x0030(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Aluminium;                                     // 0x0048(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Asphalt;                                       // 0x0060(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Brick;                                         // 0x0078(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_CarbonFibre;                                   // 0x0090(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Cardboard;                                     // 0x00A8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Ceramic;                                       // 0x00C0(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_ConcreteSoft;                                  // 0x00D8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_ConcreteStrong;                                // 0x00F0(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Dirt;                                          // 0x0108(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Drywall;                                       // 0x0120(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Electrical;                                    // 0x0138(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_EnergyShield;                                  // 0x0150(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Fabric_Carpet;                                 // 0x0168(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Fabric_Stuffing;                               // 0x0180(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Fabric_Thin;                                   // 0x0198(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Flesh;                                         // 0x01B0(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Galvanized;                                    // 0x01C8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Glass_Plate;                                   // 0x01E0(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Glass_Windshield;                              // 0x01F8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Grass;                                         // 0x0210(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Gravel;                                        // 0x0228(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Ice;                                           // 0x0240(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Lava;                                          // 0x0258(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Lead;                                          // 0x0270(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Leaves;                                        // 0x0288(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Limestone;                                     // 0x02A0(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Mahogany;                                      // 0x02B8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Marble_Coated;                                 // 0x02D0(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Marble_Thick;                                  // 0x02E8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Mud;                                           // 0x0300(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Oil;                                           // 0x0318(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Paper;                                         // 0x0330(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Pine;                                          // 0x0348(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Plaster;                                       // 0x0360(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Plastic;                                       // 0x0378(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Plywood;                                       // 0x0390(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Polystyrene;                                   // 0x03A8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Powder;                                        // 0x03C0(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Rock;                                          // 0x03D8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Rubber;                                        // 0x03F0(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Sand;                                          // 0x0408(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Snow;                                          // 0x0420(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Soil;                                          // 0x0438(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Steel;                                         // 0x0450(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Tin;                                           // 0x0468(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Treewood;                                      // 0x0480(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Wallpaper;                                     // 0x0498(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Water;                                         // 0x04B0(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Vehicle;                                       // 0x04C8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMaterialPenetration                   RON_Bulletproof_Glass;                             // 0x04E0(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)

public:
	struct FMaterialPenetration GetPenetrationData(EPhysicalSurface Surface);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PenetrationData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PenetrationData")
	}
	static class UPenetrationData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPenetrationData>();
	}
};
DUMPER7_ASSERTS_UPenetrationData;

// Class ReadyOrNot.PepperballGun
// 0x0030 (0x18E0 - 0x18B0)
class APepperballGun : public ABaseMagazineWeapon
{
public:
	class UParticleSystemComponent*               ShootTrailComponent;                               // 0x18B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        ParticleShootTrail;                                // 0x18B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HeadshotsUntilAbuse;                               // 0x18C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentHeadshotCounter;                            // 0x18C4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StunShotsUntilAbuse;                               // 0x18C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentStunShotCounter;                            // 0x18CC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxBallsInHopper;                                  // 0x18D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BallsInHopper;                                     // 0x18D4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18D8[0x8];                                     // 0x18D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void IncrementHeadshotCounter(class ACyberneticCharacter* HeadshottedPerson);
	void IncrementStunShotCounter(class ACyberneticCharacter* StunnedPerson);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PepperballGun")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PepperballGun")
	}
	static class APepperballGun* GetDefaultObj()
	{
		return GetDefaultObjImpl<APepperballGun>();
	}
};
DUMPER7_ASSERTS_APepperballGun;

// Class ReadyOrNot.PepperGasCloud
// 0x0020 (0x02B8 - 0x0298)
class APepperGasCloud : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               GasParticleSystem;                                 // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GasRadius;                                         // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Lifetime;                                          // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxGasPoints;                                      // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PepperGasCloud")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PepperGasCloud")
	}
	static class APepperGasCloud* GetDefaultObj()
	{
		return GetDefaultObjImpl<APepperGasCloud>();
	}
};
DUMPER7_ASSERTS_APepperGasCloud;

// Class ReadyOrNot.TugOfWarZone
// 0x0048 (0x02E0 - 0x0298)
class ATugOfWarZone final : public AActor
{
public:
	bool                                          bZoneDisabled;                                     // 0x0298(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATugOfWarMover*                         Mover;                                             // 0x02A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                          Bounds;                                            // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B0[0x30];                                     // 0x02B0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnInfluencerArrested(class APlayerCharacter* ArrestedCharacter, class APlayerCharacter* InstigatorCharacter);
	void OnInfluencerKilled(class AActor* Causer, class ACharacter* InstigatorCharacter, class ACharacter* KilledCharacter, const struct FDamageEvent& DamageEvent, class APlayerState* LastPlayerState);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TugOfWarZone")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TugOfWarZone")
	}
	static class ATugOfWarZone* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATugOfWarZone>();
	}
};
DUMPER7_ASSERTS_ATugOfWarZone;

// Class ReadyOrNot.PepperProjectile
// 0x0008 (0x0438 - 0x0430)
class APepperProjectile final : public ABulletProjectile
{
public:
	class UParticleSystem*                        GasEffect;                                         // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PepperProjectile")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PepperProjectile")
	}
	static class APepperProjectile* GetDefaultObj()
	{
		return GetDefaultObjImpl<APepperProjectile>();
	}
};
DUMPER7_ASSERTS_APepperProjectile;

// Class ReadyOrNot.PepperSprayDamageType
// 0x0000 (0x07B0 - 0x07B0)
class UPepperSprayDamageType : public UStunDamage
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PepperSprayDamageType")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PepperSprayDamageType")
	}
	static class UPepperSprayDamageType* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPepperSprayDamageType>();
	}
};
DUMPER7_ASSERTS_UPepperSprayDamageType;

// Class ReadyOrNot.PersonalizationWidget
// 0x0008 (0x02D0 - 0x02C8)
class UPersonalizationWidget final : public UUserWidget
{
public:
	class ACharacterCustomizationPortal*          SpawnedFromPortal;                                 // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PersonalizationWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PersonalizationWidget")
	}
	static class UPersonalizationWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPersonalizationWidget>();
	}
};
DUMPER7_ASSERTS_UPersonalizationWidget;

// Class ReadyOrNot.PickUpCharacterActivity
// 0x0020 (0x0210 - 0x01F0)
class UPickUpCharacterActivity final : public UBaseActivity
{
public:
	class AReadyOrNotCharacter*                   PickUpCharacter;                                   // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F8[0x18];                                     // 0x01F8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnterCompleteStage();
	void EnterMoveToStage();
	void EnterPickUpStage();
	void EnterPlaceDownStage();
	void EnterTransitStage();
	void TickPickUpStage(float DeltaTime, float Uptime);

	bool CanPickUpNow() const;
	bool CanPlaceDownNow() const;
	bool CanTransitNow() const;
	bool IsPlaceDownComplete() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PickUpCharacterActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PickUpCharacterActivity")
	}
	static class UPickUpCharacterActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPickUpCharacterActivity>();
	}
};
DUMPER7_ASSERTS_UPickUpCharacterActivity;

// Class ReadyOrNot.PickupItemActivity
// 0x0020 (0x0210 - 0x01F0)
class UPickupItemActivity final : public UBaseActivity
{
public:
	float                                         SearchRadius;                                      // 0x01F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemCacheActor*                        ItemCacheActor;                                    // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_200[0x8];                                      // 0x0200(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              PickupItem;                                        // 0x0208(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnPickupItemComplete();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PickupItemActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PickupItemActivity")
	}
	static class UPickupItemActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPickupItemActivity>();
	}
};
DUMPER7_ASSERTS_UPickupItemActivity;

// Class ReadyOrNot.PickupMagazineActor
// 0x0028 (0x0328 - 0x0300)
class APickupMagazineActor final : public APickupActor
{
public:
	class FName                                   MagazineLabel;                                     // 0x0300(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinimumHitThreshold;                               // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             DroppedMagazineHitEvent;                           // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMagazine                              MagazineData;                                      // 0x0318(0x0004)(Net, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseMagazineWeapon*                    CameFromWeapon;                                    // 0x0320(0x0008)(Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class ABaseMagazineWeapon* GetValidWeaponForPickerUpper(class APlayerCharacter* PlayerCharacter);
	void Multicast_SetWeapon(class ABaseMagazineWeapon* Weapon);
	void OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void Server_Pickup(class AActor* InPickupInstigator);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PickupMagazineActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PickupMagazineActor")
	}
	static class APickupMagazineActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<APickupMagazineActor>();
	}
};
DUMPER7_ASSERTS_APickupMagazineActor;

// Class ReadyOrNot.PickupWeaponActor
// 0x0030 (0x0330 - 0x0300)
class APickupWeaponActor final : public APickupActor
{
public:
	TSubclassOf<class ABaseWeapon>                Weapon;                                            // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bKillOnPickup;                                     // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSecondaryWeapon;                                  // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bModifyLoadout;                                    // 0x030A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30B[0x5];                                      // 0x030B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UWeaponAttachment>          ScopeAttachment;                                   // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponAttachment>          MuzzleAttachment;                                  // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponAttachment>          UnderbarrelAttachment;                             // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponAttachment>          OverbarrelAttachment;                              // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PickupWeaponActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PickupWeaponActor")
	}
	static class APickupWeaponActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<APickupWeaponActor>();
	}
};
DUMPER7_ASSERTS_APickupWeaponActor;

// Class ReadyOrNot.PingInterface
// 0x0000 (0x0000 - 0x0000)
class IPingInterface final
{
public:
	bool CanPing();
	float GetPingDuration();
	struct FSlateBrush GetPingIcon();
	struct FVector GetPingLocation();
	class FText GetPingText();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PingInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PingInterface")
	}
	static class IPingInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IPingInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IPingInterface;

// Class ReadyOrNot.PlacedC2Explosive
// 0x01D8 (0x0470 - 0x0298)
class APlacedC2Explosive : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               ExplosionComp;                                     // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioComponent*                    AudioComponent;                                    // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                 C2InteractableComponent;                           // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAIPerceptionStimuliSourceComponent*    PerceptionStimuliComp;                             // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ARadialForceActor*                      RadialForce;                                       // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AC2Explosive*                           ConnectedC2Explosive;                              // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                            PlacedByController;                                // 0x02D8(0x0008)(Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ABaseItem>                  ItemInventoryClass;                                // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageToInflict;                                   // 0x02E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDamageToInflict;                                // 0x02EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageType>                DamageType;                                        // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageInnerRadius;                                 // 0x02F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageOuterRadius;                                 // 0x02FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExplosionPostKillTime;                             // 0x0300(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDetonated;                                        // 0x0304(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DoorIntegrityDamage;                               // 0x0308(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetItem;                                        // 0x0310(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             FMODC2ExplosionAudio;                              // 0x0318(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                             PlacementHit;                                      // 0x0320(0x00E8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bUseScreenShake;                                   // 0x0408(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ULegacyCameraShake>         ExplosionScreenShake;                              // 0x0410(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraShakeBase*                       ExplosionScreenShakeInst;                          // 0x0418(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraShakeRadius;                                 // 0x0420(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStunDamage>                StunDamageType;                                    // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRemovedViaMultitool;                              // 0x0430(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_431[0xF];                                      // 0x0431(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsBeingRemoved;                                   // 0x0440(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   IsBeingRemovedBy;                                  // 0x0448(0x0008)(Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         C2OcclusionMultiplier;                             // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         C2FullOcclusionDepth;                              // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                   ForceFeedbackEffect;                               // 0x0458(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackAttenuation*              ForceFeedbackAttenuation;                          // 0x0460(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_468[0x8];                                      // 0x0468(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class USkeletalMeshComponent* GetMeshComp();
	void Multicast_OnC2Detonated();
	void PostExplosionKill();
	void RemoveFromTarget();
	void Server_DetonateC2();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlacedC2Explosive")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlacedC2Explosive")
	}
	static class APlacedC2Explosive* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlacedC2Explosive>();
	}
};
DUMPER7_ASSERTS_APlacedC2Explosive;

// Class ReadyOrNot.PlacedZipcuffs
// 0x0008 (0x02A0 - 0x0298)
class APlacedZipcuffs : public AActor
{
public:
	class USkeletalMeshComponent*                 ZipcuffMesh;                                       // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlacedZipcuffs")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlacedZipcuffs")
	}
	static class APlacedZipcuffs* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlacedZipcuffs>();
	}
};
DUMPER7_ASSERTS_APlacedZipcuffs;

// Class ReadyOrNot.PlanningMapWidget
// 0x0018 (0x02E0 - 0x02C8)
class UPlanningMapWidget final : public UUserWidget
{
public:
	bool                                          bDrawable;                                         // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFloorMapPointData>             DrawPointData;                                     // 0x02D0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	void AddPointData(const struct FVector2D& PointData, int32 FloorNum, EFreeDrawColor Color, bool bNewPoint, float Thickness);
	void ClearPointData(bool bClearAll, int32 FloorNum, bool bClearAllFloors);
	class UWorld* GetWorldContext();
	void OnForceMapRefresh();
	void OnPersonnelAdded(int32 PersonnelNum, int32 PersonnelZone);
	void OnPersonnelRemoved(int32 PersonnelNum);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlanningMapWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlanningMapWidget")
	}
	static class UPlanningMapWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlanningMapWidget>();
	}
};
DUMPER7_ASSERTS_UPlanningMapWidget;

// Class ReadyOrNot.PlayableCharacterData
// 0x0100 (0x0130 - 0x0030)
class UPlayableCharacterData final : public UDataAsset
{
public:
	class FText                                   CharacterNameUI;                                   // 0x0030(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   CharacterName;                                     // 0x0048(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   CharacterRole;                                     // 0x0060(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   CharacterBio;                                      // 0x0078(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   CharacterRealName;                                 // 0x0090(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   CharacterYearsOfService;                           // 0x00A8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   CharacterDateOfBirth;                              // 0x00C0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                   HandleName;                                        // 0x00D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>           FaceMesh;                                          // 0x00E0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPoseAsset>              FaceROM;                                           // 0x0108(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayableCharacterData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayableCharacterData")
	}
	static class UPlayableCharacterData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayableCharacterData>();
	}
};
DUMPER7_ASSERTS_UPlayableCharacterData;

// Class ReadyOrNot.PlayDeadActivity
// 0x0020 (0x0210 - 0x01F0)
class UPlayDeadActivity final : public UBaseActivity
{
public:
	uint8                                         Pad_1F0[0x20];                                     // 0x01F0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDamaged(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
	void OnHeardYell(class AReadyOrNotCharacter* Shouter, bool bLOS);
	void OnStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayDeadActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayDeadActivity")
	}
	static class UPlayDeadActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayDeadActivity>();
	}
};
DUMPER7_ASSERTS_UPlayDeadActivity;

// Class ReadyOrNot.PlayDeadSpot
// 0x0000 (0x0298 - 0x0298)
class APlayDeadSpot final : public AActor
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayDeadSpot")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayDeadSpot")
	}
	static class APlayDeadSpot* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayDeadSpot>();
	}
};
DUMPER7_ASSERTS_APlayDeadSpot;

// Class ReadyOrNot.PlayerEffect_ModifyRecoil
// 0x00B0 (0x0110 - 0x0060)
class UPlayerEffect_ModifyRecoil : public UBasePlayerEffect
{
public:
	ERecoilModifierOption                         ModificationOption;                                // 0x0060(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EItemClass>                            WeaponFilter;                                      // 0x0068(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                         RecoilFireStrength;                                // 0x0078(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RecoilFireStrengthFirst;                           // 0x007C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RecoilDampStrength;                                // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RecoilAngleStrength;                               // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RecoilRandomness;                                  // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RecoilFireADSModifier;                             // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RecoilBuildupADSModifier;                          // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RecoilAngleADSModifier;                            // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RecoilBuildupDampStrength;                         // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bApplySpecific : 1;                                // 0x009C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSpecificWeaponRecoilMod>       SpecificWeaponRecoilMods;                          // 0x00A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<class ABaseMagazineWeapon*, struct FSpecificWeaponRecoilMod> OriginalRecoilValues;          // 0x00B0(0x0050)(NativeAccessSpecifierPrivate)
	TArray<class ABaseMagazineWeapon*>            AffectedWeapons;                                   // 0x0100(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerEffect_ModifyRecoil")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerEffect_ModifyRecoil")
	}
	static class UPlayerEffect_ModifyRecoil* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerEffect_ModifyRecoil>();
	}
};
DUMPER7_ASSERTS_UPlayerEffect_ModifyRecoil;

// Class ReadyOrNot.PlayerHealthStatusWidget
// 0x0020 (0x02E8 - 0x02C8)
class UPlayerHealthStatusWidget final : public UUserWidget
{
public:
	class UHealthStatusWidget*                    Health;                                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHealthStatusWidget*                    Armor;                                             // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHealthStatusWidget*                    Helmet;                                            // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerHealthStatusWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerHealthStatusWidget")
	}
	static class UPlayerHealthStatusWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerHealthStatusWidget>();
	}
};
DUMPER7_ASSERTS_UPlayerHealthStatusWidget;

// Class ReadyOrNot.TeamProgressScoreWidget
// 0x0028 (0x0318 - 0x02F0)
class UTeamProgressScoreWidget final : public UBaseWidget
{
public:
	ETeamType                                     Team;                                              // 0x02F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgressBar*                           ProgressBar_LeftAligned;                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             Score_Text_LeftAligned;                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                           ProgressBar_RightAligned;                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             Score_Text_RightAligned;                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TeamProgressScoreWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TeamProgressScoreWidget")
	}
	static class UTeamProgressScoreWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTeamProgressScoreWidget>();
	}
};
DUMPER7_ASSERTS_UTeamProgressScoreWidget;

// Class ReadyOrNot.PlayerPaperdollWidget
// 0x0150 (0x0418 - 0x02C8)
class UPlayerPaperdollWidget : public UUserWidget
{
public:
	class UWidgetSwitcher*                        StanceSwitcher;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        Stand_CarrySwitcher;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        Crouch_CarrySwitcher;                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               Stand_Overlay;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               Crouch_Overlay;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               StandCarry_Overlay;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               StandNoCarry_Overlay;                              // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               CrouchCarry_Overlay;                               // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               CrouchNoCarry_Overlay;                             // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Outline_Image;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Head_Image;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Body_Image;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 RightArm_Image;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 LeftArm_Image;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 RightLeg_Image;                                    // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 LeftLeg_Image;                                     // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Headwear_Image;                                    // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 BodyArmor_Image;                                   // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Carry_Outline_Image;                               // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Carry_Head_Image;                                  // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Carry_Body_Image;                                  // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Carry_RightArm_Image;                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Carry_LeftArm_Image;                               // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Carry_BodyArmor_Image;                             // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Outline_Crouch_Image;                              // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Head_Crouch_Image;                                 // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Body_Crouch_Image;                                 // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 RightArm_Crouch_Image;                             // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 LeftArm_Crouch_Image;                              // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 RightLeg_Crouch_Image;                             // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 LeftLeg_Crouch_Image;                              // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Headwear_Crouch_Image;                             // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 BodyArmor_Crouch_Image;                            // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Carry_Outline_Crouch_Image;                        // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Carry_Head_Crouch_Image;                           // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Carry_Body_Crouch_Image;                           // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Carry_RightArm_Crouch_Image;                       // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Carry_LeftArm_Crouch_Image;                        // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Carry_RightLeg_Crouch_Image;                       // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Carry_LeftLeg_Crouch_Image;                        // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Carry_BodyArmor_Crouch_Image;                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_410[0x8];                                      // 0x0410(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPlayerReady(class APlayerCharacter* Player);
	void UpdateHealth(class ABaseItem* Item);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerPaperdollWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerPaperdollWidget")
	}
	static class UPlayerPaperdollWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerPaperdollWidget>();
	}
};
DUMPER7_ASSERTS_UPlayerPaperdollWidget;

// Class ReadyOrNot.AsyncTaskDownloadImageTex2D
// 0x0010 (0x0040 - 0x0030)
class UAsyncTaskDownloadImageTex2D final : public UBlueprintAsyncActionBase
{
public:
	TMulticastInlineDelegate<void(const class FString& InUrl, class UTexture2D* Texture)> OnComplete; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UAsyncTaskDownloadImageTex2D* DownloadImage(const class FString& URL);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AsyncTaskDownloadImageTex2D")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AsyncTaskDownloadImageTex2D")
	}
	static class UAsyncTaskDownloadImageTex2D* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAsyncTaskDownloadImageTex2D>();
	}
};
DUMPER7_ASSERTS_UAsyncTaskDownloadImageTex2D;

// Class ReadyOrNot.PlayerPostProcessing
// 0x0830 (0x11D0 - 0x09A0)
class UPlayerPostProcessing final : public UPostProcessComponent
{
public:
	TArray<class UPostProcessEffectData*>         DebugPPEffects;                                    // 0x09A0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>       DebugPPEffects_MIDs;                               // 0x09B0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_9C0[0x38];                                     // 0x09C0(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPostProcessEffect>             PostProcessEffects;                                // 0x09F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_A08[0x28];                                     // 0x0A08(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             DevPostProcessMaterials;                           // 0x0A30(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FNVGPostProcessSettings                NVG_Settings;                                      // 0x0A40(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_A98[0x6E8];                                    // 0x0A98(0x06E8)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       OwningCharacter;                                   // 0x1180(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 RecentDamageCauser;                                // 0x1188(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1190[0x40];                                    // 0x1190(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FadeToGrey();
	bool FulfillsAllRequirements(const TArray<TSubclassOf<class UPostProcessRequirement>>& InRequirementClasses, class AActor* InDamageCauser, bool bForceFulfillment);
	int32 GetPostProcessFromFloatParam(const struct FPostProcessEffect& InPostProcessEffect, const class FName& InParameterName, int32 Instance);
	int32 InitializePostProcessFloatParam(const struct FPostProcessEffect& InPostProcessEffect, const class FName& InParameterName, float Value, int32 Instance, int32 CurveKey);
	void OnBulletImpact(float DirectionForward, float DirectionRight);
	void OnDamageTaken(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
	void OnDamageTakenDetails(bool bWasHeadshot, float DamageTaken, float HealthRemaining, bool bBlockedByArmour, bool bBlockedByHelmet);
	void OnFire();
	void OnItemEquipped(class ABaseItem* Item);
	void OnItemHolstered(class ABaseItem* Item);
	void OnPlayerKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void OnPlayerPepperSprayed(class AActor* DamageCauser);
	void OnPlayerStunned(class AReadyOrNotCharacter* Character, float Duration, EStunType StunType, class AActor* DamageCauser);
	void OnSupression(float Strength);
	void PlayPostProcessEffect_Name(class FName EffectName, class AActor* DamageCauser);
	void ProcessPostProcessEffect(struct FPostProcessEffect* InPostProcessEffect, float DeltaTime);
	void ResetInjuryRadialBlur(float DeltaTime);
	void StartBleedingEffect();
	void StartDeathEffect(class AActor* DamageCauser);
	void StartFlashbangEffect(class AActor* DamageCauser);
	void StartGasEffect(class AActor* DamageCauser);
	void StartHealingEffect();
	void StartHeartbeatEffect();
	void StartInjuryEffects(class AActor* DamageCauser);
	void StartPeppersprayEffect(class AActor* DamageCauser);
	void StartPostProcessEffect(struct FPostProcessEffect* InPostProcessEffect, class AActor* DamageCauser);
	void StartPostProcessEffect_FromDataAsset(class UPostProcessEffectData* InPostProcessEffectData, class AActor* DamageCauser);
	void StartPostProcessEffect_Specific(struct FPostProcessEffectPlayer* InPostProcessSetting, class AActor* DamageCauser);
	void StartStingerEffect(class AActor* DamageCauser);
	void StartSuppressionEffects(class AActor* DamageCauser);
	void StartTaserEffect(class AActor* DamageCauser);
	void StopBleedingEffect();
	void StopDeathEffect();
	void StopFlashbangEffect();
	void StopGasEffect();
	void StopHealingEffect();
	void StopHeartbeatEffect();
	void StopInjuryEffects();
	void StopPeppersprayEffect();
	void StopPostProcessEffect(struct FPostProcessEffect* InPostProcessEffect);
	void StopPostProcessEffect_FromDataAsset(class UPostProcessEffectData* InPostProcessEffectData);
	void StopPostProcessEffect_Name(class FName EffectName);
	void StopStingerEffect();
	void StopSuppressionEffects();
	void StopTaserEffect();
	void UpdateWeaponHighlightVisibility();

	bool IsPostProcessEffectPlaying(class UPostProcessEffectData* InPostProcessEffectData) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerPostProcessing")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerPostProcessing")
	}
	static class UPlayerPostProcessing* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerPostProcessing>();
	}
};
DUMPER7_ASSERTS_UPlayerPostProcessing;

// Class ReadyOrNot.PlayerReferendum
// 0x0008 (0x0328 - 0x0320)
class APlayerReferendum final : public AReferendum
{
public:
	class AReadyOrNotPlayerState*                 TargetPlayerState;                                 // 0x0320(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerReferendum")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerReferendum")
	}
	static class APlayerReferendum* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerReferendum>();
	}
};
DUMPER7_ASSERTS_APlayerReferendum;

// Class ReadyOrNot.TabletMapElementWidget
// 0x0010 (0x02D8 - 0x02C8)
class UTabletMapElementWidget : public UUserWidget
{
public:
	class APlayerState*                           DrawingPlayerState;                                // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D0[0x8];                                      // 0x02D0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 GetPlayerPlanningNumber();
	bool HasDrawPermission();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TabletMapElementWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TabletMapElementWidget")
	}
	static class UTabletMapElementWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTabletMapElementWidget>();
	}
};
DUMPER7_ASSERTS_UTabletMapElementWidget;

// Class ReadyOrNot.PlayerSpeedIndicator_V2
// 0x0078 (0x0368 - 0x02F0)
class UPlayerSpeedIndicator_V2 final : public UBaseWidget
{
public:
	class USizeBox*                               Twenty_Box;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Twenty_Image;                                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                               Fourty_Box;                                        // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Fourty_Image;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                               Sixty_Box;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Sixty_Image;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                               Eighty_Box;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Eighty_Image;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                               OneHundred_Box;                                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 OneHundred_Image;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             SpeedPercentage_Text;                              // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BaselineOpacity;                                   // 0x0350(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FadeSpeed;                                         // 0x0354(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LastSetRunSpeedPercent;                            // 0x0358(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinRunSpeedPercent;                                // 0x035C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxRunSpeedPercent;                                // 0x0360(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NormalizedRunSpeedPercent;                         // 0x0364(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerSpeedIndicator_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerSpeedIndicator_V2")
	}
	static class UPlayerSpeedIndicator_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerSpeedIndicator_V2>();
	}
};
DUMPER7_ASSERTS_UPlayerSpeedIndicator_V2;

// Class ReadyOrNot.VOIPTalkerEntryWidget
// 0x0070 (0x0338 - 0x02C8)
class UVOIPTalkerEntryWidget : public UUserWidget
{
public:
	class AReadyOrNotPlayerState*                 PlayerState;                                       // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ETeamType, struct FSlateColor>           VoiceTypeColorMap;                                 // 0x02D0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                             PlayerName;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             PlayerChannel;                                     // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 VoiceImage;                                        // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	struct FSlateColor GetVoiceTypeColor() const;
	class FText GetVoiceTypeText() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VOIPTalkerEntryWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VOIPTalkerEntryWidget")
	}
	static class UVOIPTalkerEntryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVOIPTalkerEntryWidget>();
	}
};
DUMPER7_ASSERTS_UVOIPTalkerEntryWidget;

// Class ReadyOrNot.PlayerStart_VIP_Spawn
// 0x0040 (0x0308 - 0x02C8)
class APlayerStart_VIP_Spawn final : public APlayerStart
{
public:
	uint8                                         bHasVisited : 1;                                   // 0x02C8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   VIPSpawnDescriptor;                                // 0x02D0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	int32                                         SuffixNumber;                                      // 0x02E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          SpawnBox;                                          // 0x02F0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                   TextRender;                                        // 0x02F8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                        SpawnDirection;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	struct FVector GetRandomSpawnPoint();
	struct FRotator GetSpawnDirection();

	class FText GetVIPSpawnDescriptor() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerStart_VIP_Spawn")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerStart_VIP_Spawn")
	}
	static class APlayerStart_VIP_Spawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerStart_VIP_Spawn>();
	}
};
DUMPER7_ASSERTS_APlayerStart_VIP_Spawn;

// Class ReadyOrNot.PlayerViewActor
// 0x00D8 (0x0370 - 0x0298)
class APlayerViewActor : public AActor
{
public:
	uint8                                         bShouldCaptureScene : 1;                           // 0x0298(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponent;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneCaptureComponent2D*               CameraCaptureComponent;                            // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPostProcessEffect                     SwitchViewEffects;                                 // 0x02B0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UFMODEvent*                             SwitchViewEvent;                                   // 0x02D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DeathViewTime;                                     // 0x02E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             DeathViewEvent;                                    // 0x02E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             CloseViewEvent;                                    // 0x02F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                 CameraRenderTarget;                                // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerCharacter*                       OwningPlayerCharacter;                             // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AReadyOrNotCharacter*                   ViewCharacter;                                     // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                TargetLocation;                                    // 0x0310(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                               TargetRotation;                                    // 0x0328(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UMaterialInstance*                      MI_PostProcess_Greyscale;                          // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                      MI_PostProcess_Bump;                               // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                      MI_PostProcess_Glitch;                             // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bDeathEffectsApplied : 1;                          // 0x0358(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSwitchViewEffectsApplied : 1;                     // 0x0358(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_359[0x17];                                     // 0x0359(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetOwningPlayer(class APlayerCharacter* NewOwnerCharacter);
	void SetViewPlayer(class AReadyOrNotCharacter* NewViewCharacter);
	void TryNextView(bool bRequestClose, const bool bIncludeDeadViews, bool bForce);
	void UpdateViewTarget(const struct FVector& NewLocation, const struct FRotator& NewRotation);

	void ClearHiddenComponents() const;
	void HideActor(class AActor* ActorToHide, const bool bIncludeChildActors) const;
	void HideComponent(class UPrimitiveComponent* ComponentToHide) const;
	bool IsSwitchingView() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerViewActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerViewActor")
	}
	static class APlayerViewActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerViewActor>();
	}
};
DUMPER7_ASSERTS_APlayerViewActor;

// Class ReadyOrNot.PopupTarget
// 0x0028 (0x02C0 - 0x0298)
class APopupTarget final : public AActor
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0298(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         MaxHealth;                                         // 0x02A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PopupTime;                                         // 0x02A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Health;                                            // 0x02A8(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2AC[0xC];                                      // 0x02AC(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bFallDown;                                         // 0x02B8(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsAlive();
	void Popup();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PopupTarget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PopupTarget")
	}
	static class APopupTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<APopupTarget>();
	}
};
DUMPER7_ASSERTS_APopupTarget;

// Class ReadyOrNot.PortalVolume
// 0x0080 (0x0350 - 0x02D0)
class APortalVolume final : public AVolume
{
public:
	bool                                          bIsOutside;                                        // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSameRoom;                                         // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPortalType                                   PortalType;                                        // 0x02D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D3[0x5];                                      // 0x02D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         OverlappingActors;                                 // 0x02D8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class AActor>>          AttachedObjects;                                   // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ADoor*>                          Doors;                                             // 0x02F8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                  BreakableGlass_SoftPointer;                        // 0x0308(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class AActor>>          BreakableGlass_SoftPointers;                       // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ABreakableGlass*>                BreakableGlasses;                                  // 0x0340(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PortalVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PortalVolume")
	}
	static class APortalVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<APortalVolume>();
	}
};
DUMPER7_ASSERTS_APortalVolume;

// Class ReadyOrNot.PostProcessEffectData
// 0x0410 (0x0440 - 0x0030)
class UPostProcessEffectData final : public UDataAsset
{
public:
	class UMaterialInterface*                     PostProcess_Material;                              // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPostProcessSetting_FloatParam> ScalarParameters;                                  // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPostProcessSetting_VectorParam> VectorParameters;                                 // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         bDebug : 1;                                        // 0x0058(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Note;                                              // 0x0060(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x3C8];                                     // 0x0078(0x03C8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PostProcessEffectData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PostProcessEffectData")
	}
	static class UPostProcessEffectData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPostProcessEffectData>();
	}
};
DUMPER7_ASSERTS_UPostProcessEffectData;

// Class ReadyOrNot.PPR_IsDamageCauserOnScreen
// 0x0000 (0x0038 - 0x0038)
class UPPR_IsDamageCauserOnScreen final : public UPostProcessRequirement
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PPR_IsDamageCauserOnScreen")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PPR_IsDamageCauserOnScreen")
	}
	static class UPPR_IsDamageCauserOnScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPPR_IsDamageCauserOnScreen>();
	}
};
DUMPER7_ASSERTS_UPPR_IsDamageCauserOnScreen;

// Class ReadyOrNot.SwatCommandStatusWidget
// 0x0130 (0x03F8 - 0x02C8)
class USwatCommandStatusWidget : public UUserWidget
{
public:
	bool                                          bIsLead;                                           // 0x02C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESquadPosition                                SquadPosition;                                     // 0x02C9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPlayerHealthStatus                           PlayerHealthStatus;                                // 0x02CA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CB[0x1];                                      // 0x02CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinHeight;                                         // 0x02CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxHeight;                                         // 0x02D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBox*                         CurrentCommand_Box;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVerticalBox*                           CommandStatus_Box;                                 // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextWidget*                            CurrentCommand_Text;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextWidget*                            CurrentCommand_Pulse_Text;                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextWidget*                            CurrentCommand_Status_Text;                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USizeBox*                               SizeBox;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           SwatInfo_Box;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         SwatStats_Box;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextWidget*                            SwatName_Text;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                               TeamIndicator_Box;                                 // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 TeamIndicator_Image;                               // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                               HealthStatus_SizeBox;                              // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextWidget*                            PlayerHealth_Text;                                 // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         IssueCommand_Hotkey_RichText;                      // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 IssueCommand_Hotkey_Icon;                          // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 IssueCommand_Hotkey_Icon_Highlight;                // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Anim_CommandCompleted;                             // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Anim_CommandIssued;                                // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Anim_CommandCompletedWhileAnotherQueued;           // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsProgress;                                       // 0x0370(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           RedTeamColor;                                      // 0x0374(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           BlueTeamColor;                                     // 0x0384(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           ElementTeamColor;                                  // 0x0394(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           NormalColor;                                       // 0x03A4(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           InjuredColor;                                      // 0x03B4(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           DeadColor;                                         // 0x03C4(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D4[0x24];                                     // 0x03D4(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ShoulderButtonPressed(bool Pressed);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SwatCommandStatusWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SwatCommandStatusWidget")
	}
	static class USwatCommandStatusWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USwatCommandStatusWidget>();
	}
};
DUMPER7_ASSERTS_USwatCommandStatusWidget;

// Class ReadyOrNot.Pouch
// 0x0038 (0x0350 - 0x0318)
class APouch final : public ASkeletalMeshActor
{
public:
	class USkeletalMeshComponent*                 MagazineComponent;                                 // 0x0318(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                        AttachToComp;                                      // 0x0320(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   AttachToSocket;                                    // 0x0328(0x0008)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowMagazine;                                     // 0x0330(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MagazineSocket;                                    // 0x0334(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          OpenPouch;                                         // 0x0340(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          ClosePouch;                                        // 0x0348(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnRep_Attach();
	void OnRep_UpdateVisibility();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Pouch")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Pouch")
	}
	static class APouch* GetDefaultObj()
	{
		return GetDefaultObjImpl<APouch>();
	}
};
DUMPER7_ASSERTS_APouch;

// Class ReadyOrNot.PredictionPFComponent
// 0x0048 (0x0360 - 0x0318)
class UPredictionPFComponent final : public UCrowdFollowingComponent
{
public:
	struct FVector                                PathStopLocation;                                  // 0x0318(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFixPathToAlwaysHaveBraking;                       // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFixPathRemoveClosePoints;                         // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_332[0x2];                                      // 0x0332(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PathPointRemoveDistanceThreshold;                  // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CustomAcceptanceRadius;                            // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33C[0x24];                                     // 0x033C(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PredictionPFComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PredictionPFComponent")
	}
	static class UPredictionPFComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPredictionPFComponent>();
	}
};
DUMPER7_ASSERTS_UPredictionPFComponent;

// Class ReadyOrNot.PremissionStreetView
// 0x0068 (0x0300 - 0x0298)
class APremissionStreetView final : public AActor
{
public:
	class UStaticMeshComponent*                   LeftBuildingMesh;                                  // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                   RightBuildingMesh;                                 // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChildActorComponent*                   LeftTrafficLight;                                  // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChildActorComponent*                   RightTrafficLight;                                 // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UArrowComponent*                        Direction;                                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UStaticMesh*>                    Buildings;                                         // 0x02C0(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class AActor>>             TrafficLights;                                     // 0x02D0(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E0[0x18];                                     // 0x02E0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InterpConstantSpeed;                               // 0x02F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeUntilReset;                                    // 0x02FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PremissionStreetView")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PremissionStreetView")
	}
	static class APremissionStreetView* GetDefaultObj()
	{
		return GetDefaultObjImpl<APremissionStreetView>();
	}
};
DUMPER7_ASSERTS_APremissionStreetView;

// Class ReadyOrNot.ReadyOrNotProfile
// 0x0120 (0x0148 - 0x0028)
class UReadyOrNotProfile : public USaveGame
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ProfileVersion;                                    // 0x0030(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SaveSlotName;                                      // 0x0038(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        UserIndex;                                         // 0x0048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FBasicLevelStats>  LevelStats;                                        // 0x0050(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class FString, struct FLevelStatsDifficultyMap> LevelStatsDifficultyMap;                    // 0x00A0(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bHasUpgradedForDLC3;                               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, int32>                      ChallengeProgress;                                 // 0x00F8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)

public:
	static class UReadyOrNotProfile* CreateDefaultSavegame(TSubclassOf<class UReadyOrNotProfile> ProfileClass, const class FString& LoadSlotName);
	static void LoadLevelStats(struct FBasicLevelStats* OutStats, struct FGameplayTag* OutDifficultyTag, ECOOPMode Mode, const class FString& MapName);
	static void SaveLevelStats(const struct FBasicLevelStats& InStats, bool* NewBestRating, bool* NewBestTime);

	void ResetProfile();
	void SaveProfile();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotProfile")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotProfile")
	}
	static class UReadyOrNotProfile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotProfile>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotProfile;

// Class ReadyOrNot.ReadyOrNotMultiplayerProfile
// 0x0000 (0x0148 - 0x0148)
class UReadyOrNotMultiplayerProfile final : public UReadyOrNotProfile
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotMultiplayerProfile")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotMultiplayerProfile")
	}
	static class UReadyOrNotMultiplayerProfile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotMultiplayerProfile>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotMultiplayerProfile;

// Class ReadyOrNot.ProgressionRequirement
// 0x0000 (0x0028 - 0x0028)
class UProgressionRequirement : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ProgressionRequirement")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ProgressionRequirement")
	}
	static class UProgressionRequirement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProgressionRequirement>();
	}
};
DUMPER7_ASSERTS_UProgressionRequirement;

// Class ReadyOrNot.LevelCompleteRequirement
// 0x0010 (0x0038 - 0x0028)
class ULevelCompleteRequirement final : public UProgressionRequirement
{
public:
	class FName                                   RequiredLevel;                                     // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELevelGrade                                   RequiredGrade;                                     // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<class FName> GetLevelOptions() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LevelCompleteRequirement")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LevelCompleteRequirement")
	}
	static class ULevelCompleteRequirement* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULevelCompleteRequirement>();
	}
};
DUMPER7_ASSERTS_ULevelCompleteRequirement;

// Class ReadyOrNot.PropagationPoint
// 0x0000 (0x0298 - 0x0298)
class APropagationPoint final : public ATargetPoint
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PropagationPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PropagationPoint")
	}
	static class APropagationPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<APropagationPoint>();
	}
};
DUMPER7_ASSERTS_APropagationPoint;

// Class ReadyOrNot.PropHuntGM
// 0x0030 (0x0A50 - 0x0A20)
class APropHuntGM final : public AReadyOrNotGameMode_PVP
{
public:
	TSubclassOf<class ACharacter>                 PropHuntCharacterClass;                            // 0x0A20(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotPlayerController*>    Hunters;                                           // 0x0A28(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReadyOrNotPlayerController*>    Props;                                             // 0x0A38(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_A48[0x8];                                      // 0x0A48(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PropHuntGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PropHuntGM")
	}
	static class APropHuntGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<APropHuntGM>();
	}
};
DUMPER7_ASSERTS_APropHuntGM;

// Class ReadyOrNot.PropHuntGS
// 0x0010 (0x0938 - 0x0928)
class APropHuntGS final : public AReadyOrNotGameState
{
public:
	TArray<class UStaticMesh*>                    AvailableProps;                                    // 0x0928(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PropHuntGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PropHuntGS")
	}
	static class APropHuntGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<APropHuntGS>();
	}
};
DUMPER7_ASSERTS_APropHuntGS;

// Class ReadyOrNot.ProximityVoiceComponent
// 0x0060 (0x0100 - 0x00A0)
class UProximityVoiceComponent final : public UActorComponent
{
public:
	class UFMODEvent*                             VoipEvent;                                         // 0x00A0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoundSource*                           SoundSource;                                       // 0x00A8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B0[0x50];                                      // 0x00B0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnEventStopped();
	void UpdateVoiceType();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ProximityVoiceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ProximityVoiceComponent")
	}
	static class UProximityVoiceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProximityVoiceComponent>();
	}
};
DUMPER7_ASSERTS_UProximityVoiceComponent;

// Class ReadyOrNot.PS5ActivitiesSubsystem
// 0x0010 (0x0040 - 0x0030)
class UPS5ActivitiesSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PS5ActivitiesSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PS5ActivitiesSubsystem")
	}
	static class UPS5ActivitiesSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPS5ActivitiesSubsystem>();
	}
};
DUMPER7_ASSERTS_UPS5ActivitiesSubsystem;

// Class ReadyOrNot.PS5ActivitiesStatics
// 0x0000 (0x0028 - 0x0028)
class UPS5ActivitiesStatics final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PS5ActivitiesStatics")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PS5ActivitiesStatics")
	}
	static class UPS5ActivitiesStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPS5ActivitiesStatics>();
	}
};
DUMPER7_ASSERTS_UPS5ActivitiesStatics;

// Class ReadyOrNot.PushCombatMove
// 0x0000 (0x0230 - 0x0230)
class UPushCombatMove final : public UBaseCombatMoveActivity
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PushCombatMove")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PushCombatMove")
	}
	static class UPushCombatMove* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPushCombatMove>();
	}
};
DUMPER7_ASSERTS_UPushCombatMove;

// Class ReadyOrNot.Quadrotor
// 0x0090 (0x0D10 - 0x0C80)
class AQuadrotor final : public ABaseItem
{
public:
	class USkeletalMeshComponent*                 ViewfinderMesh;                                    // 0x0C78(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneCaptureComponent2D*               SceneCapture2D;                                    // 0x0C80(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextureRenderTarget2D*                 RenderTarget;                                      // 0x0C88(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bToggleDroneControl;                               // 0x0C90(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C91[0x7];                                      // 0x0C91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              DefaultViewfinderMaterial;                         // 0x0C98(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               ViewfinderScreenMaterial;                          // 0x0CA0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              LocalPlayerCaptureResolution;                      // 0x0CA8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              SimulatedPlayerCaptureResolution;                  // 0x0CB8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CC8[0x8];                                      // 0x0CC8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ViewfinderSocket_Hands;                            // 0x0CD0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ViewfinderSocket_Body;                             // 0x0CD8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           ThrowDrone_1P;                                     // 0x0CE0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           ThrowDrone_3P;                                     // 0x0CE8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AQuadrotorPawn>             DronePawnClass;                                    // 0x0CF0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AQuadrotorPawn*                         SpawnedDrone;                                      // 0x0CF8(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D00[0x10];                                     // 0x0D00(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Server_SpawnDrone();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Quadrotor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Quadrotor")
	}
	static class AQuadrotor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AQuadrotor>();
	}
};
DUMPER7_ASSERTS_AQuadrotor;

// Class ReadyOrNot.QuadrotorPawn
// 0x0140 (0x0460 - 0x0320)
class AQuadrotorPawn final : public APawn
{
public:
	class UBoxComponent*                          FlightBox;                                         // 0x0320(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                 DroneMesh;                                         // 0x0328(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraComponent*                       FirstPersonCamera;                                 // 0x0330(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         RPM;                                               // 0x0338(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RPMThrottleMultiplier;                             // 0x033C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyingInput;                                    // 0x0340(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxRPM;                                            // 0x0344(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IdleRPM;                                           // 0x0348(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RPMForceScale;                                     // 0x034C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaximumTilt;                                       // 0x0350(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxVelocity;                                       // 0x0354(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEngineOn;                                         // 0x0358(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RotorRotation;                                     // 0x0360(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DroneTransform;                                    // 0x0380(0x0060)(BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               TargetRotation;                                    // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F8[0x68];                                     // 0x03F8(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_DroneMovement();
	void Server_UpdateDroneTransform(const struct FTransform& NewTransform);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("QuadrotorPawn")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"QuadrotorPawn")
	}
	static class AQuadrotorPawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<AQuadrotorPawn>();
	}
};
DUMPER7_ASSERTS_AQuadrotorPawn;

// Class ReadyOrNot.RadialSectorWidget
// 0x0018 (0x02E0 - 0x02C8)
class URadialSectorWidget : public UUserWidget
{
public:
	class UPanelWidget*                           SectorImagePanel;                                  // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 SectorImage;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SectorInnerRadius;                                 // 0x02D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SectorOuterRadius;                                 // 0x02DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool InitializeSectorWidget(float Angle, float Percentage, float InSectorInnerRadius, float InSectorOuterRadius, class UMaterialInterface* InSectorMaterial, const struct FLinearColor& UnselectedColor, class UImage* InSectorImage);
	bool SetSectorColor(const struct FLinearColor& NewColor, class UImage* InSectorImage);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RadialSectorWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RadialSectorWidget")
	}
	static class URadialSectorWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URadialSectorWidget>();
	}
};
DUMPER7_ASSERTS_URadialSectorWidget;

// Class ReadyOrNot.SwatAutomationManager
// 0x0030 (0x02C8 - 0x0298)
class ASwatAutomationManager final : public AInfo
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADoor*>                          Doors;                                             // 0x02A0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ADoor*>                          BreachedDoors;                                     // 0x02B0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class ADoor*                                  CurrentDoor;                                       // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SwatAutomationManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SwatAutomationManager")
	}
	static class ASwatAutomationManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASwatAutomationManager>();
	}
};
DUMPER7_ASSERTS_ASwatAutomationManager;

// Class ReadyOrNot.RadialTrackingComponent
// 0x0110 (0x01B0 - 0x00A0)
class alignas(0x10) URadialTrackingComponent final : public UActorComponent
{
public:
	ERadialTrackingState                          State;                                             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ACyberneticCharacter* Target)> OnTargetFound;                // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(ETrackingTargetLoseReason LoseReason)> OnTargetLost;               // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnTargetLostBP;                                    // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         MaxRotationAngle;                                  // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TargetTrackingSpeed;                               // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TargetTrackingRange;                               // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TargetTrackingRadius;                              // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RotationSmoothingRate;                             // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RootRotation;                                      // 0x00F0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                         TrackingInterval;                                  // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      TrackingTypes;                                     // 0x0110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bShowTracking;                                     // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_121[0x2F];                                     // 0x0121(0x002F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0150(0x0018)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_168[0x18];                                     // 0x0168(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsEnabled;                                        // 0x0180(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bHasTarget;                                        // 0x0181(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bPendingTargetLost;                                // 0x0182(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_183[0x2D];                                     // 0x0183(0x002D)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Initialise(const struct FRadialTrackingInitStruct& initData);
	void SetTrackingRoot(class USceneComponent* trackingRoot);
	void Stop();
	void TargetFound(class ACyberneticCharacter* Target);
	void TargetLost(ETrackingTargetLoseReason LoseReason);

	struct FRotator GetRotation() const;
	bool IsPendingTargetLost() const;
	bool IsTracking() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RadialTrackingComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RadialTrackingComponent")
	}
	static class URadialTrackingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<URadialTrackingComponent>();
	}
};
DUMPER7_ASSERTS_URadialTrackingComponent;

// Class ReadyOrNot.RadialTrackingTarget
// 0x0008 (0x02A0 - 0x0298)
class ARadialTrackingTarget final : public AActor
{
public:
	float                                         WaitDuration;                                      // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RadialTrackingTarget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RadialTrackingTarget")
	}
	static class ARadialTrackingTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARadialTrackingTarget>();
	}
};
DUMPER7_ASSERTS_ARadialTrackingTarget;

// Class ReadyOrNot.TOCManager
// 0x0058 (0x02F0 - 0x0298)
class ATOCManager final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponent;                                    // 0x02A0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundSource*                           VoiceSoundSource;                                  // 0x02A8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             TocEvent;                                          // 0x02B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTOCData                               CurrentTOCData;                                    // 0x02B8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTOCData>                       QueuedTOCData;                                     // 0x02E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)

public:
	static class ATOCManager* Get();

	void IterateTOCQueue();
	void Multicast_PlayTOCSound2D(const class FString& Filename, const class FString& Speaker);
	void StartTOCResponse(const class FString& Line, bool bIsNetworked, ETOCPriority Priority);
	void StartTOCResponseWithSpeaker(const class FString& Line, const class FString& Speaker, bool bIsNetworked, ETOCPriority Priority);
	void StopTOCAudio(bool bClearQueue);

	bool IsTOCSpeaking() const;
	bool IsTOCSpeakingLine(const class FString& Line) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TOCManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TOCManager")
	}
	static class ATOCManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATOCManager>();
	}
};
DUMPER7_ASSERTS_ATOCManager;

// Class ReadyOrNot.RadialWidgetThemeData
// 0x00A0 (0x00D0 - 0x0030)
class URadialWidgetThemeData final : public UDataAsset
{
public:
	class FName                                   Name_0;                                            // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0038(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         StartingSectorIndex;                               // 0x0050(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartingSectorAngle;                               // 0x0054(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IconSize;                                          // 0x0058(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IconPadding;                                       // 0x005C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SectorInnerRadius;                                 // 0x0060(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SectorOuterRadius;                                 // 0x0064(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GapSize;                                           // 0x0068(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WheelSize;                                         // 0x006C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WheelCursorDistanceFromCenterWheel;                // 0x0070(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bHideRadialWheelCursorOnMenuOpened : 1;            // 0x0074(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           SelectedColor;                                     // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           UnselectedColor;                                   // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           UnselectableColor;                                 // 0x0098(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFont*                                  Font;                                              // 0x00A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SelectionSound;                                    // 0x00B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MenuOpenSound;                                     // 0x00B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MenuCloseSound;                                    // 0x00C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MenuCloseSound_NoSelection;                        // 0x00C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RadialWidgetThemeData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RadialWidgetThemeData")
	}
	static class URadialWidgetThemeData* GetDefaultObj()
	{
		return GetDefaultObjImpl<URadialWidgetThemeData>();
	}
};
DUMPER7_ASSERTS_URadialWidgetThemeData;

// Class ReadyOrNot.RallyToActivity
// 0x0008 (0x01F8 - 0x01F0)
class URallyToActivity final : public UBaseActivity
{
public:
	class AReadyOrNotCharacter*                   Target;                                            // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void EnterFindLOSOnTarget();
	void EnterMoveToTargetState();
	void TickFindLOSOnTarget(float DeltaTime, float Uptime);
	void TickMoveToTargetState(float DeltaTime, float Uptime);

	bool CanFindLOSOnTarget() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RallyToActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RallyToActivity")
	}
	static class URallyToActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<URallyToActivity>();
	}
};
DUMPER7_ASSERTS_URallyToActivity;

// Class ReadyOrNot.RandomizedShippingContainerActor
// 0x0060 (0x02F8 - 0x0298)
class ARandomizedShippingContainerActor final : public AActor
{
public:
	class UStaticMeshComponent*                   ContainerMeshComp;                                 // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                   ContainerDecalsComp;                               // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                   LeftDoorDecalsComp;                                // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                   RightDoorDecalsComp;                               // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInterface*>             ContainerMaterials;                                // 0x02B8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                    ContainerDecals;                                   // 0x02C8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                    LeftDoorDecals;                                    // 0x02D8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                    RightDoorDecals;                                   // 0x02E8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	void RandomizeContainer();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RandomizedShippingContainerActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RandomizedShippingContainerActor")
	}
	static class ARandomizedShippingContainerActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARandomizedShippingContainerActor>();
	}
};
DUMPER7_ASSERTS_ARandomizedShippingContainerActor;

// Class ReadyOrNot.RandomSubLevelController
// 0x0020 (0x02B8 - 0x0298)
class ARandomSubLevelController final : public AActor
{
public:
	bool                                          bIsEnabled;                                        // 0x0298(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           PossibleLevels;                                    // 0x02A0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                         NumLevelsToLoad;                                   // 0x02B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<class FString> GetStreamingLevelOptions() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RandomSubLevelController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RandomSubLevelController")
	}
	static class ARandomSubLevelController* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARandomSubLevelController>();
	}
};
DUMPER7_ASSERTS_ARandomSubLevelController;

// Class ReadyOrNot.ReadyOrNotAIConfig
// 0x0060 (0x0088 - 0x0028)
class UReadyOrNotAIConfig final : public UGameplayConfig
{
public:
	uint8                                         Pad_28[0x60];                                      // 0x0028(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UReadyOrNotAIConfig* Get();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotAIConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotAIConfig")
	}
	static class UReadyOrNotAIConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotAIConfig>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotAIConfig;

// Class ReadyOrNot.ReadyOrNotAimAssistComponent
// 0x0008 (0x0270 - 0x0268)
class UReadyOrNotAimAssistComponent final : public UUASAimAssistComponent
{
public:
	uint8                                         Pad_268[0x8];                                      // 0x0268(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotAimAssistComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotAimAssistComponent")
	}
	static class UReadyOrNotAimAssistComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotAimAssistComponent>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotAimAssistComponent;

// Class ReadyOrNot.ReadyOrNotAimAssistTargetComponent
// 0x0020 (0x00E0 - 0x00C0)
class UReadyOrNotAimAssistTargetComponent final : public UUASAimAssistTargetComponent
{
public:
	TSubclassOf<class UReadyOrNotAimAssistWeightConfig> Weights;                                     // 0x00C0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACyberneticCharacter*                   Character;                                         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACyberneticController*                  Controller;                                        // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UReadyOrNotAimAssistWeightConfig*       AimAssistWeightConfig;                             // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotAimAssistTargetComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotAimAssistTargetComponent")
	}
	static class UReadyOrNotAimAssistTargetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotAimAssistTargetComponent>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotAimAssistTargetComponent;

// Class ReadyOrNot.ReadyOrNotAISenseConfig_Sight
// 0x0000 (0x0070 - 0x0070)
class UReadyOrNotAISenseConfig_Sight final : public UAISenseConfig_Sight
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotAISenseConfig_Sight")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotAISenseConfig_Sight")
	}
	static class UReadyOrNotAISenseConfig_Sight* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotAISenseConfig_Sight>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotAISenseConfig_Sight;

// Class ReadyOrNot.TelescopicLadder
// 0x0300 (0x0F80 - 0x0C80)
class ATelescopicLadder : public ABaseDeployableGear
{
public:
	class USceneComponent*                        LadderVerticalIconPoint;                           // 0x0C78(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        LadderHorizontalIconPoint;                         // 0x0C80(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        LadderBottomMountPoint;                            // 0x0C88(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        LadderTopMountPoint;                               // 0x0C90(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ALadderSnapZone>            LadderSnapZoneBP;                                  // 0x0C98(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFreezeFrame;                                      // 0x0CA0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CA1[0x3];                                      // 0x0CA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxRollDegreesBeforeUnwalkable;                    // 0x0CA4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CA8[0x108];                                    // 0x0CA8(0x0108)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FreezeTransform;                                   // 0x0DB0(0x0060)(Net, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E10[0x48];                                     // 0x0E10(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bShowGhostLadder;                                  // 0x0E58(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowCollapsedLadder;                              // 0x0E59(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E5A[0x6];                                      // 0x0E5A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CollapsedLadderAnim;                               // 0x0E60(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E68[0x8];                                      // 0x0E68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LastTransform;                                     // 0x0E70(0x0060)(Net, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASkeletalMeshActor*                     GhostLadderActor;                                  // 0x0ED0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                              GhostLadderMaterial;                               // 0x0ED8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                          DroppedPhysics;                                    // 0x0EE0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                          PlacedPhysics;                                     // 0x0EE8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             PlacementSoundEvent;                               // 0x0EF0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             PickupSoundEvent;                                  // 0x0EF8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             CollideSoundEvent;                                 // 0x0F00(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeployed;                                         // 0x0F08(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeployedHorizontal;                               // 0x0F09(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMounted;                                          // 0x0F0A(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F0B[0x1];                                      // 0x0F0B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RetractedRungCount;                                // 0x0F0C(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ALadderSnapZone*                        CurrentSnapZone;                                   // 0x0F10(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWallFound;                                        // 0x0F18(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F19[0x67];                                     // 0x0F19(0x0067)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Multicast_DeployLadderAtZone(class ALadderSnapZone* NewSnapZone);
	void Multicast_PlaceLadder();
	void OnRep_CurrentSnapZone();
	void OnRep_Deployed();
	void Server_DeployLadderAtZone(class ALadderSnapZone* NewSnapZone);
	void Server_PlaceLadder();
	void Server_RemoveLadder();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TelescopicLadder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TelescopicLadder")
	}
	static class ATelescopicLadder* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATelescopicLadder>();
	}
};
DUMPER7_ASSERTS_ATelescopicLadder;

// Class ReadyOrNot.ReadyOrNotAISense_Sight
// 0x0120 (0x0198 - 0x0078)
class UReadyOrNotAISense_Sight final : public UAISense
{
public:
	uint8                                         Pad_78[0x120];                                     // 0x0078(0x0120)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotAISense_Sight")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotAISense_Sight")
	}
	static class UReadyOrNotAISense_Sight* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotAISense_Sight>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotAISense_Sight;

// Class ReadyOrNot.ReadyOrNotAISystem
// 0x0000 (0x01A0 - 0x01A0)
class UReadyOrNotAISystem final : public UAISystem
{
public:
	static bool ProjectPointToNav(const struct FVector& Point, struct FVector* OutLocation, const struct FVector& Extent);
	static bool WasRecentlyInCombat(float SinceSeconds, bool bCivilianCheck);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotAISystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotAISystem")
	}
	static class UReadyOrNotAISystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotAISystem>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotAISystem;

// Class ReadyOrNot.ReadyOrNotAssetManager
// 0x0078 (0x0548 - 0x04D0)
class UReadyOrNotAssetManager final : public UAssetManager
{
public:
	TSet<class UObject*>                          LoadedAssets;                                      // 0x04D0(0x0050)(UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_520[0x28];                                     // 0x0520(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotAssetManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotAssetManager")
	}
	static class UReadyOrNotAssetManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotAssetManager>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotAssetManager;

// Class ReadyOrNot.ReadyOrNotAudioVolume
// 0x0040 (0x0310 - 0x02D0)
class AReadyOrNotAudioVolume final : public AVolume
{
public:
	TArray<class UFMODEvent*>                     ReverbEvents;                                      // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bLocalEffectsPlayed;                               // 0x02E0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFMODEventInstance>             EventInstances;                                    // 0x02E8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFMODAudioComponent*>            AttachedAudioComponents;                           // 0x02F8(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool HasRanOnce() const;
	bool IsAnotherVolumeActivatedAndPlayingEvent(class UFMODEvent* Event, struct FFMODEventInstance* EventInstance) const;
	bool IsAnotherVolumeActivatedAndPlayingEventInst(const struct FFMODEventInstance& EventInst) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotAudioVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotAudioVolume")
	}
	static class AReadyOrNotAudioVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReadyOrNotAudioVolume>();
	}
};
DUMPER7_ASSERTS_AReadyOrNotAudioVolume;

// Class ReadyOrNot.ReadyOrNotAvoidanceManager
// 0x0010 (0x0050 - 0x0040)
class UReadyOrNotAvoidanceManager final : public UTickableWorldSubsystem
{
public:
	uint8                                         Pad_40[0x10];                                      // 0x0040(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotAvoidanceManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotAvoidanceManager")
	}
	static class UReadyOrNotAvoidanceManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotAvoidanceManager>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotAvoidanceManager;

// Class ReadyOrNot.ReadyOrNotCharacterAnimData
// 0x0358 (0x0388 - 0x0030)
class UReadyOrNotCharacterAnimData final : public UDataAsset
{
public:
	TArray<struct FCharacterTPAnim>               Surrender;                                         // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               FakeSurrender;                                     // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Spooked_Front;                                     // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Spooked_Right;                                     // 0x0060(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Spooked_Left;                                      // 0x0070(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Spooked_Back;                                      // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Arrested;                                          // 0x0090(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Decision;                                          // 0x00A0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               StandRelaxedFidget;                                // 0x00B0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               StandAlertFidget;                                  // 0x00C0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               HitReaction_Head;                                  // 0x00D0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               HitReaction_UpperBody;                             // 0x00E0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               HitReaction_LowerBody;                             // 0x00F0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               HitReaction_LeftArm;                               // 0x0100(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               HitReaction_RightArm;                              // 0x0110(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               HitReaction_LeftLeg;                               // 0x0120(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               HitReaction_RightLeg;                              // 0x0130(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               HitReaction_LeftFoot;                              // 0x0140(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               HitReaction_RightFoot;                             // 0x0150(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               HitReaction_DropWeapon;                            // 0x0160(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FCharacterTPAnim                       FireWeapon;                                        // 0x0170(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCharacterTPAnim                       DrawWeapon;                                        // 0x0178(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCharacterTPAnim                       HolsterWeapon;                                     // 0x0180(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCharacterTPAnim                       ReloadWeapon;                                      // 0x0188(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Head_Front;                                  // 0x0190(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Head_Back;                                   // 0x01A0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Arm_Left_Front;                              // 0x01B0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Arm_Left_Back;                               // 0x01C0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Arm_Right_Front;                             // 0x01D0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Arm_Right_Back;                              // 0x01E0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Leg_Left_Front;                              // 0x01F0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Leg_Left_Back;                               // 0x0200(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Leg_Right_Front;                             // 0x0210(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Leg_Right_Back;                              // 0x0220(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Front;                                       // 0x0230(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Back;                                        // 0x0240(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Bleedout_Head;                               // 0x0250(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Bleedout_Chest;                              // 0x0260(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Bleedout_Stomach;                            // 0x0270(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Bleedout_Left_Arm;                           // 0x0280(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Bleedout_Right_Arm;                          // 0x0290(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Bleedout_Left_Leg;                           // 0x02A0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Death_Bleedout_Right_Leg;                          // 0x02B0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Flashbanged;                                       // 0x02C0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Stingballed;                                       // 0x02D0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Gassed;                                            // 0x02E0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Sprayed;                                           // 0x02F0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Tasered;                                           // 0x0300(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               Meleed;                                            // 0x0310(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FCharacterTPAnim                       OpenDoor;                                          // 0x0320(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCharacterTPAnim                       CloseDoor;                                         // 0x0328(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCharacterTPAnim                       Flinches;                                          // 0x0330(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UAnimSequence*                          Calm_Turn90Left;                                   // 0x0338(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          Calm_Turn90Right;                                  // 0x0340(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          Calm_Turn180Left;                                  // 0x0348(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          Calm_Turn180Right;                                 // 0x0350(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          Alert_Turn90Left;                                  // 0x0358(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          Alert_Turn90Right;                                 // 0x0360(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          Alert_Turn180Left;                                 // 0x0368(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          Alert_Turn180Right;                                // 0x0370(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterTPAnim>               AllAnimsList;                                      // 0x0378(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotCharacterAnimData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotCharacterAnimData")
	}
	static class UReadyOrNotCharacterAnimData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotCharacterAnimData>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotCharacterAnimData;

// Class ReadyOrNot.ReadyOrNotCharMovementComp
// 0x0000 (0x0F50 - 0x0F50)
class UReadyOrNotCharMovementComp final : public UCharacterMovementComponent
{
public:
	bool                                          bHasReplicatedAcceleration;                        // 0x0F48(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F49[0x7];                                      // 0x0F49(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotCharMovementComp")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotCharMovementComp")
	}
	static class UReadyOrNotCharMovementComp* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotCharMovementComp>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotCharMovementComp;

// Class ReadyOrNot.ReadyOrNotCommandFunctionLibrary
// 0x0470 (0x0498 - 0x0028)
class UReadyOrNotCommandFunctionLibrary final : public UObject
{
public:
	TMulticastInlineDelegate<void()>              OnTeamChanged;                                     // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x440];                                     // 0x0038(0x0440)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LastActorBeforeGoingIntoSubPage;                   // 0x0478(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_480[0x18];                                     // 0x0480(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RespondToSWATCommand(const struct FSwatCommand& Command, ETeamType TeamType, const struct FHitResult& CommandContextualData);

	bool HasQueuedCommandForActiveTeam() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotCommandFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotCommandFunctionLibrary")
	}
	static class UReadyOrNotCommandFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotCommandFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotCommandFunctionLibrary;

// Class ReadyOrNot.ReadyOrNotConsoleFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UReadyOrNotConsoleFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void ConsoleApplyLevelSpecificSettings(const class FString& MapName, bool QualityOverFrameRate);
	static ERuntimeDevice GetRuntimeDeviceProfile();
	static bool IsPcPlatform();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotConsoleFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotConsoleFunctionLibrary")
	}
	static class UReadyOrNotConsoleFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotConsoleFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotConsoleFunctionLibrary;

// Class ReadyOrNot.ReadyOrNotCoverData
// 0x00F8 (0x0128 - 0x0030)
class UReadyOrNotCoverData final : public UDataAsset
{
public:
	struct FCoverDataMain                         CoverData;                                         // 0x0030(0x00F8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotCoverData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotCoverData")
	}
	static class UReadyOrNotCoverData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotCoverData>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotCoverData;

// Class ReadyOrNot.ReadyOrNotCrowdManager
// 0x0000 (0x00F0 - 0x00F0)
class UReadyOrNotCrowdManager final : public UCrowdManager
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotCrowdManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotCrowdManager")
	}
	static class UReadyOrNotCrowdManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotCrowdManager>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotCrowdManager;

// Class ReadyOrNot.ReadyOrNotFaceAnimInstance
// 0x0090 (0x03E0 - 0x0350)
class UReadyOrNotFaceAnimInstance : public UAnimInstance
{
public:
	class USkeletalMeshComponent*                 BodyDriverMesh;                                    // 0x0348(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPoseAsset*                             DefaultFaceROMData;                                // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               FocalTargetLookRotation;                           // 0x0358(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               HeadLookRotation;                                  // 0x0370(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         EyeTargetLookLeft;                                 // 0x0388(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EyeTargetLookRight;                                // 0x038C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EyeTargetLookUp;                                   // 0x0390(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EyeTargetLookDown;                                 // 0x0394(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          CurrentLipSyncAnimation;                           // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentLipSyncTime;                                // 0x03A0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLipSyncAnimation;                              // 0x03A4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VoipMouthAlpha;                                    // 0x03A8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3AC[0x28];                                     // 0x03AC(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentBlinkAmount;                                // 0x03D4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D8[0x8];                                      // 0x03D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UPoseAsset* GetFaceROM() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotFaceAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotFaceAnimInstance")
	}
	static class UReadyOrNotFaceAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotFaceAnimInstance>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotFaceAnimInstance;

// Class ReadyOrNot.ReadyOrNotFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UReadyOrNotFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool AllFalse(TArray<bool>& BoolArray);
	static bool AllTrue(TArray<bool>& BoolArray);
	static bool AnyFalse(TArray<bool>& BoolArray);
	static bool AnyTrue(TArray<bool>& BoolArray);
	static bool AreAllPlayersDead(class UObject* WorldContextObject);
	static class FString BadAIActionConfigDir();
	static struct FVector2D CalculateOffscreenPositionFromWorldLocation_Ellipse(class UObject* WorldContext, const struct FVector& WorldLocation, float ViewportOffset, bool* bIsOffscreen, float* Angle, float* ForwardDotProduct, float* RightDotProduct);
	static struct FVector2D CalculateOffscreenPositionFromWorldLocation_Square(class UObject* WorldContext, const struct FVector& WorldLocation, float ViewportOffset, bool* bIsOffscreen, float* Angle, float* ForwardDotProduct, float* RightDotProduct);
	static struct FKey ConvertIntToFKey(int32 Integer);
	static struct FSlateBrush ConvertKeyToIcon(const struct FKey& InKey);
	static class FString ConvertUnrealKeyNameToRonKeyName(const struct FKey& InKey);
	static struct FRonKey ConvertUnrealKeyToRonKey(const struct FKey& InKey);
	static void CopySupporterStringToClipboard(const class UObject* WorldContextObject);
	static class FString DevMenuSettingsConfigDir();
	static bool DoesWidgetOverlap(class UObject* WorldContext, class UWidget* ParentWidget, class UWidget* WidgetA, class UWidget* WidgetB);
	static class FString DoorBreachTypeToVoiceline(const EDoorBreachType DoorBreachType);
	static class FString DoorBreachTypeToVoiceline_Negative(const EDoorBreachType DoorBreachType);
	static class FString DoorCheckResultToVoiceline(const EDoorCheckResult DoorBreachType);
	static class AActor* FindClosestActorFromLocation_Blueprint(const struct FVector& InTestLocation, const TArray<class AActor*>& InActors);
	static bool FindConfigKeyFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
	static float FindNearestFloor_BP(class AActor* InActor, const TArray<class AActor*>& InActorsToIgnore, const TArray<class UPrimitiveComponent*>& InComponentsToIgnore);
	static class FText FormatPlayerActionText(const struct FKey& InKey, const EInputEvent& InInputEvent, const class FText& InActionText, const class FString& InColorLabel);
	static bool FulfillsAllPostProcessRequirements(class UObject* Context, class APlayerCharacter* OwningCharacter, class AActor* DamageCauser, const TArray<TSubclassOf<class UPostProcessRequirement>>& InRequirementClasses, const bool bForceSuccess);
	static TArray<class UFMODEvent*> GetAll2DFMODAudioEvents();
	static TArray<class UAudioComponent*> GetAllAudioComponents();
	static TArray<class UFMODBus*> GetAllFMODBusObjects();
	static TArray<class ABaseItem*> GetAllItemsInMemory();
	static TArray<class FString> GetAllSectionNamesFromINIFile(const class FString& ConfigFilePath);
	static TArray<class USoundBase*> GetAllSoundsInWorld();
	static class UAnimMontage* GetAnimationFromTable(const class FString& AnimationName, bool bIsCrouching);
	static float GetAspectRatio();
	static bool GetBoolFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
	static ERONBuildConfiguration GetBuildConfiguration();
	static class UObject* GetClassDefaultObject(class UClass* Class_0);
	static class UClass* GetClassFromObject(class UObject* Object);
	static ECOOPMode GetCOOPMode();
	static class FString GetCurrentLevelNameForLookupTable(class UObject* Context);
	static float GetFloatFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
	static float GetFMODBusVolume(class UFMODBus* Bus);
	static struct FSlateBrush GetIconFromInputKeyName(const class FName& RonKeyName);
	static int32 GetIntegerFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
	static float GetInterfaceFovOffset(float InFov);
	static struct FKey GetKeyFromInputActionName(const class FName& ActionName, bool bOnlyGamepadKey, int32 Index_0);
	static struct FKey GetKeyFromInputAxisName(const class FName& AxisName, bool bUsingGamepad, int32 Index_0);
	static class FString GetLocalOnlinePlatformString(const class UObject* WorldContextObject);
	static int32 GetLocalOnlinePlatformType(const class UObject* WorldContextObject);
	static struct FVector2D GetPixelPositionOfWidget(class UObject* WorldContext, class UWidget* InParentWidget, class UWidget* InWidget, const struct FVector2D& InCoordinates);
	static struct FVector2D GetPixelPositionOfWidgetCenter(class UObject* WorldContext, class UWidget* InParentWidget, class UWidget* InWidget);
	static class APlayerCharacter* GetPlayerCharacterMutableDefaultObject(class UClass* Class_0);
	static class UHumanCharacterHUD_V2* GetPlayerHUD(class UObject* WorldContext);
	static const class AReadyOrNotPlayerState* GetPlayerStateFromPlayerProfile(const class UObject* WorldContextObject, const class FString& PlayerProfile);
	static class FString GetProfileResizedURI(const class FString& BaseURI, EProfileSize DesiredProfileSize);
	static class UReadyOrNotGameUserSettings* GetReadyOrNotGameUserSettings();
	static class AReadyOrNotLevelScript* GetReadyOrNotLevelScript(class UObject* Context);
	static struct FRoom GetRoomDataForLocation(const struct FVector& Location);
	static struct FRoom GetRoomDataFromName(class FName Name_0);
	static TArray<class FString> GetSingleLineArrayFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
	static TArray<class FString> GetStringArrayFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
	static class FString GetStringFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
	static bool GetUseGearListInsteadOfRadial();
	static struct FVector2D GetVector2DFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
	static struct FVector GetVectorFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
	static struct FVector2D GetViewportPositionOfWidget(class UObject* WorldContext, class UWidget* InParentWidget, class UWidget* InWidget, const struct FVector2D& InCoordinates);
	static struct FVector2D GetViewportPositionOfWidgetCenter(class UObject* WorldContext, class UWidget* InParentWidget, class UWidget* InWidget);
	static float GetWeaponFOVOffset();
	static struct FVector2D GetWidgetSize_Absolute(class UWidget* InWidget);
	static struct FVector2D GetWidgetSize_Local(class UWidget* InWidget);
	static bool IsActorInsideSplineEnclosure(class ASplineTrigger* InSplineTrigger, class AActor* InActor);
	static bool IsActorOutsideSplineEnclosure(class ASplineTrigger* InSplineTrigger, class AActor* InActor);
	static bool IsAprilFools();
	static bool IsBuildPirated();
	static bool IsDLSSEnabled();
	static bool IsFMODBusMuted(class UFMODBus* Bus);
	static bool IsFMODBusPaused(class UFMODBus* Bus);
	static bool IsFSREnabled();
	static bool IsHalloween();
	static bool IsInDefusalWarmup();
	static bool IsInLobby();
	static bool IsItemEquipped(class AReadyOrNotCharacter* PlayerCharacter, EItemCategory ItemCategory);
	static bool IsItemInInventory(class AReadyOrNotCharacter* PlayerCharacter, EItemCategory ItemCategory);
	static bool IsLocalPlatformUser(const class UObject* WorldContextObject, const class FString& PlayerProfileToView);
	static bool IsLocalPlayerLinked(const class UObject* WorldContextObject, int32 LocalUserNum);
	static bool IsTableMontagePlaying(class APlayerCharacter* PlayerCharacter, const class FString& AnimationName, bool bIsCrouching);
	static bool IsUsingGamepad(class AReadyOrNotPlayerController* InController);
	static bool LoadStringArrayFromFile(TArray<class FString>* StringArray, int32* ArraySize, const class FString& FullFilePath, bool ExcludeEmptyLines);
	static void MuteFMOD(bool bMuted);
	static void PauseFMOD(bool bPaused);
	static void PlayRandomFMODEvent_2D(class UObject* WorldContextObject, TArray<class UFMODEvent*>& FMODEvents);
	static void PlayRandomFMODEventAtLocation(class UObject* WorldContextObject, const struct FVector& Location, TArray<class UFMODEvent*>& FMODEvents);
	static bool ProcessPostProcessEffect(class UObject* Context, struct FPostProcessSettings* PostProcessSettings, struct FPostProcessEffect* InPostProcessEffect, float DeltaTime);
	static void RegisterTick(class AActor* Actor);
	static void RemoveAllNullElements_BP(const TArray<TSubclassOf<class UClass>>& Array);
	static bool RemoveBadAIActionReport(class ABadAIAction* InBadAIActionActor, bool bReportToLog, bool bDrawDebugString);
	static void RemoveFromParentAndClear(TArray<class UWidget*>& InWidgets);
	static bool ReportBadAIAction(class ABadAIAction* InBadAIActionActor, const class FText& InSummary, const class FText& InDescription, bool bReportToLog, bool bDrawDebugString);
	static bool ReportPlayer(const class UObject* WorldContextObject, const class FString& TargetPlayerProfile, const struct FReportPlayerContext& ReportContext, const class FString& ReportMessage, TDelegate<void(bool WasReportSuccessful)> ReportCompletedCallback);
	static void RestartGame(const class UObject* WorldContextObject);
	static void ServerTravel(const class FString& URL);
	static void SetDecalSize(class UDecalComponent* InDecalComponent, const struct FVector& DecalSize);
	static void SetFMODVolume(float Volume);
	static void SetPlanarReflectionScreenPercentage(class UPlanarReflectionComponent* InPlanarReflectionComponent, float NewScreenPercentage);
	static void SetSafeZonePadding(class USafeZoneSlot* SafeZoneSlot, const struct FMargin& Padding);
	static void SetupPostProcessEffect(class UObject* Context, struct FPostProcessEffect* InPostProcessEffect);
	static bool ShowEOSSocialOverlay();
	static bool ShowFriendsUIForInvitation(const class UObject* WorldContextObject, bool bForceOpenPlatformNative);
	static bool ShowProfileUI(const class UObject* WorldContextObject, const class FString& PlayerProfileToView);
	static class FString SimulateAnimatedText(class FString& FinalString, int32& Iterator, TArray<class FString>& Chars, float& ElapsedTime, float& CurrentDelay, float DelayBetweenLetters, float DelayBetweenWords, float DeltaTime, bool* bCompleted);
	static void StartPostProcessEffect(class UObject* Context, struct FPostProcessSettings* PostProcessSettings, struct FPostProcessEffect* InPostProcessEffect, class AActor* DamageCauser);
	static void StartPostProcessEffect_Specific(class UObject* Context, struct FPostProcessSettings* PostProcessSettings, struct FPostProcessEffectPlayer* InPostProcessEffectPlayer, class AActor* DamageCauser);
	static void StopPostProcessEffect(struct FPostProcessSettings* PostProcessSettings, struct FPostProcessEffect* InPostProcessEffect);
	static EEasingFunc StringToEasingFunc(const class FString& InEasingFunc);
	static int32 StringToIntegerSum(const class FString& String);
	static class FText SwatCommandToText(ESwatCommand SwatCommand);
	static class FString TimeSecondsToHHMMSS(float InSeconds);
	static void UnregisterTick(class AActor* Actor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotFunctionLibrary")
	}
	static class UReadyOrNotFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotFunctionLibrary;

// Class ReadyOrNot.ReadyOrNotVoipSettings
// 0x0128 (0x0160 - 0x0038)
class UReadyOrNotVoipSettings final : public UDeveloperSettings
{
public:
	TSoftObjectPtr<class UFMODEvent>              VoipEvent;                                         // 0x0038(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFMODEvent>              VoipPushToTalkEvent;                               // 0x0060(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFMODEvent>              VoipPushToTalkEndEvent;                            // 0x0088(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReleaseDelay;                                      // 0x00B0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VoipMinimumTalkerThreshold;                        // 0x00B4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   VoipAttachBone;                                    // 0x00B8(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                VoipAttachOffset;                                  // 0x00C0(0x0018)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     MouthMovementAmplitudeCurve;                       // 0x00D8(0x0088)(Edit, Config, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotVoipSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotVoipSettings")
	}
	static class UReadyOrNotVoipSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotVoipSettings>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotVoipSettings;

// Class ReadyOrNot.ReadyOrNotGameSession
// 0x0180 (0x0430 - 0x02B0)
class AReadyOrNotGameSession final : public AGameSession
{
public:
	uint8                                         Pad_2B0[0xB0];                                     // 0x02B0(0x00B0)(Fixing Size After Last Property [ Dumper-7 ])
	class UReadyOrNotSessionData*                 SessionData;                                       // 0x0360(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_368[0x18];                                     // 0x0368(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ServerName;                                        // 0x0380(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         MapList;                                           // 0x0390(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	int32                                         ReturnToLobbyAfterXMissions;                       // 0x03A0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Password;                                          // 0x03A8(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxConnections;                                    // 0x03B8(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AdminPassword;                                     // 0x03C0(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         LoggedInAdmins;                                    // 0x03D0(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<class FString>                         BanList;                                           // 0x03E0(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	int32                                         MaxTeamKillsBeforeAutoKick;                        // 0x03F0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxTeamKillsBeforeAutoBan;                         // 0x03F4(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsUntilKickedForAFK;                          // 0x03F8(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsUntilAutostartLobby;                        // 0x03FC(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinPlayersForAutostart;                            // 0x0400(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RoundTimerGameStart;                               // 0x0404(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RoundTimerBetweenMaps;                             // 0x0408(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReinforcementTimer;                                // 0x040C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RespawnTimer;                                      // 0x0410(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timelimit;                                         // 0x0414(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Scorelimit;                                        // 0x0418(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RoundsPerMap;                                      // 0x041C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAiEnabled;                                        // 0x0420(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EventID;                                           // 0x0424(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ClientNetSpeed;                                    // 0x0428(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void MakeLoadingMapOnlyURL(const class FString& MapURL);
	void SetServerSettings(float NewRoundTimerGameStart, float NewRoundTimerBetweenMaps, float NewReinforcementTimer, float NewTimelimit, int32 NewRoundsPerMap, int32 NewScorelimit, bool NewAiEnabled);
	void WriteOutConfig();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotGameSession")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotGameSession")
	}
	static class AReadyOrNotGameSession* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReadyOrNotGameSession>();
	}
};
DUMPER7_ASSERTS_AReadyOrNotGameSession;

// Class ReadyOrNot.ReadyOrNotGameUserSettings
// 0x02C8 (0x0410 - 0x0148)
class UReadyOrNotGameUserSettings final : public UGameUserSettings
{
public:
	uint8                                         Pad_148[0x18];                                     // 0x0148(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              K2_OnSettingsSaved;                                // 0x0160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          InitialOptionsIsSet;                               // 0x0170(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MasterSoundVolume;                                 // 0x0174(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MusicSoundVolume;                                  // 0x0178(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UISoundVolume;                                     // 0x017C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SFXSoundVolume;                                    // 0x0180(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAudioMixPreset                               AudioMixPreset;                                    // 0x0184(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VOIPVolume;                                        // 0x0188(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          VOIPAlwaysOn;                                      // 0x018C(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVoiceType                                    DefaultVOIPChannel;                                // 0x018D(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHitmarkerSfxEnabled;                              // 0x018E(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18F[0x1];                                      // 0x018F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MouseSensitivity;                                  // 0x0190(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FreelookSensitivity;                               // 0x0194(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadLookSensitivityVertical;                    // 0x0198(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadLookSensitivityHorizontal;                  // 0x019C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadAimSensitivityVertical;                     // 0x01A0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadAimSensitivityHorizontal;                   // 0x01A4(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadLookSensitivitySpeedUp;                     // 0x01A8(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadMovementInnerDeadzone;                      // 0x01AC(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadLookInnerDeadzone;                          // 0x01B0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GyroVerticalLookSensitivity;                       // 0x01B4(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GyroHorizontalLookSensitivity;                     // 0x01B8(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GyroVerticalAimSensitivity;                        // 0x01BC(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GyroHorizontalAimSensitivity;                      // 0x01C0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AimAssistIntensity;                                // 0x01C8(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RadialMenuUseLeftStick;                            // 0x01D8(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCommandMenuForGamepad;                         // 0x01D9(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGamepadConfirmationPreset                    RadialMenuConfirmationPreset;                      // 0x01DA(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1DB[0x5];                                      // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 GyroActiveMode;                                    // 0x01E0(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ForceFeedbackEnabled;                              // 0x01F0(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ForceFeedbackIntensity;                            // 0x01F4(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeakerIntensity;                                  // 0x01F8(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TargetLocale;                                      // 0x0200(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           HostRegion;                                        // 0x0210(0x0008)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  PreferredRegions;                                  // 0x0218(0x0020)(Config, NativeAccessSpecifierPublic)
	float                                         FieldOfView;                                       // 0x0238(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponFieldOfView;                                 // 0x023C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWeaponFOVPreset                              WeaponFOVPreset;                                   // 0x0240(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseVerticalFOV;                                   // 0x0241(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_242[0x2];                                      // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LadderRollSensitivity;                             // 0x0244(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bToggleADS;                                        // 0x0248(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHoldCrouch;                                       // 0x0249(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPS5AdaptiveFireTriggers;                          // 0x024A(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPS5AdaptiveAimTriggers;                           // 0x024B(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTogglePS5Gyro;                                    // 0x024C(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertStickLayout;                                // 0x024D(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSwitchBumpersTriggers;                            // 0x024E(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertButtonLayout;                               // 0x024F(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertTriggersLayout;                             // 0x0250(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertGyroVertical;                               // 0x0251(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertGyroHorizontal;                             // 0x0252(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsingAlternateControls;                           // 0x0253(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxShellsInWorld;                                  // 0x0254(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxShellLifeTime;                                  // 0x0258(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseMeshPainting;                                  // 0x025C(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LastConnectedServerIP;                             // 0x0260(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IconScale;                                         // 0x0270(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickThrowScale;                                   // 0x0274(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWorldDecalsEnabled;                               // 0x0278(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WorldDecalScreenFadeSize;                          // 0x027C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WorldDecalDensity;                                 // 0x0280(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FireModeDisplayOption;                             // 0x0284(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TeamViewFPS;                                       // 0x0288(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTeamViewFPSEnabled;                               // 0x028C(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowFPS;                                          // 0x028D(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowHUD;                                          // 0x028E(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowCompass;                                      // 0x028F(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowWeaponHUD;                                    // 0x0290(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowMagazineHUD;                                  // 0x0291(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowChat;                                         // 0x0292(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableHUDSwaying;                                 // 0x0293(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowHotkeyHints;                                  // 0x0294(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowHealthIcons;                                  // 0x0295(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowCommandContextHint;                           // 0x0296(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bZoomADS;                                          // 0x0297(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSendMapStatistics;                                // 0x0298(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EScoreReadoutMode                             ScoreReadoutMode;                                  // 0x0299(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESwatCommand                                  DefaultCommand;                                    // 0x029A(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESwatCommand                                  DefaultDoorUnknownCommand;                         // 0x029B(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESwatCommand                                  DefaultDoorOpenCommand;                            // 0x029C(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESwatCommand                                  DefaultDoorLockedCommand;                          // 0x029D(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESwatCommand                                  DefaultDoorUnlockedCommand;                        // 0x029E(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29F[0x1];                                      // 0x029F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DefaultCommandOption;                              // 0x02A0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ViewDistanceQuality;                               // 0x02A4(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AntiAliasingQuality;                               // 0x02A8(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ShadowQuality;                                     // 0x02AC(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PostProcessQuality;                                // 0x02B0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TextureQuality;                                    // 0x02B4(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EffectsQuality;                                    // 0x02B8(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GlobalIlluminationQuality;                         // 0x02BC(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReflectionQuality;                                 // 0x02C0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnablePerObjectShadows;                           // 0x02C4(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DefaultDoorUnknownCommandOption;                   // 0x02C8(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DefaultDoorOpenCommandOption;                      // 0x02CC(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DefaultDoorLockedCommandOption;                    // 0x02D0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DefaultDoorUnlockedCommandOption;                  // 0x02D4(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCurvedHUD;                                        // 0x02D8(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          b2DReloadIcons;                                    // 0x02D9(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowPlayerNamePlates;                             // 0x02DA(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowPlayerIcon;                                   // 0x02DB(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowTeamStatus;                                   // 0x02DC(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMirrorReflectionEnabled;                          // 0x02DD(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMirrorInLobbyOnly;                                // 0x02DE(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2DF[0x1];                                      // 0x02DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MirrorFPS;                                         // 0x02E0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PiPFPS;                                            // 0x02E4(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPiPFPSEnabled;                                    // 0x02E8(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDepthOfField;                                     // 0x02E9(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMotionBlur;                                       // 0x02EA(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2EB[0x1];                                      // 0x02EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MotionBlurStrength;                                // 0x02EC(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PiPResolutionScale;                                // 0x02F0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SafeZoneX;                                         // 0x02F4(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SafeZoneY;                                         // 0x02F8(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Gamma;                                             // 0x02FC(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GraphicsPresetIndex;                               // 0x0300(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowButtonPrompts;                                // 0x0304(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertMousePitch;                                 // 0x0305(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertMouseYaw;                                   // 0x0306(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertGamepadHorizontal;                          // 0x0307(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertGamepadVertical;                            // 0x0308(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExperimentalFeatures;                             // 0x0309(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowControlsOnScreen;                             // 0x030A(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowHesitationBar;                                // 0x030B(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRayTracingEnabled;                                // 0x030C(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRayTracingReflectionsEnabled;                     // 0x030D(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRayTracingShadowsEnabled;                         // 0x030E(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRayTracingAmbientOcclusionEnabled;                // 0x030F(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_310[0x4];                                      // 0x0310(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DlssQualitySetting;                                // 0x0314(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FrameGenerationSetting;                            // 0x0318(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FSRQualitySetting;                                 // 0x031C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MicInputGain;                                      // 0x0320(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InputAudioDevice;                                  // 0x0328(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFrameLimitEnabled;                                // 0x0338(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemSelectionInterfaceType                   ItemSelectionInterface;                            // 0x0339(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGrenadeThrowSettingType                      GrenadeThrowType;                                  // 0x033A(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EShotgunReloadType                            ShotgunLoadType;                                   // 0x033B(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEmptyMagReloadType                           EmptyMagReloadType;                                // 0x033C(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOptiwandViewMode                             OptiwandViewMode;                                  // 0x033D(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33E[0x2];                                      // 0x033E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DMOAddress;                                        // 0x0340(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DMOGameMode;                                       // 0x0350(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeamType                                     DMOTeamType;                                       // 0x0360(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMirrorReflectionSettings              MirrorReflectionSettings;                          // 0x0364(0x0008)(Config, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseHighReadyStyle;                                // 0x036C(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBounceLightEnabled;                               // 0x036D(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFlashlightShadowsEnabled;                         // 0x036E(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bServerSideChecksum;                               // 0x036F(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bJoinModdedServers;                                // 0x0370(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowModdedPlayers;                               // 0x0371(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCrossplayEnabled;                                 // 0x0372(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReflexMode;                                        // 0x0373(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReflexGameToRenderLatencyInMSEnabled;             // 0x0374(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReflexGameLatencyInMSEnabled;                     // 0x0375(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReflexRenderLatencyInMSEnabled;                   // 0x0376(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReflexFlashIndicatorEnabled;                      // 0x0377(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EColorVisionDeficiency                        ColorVisionDeficiency;                             // 0x0378(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ColorVisionDeficiencyStrength;                     // 0x037C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHighlightWeapons;                                 // 0x0380(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWorldSpaceActionPrompts;                          // 0x0381(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_382[0x2];                                      // 0x0382(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InterfaceAspectRatio;                              // 0x0384(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableSubtitles;                                  // 0x0388(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESubtitlesSize                                SubtitlesSize;                                     // 0x0389(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38A[0x6];                                      // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SubtitlesLocale;                                   // 0x0390(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SubtitlesBackgroundOpacity;                        // 0x03A0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SubtitlesSpeed;                                    // 0x03A4(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReplayEnabled;                                    // 0x03A8(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A9[0x3];                                      // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UserInterfaceScale;                                // 0x03AC(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandheldUserInterfaceScale;                        // 0x03B0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebugOverlayEnabled;                              // 0x03B4(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B5[0x3];                                      // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, bool>                       DisabledInputs;                                    // 0x03B8(0x0050)(Config, NativeAccessSpecifierPublic)
	uint32                                        ConfigVersion;                                     // 0x0408(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ResetAccessibilityOptions();
	void ResetAudioOptions();
	void ResetGamepadControlsSettings();
	void ResetGamepadRadialMenuSettings();
	void ResetGamepadSchemeSettings();
	void ResetGameplayOptions();
	void ResetGraphicsOptions();
	void ResetKeybinds();
	void SetDefaultGraphicsPreset();
	bool UpdateCloudFromSettings(const class FString& Filename);
	bool UpdateSettingsFromCloud(const class FString& Filename);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotGameUserSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotGameUserSettings")
	}
	static class UReadyOrNotGameUserSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotGameUserSettings>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotGameUserSettings;

// Class ReadyOrNot.ReadyOrNotGameUserSettingsCloud
// 0x0010 (0x0038 - 0x0028)
class UReadyOrNotGameUserSettingsCloud final : public USaveGame
{
public:
	class FString                                 CloudData;                                         // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotGameUserSettingsCloud")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotGameUserSettingsCloud")
	}
	static class UReadyOrNotGameUserSettingsCloud* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotGameUserSettingsCloud>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotGameUserSettingsCloud;

// Class ReadyOrNot.VOIPTalkerWidget
// 0x0060 (0x0328 - 0x02C8)
class UVOIPTalkerWidget : public UUserWidget
{
public:
	TMap<class AReadyOrNotPlayerState*, class UVOIPTalkerEntryWidget*> StateToTalker;                // 0x02C8(0x0050)(BlueprintVisible, ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UVerticalBox*                           TalkersList;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UVOIPTalkerEntryWidget>     TalkerWidget;                                      // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VOIPTalkerWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VOIPTalkerWidget")
	}
	static class UVOIPTalkerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVOIPTalkerWidget>();
	}
};
DUMPER7_ASSERTS_UVOIPTalkerWidget;

// Class ReadyOrNot.ReadyOrNotGameUserSettingsSubsystem
// 0x0010 (0x0040 - 0x0030)
class UReadyOrNotGameUserSettingsSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotGameUserSettingsSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotGameUserSettingsSubsystem")
	}
	static class UReadyOrNotGameUserSettingsSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotGameUserSettingsSubsystem>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotGameUserSettingsSubsystem;

// Class ReadyOrNot.ReadyOrNotGauntletTestController
// 0x0010 (0x0040 - 0x0030)
class UReadyOrNotGauntletTestController final : public UGauntletTestController
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void StartTesting();
	void StopProfiling();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotGauntletTestController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotGauntletTestController")
	}
	static class UReadyOrNotGauntletTestController* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotGauntletTestController>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotGauntletTestController;

// Class ReadyOrNot.ReadyOrNotInputComponent
// 0x0000 (0x0160 - 0x0160)
class UReadyOrNotInputComponent final : public UEnhancedInputComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotInputComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotInputComponent")
	}
	static class UReadyOrNotInputComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotInputComponent>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotInputComponent;

// Class ReadyOrNot.ReadyOrNotInputModifierDeadZone
// 0x0010 (0x0038 - 0x0028)
class UReadyOrNotInputModifierDeadZone final : public UInputModifier
{
public:
	EDeadZoneType                                 Type;                                              // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UpperThreshold;                                    // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDeadzoneStick                                DeadzoneStick;                                     // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotInputModifierDeadZone")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotInputModifierDeadZone")
	}
	static class UReadyOrNotInputModifierDeadZone* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotInputModifierDeadZone>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotInputModifierDeadZone;

// Class ReadyOrNot.ReadyOrNotInputModifierAimInversion
// 0x0000 (0x0028 - 0x0028)
class UReadyOrNotInputModifierAimInversion final : public UInputModifier
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotInputModifierAimInversion")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotInputModifierAimInversion")
	}
	static class UReadyOrNotInputModifierAimInversion* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotInputModifierAimInversion>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotInputModifierAimInversion;

// Class ReadyOrNot.ReadyOrNotInputModifierResponseCurveExponential
// 0x0000 (0x0028 - 0x0028)
class UReadyOrNotInputModifierResponseCurveExponential final : public UInputModifier
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotInputModifierResponseCurveExponential")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotInputModifierResponseCurveExponential")
	}
	static class UReadyOrNotInputModifierResponseCurveExponential* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotInputModifierResponseCurveExponential>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotInputModifierResponseCurveExponential;

// Class ReadyOrNot.SwatCommandWidget
// 0x0600 (0x08C8 - 0x02C8)
class USwatCommandWidget : public UUserWidget
{
public:
	uint8                                         Pad_2C8[0x10];                                     // 0x02C8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DirectoryStringOverride;                           // 0x02D8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 DirectoryString;                                   // 0x02E8(0x0010)(BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 LastActorBeforeGoingIntoSubPage;                   // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_300[0x4];                                      // 0x0300(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastSubCommandPageIndex;                           // 0x0304(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSwatCommand>                   ParentCommands;                                    // 0x0308(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSwatCommand>                   ActiveCommandPage;                                 // 0x0318(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSwatCommand>                   PreviousActiveCommandPage;                         // 0x0328(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FKey>                           CommandCombo;                                      // 0x0338(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	ETeamType                                     ActiveTeamType;                                    // 0x0348(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ETeamType                                     PreviousActiveTeamType;                            // 0x0349(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ETeamType                                     OverrideActiveTeamType;                            // 0x034A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bOverrideActiveTeamType : 1;                       // 0x034B(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	ETeamType                                     ExecutionTeamType;                                 // 0x034C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESwatCommand                                  DefaultDoorOpenCommand;                            // 0x034D(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESwatCommand                                  DefaultDoorUnknownCommand;                         // 0x034E(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESwatCommand                                  DefaultCheckDoorCommand;                           // 0x034F(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESwatCommand                                  DefaultDoorLockedCommand;                          // 0x0350(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESwatCommand                                  DefaultDoorUnlockedCommand;                        // 0x0351(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_352[0xEE];                                     // 0x0352(0x00EE)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LastContextActor;                                  // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHitResult                             ContextualData;                                    // 0x0448(0x00E8)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_530[0xE8];                                     // 0x0530(0x00E8)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             LastExecutedCommandContextualData;                 // 0x0618(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UFMODEvent*                             OpenMenuEvent;                                     // 0x0700(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             OpenSubCommandMenuEvent;                           // 0x0708(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                             ExecuteCommandEvent;                               // 0x0710(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ABaseGrenade>               Flashbang;                                         // 0x0718(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ABaseGrenade>               Stinger;                                           // 0x0720(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ABaseGrenade>               CSGas;                                             // 0x0728(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         GamepadScale;                                      // 0x0730(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bHoldingQueueCommandKey : 1;                       // 0x0734(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_735[0x3];                                      // 0x0735(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UScaleBox*                              QueueScaleBox;                                     // 0x0738(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScaleBox*                              ScaleBox;                                          // 0x0740(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                               SizeBox;                                           // 0x0748(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           VB_Commands;                                       // 0x0750(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           VB_Queue;                                          // 0x0758(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           VB_SwatCommand;                                    // 0x0760(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandEntryWidget*                SwatCommandEntry_1;                                // 0x0768(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandEntryWidget*                SwatCommandEntry_2;                                // 0x0770(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandEntryWidget*                SwatCommandEntry_3;                                // 0x0778(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandEntryWidget*                SwatCommandEntry_4;                                // 0x0780(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandEntryWidget*                SwatCommandEntry_5;                                // 0x0788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandEntryWidget*                SwatCommandEntry_6;                                // 0x0790(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandEntryWidget*                SwatCommandEntry_7;                                // 0x0798(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandEntryWidget*                SwatCommandEntry_8;                                // 0x07A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandEntryWidget*                SwatCommandEntry_9;                                // 0x07A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandEntryWidget*                SwatCommandEntry_10;                               // 0x07B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandEntryWidget*                SwatCommandIssued;                                 // 0x07B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwatCommandEntryWidget*                Back;                                              // 0x07C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7C8[0x10];                                     // 0x07C8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class URichTextBlock*                         txt_QueueBinding;                                  // 0x07D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextWidget*                            txt_QueueStatus;                                   // 0x07E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextWidget*                            CommandDirectoryText;                              // 0x07E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 DivTop;                                            // 0x07F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 DivBottom;                                         // 0x07F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           RedTeamColor;                                      // 0x0800(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           BlueTeamColor;                                     // 0x0810(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           GoldTeamColor;                                     // 0x0820(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_830[0x98];                                     // 0x0830(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoCommand(const struct FSwatCommand& Command, bool bFromQueue, ETeamType ActiveTeamOverride, const struct FHitResult& ContextualDataOverride, bool bOverrideContextualData);
	bool GetSubCommands(const struct FSwatCommand& Command, TArray<struct FSwatCommand>* OutSubCommands);
	void InitEntryWidget(class USwatCommandEntryWidget* Entry, const struct FSwatCommand& InSwatCommand, ETeamType Team, bool bLast);
	void OnClose();
	void OnCommandIssued(int32 Index_0, const struct FSwatCommand& Command, bool bFromDefault);
	void OnInputKey();
	void OnInputMethodChanged(const ECommonInputType InputMethod);
	void OnOpen();
	void OnPageViewUpdateBP();

	struct FKey ConvertIntToInputKey(int32 int_0) const;
	ETeamType GetActiveTeam() const;
	struct FKey GetCommandInput(class FName InName) const;
	struct FKey GetInputBack() const;
	struct FKey GetInputEight() const;
	struct FKey GetInputFive() const;
	struct FKey GetInputFour() const;
	struct FKey GetInputNine() const;
	struct FKey GetInputOne() const;
	struct FKey GetInputQueue() const;
	struct FKey GetInputSeven() const;
	struct FKey GetInputSix() const;
	struct FKey GetInputThree() const;
	struct FKey GetInputTwo() const;
	bool HasQueuedCommandForActiveTeam() const;
	bool HasQueuedCommandForTeam(ETeamType TeamType) const;
	class USwatCommandEntryWidget* IndexToEntryWidget(uint8 Index_0) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SwatCommandWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SwatCommandWidget")
	}
	static class USwatCommandWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USwatCommandWidget>();
	}
};
DUMPER7_ASSERTS_USwatCommandWidget;

// Class ReadyOrNot.ReadyOrNotLoadoutManager
// 0x0420 (0x0448 - 0x0028)
class UReadyOrNotLoadoutManager final : public UObject
{
public:
	uint8                                         Pad_28[0x50];                                      // 0x0028(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<TSubclassOf<class ABaseWeapon>, struct FStoredWeaponAttachments> StoredAttachmentsByWeapon; // 0x0078(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Name, const struct FSavedLoadout& Loadout)> OnPresetApplied; // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnAvailablePresetsChanged;                         // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const class FString& Name)> OnCustomizationPresetApplied;          // 0x00F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_100[0x50];                                     // 0x0100(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0150(0x02E8)(NativeAccessSpecifierPrivate)
	EEquippingSwat                                ActiveSwatMember;                                  // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULoadoutManager*                        LoadoutManager;                                    // 0x0440(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ApplyCustomizationPreset(const class FString& Name_0);
	void ApplyPreset(const class FString& Name_0);
	bool AttachmentIsEquipped(TSubclassOf<class UWeaponAttachment> WeaponAttachment, EWeaponAttachmentType AttachmentType);
	void CustomizationPresetApplied(const class FString& Name_0);
	void CustomizationPresetsChanged();
	void DecrementGrenadeSlotCount(TSubclassOf<class ABaseItem> SlotItem);
	void DecrementPrimarySlotCount(class FName AmmoType);
	void DecrementSecondarySlotCount(class FName AmmoType);
	void DecrementTacticalSlotCount(TSubclassOf<class ABaseItem> SlotItem);
	void DeleteCustomizationPreset(const class FString& Name_0);
	void DeletePreset(const class FString& Name_0);
	void DoSaveActiveLoadout();
	void DoSaveLoadout(EEquippingSwat SwatMember, const struct FSavedLoadout& Loadout);
	EEquippingSwat FStringToEquippingSwat(const class FString& Name_0);
	class UArmourMaterial* GetActiveArmorMaterial();
	TSubclassOf<class ABaseItem> GetActiveBodyArmor();
	TSubclassOf<class ABaseItem> GetActiveFacewear();
	TSubclassOf<class ABaseItem> GetActiveHeadwear();
	TSubclassOf<class ABaseItem> GetActiveHelmetMount();
	struct FSavedLoadout GetActiveLoadout();
	TSubclassOf<class ABaseItem> GetActiveLongTactical();
	ENVGStyle GetActiveNvgStyle();
	TSubclassOf<class ABaseWeapon> GetActivePrimary();
	TSubclassOf<class UWeaponAttachment> GetActivePrimaryAttachmentByType(EWeaponAttachmentType AttachmentType);
	TSubclassOf<class ABaseWeapon> GetActiveSecondary();
	TSubclassOf<class UWeaponAttachment> GetActiveSecondaryAttachmentByType(EWeaponAttachmentType AttachmentType);
	EEquippingSwat GetActiveSwatMember();
	class FString GetActiveSwatMemberLabel();
	class FText GetAmmunitionCaliber(class FName AmmunitionName);
	class FText GetAmmunitionDescription(class FName AmmunitionName);
	class FText GetAmmunitionDisplayName(class FName AmmunitionName);
	EArmourCoverage GetArmorCoverage();
	class FText GetArmorCoverageText(EArmourCoverage Coverage);
	TArray<class UArmourMaterial*> GetArmorMaterials();
	TArray<TSubclassOf<class UWeaponAttachment>> GetAttachmentByWeaponAndType(class ABaseWeapon* Weapon, EWeaponAttachmentType Type);
	TArray<EWeaponAttachmentType> GetAvailableAttachmentTypesByWeapon(TSubclassOf<class ABaseWeapon> BaseWeapon);
	TSoftObjectPtr<class UTexture2D> GetBodyArmorItemImage(class ABaseItem* Item);
	TArray<class ABaseItem*> GetBodyArmors();
	class FText GetCurrentPresetDisplayName();
	int32 GetCurrentSlotCount();
	struct FSavedLoadout GetDefaultPreset();
	TArray<class ABaseItem*> GetFacewears();
	int32 GetGrenadeSlotCount(TSubclassOf<class ABaseItem> SlotItem);
	TSoftObjectPtr<class UTexture2D> GetHeadwearItemImage(class ABaseItem* Item);
	TArray<class ABaseItem*> GetHeadwears();
	TArray<class ABaseItem*> GetHelmetMounts();
	TArray<class ABaseItem*> GetItemsByLoadoutCategory(ELoadoutCategory LoadoutCategory);
	TSoftObjectPtr<class UTexture2D> GetLongTacticalItemImage(class ABaseItem* Item);
	int32 GetMaximumSlotCount();
	struct FSavedLoadout GetPreset(const class FString& Name_0);
	int32 GetPreviewCurrentSlotCount(const struct FSavedLoadout& PreviewLoadout);
	int32 GetPreviewGrenadeSlotCount(const struct FSavedLoadout& PreviewLoadout, TSubclassOf<class ABaseItem> SlotItem);
	int32 GetPreviewMaximumSlotCount(const struct FSavedLoadout& PreviewLoadout);
	int32 GetPreviewPrimarySlotCount(const struct FSavedLoadout& PreviewLoadout, class FName AmmoType);
	int32 GetPreviewSecondarySlotCount(const struct FSavedLoadout& PreviewLoadout, class FName AmmoType);
	int32 GetPreviewSlotCount(const struct FSavedLoadout& PreviewLoadout, TSubclassOf<class ABaseItem> SlotItem);
	int32 GetPreviewTacticalSlotCount(const struct FSavedLoadout& PreviewLoadout, TSubclassOf<class ABaseItem> SlotItem);
	TArray<class FName> GetPrimaryAmmoTypes();
	int32 GetPrimarySlotCount(class FName AmmoType);
	TSoftObjectPtr<class UTexture2D> GetPrimaryWeaponImage(class ABaseItem* Item);
	TArray<class FName> GetSecondaryAmmoTypes();
	int32 GetSecondarySlotCount(class FName AmmoType);
	TSoftObjectPtr<class UTexture2D> GetSecondaryWeaponImage(class ABaseItem* Item);
	int32 GetSlotCount(TSubclassOf<class ABaseItem> SlotItem);
	class UWeaponAttachment* GetStoredAttachmentByWeaponAndType(TSubclassOf<class ABaseWeapon> Weapon, EWeaponAttachmentType Type);
	int32 GetTacticalSlotCount(TSubclassOf<class ABaseItem> SlotItem);
	void IncrementGrenadeSlotCount(TSubclassOf<class ABaseItem> SlotItem);
	void IncrementPrimarySlotCount(class FName AmmoType);
	void IncrementSecondarySlotCount(class FName AmmoType);
	void IncrementTacticalSlotCount(TSubclassOf<class ABaseItem> SlotItem);
	bool ItemIsInActiveLoadout(TSubclassOf<class ABaseItem> Item);
	EEquippingSwat NextActiveSwatMember();
	EEquippingSwat PreviousActiveSwatMember();
	void ResetCustomizationToDefault();
	void ResetLoadoutToDefault();
	void SanitizeActiveLoadout();
	void SaveCustomizationPreset(const class FString& Name_0);
	void SavePreset(const class FString& Name_0, bool bSaveCustomization);
	void SetActiveBodyArmor(TSubclassOf<class ABaseItem> Armor);
	void SetActiveFacewear(TSubclassOf<class ABaseItem> Facewear);
	void SetActiveHeadwear(TSubclassOf<class ABaseItem> Headwear);
	void SetActiveHelmetMount(TSubclassOf<class ABaseItem> HelmetMount);
	void SetActiveLoadout(const struct FSavedLoadout& Loadout);
	void SetActiveLoadoutByName(const class FString& LoadoutName);
	void SetActiveLongTactical(TSubclassOf<class ABaseItem> LongTactical);
	void SetActiveNvgStyle(ENVGStyle NvgStyle);
	void SetActivePrimary(TSubclassOf<class ABaseWeapon> Primary);
	void SetActivePrimarySkin(TSubclassOf<class USkinComponent> Skin);
	void SetActiveSecondary(TSubclassOf<class ABaseWeapon> Secondary);
	void SetActiveSecondarySkin(TSubclassOf<class USkinComponent> Skin);
	void SetActiveSwatMember(EEquippingSwat SwatMember);
	void SetArmorCoverage(EArmourCoverage ArmorCoverage);
	void SetArmorMaterial(class UArmourMaterial* ArmorMaterial);
	void SetPrimaryAttachment(TSubclassOf<class UWeaponAttachment> WeaponAttachment, EWeaponAttachmentType AttachmentType);
	void SetSecondaryAttachment(TSubclassOf<class UWeaponAttachment> WeaponAttachment, EWeaponAttachmentType AttachmentType);
	void UnequipPresetFromSwatMember(EEquippingSwat SwatMember);
	void UpdateCustomizationPresetName(const class FString& OldName, const class FString& NewName);

	TArray<class FString> GetAllPresetNames() const;
	class FString GetCurrentCustomizationPresetName() const;
	class FString GetCustomizationPresetBySwat(EEquippingSwat SwatMember) const;
	TArray<class FString> GetCustomizationPresetNames() const;
	class FText GetDefaultCustomizationPresetName() const;
	class FText GetDefaultPresetName() const;
	class FText GetNextDefaultPresetName(const TArray<class FString>& PresetNames) const;
	bool IsCurrentCustomizationPresetDirty() const;
	void UpdatePresetName(const class FString& OldName, const class FString& NewName) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotLoadoutManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotLoadoutManager")
	}
	static class UReadyOrNotLoadoutManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotLoadoutManager>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotLoadoutManager;

// Class ReadyOrNot.TutorialWidget
// 0x0098 (0x04B0 - 0x0418)
class UTutorialWidget : public UCommonActivatableWidget
{
public:
	bool                                          bUsingGamepad;                                     // 0x0418(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DescriptionIconSize;                               // 0x0420(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_430[0x80];                                     // 0x0430(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideMainWidget();
	void OnInputMethodChanged(const ECommonInputType InputMethod);
	void RefreshWidget(ECommonInputType InputType);
	void SetData(const struct FTutorialWidgetData& InData);
	void ShowMainWidget();

	class FText GetDescription() const;
	bool GetShowFooter() const;
	class FText GetTitle() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialWidget")
	}
	static class UTutorialWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialWidget>();
	}
};
DUMPER7_ASSERTS_UTutorialWidget;

// Class ReadyOrNot.ReadyOrNotLoadoutHelper
// 0x0000 (0x0028 - 0x0028)
class UReadyOrNotLoadoutHelper final : public UBlueprintFunctionLibrary
{
public:
	static struct FRosterLoadout GetRosterCharacterLoadout(class UWorld* WorldContext, class URosterCharacter* Character);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotLoadoutHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotLoadoutHelper")
	}
	static class UReadyOrNotLoadoutHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotLoadoutHelper>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotLoadoutHelper;

// Class ReadyOrNot.ReadyOrNotMathLibrary
// 0x0000 (0x0028 - 0x0028)
class UReadyOrNotMathLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FVector CalculateLocationOnSphere(const struct FVector& Origin, float Radius, float Angle, float Phi);
	static struct FVector2D CalculatePositionOnCircle(const struct FVector2D& Origin, float Radius, float Angle);
	static struct FVector2D CalculatePositionOnEllipse(const struct FVector2D& Origin, float RadiusX, float RadiusY, float Angle);
	static struct FVector GenerateRandomLocationOnSphere(const struct FVector& Origin, float Radius);
	static float GetLastKeyTime_FloatCurve(const struct FRuntimeFloatCurve& InCurve);
	static float KeepAngleAbove0(float Angle);
	static float KeepAngleBelow360(float Angle);
	static float WrapAngleIfOutOfBounds(float Angle, float MinBounds, float MaxBounds);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotMathLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotMathLibrary")
	}
	static class UReadyOrNotMathLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotMathLibrary>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotMathLibrary;

// Class ReadyOrNot.NavArea_FlankingAvoidanceArea
// 0x0000 (0x0048 - 0x0048)
class UNavArea_FlankingAvoidanceArea final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_FlankingAvoidanceArea")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_FlankingAvoidanceArea")
	}
	static class UNavArea_FlankingAvoidanceArea* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_FlankingAvoidanceArea>();
	}
};
DUMPER7_ASSERTS_UNavArea_FlankingAvoidanceArea;

// Class ReadyOrNot.NavArea_RepositionBlockingArea
// 0x0000 (0x0048 - 0x0048)
class UNavArea_RepositionBlockingArea final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_RepositionBlockingArea")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_RepositionBlockingArea")
	}
	static class UNavArea_RepositionBlockingArea* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_RepositionBlockingArea>();
	}
};
DUMPER7_ASSERTS_UNavArea_RepositionBlockingArea;

// Class ReadyOrNot.NavArea_LockedDoor
// 0x0000 (0x0048 - 0x0048)
class UNavArea_LockedDoor final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_LockedDoor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_LockedDoor")
	}
	static class UNavArea_LockedDoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_LockedDoor>();
	}
};
DUMPER7_ASSERTS_UNavArea_LockedDoor;

// Class ReadyOrNot.NavArea_ClosedDoor
// 0x0000 (0x0048 - 0x0048)
class UNavArea_ClosedDoor final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_ClosedDoor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_ClosedDoor")
	}
	static class UNavArea_ClosedDoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_ClosedDoor>();
	}
};
DUMPER7_ASSERTS_UNavArea_ClosedDoor;

// Class ReadyOrNot.NavArea_TrappedDoor
// 0x0000 (0x0048 - 0x0048)
class UNavArea_TrappedDoor final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_TrappedDoor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_TrappedDoor")
	}
	static class UNavArea_TrappedDoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_TrappedDoor>();
	}
};
DUMPER7_ASSERTS_UNavArea_TrappedDoor;

// Class ReadyOrNot.NavArea_HasBeenOpenedDoor
// 0x0000 (0x0048 - 0x0048)
class UNavArea_HasBeenOpenedDoor final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_HasBeenOpenedDoor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_HasBeenOpenedDoor")
	}
	static class UNavArea_HasBeenOpenedDoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_HasBeenOpenedDoor>();
	}
};
DUMPER7_ASSERTS_UNavArea_HasBeenOpenedDoor;

// Class ReadyOrNot.NavArea_Player
// 0x0000 (0x0048 - 0x0048)
class UNavArea_Player final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_Player")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_Player")
	}
	static class UNavArea_Player* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_Player>();
	}
};
DUMPER7_ASSERTS_UNavArea_Player;

// Class ReadyOrNot.NavArea_SwatAlpha
// 0x0000 (0x0048 - 0x0048)
class UNavArea_SwatAlpha final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_SwatAlpha")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_SwatAlpha")
	}
	static class UNavArea_SwatAlpha* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_SwatAlpha>();
	}
};
DUMPER7_ASSERTS_UNavArea_SwatAlpha;

// Class ReadyOrNot.NavArea_SwatBeta
// 0x0000 (0x0048 - 0x0048)
class UNavArea_SwatBeta final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_SwatBeta")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_SwatBeta")
	}
	static class UNavArea_SwatBeta* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_SwatBeta>();
	}
};
DUMPER7_ASSERTS_UNavArea_SwatBeta;

// Class ReadyOrNot.NavArea_SwatDelta
// 0x0000 (0x0048 - 0x0048)
class UNavArea_SwatDelta final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_SwatDelta")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_SwatDelta")
	}
	static class UNavArea_SwatDelta* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_SwatDelta>();
	}
};
DUMPER7_ASSERTS_UNavArea_SwatDelta;

// Class ReadyOrNot.NavArea_CivilianA
// 0x0000 (0x0048 - 0x0048)
class UNavArea_CivilianA final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_CivilianA")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_CivilianA")
	}
	static class UNavArea_CivilianA* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_CivilianA>();
	}
};
DUMPER7_ASSERTS_UNavArea_CivilianA;

// Class ReadyOrNot.NavArea_CivilianB
// 0x0000 (0x0048 - 0x0048)
class UNavArea_CivilianB final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_CivilianB")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_CivilianB")
	}
	static class UNavArea_CivilianB* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_CivilianB>();
	}
};
DUMPER7_ASSERTS_UNavArea_CivilianB;

// Class ReadyOrNot.SWATCharacter
// 0x0050 (0x2830 - 0x27E0)
class ASWATCharacter : public ACyberneticCharacter
{
public:
	uint8                                         Pad_27E0[0x40];                                    // 0x27E0(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class URosterCharacter*                       RosterCharacter;                                   // 0x2820(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2828[0x8];                                     // 0x2828(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void PlayOnShotDialogue(bool bIsFriendly);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SWATCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SWATCharacter")
	}
	static class ASWATCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASWATCharacter>();
	}
};
DUMPER7_ASSERTS_ASWATCharacter;

// Class ReadyOrNot.NavArea_CivilianD
// 0x0000 (0x0048 - 0x0048)
class UNavArea_CivilianD final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_CivilianD")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_CivilianD")
	}
	static class UNavArea_CivilianD* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_CivilianD>();
	}
};
DUMPER7_ASSERTS_UNavArea_CivilianD;

// Class ReadyOrNot.TutorialGS
// 0x0480 (0x0EC0 - 0x0A40)
class ATutorialGS final : public ACoopGS
{
public:
	struct FTutorialMissionData                   CurrentTutorialData;                               // 0x0A40(0x0300)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  TutorialMenuLevel;                                 // 0x0D40(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelStreaming*                        TutorialMenuStreamedLevel;                         // 0x0D68(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelStreaming*                        CurrentTutorialStreamedLevel;                      // 0x0D70(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  ShootingRangeLevel;                                // 0x0D78(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  KillHouseLevel;                                    // 0x0DA0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  BasicControlsLevel;                                // 0x0DC8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  MirrorgunLevel;                                    // 0x0DF0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  StackUpLevel;                                      // 0x0E18(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  ArrestLevel;                                       // 0x0E40(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  GrenadesLevel;                                     // 0x0E68(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  MovementLevel;                                     // 0x0E90(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EB8[0x2];                                      // 0x0EB8(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bFinishedUsingTutorialMenu;                        // 0x0EBA(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EBB[0x5];                                      // 0x0EBB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TSoftObjectPtr<class UWorld> GetCurrentTutorialStreamedLevel();
	void OnPostUpdateSwatCommands(class USwatCommandWidget* Widget, TArray<struct FSwatCommand>* SwatCommands);
	void SetCurrentTutorialData(const struct FTutorialMissionData& TutorialData);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialGS")
	}
	static class ATutorialGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATutorialGS>();
	}
};
DUMPER7_ASSERTS_ATutorialGS;

// Class ReadyOrNot.NavArea_CivilianE
// 0x0000 (0x0048 - 0x0048)
class UNavArea_CivilianE final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_CivilianE")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_CivilianE")
	}
	static class UNavArea_CivilianE* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_CivilianE>();
	}
};
DUMPER7_ASSERTS_UNavArea_CivilianE;

// Class ReadyOrNot.NavArea_SuspectA
// 0x0000 (0x0048 - 0x0048)
class UNavArea_SuspectA final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_SuspectA")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_SuspectA")
	}
	static class UNavArea_SuspectA* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_SuspectA>();
	}
};
DUMPER7_ASSERTS_UNavArea_SuspectA;

// Class ReadyOrNot.NavArea_SuspectC
// 0x0000 (0x0048 - 0x0048)
class UNavArea_SuspectC final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_SuspectC")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_SuspectC")
	}
	static class UNavArea_SuspectC* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_SuspectC>();
	}
};
DUMPER7_ASSERTS_UNavArea_SuspectC;

// Class ReadyOrNot.NavArea_SuspectD
// 0x0000 (0x0048 - 0x0048)
class UNavArea_SuspectD final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_SuspectD")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_SuspectD")
	}
	static class UNavArea_SuspectD* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_SuspectD>();
	}
};
DUMPER7_ASSERTS_UNavArea_SuspectD;

// Class ReadyOrNot.NavArea_SuspectE
// 0x0000 (0x0048 - 0x0048)
class UNavArea_SuspectE final : public UNavArea
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavArea_SuspectE")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavArea_SuspectE")
	}
	static class UNavArea_SuspectE* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavArea_SuspectE>();
	}
};
DUMPER7_ASSERTS_UNavArea_SuspectE;

// Class ReadyOrNot.ReadyOrNotNavigationSystem
// 0x0000 (0x1590 - 0x1590)
class UReadyOrNotNavigationSystem final : public UNavigationSystemV1
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotNavigationSystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotNavigationSystem")
	}
	static class UReadyOrNotNavigationSystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotNavigationSystem>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotNavigationSystem;

// Class ReadyOrNot.NavQuery_DoorTest
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_DoorTest final : public UNavigationQueryFilter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_DoorTest")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_DoorTest")
	}
	static class UNavQuery_DoorTest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_DoorTest>();
	}
};
DUMPER7_ASSERTS_UNavQuery_DoorTest;

// Class ReadyOrNot.TextWidget
// 0x0078 (0x0340 - 0x02C8)
class UTextWidget : public UUserWidget
{
public:
	class UCommonTextBlock*                       txt_Text;                                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   CurrentText;                                       // 0x02D0(0x0018)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FSlateFontInfo                         CurrentFont;                                       // 0x02E8(0x0058)(BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TextWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TextWidget")
	}
	static class UTextWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTextWidget>();
	}
};
DUMPER7_ASSERTS_UTextWidget;

// Class ReadyOrNot.NavQuery_SwatBreachAndClear
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_SwatBreachAndClear final : public UNavQuery_Swat
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_SwatBreachAndClear")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_SwatBreachAndClear")
	}
	static class UNavQuery_SwatBreachAndClear* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_SwatBreachAndClear>();
	}
};
DUMPER7_ASSERTS_UNavQuery_SwatBreachAndClear;

// Class ReadyOrNot.NavQuery_SwatAlpha
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_SwatAlpha final : public UNavQuery_Swat
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_SwatAlpha")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_SwatAlpha")
	}
	static class UNavQuery_SwatAlpha* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_SwatAlpha>();
	}
};
DUMPER7_ASSERTS_UNavQuery_SwatAlpha;

// Class ReadyOrNot.NavQuery_SwatBeta
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_SwatBeta final : public UNavQuery_Swat
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_SwatBeta")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_SwatBeta")
	}
	static class UNavQuery_SwatBeta* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_SwatBeta>();
	}
};
DUMPER7_ASSERTS_UNavQuery_SwatBeta;

// Class ReadyOrNot.NavQuery_SwatDelta
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_SwatDelta final : public UNavQuery_Swat
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_SwatDelta")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_SwatDelta")
	}
	static class UNavQuery_SwatDelta* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_SwatDelta>();
	}
};
DUMPER7_ASSERTS_UNavQuery_SwatDelta;

// Class ReadyOrNot.NavQuery_Civilian
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_Civilian final : public UNavigationQueryFilter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_Civilian")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_Civilian")
	}
	static class UNavQuery_Civilian* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_Civilian>();
	}
};
DUMPER7_ASSERTS_UNavQuery_Civilian;

// Class ReadyOrNot.NavQuery_Suspect
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_Suspect : public UNavigationQueryFilter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_Suspect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_Suspect")
	}
	static class UNavQuery_Suspect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_Suspect>();
	}
};
DUMPER7_ASSERTS_UNavQuery_Suspect;

// Class ReadyOrNot.NavQuery_RepositioningSuspect
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_RepositioningSuspect final : public UNavQuery_Suspect
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_RepositioningSuspect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_RepositioningSuspect")
	}
	static class UNavQuery_RepositioningSuspect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_RepositioningSuspect>();
	}
};
DUMPER7_ASSERTS_UNavQuery_RepositioningSuspect;

// Class ReadyOrNot.NavQuery_GasFleeingSuspect
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_GasFleeingSuspect final : public UNavigationQueryFilter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_GasFleeingSuspect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_GasFleeingSuspect")
	}
	static class UNavQuery_GasFleeingSuspect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_GasFleeingSuspect>();
	}
};
DUMPER7_ASSERTS_UNavQuery_GasFleeingSuspect;

// Class ReadyOrNot.NavQuery_NoiseCheck
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_NoiseCheck final : public UNavigationQueryFilter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_NoiseCheck")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_NoiseCheck")
	}
	static class UNavQuery_NoiseCheck* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_NoiseCheck>();
	}
};
DUMPER7_ASSERTS_UNavQuery_NoiseCheck;

// Class ReadyOrNot.NavQuery_NoCSGas
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_NoCSGas final : public UNavigationQueryFilter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_NoCSGas")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_NoCSGas")
	}
	static class UNavQuery_NoCSGas* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_NoCSGas>();
	}
};
DUMPER7_ASSERTS_UNavQuery_NoCSGas;

// Class ReadyOrNot.NavQuery_Awareness
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_Awareness final : public UNavigationQueryFilter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_Awareness")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_Awareness")
	}
	static class UNavQuery_Awareness* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_Awareness>();
	}
};
DUMPER7_ASSERTS_UNavQuery_Awareness;

// Class ReadyOrNot.NavQuery_SearchAndSecure
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_SearchAndSecure final : public UNavigationQueryFilter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_SearchAndSecure")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_SearchAndSecure")
	}
	static class UNavQuery_SearchAndSecure* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_SearchAndSecure>();
	}
};
DUMPER7_ASSERTS_UNavQuery_SearchAndSecure;

// Class ReadyOrNot.NavQuery_MoveToExit
// 0x0000 (0x0048 - 0x0048)
class UNavQuery_MoveToExit final : public UNavigationQueryFilter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NavQuery_MoveToExit")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NavQuery_MoveToExit")
	}
	static class UNavQuery_MoveToExit* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavQuery_MoveToExit>();
	}
};
DUMPER7_ASSERTS_UNavQuery_MoveToExit;

// Class ReadyOrNot.ReadyOrNotPathFollowingComp
// 0x0058 (0x0320 - 0x02C8)
class UReadyOrNotPathFollowingComp final : public UPathFollowingComponent
{
public:
	float                                         HoleTraversalCooldown;                             // 0x02C8(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2CC[0x24];                                     // 0x02CC(0x0024)(Fixing Size After Last Property [ Dumper-7 ])
	class ADoor*                                  LastUsedDoorLink;                                  // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AWallHoleTraversal*                     LastUsedWallHole;                                  // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNavLinkCustomComponent*                LastUsedDoorLinkComp;                              // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class ADoor*                                  PendingDoor;                                       // 0x0310(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EPendingDoorReason                            PendingDoorReason;                                 // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnHoleTraversalFinished(class UBaseActivity* Activity, class ACyberneticController* Controller);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotPathFollowingComp")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotPathFollowingComp")
	}
	static class UReadyOrNotPathFollowingComp* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotPathFollowingComp>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotPathFollowingComp;

// Class ReadyOrNot.ReadyOrNotPlayerCameraManager
// 0x0000 (0x23C0 - 0x23C0)
class AReadyOrNotPlayerCameraManager final : public APlayerCameraManager
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotPlayerCameraManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotPlayerCameraManager")
	}
	static class AReadyOrNotPlayerCameraManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReadyOrNotPlayerCameraManager>();
	}
};
DUMPER7_ASSERTS_AReadyOrNotPlayerCameraManager;

// Class ReadyOrNot.ReadyOrNotPlayerController
// 0x04D0 (0x0D28 - 0x0858)
class AReadyOrNotPlayerController : public APlayerController
{
public:
	uint8                                         Pad_858[0x8];                                      // 0x0858(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgressionComponent*                  ProgressionComp;                                   // 0x0860(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_868[0x1];                                      // 0x0868(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bClientModded;                                     // 0x0869(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_86A[0x1E];                                     // 0x086A(0x001E)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bShouldShowMouseCursor;                            // 0x0888(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_889[0x7];                                      // 0x0889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class APawn* PossessedPawn)> OnPawnPossessed;                      // 0x0890(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnExitSettingsMenu;                                // 0x08A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bIsOutOfBounds)> OnOutOfBoundsChanged;                        // 0x08B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnPreClientTravel;                                 // 0x08C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_8D0[0x20];                                     // 0x08D0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RespawnTimeLeft;                                   // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8F4[0x4];                                      // 0x08F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            TabMenuWidget;                                     // 0x08F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                TabMenuWidgetClass;                                // 0x0900(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            SubtitlesWidget;                                   // 0x0908(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_910[0x8];                                      // 0x0910(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class ACameraActor*                           SpectateCamera;                                    // 0x0918(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ULevelStreaming*>                StreamingLevels;                                   // 0x0920(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_930[0x8];                                      // 0x0930(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StreamingLevel;                                    // 0x0938(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StreamingOptions;                                  // 0x0948(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_958[0x48];                                     // 0x0958(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ReplicatedMapList;                                 // 0x09A0(0x0010)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const TArray<class FString>& MapList)> OnMapListReplicated;        // 0x09B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         VoteAntiSpamDebouncer;                             // 0x09C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C4[0x4];                                      // 0x09C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVoteData                              MyVoteData;                                        // 0x09C8(0x0030)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	bool                                          bStatsProfiledQueued;                              // 0x09F8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9F9[0x7];                                      // 0x09F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UUserWidget>>        ProtectedWidgetClasses;                            // 0x0A00(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_A10[0x18];                                     // 0x0A10(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bCanOpenOptionsMenu;                               // 0x0A28(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A29[0x7];                                      // 0x0A29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class UUserWidget*>       CreatedWidgetMap;                                  // 0x0A30(0x0050)(ExportObject, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	class USpectatorCharacterHUD*                 SpectatorHUDWidget;                                // 0x0A80(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASpectatorPawn*                         NormalSpectatorPawn;                               // 0x0A88(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASpectatePawn*                          DeadSpectatorPawn;                                 // 0x0A90(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A98[0x10];                                     // 0x0A98(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class ASwatAutomationManager*                 SwatAutomationManager;                             // 0x0AA8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class AActor*, float>                    DebugActorList;                                    // 0x0AB0(0x0050)(NativeAccessSpecifierPublic)
	uint8                                         Pad_B00[0x30];                                     // 0x0B00(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnHudWidgetsClearedComplete;                       // 0x0B30(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnLoadingScreenCleared;                            // 0x0B40(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          TestCube;                                          // 0x0B50(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     TestMaterial;                                      // 0x0B58(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B60[0x8];                                      // 0x0B60(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bStartedCoopAsSpectator;                           // 0x0B68(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B69[0x7];                                      // 0x0B69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             LastKilledCharacter;                               // 0x0B70(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B78[0x8];                                      // 0x0B78(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UUASAimAssistConfigDataAsset*           AimAssistConfig_High;                              // 0x0B80(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUASAimAssistConfigDataAsset*           AimAssistConfigADS_High;                           // 0x0B88(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUASAimAssistConfigDataAsset*           AimAssistConfig_Medium;                            // 0x0B90(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUASAimAssistConfigDataAsset*           AimAssistConfigADS_Medium;                         // 0x0B98(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUASAimAssistConfigDataAsset*           AimAssistConfig_Low;                               // 0x0BA0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUASAimAssistConfigDataAsset*           AimAssistConfigADS_Low;                            // 0x0BA8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUASAimAssistConfigDataAsset*           AimAssistConfig_Off;                               // 0x0BB0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUASAimAssistConfigDataAsset*           AimAssistConfigADS_Off;                            // 0x0BB8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UReadyOrNotAimAssistComponent*          ReadyOrNotAimAssistComponent;                      // 0x0BC0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsReplaySpectator;                                // 0x0BC8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC9[0x3F];                                     // 0x0BC9(0x003F)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bRTXOn)>   OnRTXDMOChanged;                                   // 0x0C08(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FRChatMessage>                  ChatMessages;                                      // 0x0C18(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         AimAssistPitch;                                    // 0x0C28(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AimAssistYaw;                                      // 0x0C2C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UInputMappingContext>    InputMapping;                                      // 0x0C30(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C58[0x8];                                      // 0x0C58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, struct FProjectileData>           ActiveProjectiles;                                 // 0x0C60(0x0050)(NativeAccessSpecifierPublic)
	uint8                                         Pad_CB0[0x8];                                      // 0x0CB0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AReadyOrNotPlayerController* PlayerController, bool bReady)> OnPlayerReadyChange; // 0x0CB8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_CC8[0x18];                                     // 0x0CC8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UUASAimAssistConfigDataAsset*           CurrentAimAssistConfig;                            // 0x0CE0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_CE8[0x8];                                      // 0x0CE8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AimAssistIntensity;                                // 0x0CF0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bMotionControlsEnabled;                            // 0x0D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D01[0xF];                                      // 0x0D01(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackEffect*                   LightBarDamageTakenEffect;                         // 0x0D10(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPauseMenu_Wrapper*                     PauseMenu;                                         // 0x0D18(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D20[0x8];                                      // 0x0D20(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static float GetRespawnTimeRemaining();

	void AbortCover();
	void AcknowledgeVote(const struct FVoteData& CurrentVoteData);
	void AIEquipPrimary();
	void AIEquipSecondary();
	void AIHide();
	void AIStopHide();
	void ApplyCharacterSkin(const class FString& SkinName);
	void ApplyWeaponSkin(const class FString& SkinName);
	void ArrestAll(ETeamType TargetTeam);
	void ArrestAllButOne(ETeamType TargetTeam);
	void ArrestAllButOneCivilian();
	void ArrestAllButOneSuspect();
	void ArrestAllCivilians();
	void ArrestAllSuspects();
	void ArrestOne();
	void BeginVote(const class FString& Reason, const class FString& Question, bool bCanVoteNo);
	void BP_ClientWasKicked(const class FText& KickReason);
	void BP_HandleMessage(const struct FRChatMessage& ChatMessage);
	void BP_ReturnToMenu(const class FText& ReturnReason);
	bool CanDisableDeployable(int32 DeployableNum);
	bool CanDisablePersonnel(int32 PersonnelNum);
	bool CanEnableDeployable(int32 DeployableNum);
	bool CanEnablePersonnel(int32 PersonnelNum, int32 MapPointNum);
	bool CanSetDepotTo(int32 NewDepot, bool bSameDepot);
	bool CanSetSpawn(ETeamType Team, ESelectedSpawn NewSpawnPoint, bool bSameSpawn);
	void ChangeInputMode(bool bGameMode, bool bMouseCursorEnabled, class UWidget* Widget);
	void ClearAllStats();
	void ClearStat(const class FString& StatID);
	void Client_ClearHUDWidgets();
	void Client_CreateLoadingScreen(const class FString& Map, const class FString& Mode, const class FString& SessionName, bool bIsSeamlessTravel);
	void Client_CreateSpectatorWidget();
	void Client_CreateWidget(const class FString& WidgetName, bool bForceAddToWidgetStack, bool bIsEscapeKey);
	void Client_DisableUIMouse();
	void Client_GetStats();
	void Client_HideHUDWidgets();
	void Client_LocalReadyStateChanged(bool bReady);
	void Client_OnProjectileValidation(int32 ProjectileSeed, EServerValidationState Validation);
	void Client_PostLogin();
	void Client_RemoveWidget(TSubclassOf<class UUserWidget> Widget);
	void Client_SetControlRotation(const struct FRotator& NewControlRotation);
	void Client_SetViewTargetWithBlend(class APawn* NewViewTarget);
	void Client_UpdateWorldTime(float ServerTime, float SentClientTime);
	void ClientEndOnlineGame();
	void ClientJoinVoice(const class FString& OnlineSessionId, const int32& TeamNum);
	void ClientReceiveHitData(const struct FWeaponHitStats& Stats);
	void ClientSetNetSpeed(int32 NewNetSpeed);
	void ClientSetSpectatorCamera(const struct FVector& CameraLocation, const struct FRotator& CameraRotation);
	void ClientSpawned();
	void ClientStartOnlineGame();
	void ConsoleSetMaxPlayers(int32 MaxPlayers);
	class UUserWidget* CreateWidgetForPlayer(const class FString& WidgetName, bool bForceAddToWidgetStack, bool bIsEscapeKey);
	void DeleteAnyNonMeshComponents();
	void DestroyAllActorsOfName(const class FString& Name_0);
	void DestroyAllAI();
	void DestroyAllDecals();
	void DestroyAllDynamicLights();
	void DestroyAllExceptClosestCharacter();
	void DestroyAllExceptClosestDoor();
	void DestroyAllItemMeshes();
	void DestroyAllItems();
	void DestroyAllLights();
	void DestroyAllSuspects();
	void DestroyAllWidgets();
	void DestroyAllWorldDynamicItems();
	void DestroyEverything();
	void DestroySwatAnimation();
	void DestroySwatControllers();
	void DestroySwatInventoryItems();
	void DestroySwatTeam();
	void DetonateExplosiveVests(float InTimer);
	int32 DevMenuUnlockAchievement(const class FString& AchievementId);
	void DisableAllItemMaterials();
	void DisableAllItemTicks();
	void DisableAllMaterials();
	void DisableForceShowMouseCursor();
	void DisablePushToTalkGamepad();
	void DisableSkeletalMeshShadowCasting();
	void DisableWeaponFovShader();
	void DisplayAllPlayingFMODEvents();
	void DrawBlockingVolumes();
	void DropAllSuspectWeapons();
	void EnableAimAssistConfig();
	void EnablePlayerInput();
	void EnablePushToTalkGamepad();
	void EnableScopeAlignmentTool();
	void EnableWeaponFovShader();
	void EndVote();
	void Equip(const class FString& ItemName);
	void EquipAndDropEvidence();
	void EscapeMenu();
	void ExecuteLineTracePerfTest();
	void ExecuteSweepTraceMultiPerfTest();
	void ExecuteSweepTraceSinglePerfTest();
	void FlushDeadBodies();
	void FlushStats();
	void ForceAllTakeHostages(float InTimeToSurrenderHostage);
	void FreeVIP();
	bool GetGamepadPushToTalkEnabled();
	bool GetIsMotionControlsActive();
	void GetNetworkConnectionStatus(float* AvgLag, int32* OutLostPackets, int32* InLostPackets, int32* OutLostPacketPrcnt, int32* InLostPacketPrcnt);
	class FString GetPasswordOnConnection();
	class FString GetPrefferredTeamUniqueNetIdOnConnection();
	TArray<class FString> GetReplicatedMapRotation();
	ETeamType GetTeamType();
	EVoteState GetVote();
	void GibAllComponents();
	void GiveSWATRam();
	void HideAllItemMeshes();
	void HideAllSmallItemMeshes();
	void HideAllWeaponAttachments();
	void HideHUD();
	void InternalSaveStats();
	bool IsCameraFading();
	bool IsConsoleTarget();
	void JoinVoiceLobby(const class FString& InLobbyId);
	void Kill(float Time);
	void KillAll(ETeamType TargetTeam);
	void KillAllCivilians();
	void KillAllSuspects();
	void KillSWATTeam();
	void KnockoutAllEnemies();
	void LockAchievement(const class FString& AchievementId);
	void LockAllAchievements();
	void LockAllDoors();
	void LogGlobalStat(const class FString& StatID);
	void LogStat(const class FString& StatID);
	void LogTransactions();
	void MakeCrash();
	void Multicast_ForcePlanningRefresh();
	void Multicast_RemovePersonnelAtPoint(int32 PersonnelNum);
	void Multicast_SetPersonnelAtPoint(int32 PersonnelNum, int32 MapPointNum);
	void NotifyRespawnTime(float RespawnTime);
	void OnLevelOpen();
	void OnLocallyFiredProjectile(class ABulletProjectile* Projectile, int32 ProjectileIdentifier);
	void OnlyCastLocalPlayerDynamicShadow();
	void OnRep_Maplist();
	void OnSaveLoadout();
	void OnSessionJoinFailed();
	void OnSessionJoinSuccess();
	void OnStreamedLevelLoadedComplete();
	void OnStreamedLevelLoadedExecuteOpen();
	void OnStreamedLevelLoadedRemovingLoadingScreen();
	void OptimizeWorld();
	void PassMouseControlToValidWidget();
	void PlayAnimationFromLookupTable(const class FString& AnimationRowName);
	void PlayDamageTakenLightBarEffect();
	void PlayDeadAllEnemies();
	void PopulateDebugStats();
	void PresentVoteResult(const struct FVoteData& VoteResult, int32 YesVotes, int32 NoVotes);
	void PrintAllSceneComponentWhoseOriginIsZero();
	void PrintGPUBrand();
	void PS5ActivityEnd(class FString* Activity, int32 Outcome);
	void PS5ActivitySetAvailable(class FString* Activity, bool bAvailable);
	void PS5ActivityStart(class FString* Activity);
	void PS5ResetAllActiveActivities();
	void ReadyUp();
	void ReadyUp_Failsafe();
	void ReleaseVIP();
	void RemoveCharacterSkin();
	void RemoveHUD();
	void RemoveWeaponSkin();
	bool RemoveWidgetFromStack(const class FString& WidgetName);
	void ReplicateMapListIfAdmin();
	void ReportAll(ETeamType Team);
	void ReportAllCivilians();
	void ReportAllInstancedStaticMeshes();
	void ReportAllSuspects();
	void RequestVoteInput(const struct FVoteData& CurrentVoteData);
	void ResetAI(float Range);
	void ResetDoorLockStateKnowledge();
	void ResetKeybinds();
	void RetrieveChatLog(TArray<struct FRChatMessage>* OutMessages);
	void RosterInstantFinishStatus();
	void SaveChatMessage(const struct FRChatMessage& Message);
	bool SaveFileToUserCloud(const class FString& FullPath);
	void SavePerformanceStats();
	void SendChatMessage(const struct FRChatMessage& ChatMessage);
	void Server_AddLine(const struct FPlanningLine& Line);
	void Server_AddMarker(const struct FPlanningMarker& Marker);
	void Server_AdminAddMapToRotation(const class FString& MapURL);
	void Server_AdminAddMapToRotationAtIndex(const class FString& MapURL, int32 Idx);
	void Server_AdminBanPlayer(class APlayerState* BanningPlayerState);
	void Server_AdminKickPlayer(class APlayerState* KickingPlayerState, const class FText& ReasonOveride);
	void Server_AdminNextMap();
	void Server_AdminRemoveMapFromRotation(const class FString& MapURL);
	void Server_AdminRemoveMapFromRotationByIndex(int32 Idx);
	void Server_AdminRestartServer();
	void Server_BecomeVIP();
	void Server_DisableDeployable(int32 DeployableNum);
	void Server_DisablePersonnel(int32 PersonnelNum);
	void Server_EnableDeployable(int32 DeployableNum);
	void Server_EnablePersonnel(int32 PersonnelNum, int32 MapPointNum);
	void Server_Equip(const class FString& ItemName);
	void Server_LoginAsAdmin(const class FString& Password);
	void Server_ReferendumVoteNo();
	void Server_ReferendumVoteYes();
	void Server_ReleaseVIP();
	void Server_RemoveLine(int32 ID);
	void Server_RemoveMarker(int32 ID);
	void Server_RequestLoadoutChange(const struct FSavedLoadout& Loadout);
	void Server_RequestWorldTime(float ClientTime);
	void Server_RespawnAsLobby(TSubclassOf<class ASpectatorPawn> Class_0, const struct FTransform& SpawnTransform);
	void Server_SendChatMessage(const struct FRChatMessage& ChatMessage);
	void Server_SetDeployableDepot(int32 NewDepot);
	void Server_SetHasFinishedLoading();
	void Server_SetModded(bool bModded);
	void Server_SetPlatformTypes(int32 OnlinePlatformType, EGamePlatform GamePlatform);
	void Server_SetReadyState(bool bReady);
	void Server_SetSpawn(ETeamType SpawnTeam, ESelectedSpawn NewSpawnPoint);
	void Server_SetTeamType(ETeamType NewTeam);
	void Server_StartMapReferendum(TSubclassOf<class AMapReferendum> ReferendumClass, const class FString& MapURL);
	void Server_StartPlayerReferendum(TSubclassOf<class APlayerReferendum> ReferendumClass, class AReadyOrNotPlayerState* TargetPlayer);
	void Server_StartReferendum(TSubclassOf<class AReferendum> ReferendumClass);
	void Server_StartSpectating();
	void Server_StatFile(bool bStartStatFile);
	void Server_SwapPlayersTeam(class APlayerState* ps);
	void ServerStatFileStart();
	void ServerStatFileStop();
	void SetAimAssistIntensity(const class FString& NewAimAssistIntensity);
	void SetAllComponentsUseParentsBounds();
	void SetClubMusicMasterVolume(float Volume);
	void SetDualSenseMotionControlsEnabled(bool MotionControlsEnabled);
	void SetForceFeedbackIntensity(float ForceFeedbackIntensity);
	void SetMousePosition(float LocationX, float LocationY);
	void SetPreferredTeamUniqueNetIdOnConnection(const class FString& UniqueID);
	void SetRosterStressValue(float Stress);
	void SetRosterTrait(ERosterSquadPosition Position, class URosterTrait* Trait);
	void SetScorelimit(int32 Score);
	void SetServerPasswordOnConnection(const class FString& Password);
	void SetShouldShowMouseCursor(bool bShow);
	void SetSpeakerIntensity(float SpeakerIntensity);
	void SetTimelimit(float Time);
	void ShowCoopScoreChangeWidget(float ScoreChangeValue);
	void ShowHUD();
	void SkipTutorial();
	void SkipTutorialStep();
	void SoftWinCoop();
	void SpawnAI(const class FString& TableName, int32 Count);
	void SpawnAIAtLocation(const class FString& TableName, const struct FVector& Location, const struct FVector& MoveLocation);
	void SpawnBotsForGame(int32 BotCount);
	void SpawnRandomAI(int32 Count);
	void SpawnTrap(const class FString& TableName);
	void StartBleeding();
	void StartSpeaking();
	void StartSwatAutomation();
	void StopSpeaking();
	void StopSwatAutomation();
	void StopVoteInput();
	bool StreamInLevel(const class FString& NewLevel, const class FString& Options, class ULevelStreaming** OutStreamedLevel, const struct FLevelStreamOptions& LevelStreamOptions);
	bool StreamInSession(const struct FBlueprintSessionResult& SessionResult, bool bShouldCreateLoadingScreen);
	void SurrenderAll(ETeamType TargetTeam);
	void SurrenderAllCivilians();
	void SurrenderAllSuspects();
	void SwapAllItemSkeletalMeshesToCubes();
	void TakeDamageExec(float DamageAmount);
	void TeleportToNextRemainingAI();
	void TeleportUp();
	void TestMatchmakingServerCreateParty();
	void TestMatchmakingServerRefresh();
	void TestSendCrash();
	void ToggleDeployMenu();
	void ToggleGodModeOnEveryone();
	void ToggleRTXDMO();
	void TryCloseTablet(bool Unequip);
	void UnhideAllItemMeshes();
	void UnhideAllSmallItemMeshes();
	void UnhideAllWeaponAttachments();
	void UnlockAllAchievements();
	void UnlockAllDoors();
	void UpdateAchievementProgress(const class FString& ID, float Percent);
	void UpdateMotionControls(double* MotionControlPitch, double* MotionControlYaw);
	void UpdateMouseCursorVisibility();
	void UpdateStat(const class FString& StatID, int64 Value);
	void UpdateStatString(const class FString& StatID, const class FString& Value);
	void Vote(bool VoteYes);
	void WinCoop();

	bool IsOverlayHudVisible() const;
	void SecureAllEvidence() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotPlayerController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotPlayerController")
	}
	static class AReadyOrNotPlayerController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReadyOrNotPlayerController>();
	}
};
DUMPER7_ASSERTS_AReadyOrNotPlayerController;

// Class ReadyOrNot.ReadyOrNotPlayerState
// 0x0B28 (0x0E78 - 0x0350)
class AReadyOrNotPlayerState final : public APlayerState
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UProximityVoiceComponent*               ProximityVoiceComponent;                           // 0x0358(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_360[0x18];                                     // 0x0360(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bHasFinishedLoading;                               // 0x0378(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHosting;                                          // 0x0379(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37A[0x2];                                      // 0x037A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Kills;                                             // 0x037C(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         KillsThisLife;                                     // 0x0380(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TeamKills;                                         // 0x0384(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Arrests;                                           // 0x0388(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TimesArrested;                                     // 0x038C(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ArrestsThisLife;                                   // 0x0390(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Objectives;                                        // 0x0394(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Reports;                                           // 0x0398(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Evidence;                                          // 0x039C(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AEvidenceActor*>                 EvidenceActorsInPossession;                        // 0x03A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B0[0x8];                                      // 0x03B0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       LastCharacter;                                     // 0x03B8(0x0008)(Net, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageType>                DeathDamageType;                                   // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABaseMagazineWeapon*                    DeathWeapon;                                       // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFireMode                                     LastFireMode;                                      // 0x03D0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeadToPointDamage;                                // 0x03D1(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D2[0x6];                                      // 0x03D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             DeathTraceHit;                                     // 0x03D8(0x00E8)(BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class APlayerCharacter*                       DeathKiller;                                       // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Deaths;                                            // 0x04C8(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Incapacitations;                                   // 0x04CC(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageDealt;                                       // 0x04D0(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageReceived;                                    // 0x04D4(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PlayerSpawnTag;                                    // 0x04D8(0x0010)(BlueprintVisible, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E8[0x2];                                      // 0x04E8(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	ETeamType                                     Team;                                              // 0x04EA(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4EB[0x1];                                      // 0x04EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	EPlanningLineTeam                             PlanningTeam;                                      // 0x04EC(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          ServerSavedLoadout;                                // 0x04F0(0x02E8)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FSavedLoadout& NewLoadout)> OnPlayerLoadoutChanged;   // 0x07D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_7E8[0x1];                                      // 0x07E8(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bReady;                                            // 0x07E9(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSquadLeader;                                      // 0x07EA(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7EB[0x1D];                                     // 0x07EB(0x001D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          LastLoadout;                                       // 0x0808(0x02E8)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	float                                         PointsFromKills;                                   // 0x0AF0(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PointsFromDamage;                                  // 0x0AF4(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PointsFromArrests;                                 // 0x0AF8(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PointsFromObjective;                               // 0x0AFC(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PointsFromReportingKills;                          // 0x0B00(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PointsFromReportingArrests;                        // 0x0B04(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 OnlinePlatformType)> OnOnlinePlatformTypeChanged;            // 0x0B08(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(ETeamType Team)> OnTeamChanged;                                    // 0x0B18(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EPlanningLineTeam Team)> OnPlanningTeamChanged;                    // 0x0B28(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bIsInGame;                                         // 0x0B38(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bJoinInProgress;                                   // 0x0B39(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsVIP;                                            // 0x0B3A(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasVIP;                                           // 0x0B3B(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GrenadesThrown;                                    // 0x0B3C(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalYells;                                        // 0x0B40(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumberOrdersGiven;                                 // 0x0B44(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BulletsHit;                                        // 0x0B48(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BulletsHitThisLife;                                // 0x0B4C(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Headshots;                                         // 0x0B50(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OnlinePlatformType;                                // 0x0B54(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGamePlatform                                 GamePlatform;                                      // 0x0B58(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B59[0x3];                                      // 0x0B59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeAlive;                                         // 0x0B5C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B60[0x8];                                      // 0x0B60(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	EVoiceType                                    VoiceType;                                         // 0x0B68(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B69[0x7];                                      // 0x0B69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnVoiceChannelChanged;                             // 0x0B70(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_B80[0x38];                                     // 0x0B80(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             PushToTalkEndEvent;                                // 0x0BB8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_BC0[0x8];                                      // 0x0BC0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bTorsoInjured;                                     // 0x0BC8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeftArmInjured;                                   // 0x0BC9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRightArmInjured;                                  // 0x0BCA(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeftLegInjured;                                   // 0x0BCB(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRightLegInjured;                                  // 0x0BCC(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHeadInjured;                                      // 0x0BCD(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BCE[0x2];                                      // 0x0BCE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BulletsBlocked;                                    // 0x0BD0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HitsReceived;                                      // 0x0BD4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BD8[0x10];                                     // 0x0BD8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsReplaySpectator;                                // 0x0BE8(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BE9[0x3];                                      // 0x0BE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlanningPlayerNumber;                              // 0x0BEC(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlanningDrawingArray                  DrawingArray;                                      // 0x0BF0(0x0118)(Net, NativeAccessSpecifierPublic)
	struct FPlanningDrawing                       CurrentDrawing;                                    // 0x0D08(0x0028)(Net, NativeAccessSpecifierPublic)
	struct FSavedCustomization                    Customization;                                     // 0x0D30(0x0140)(Net, RepNotify, NativeAccessSpecifierPublic)
	uint8                                         Pad_E70[0x8];                                      // 0x0E70(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool HasEveryoneFinishedLoading(int32* OutTotal, int32* OutLoading, int32* OutLoaded);

	void Client_GrantAchievement(EAchievement AchievementType);
	void Client_IncreaseAchievementStat(EAchievementStats AchievementStat, int32 Value, class AActor* SourceActor, class AActor* SecondaryActor);
	void Client_LocalPlayerJoined();
	int32 GetDeathCount();
	int32 GetKillCount();
	void GetNetworkStatus(float* AvgLag);
	ETeamType GetPendingTeam();
	ETeamType GetTeam();
	EVoiceType GetVoiceType();
	bool IsOwnerOfPlayerState();
	bool IsSquadLeader();
	bool IsVipPlayerState();
	void Multicast_PlayerJoined(const class FString& UniqueNetId);
	void Multicast_PlayerLeft(const class FString& UniqueNetId);
	void Multicast_PushToTalk(bool bPushToTalk);
	void Notify_Died();
	void Notify_PendingChangeTeam(ETeamType NewTeamType);
	void OnRep_Customization();
	void OnRep_OnlinePlatormType();
	void OnRep_PlanningTeam();
	void OnRep_SquadLeader();
	void OnRep_Team();
	void OnRep_UpdateServerSavedLoadout();
	void OnRep_VoiceType();
	void Server_FinishDrawing();
	void Server_PushToTalk(bool bPushToTalk);
	void Server_SendUnlockedDLC(EGameVersionRestriction Dlc);
	void Server_SetCustomization(const struct FSavedCustomization& InCustomization);
	void Server_SetIsInGame(bool bNewIsInGame);
	void Server_SetLoadout(const struct FSavedLoadout& NewLoadout);
	void Server_SetPlanningTeam(EPlanningLineTeam NewTeam);
	void Server_SetPlayerName(class FName NewPlayerName);
	void Server_SetReady(bool bIsReady, const struct FSavedLoadout& NewLoadout);
	void Server_SetTeam(ETeamType NewTeam);
	void Server_SetVoiceType(EVoiceType NewVoiceType);
	void Server_StartDrawing(int32 Floor, const struct FVector2D& StartingPoint);
	void Server_UpdateDrawing(const struct FVector2D& NewPoint);
	void Server_UpdatePlayerSpawnTag(const class FString& NewTag);
	void ServerSetJoinedOnSquadLeader();
	void SetReady(bool bIsReady, const struct FSavedLoadout& NewLoadout);
	void SetTeam(ETeamType NewTeam);
	void UpdateScore();

	int32 GetPlanningPlayerNumber() const;
	bool IsTalking() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotPlayerState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotPlayerState")
	}
	static class AReadyOrNotPlayerState* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReadyOrNotPlayerState>();
	}
};
DUMPER7_ASSERTS_AReadyOrNotPlayerState;

// Class ReadyOrNot.ReadyOrNotRecastNavMesh
// 0x0008 (0x06A8 - 0x06A0)
class AReadyOrNotRecastNavMesh final : public ANotifyingRecastNavMesh
{
public:
	bool                                          bDrawStairPoints;                                  // 0x06A0(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_6A1[0x7];                                      // 0x06A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotRecastNavMesh")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotRecastNavMesh")
	}
	static class AReadyOrNotRecastNavMesh* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReadyOrNotRecastNavMesh>();
	}
};
DUMPER7_ASSERTS_AReadyOrNotRecastNavMesh;

// Class ReadyOrNot.ReadyOrNotSignificanceManager
// 0x0210 (0x0250 - 0x0040)
class UReadyOrNotSignificanceManager final : public UTickableWorldSubsystem
{
public:
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsMadeIrrelevantThisFrame;                     // 0x0058(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class AActor*>                         ActorsMadeRelevantThisFrame;                       // 0x0068(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class AActor*>                         ActorsMadeIrrelevant;                              // 0x0078(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsRelevantToSignificance;                      // 0x0090(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class AReadyOrNotCharacter*>           CharactersRelevantToSignificance;                  // 0x00A0(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<class USkeletalMeshComponent*, class USkeletalMesh*> SkeletalMeshLookupMap;                 // 0x00B0(0x0050)(ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<class USceneComponent*, struct FOptimizationAttachmentData> SceneCompAttachmentData;        // 0x0100(0x0050)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<class UStaticMeshComponent*, class UStaticMesh*> StaticMeshLookupMap;                       // 0x0150(0x0050)(ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class AReadyOrNotCharacter*>           IrrelevantPlayerCharacters;                        // 0x01A0(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B0[0x70];                                     // 0x01B0(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     RelevantViewpoints;                                // 0x0220(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                         PlayerViewTargets;                                 // 0x0230(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_240[0x10];                                     // 0x0240(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotSignificanceManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotSignificanceManager")
	}
	static class UReadyOrNotSignificanceManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotSignificanceManager>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotSignificanceManager;

// Class ReadyOrNot.ReadyOrNotSpinTestController
// 0x0058 (0x0088 - 0x0030)
class UReadyOrNotSpinTestController final : public UGauntletTestController
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void On60FPSTick();
	void StartTesting();
	void StopProfiling();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotSpinTestController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotSpinTestController")
	}
	static class UReadyOrNotSpinTestController* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotSpinTestController>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotSpinTestController;

// Class ReadyOrNot.ReadyOrNotStatics
// 0x0000 (0x0028 - 0x0028)
class UReadyOrNotStatics final : public UBlueprintFunctionLibrary
{
public:
	static bool DoesMapExist(const class FString& Map);
	static class AConversationManager* GetConversationManager();
	static class UReadyOrNotGameInstance* GetReadyOrNotGameInstance();
	static class AReadyOrNotGameMode* GetReadyOrNotGameMode();
	static class AReadyOrNotGameState* GetReadyOrNotGameState();
	static class AReadyOrNotLevelScript* GetReadyOrNotLevelScript();
	static class AReadyOrNotPlayerController* GetReadyOrNotPlayerController();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotStatics")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotStatics")
	}
	static class UReadyOrNotStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotStatics>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotStatics;

// Class ReadyOrNot.ReadyOrNotVoiceConfig
// 0x0120 (0x0148 - 0x0028)
class UReadyOrNotVoiceConfig final : public UGameplayConfig
{
public:
	TMap<class FString, struct FSequencedVOLookup> SequencedLookup;                                  // 0x0028(0x0050)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_78[0xD0];                                      // 0x0078(0x00D0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UReadyOrNotVoiceConfig* Get();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotVoiceConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotVoiceConfig")
	}
	static class UReadyOrNotVoiceConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotVoiceConfig>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotVoiceConfig;

// Class ReadyOrNot.ReadyOrNotWeaponAnimData
// 0x10C8 (0x10F8 - 0x0030)
class UReadyOrNotWeaponAnimData final : public UDataAsset
{
public:
	class UAnimSequenceBase*                      IdlePose_FP;                                       // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_FP;                                           // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Run_FP;                                            // 0x0040(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Walk_FP;                                           // 0x0048(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Run_Limp_FP;                                       // 0x0050(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Walk_Limp_FP;                                      // 0x0058(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                            Look_BS_FP;                                        // 0x0060(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Lowered_Up_Pose_FP;                                // 0x0068(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Lowered_Down_Pose_FP;                              // 0x0070(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      ADS_Run_FP;                                        // 0x0078(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      ADS_Walk_FP;                                       // 0x0080(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      ADS_Run_Limp_FP;                                   // 0x0088(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      ADS_Walk_Limp_FP;                                  // 0x0090(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_AFG_FP;                                   // 0x0098(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_VFG_FP;                                   // 0x00A0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_HSTOP_FP;                                 // 0x00A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_RK1_FP;                                   // 0x00B0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_CQR_FP;                                   // 0x00B8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_Low_TP;                                   // 0x00C0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_Up_TP;                                    // 0x00C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_Shld_TP;                                  // 0x00D0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_Sights_TP;                                // 0x00D8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_Ret_TP;                                   // 0x00E0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_Ovr_TP;                                   // 0x00E8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_IdlePose_Low_TP;                            // 0x00F0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_IdlePose_Up_TP;                             // 0x00F8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_IdlePose_Shld_TP;                           // 0x0100(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_IdlePose_Sights_TP;                         // 0x0108(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_IdlePose_Ret_TP;                            // 0x0110(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_IdlePose_Ovr_TP;                            // 0x0118(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Reload;                                            // 0x0120(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ReloadEmpty;                                       // 0x0140(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_Reload;                                     // 0x0160(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_ReloadEmpty;                                // 0x0180(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Tactical_Reload;                                   // 0x01A0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Tactical_ReloadEmpty;                              // 0x01C0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponAnim>                    ShellRack_Reload;                                  // 0x01E0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponAnim>                    ShellRack_ReloadEmpty;                             // 0x01F0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponAnim>                    ShellRack_ReloadRack;                              // 0x0200(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Tactical_Crouch_Reload;                            // 0x0210(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Tactical_Crouch_ReloadEmpty;                       // 0x0230(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            MeleeHit;                                          // 0x0250(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            MeleeMiss;                                         // 0x0270(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            FireSelect_Auto;                                   // 0x0290(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            FireSelect_Burst;                                  // 0x02B0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            FireSelect_Semi;                                   // 0x02D0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            FireSelect_Safe;                                   // 0x02F0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_FireSelect_Auto;                            // 0x0310(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_FireSelect_Burst;                           // 0x0330(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_FireSelect_Semi;                            // 0x0350(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_FireSelect_Safe;                            // 0x0370(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Reload_Start;                                      // 0x0390(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Reload_Loop;                                       // 0x03B0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Reload_End;                                        // 0x03D0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Reload_Start_Empty;                                // 0x03F0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Reload_Start_Empty_Single;                         // 0x0410(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Reload_Loop_Empty;                                 // 0x0430(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Reload_End_Empty;                                  // 0x0450(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_Reload_Start;                               // 0x0470(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_Reload_Loop;                                // 0x0490(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_Reload_End;                                 // 0x04B0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_Reload_Start_Empty;                         // 0x04D0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_Reload_Loop_Empty;                          // 0x04F0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_Reload_End_Empty;                           // 0x0510(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            MagazineCheck;                                     // 0x0530(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_MagazineCheck;                              // 0x0550(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            MagazineCheckSights;                               // 0x0570(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_MagazineCheckSights;                        // 0x0590(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponAnim>                    FireSingle;                                        // 0x05B0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponAnim>                    FireSingleSights;                                  // 0x05C0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            FireSingleLast;                                    // 0x05D0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            FireSingleSightsLast;                              // 0x05F0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            DryFire;                                           // 0x0610(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponAnim>                    Crouch_FireSingle;                                 // 0x0630(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponAnim>                    Crouch_FireSingleSights;                           // 0x0640(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_FireSingleLast;                             // 0x0650(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_FireSingleSightsLast;                       // 0x0670(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_Dryfire;                                    // 0x0690(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            FireLoop;                                          // 0x06B0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            FireLoopEnd;                                       // 0x06D0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            FireLoopSights;                                    // 0x06F0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            FireLoopSightsEnd;                                 // 0x0710(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_FireLoop;                                   // 0x0730(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_FireLoopEnd;                                // 0x0750(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_FireLoopSights;                             // 0x0770(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_FireLoopSightsEnd;                          // 0x0790(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Draw;                                              // 0x07B0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            DrawFirst;                                         // 0x07D0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_Draw;                                       // 0x07F0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_DrawFirst;                                  // 0x0810(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Holster;                                           // 0x0830(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_Holster;                                    // 0x0850(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            PullPin;                                           // 0x0870(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Throw;                                             // 0x0890(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            PullPinUnderarm;                                   // 0x08B0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ThrowUnderarm;                                     // 0x08D0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_PullPin;                                    // 0x08F0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_Throw;                                      // 0x0910(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_PullPinUnderarm;                            // 0x0930(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_ThrowUnderarm;                              // 0x0950(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            QuickThrow_PinPull;                                // 0x0970(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Quickthrow_Throw;                                  // 0x0990(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_QuickThrow_PinPull;                         // 0x09B0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_QuickThrow_Throw;                           // 0x09D0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            QuickThrow_Fast;                                   // 0x09F0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_QuickThrow_Fast;                            // 0x0A10(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Multitool_Use;                                     // 0x0A30(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Multitool_Use_End;                                 // 0x0A50(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Multitool_Cutters_To_Lockpick;                     // 0x0A70(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Multitool_Cutters_To_Knife;                        // 0x0A90(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Multitool_Lockpick_To_Cutters;                     // 0x0AB0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Multitool_Lockpick_To_Knife;                       // 0x0AD0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Multitool_Knife_To_Lockpick;                       // 0x0AF0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Multitool_Knife_To_Cutters;                        // 0x0B10(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Optiwand_Start_Screening;                          // 0x0B30(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Optiwand_End_Screening;                            // 0x0B50(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Charge_Valid_Plant_Start;                          // 0x0B70(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Charge_Valid_Plant_End;                            // 0x0B90(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            PlantCharge;                                       // 0x0BB0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            DetonateCharge;                                    // 0x0BD0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            EnableNVG;                                         // 0x0BF0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            DisableNVG;                                        // 0x0C10(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ShieldDownToUp;                                    // 0x0C30(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ShieldUpToDown;                                    // 0x0C50(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_ShieldDownToUp;                             // 0x0C70(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Crouch_ShieldUpToDown;                             // 0x0C90(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ShieldHit;                                         // 0x0CB0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            TabletDownToUp;                                    // 0x0CD0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            TabletUpToDown;                                    // 0x0CF0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            TabletSwitchCameraDown;                            // 0x0D10(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            TabletSwitchCameraUp;                              // 0x0D30(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            EvidencePickup;                                    // 0x0D50(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Yell;                                              // 0x0D70(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            RadioSelect;                                       // 0x0D90(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bRadioUsesNotifies;                                // 0x0DB0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DB1[0x7];                                      // 0x0DB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponAnim                            DoorPush;                                          // 0x0DB8(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ButtonPush;                                        // 0x0DD8(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            WeaponClearing;                                    // 0x0DF8(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ReactToSting;                                      // 0x0E18(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ReactToFlash;                                      // 0x0E38(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ReactToTaser;                                      // 0x0E58(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ReactToGas;                                        // 0x0E78(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ReactToPepperSpray;                                // 0x0E98(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ReactToSting_End;                                  // 0x0EB8(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ReactToFlash_End;                                  // 0x0ED8(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ReactToTaser_End;                                  // 0x0EF8(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ReactToGas_End;                                    // 0x0F18(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            ReactToPepperSpray_End;                            // 0x0F38(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Reload_Level_01;                                   // 0x0F58(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Reload_Level_02;                                   // 0x0F78(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Reload_Level_03;                                   // 0x0F98(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Recoil_Level_01;                                   // 0x0FB8(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Recoil_Level_02;                                   // 0x0FD8(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            Recoil_Level_03;                                   // 0x0FF8(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Grip_VFG_Body_FP_Fire;                             // 0x1018(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Grip_VFG_Body_FP_Fire_Last;                        // 0x1020(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Grip_VFG_Body_FP_Fire_Aim;                         // 0x1028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Grip_VFG_Body_FP_Fire_Aim_Last;                    // 0x1030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Grip_AFG_Body_FP_Fire;                             // 0x1038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Grip_AFG_Body_FP_Fire_Last;                        // 0x1040(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Grip_AFG_Body_FP_Fire_Aim;                         // 0x1048(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Grip_AFG_Body_FP_Fire_Aim_Last;                    // 0x1050(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            SpeedReload_OneTime;                               // 0x1058(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAnim                            SpeedReloadEmpty_OneTime;                          // 0x1078(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Reload_FP_Ads;                                     // 0x1098(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           ReloadEmpty_FP_Ads;                                // 0x10A0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Tactical_Reload_FP_Ads;                            // 0x10A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Tactical_ReloadEmpty_FP_Ads;                       // 0x10B0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEmptyReload;                                      // 0x10B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasRetentionAdditives;                            // 0x10B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasLoweredAdditives;                              // 0x10BA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasSightAdditives;                                // 0x10BB(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideFireAnimForGrip;                          // 0x10BC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseOneTimeSpeedReload;                            // 0x10BD(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10BE[0x2];                                     // 0x10BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      IdlePose_AFG_TP;                                   // 0x10C0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_VFG_TP;                                   // 0x10C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_HSTOP_TP;                                 // 0x10D0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_RK1_TP;                                   // 0x10D8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_CQR_TP;                                   // 0x10E0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_AI_Calm;                                  // 0x10E8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdlePose_AI_Aiming;                                // 0x10F0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReadyOrNotWeaponAnimData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReadyOrNotWeaponAnimData")
	}
	static class UReadyOrNotWeaponAnimData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyOrNotWeaponAnimData>();
	}
};
DUMPER7_ASSERTS_UReadyOrNotWeaponAnimData;

// Class ReadyOrNot.RealtimeWidget
// 0x0000 (0x02C8 - 0x02C8)
class URealtimeWidget : public UUserWidget
{
public:
	void OnSynchronizeProperties();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RealtimeWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RealtimeWidget")
	}
	static class URealtimeWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URealtimeWidget>();
	}
};
DUMPER7_ASSERTS_URealtimeWidget;

// Class ReadyOrNot.ReceiveAISenseUpdates
// 0x0000 (0x0000 - 0x0000)
class IReceiveAISenseUpdates final
{
public:
	void OnAIDamageSense(class ACyberneticController* InSenseController, const struct FAIStimulus& Stimulus, class AActor** OutOverrideSensedActor);
	void OnAIHearingSense(class ACyberneticController* InSenseController, const struct FAIStimulus& Stimulus, class AActor** OutOverrideSensedActor);
	void OnAIPerceptionSense(class ACyberneticController* InSenseController, const struct FAIStimulus& Stimulus, class AActor** OutOverrideSensedActor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReceiveAISenseUpdates")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReceiveAISenseUpdates")
	}
	static class IReceiveAISenseUpdates* GetDefaultObj()
	{
		return GetDefaultObjImpl<IReceiveAISenseUpdates>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IReceiveAISenseUpdates;

// Class ReadyOrNot.TeamStackUpActivity
// 0x0048 (0x0248 - 0x0200)
class UTeamStackUpActivity : public UTeamBaseActivity
{
public:
	class AStackUpActor*                          OccupiedStackUpActor;                              // 0x0200(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_208[0x40];                                     // 0x0208(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnterCheckStage();
	void EnterStackedStage();
	void EnterStackupStage();
	void ExitCheckStage();
	void ExitStackupStage();
	void OnDoorChecked();
	void OnDoorOpened();
	void PerformCheckStage(float DeltaTime, float Uptime);
	void PerformStackedStage(float DeltaTime, float Uptime);
	void PerformStackUpStage(float DeltaTime, float Uptime);

	bool CanPerformCheck() const;
	class ACyberneticCharacter* GetCharacterAtHighestSquadPositionInStackUpArea(EStackupGenArea StackUpArea) const;
	class ACyberneticCharacter* GetCharacterAtSquadPositionInStackUpArea(ESquadPosition SquadPosition, EStackupGenArea StackUpArea) const;
	bool IsCheckFinished() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TeamStackUpActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TeamStackUpActivity")
	}
	static class UTeamStackUpActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTeamStackUpActivity>();
	}
};
DUMPER7_ASSERTS_UTeamStackUpActivity;

// Class ReadyOrNot.ReflectionProbe
// 0x0028 (0x02C0 - 0x0298)
class AReflectionProbe final : public AActor
{
public:
	class UFMODAudioComponent*                    AudioComponent;                                    // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RoomSize;                                          // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Volume;                                            // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AReflectionProbe*>               SiblingProbes;                                     // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bDeleteOnRegeneration;                             // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReflectionProbe")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReflectionProbe")
	}
	static class AReflectionProbe* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReflectionProbe>();
	}
};
DUMPER7_ASSERTS_AReflectionProbe;

// Class ReadyOrNot.ReflectionProbeGenerator
// 0x0008 (0x02A0 - 0x0298)
class AReflectionProbeGenerator final : public AActor
{
public:
	class UFMODEvent*                             Event;                                             // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReflectionProbeGenerator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReflectionProbeGenerator")
	}
	static class AReflectionProbeGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReflectionProbeGenerator>();
	}
};
DUMPER7_ASSERTS_AReflectionProbeGenerator;

// Class ReadyOrNot.RegroupActivity
// 0x0008 (0x01F8 - 0x01F0)
class URegroupActivity final : public UBaseActivity
{
public:
	class AReadyOrNotCharacter*                   Target;                                            // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void EnterFallbackToSquadMemberState();
	void TickFallbackToSquadMemberState(float DeltaTime, float Uptime);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RegroupActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RegroupActivity")
	}
	static class URegroupActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<URegroupActivity>();
	}
};
DUMPER7_ASSERTS_URegroupActivity;

// Class ReadyOrNot.ReloadSafelyActivity
// 0x0010 (0x0200 - 0x01F0)
class UReloadSafelyActivity final : public UBaseActivity
{
public:
	class UAnimMontage*                           ReloadMontage;                                     // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ReloadFinished();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReloadSafelyActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReloadSafelyActivity")
	}
	static class UReloadSafelyActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReloadSafelyActivity>();
	}
};
DUMPER7_ASSERTS_UReloadSafelyActivity;

// Class ReadyOrNot.UObjectListener
// 0x0010 (0x02A8 - 0x0298)
class AUObjectListener final : public AActor
{
public:
	uint8                                         Pad_298[0x10];                                     // 0x0298(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UObjectListener")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UObjectListener")
	}
	static class AUObjectListener* GetDefaultObj()
	{
		return GetDefaultObjImpl<AUObjectListener>();
	}
};
DUMPER7_ASSERTS_AUObjectListener;

// Class ReadyOrNot.ReplayCameraPawn
// 0x0E38 (0x1180 - 0x0348)
class AReplayCameraPawn : public ASpectatorPawn
{
public:
	class UCameraComponent*                       PawnCamera;                                        // 0x0348(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReplaySpringArm*                       SpringArm;                                         // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFloatingPawnMovement*                  FloatingPawnMovement;                              // 0x0358(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPostProcessSettings                   PostProcessSettings;                               // 0x0360(0x06E0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FPostProcessSettings                   DefaultPostProcessSettings;                        // 0x0A40(0x06E0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         Sensitivity;                                       // 0x1120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RollAmount;                                        // 0x1124(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1128[0x4];                                     // 0x1128(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InitialMaxSpeed;                                   // 0x112C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InitialAcceleration;                               // 0x1130(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InitialDeceleration;                               // 0x1134(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1138[0x48];                                    // 0x1138(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReplayCameraPawn")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReplayCameraPawn")
	}
	static class AReplayCameraPawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReplayCameraPawn>();
	}
};
DUMPER7_ASSERTS_AReplayCameraPawn;

// Class ReadyOrNot.ReplayController
// 0x00A8 (0x0DD0 - 0x0D28)
class AReplayController : public AReadyOrNotPlayerController
{
public:
	uint8                                         Pad_D28[0x8];                                      // 0x0D28(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AReplaySplineActor*                     ReplaySplineActor;                                 // 0x0D30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TotalSplineTime;                                   // 0x0D38(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFollowingSpline;                                // 0x0D3C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D3D[0x3];                                      // 0x0D3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaSplineTime;                                   // 0x0D40(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESplineRotation                               SplineRotationType;                                // 0x0D44(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECameraState                                  CurrentCameraState;                                // 0x0D45(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D46[0x2];                                      // 0x0D46(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         SelectableActors;                                  // 0x0D48(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class AActor*                                 SelectedActor;                                     // 0x0D58(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SelectedActorIndex;                                // 0x0D60(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsReplayMenuOpen;                                 // 0x0D64(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D65[0x3];                                      // 0x0D65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UReplayControls*                        ReplayControls;                                    // 0x0D68(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AdjustableVerticalOffset;                          // 0x0D70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D74[0x14];                                     // 0x0D74(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            EscapeWidgetInstance;                              // 0x0D88(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D90[0x40];                                     // 0x0D90(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void ToggleThumbstickNavigation(bool bEnableThumbstickNavigation);

	void AddSplinePoint(const struct FVector& Location, const struct FRotator& Rotation);
	void ApplyCameraState();
	void ApplyNewCameraState();
	void BeginFollowingSpline();
	void ClearSplinePoints();
	class FString GetActorName(class AActor* Actor);
	TArray<class ACivilianCharacter*> GetAllCivilianAI();
	TArray<class APlayerCharacter*> GetAllPlayers();
	TArray<class ASuspectCharacter*> GetAllSuspectAI();
	TArray<class ASWATCharacter*> GetAllSwatAI();
	TArray<struct FSplinePoint> GetSplinePoints();
	void NextActor();
	void NextSelectableActor();
	void OnChangeSelectedActor();
	void OnDynamicLoad();
	void OnFirstDynamicLoad();
	void OnPauseMenuClosed();
	void OnPauseMenuOpened();
	void OnPlayerChangeCameraState(ECameraState NewState);
	void OnPostDynamicLoad();
	void OnScrubComplete();
	void OnScrubInitiated();
	void PauseReplay();
	void PreviousActor();
	void PreviousSelectableActor();
	void RefreshSelectableActors();
	void RemoveSplinePoint(int32 Index_0);
	void RevertPreviousCameraState();
	void SetCurrentReplayPlayRate(float PlayRate);
	void SetCurrentReplayTimeToSeconds(float Seconds);
	bool SetPaused(bool bDoPause);
	bool SetPausedState(bool bDoPause, bool bMuteAudio);
	void SetViewOverride();
	void SkipReplayBackward();
	void SkipReplayForward();
	void StopFollowingSpline();
	void ToggleHUD();

	float GetCurrentReplayCurrentTimeInSeconds() const;
	float GetCurrentReplayTotalTimeInSeconds() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReplayController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReplayController")
	}
	static class AReplayController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReplayController>();
	}
};
DUMPER7_ASSERTS_AReplayController;

// Class ReadyOrNot.ReplayControls
// 0x03C0 (0x07D8 - 0x0418)
class UReplayControls : public UCommonActivatableWidget
{
public:
	struct FScreenFooterEntry                     PlayInputAction;                                   // 0x0418(0x0078)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScreenFooterEntry                     SelectInputAction;                                 // 0x0490(0x0078)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScreenFooterEntry                     BackInputAction;                                   // 0x0508(0x0078)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScreenFooterEntry                     CameraModeInputAction;                             // 0x0580(0x0078)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScreenFooterEntry                     CameraZoomInputAction;                             // 0x05F8(0x0078)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScreenFooterEntry                     CycleActorInputAction;                             // 0x0670(0x0078)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScreenFooterEntry                     ResetToDefaultInputAction;                         // 0x06E8(0x0078)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScreenFooterEntry                     HideHUDInputAction;                                // 0x0760(0x0078)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	void NextActor();
	void PauseReplay();
	void PreviousActor();
	void SkipReplayBackward();
	void SkipReplayForward();
	void ToggleHUD();
	void UpdateMountedSocketSelections();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReplayControls")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReplayControls")
	}
	static class UReplayControls* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplayControls>();
	}
};
DUMPER7_ASSERTS_UReplayControls;

// Class ReadyOrNot.ReplaySplineActor
// 0x0018 (0x02B0 - 0x0298)
class AReplaySplineActor final : public AActor
{
public:
	class USplineComponent*                       SplineComponent;                                   // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRotator>                       SplinePointRotations;                              // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReplaySplineActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReplaySplineActor")
	}
	static class AReplaySplineActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReplaySplineActor>();
	}
};
DUMPER7_ASSERTS_AReplaySplineActor;

// Class ReadyOrNot.ReplaySpringArm
// 0x0000 (0x03A0 - 0x03A0)
class UReplaySpringArm final : public USpringArmComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReplaySpringArm")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReplaySpringArm")
	}
	static class UReplaySpringArm* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplaySpringArm>();
	}
};
DUMPER7_ASSERTS_UReplaySpringArm;

// Class ReadyOrNot.Reportable
// 0x0000 (0x0000 - 0x0000)
class IReportable final
{
public:
	bool CanReportNow();
	class FString GetSpeechTypeForReport();
	bool GetTocResponseOverride(class FString* OutTocLine);
	void ReportToTOC(class AReadyOrNotCharacter* Reporter, bool bPlayAnimation);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Reportable")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Reportable")
	}
	static class IReportable* GetDefaultObj()
	{
		return GetDefaultObjImpl<IReportable>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IReportable;

// Class ReadyOrNot.ReportableActor
// 0x00E8 (0x0380 - 0x0298)
class AReportableActor final : public AActor
{
public:
	uint8                                         Pad_298[0x20];                                     // 0x0298(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bReportableEnabled;                                // 0x02B8(0x0001)(Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasBeenReported;                                  // 0x02B9(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   ReportedBy;                                        // 0x02C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableOnNoMatchingObjective;                     // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableWhileMatchingObjectiveHidden;              // 0x02C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CA[0x6];                                      // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReportableName;                                    // 0x02D0(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                 ReportVoiceLine;                                   // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSpecificReportVoiceLines;                      // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFallbackToDefaultVoiceLine;                       // 0x02F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2FA[0x6];                                      // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         SpecificReportVoiceLines;                          // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bTocResponseOnReport;                              // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TocResponseVoiceLine;                              // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AReportableActor* ReportableActor, class AReadyOrNotCharacter* Reporter)> OnReported; // 0x0328(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0338(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVolumeShape                                  Shape;                                             // 0x0340(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BoxExtents;                                        // 0x0348(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0360(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZHeight;                                           // 0x0364(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        SceneComponent;                                    // 0x0368(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractableComponent*                 InteractableComponent;                             // 0x0370(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScoringComponent*                      ScoringComponent;                                  // 0x0378(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void DisableReportableIfNoMatchingObjective();
	void OnRep_bReportableEnabled();
	void SetReportableEnabled(bool bEnable);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReportableActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReportableActor")
	}
	static class AReportableActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReportableActor>();
	}
};
DUMPER7_ASSERTS_AReportableActor;

// Class ReadyOrNot.ReportReportableByTag
// 0x0010 (0x0330 - 0x0320)
class AReportReportableByTag final : public AObjective
{
public:
	uint32                                        NumReportsToComplete;                              // 0x0320(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                        CurrentReportCount;                                // 0x0324(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   ReportTag;                                         // 0x0328(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool HasReportedReportableByTag(const class FName& Tag);
	void OnReportableReported(class AReportableActor* Reportable, class AReadyOrNotCharacter* Reporter);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReportReportableByTag")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReportReportableByTag")
	}
	static class AReportReportableByTag* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReportReportableByTag>();
	}
};
DUMPER7_ASSERTS_AReportReportableByTag;

// Class ReadyOrNot.SuspectsAndCivilianManager
// 0x0090 (0x00D0 - 0x0040)
class USuspectsAndCivilianManager final : public UTickableWorldSubsystem
{
public:
	TArray<class ATrapActor*>                     InvestigatedTrap;                                  // 0x0040(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class ACyberneticCharacter*>           Suspects;                                          // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ACyberneticCharacter*>           Civilians;                                         // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         TimeSinceLastInvestigation;                        // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0xC];                                       // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, float>                    SpeechCooldownMap;                                 // 0x0080(0x0050)(Protected, NativeAccessSpecifierProtected)

public:
	void Server_PlaySharedBarkOrStartConversation(const class FString& SpeechRow, class ACyberneticCharacter* Speaker, float Cooldown);

	TArray<class ACyberneticCharacter*> GetAllSuspectsAndCivilians() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SuspectsAndCivilianManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SuspectsAndCivilianManager")
	}
	static class USuspectsAndCivilianManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<USuspectsAndCivilianManager>();
	}
};
DUMPER7_ASSERTS_USuspectsAndCivilianManager;

// Class ReadyOrNot.ReportTargetActivity
// 0x0010 (0x0200 - 0x01F0)
class UReportTargetActivity final : public UBaseActivity
{
public:
	TScriptInterface<class IReportable>           ReportTarget;                                      // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReportTargetActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReportTargetActivity")
	}
	static class UReportTargetActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReportTargetActivity>();
	}
};
DUMPER7_ASSERTS_UReportTargetActivity;

// Class ReadyOrNot.RepositionCombatMove
// 0x0008 (0x0238 - 0x0230)
class URepositionCombatMove final : public UBaseCombatMoveActivity
{
public:
	class ADoor*                                  TheDoor;                                           // 0x0230(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RepositionCombatMove")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RepositionCombatMove")
	}
	static class URepositionCombatMove* GetDefaultObj()
	{
		return GetDefaultObjImpl<URepositionCombatMove>();
	}
};
DUMPER7_ASSERTS_URepositionCombatMove;

// Class ReadyOrNot.RescueAllOfTheCivilians
// 0x0010 (0x0330 - 0x0320)
class ARescueAllOfTheCivilians final : public AObjective
{
public:
	uint8                                         Pad_320[0x10];                                     // 0x0320(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAISpawned();
	void OnCivilianKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RescueAllOfTheCivilians")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RescueAllOfTheCivilians")
	}
	static class ARescueAllOfTheCivilians* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARescueAllOfTheCivilians>();
	}
};
DUMPER7_ASSERTS_ARescueAllOfTheCivilians;

// Class ReadyOrNot.RescueCivilianByTag
// 0x0028 (0x0348 - 0x0320)
class ARescueCivilianByTag final : public AObjective
{
public:
	uint8                                         Pad_320[0x10];                                     // 0x0320(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CivilianTag;                                       // 0x0330(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotCharacter*                   civilian;                                          // 0x0338(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowIncapacitation;                              // 0x0340(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool HasNeutralizedCivilianByTag(bool* bArrested);
	void OnAISpawned();
	void OnCivilianKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RescueCivilianByTag")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RescueCivilianByTag")
	}
	static class ARescueCivilianByTag* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARescueCivilianByTag>();
	}
};
DUMPER7_ASSERTS_ARescueCivilianByTag;

// Class ReadyOrNot.RespondToPlayerGaze
// 0x0000 (0x0000 - 0x0000)
class IRespondToPlayerGaze final
{
public:
	void OnPlayerGazeEnded(class APlayerCharacter* Gazer);
	void OnPlayerGazeStarted(class APlayerCharacter* Gazer);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RespondToPlayerGaze")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RespondToPlayerGaze")
	}
	static class IRespondToPlayerGaze* GetDefaultObj()
	{
		return GetDefaultObjImpl<IRespondToPlayerGaze>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IRespondToPlayerGaze;

// Class ReadyOrNot.ROEManager
// 0x0078 (0x00A8 - 0x0030)
class UROEManager final : public UWorldSubsystem
{
public:
	uint8                                         Pad_30[0x20];                                      // 0x0030(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AReadyOrNotCharacter*, struct FROEViolationArrayContainer> ROEViolationMap;           // 0x0050(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UpdateDataFromConfig();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ROEManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ROEManager")
	}
	static class UROEManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UROEManager>();
	}
};
DUMPER7_ASSERTS_UROEManager;

// Class ReadyOrNot.RoNAnimInstance_HumanBase
// 0x1580 (0x18D0 - 0x0350)
class URoNAnimInstance_HumanBase final : public UAnimInstance
{
public:
	class URoNMoveStyleComponent*                 MoveStyleComponent;                                // 0x0348(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_350[0xC];                                      // 0x0350(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsStrafing;                                       // 0x035C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRoNStyleSlotData                      Slot0;                                             // 0x0360(0x0258)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FRoNStyleSlotData                      Slot1;                                             // 0x05B8(0x0258)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FRoNStyleSlotData                      Slot2;                                             // 0x0810(0x0258)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FRoNStyleSlotData                      Slot3;                                             // 0x0A68(0x0258)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FRoNStyleSlotData                      Slot4;                                             // 0x0CC0(0x0258)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FRoNStyleSlotData                      Slot5;                                             // 0x0F18(0x0258)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FRoNStyleSlotData                      Slot6;                                             // 0x1170(0x0258)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FRoNStyleIdleData                      IdleData_Default;                                  // 0x13C8(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRoNStyleTurnData                      TurnData_Default;                                  // 0x13D8(0x0050)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FRoNGaitTransitionData                 TransitionData_Default;                            // 0x1428(0x0120)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRoNGaitLocomotionData                 LocomotionData_Default;                            // 0x1548(0x00C0)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class UBlendSpace*                            StrafeBS_Default;                                  // 0x1608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                            NonStrafeBS_Default;                               // 0x1610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlotBlendTime;                                     // 0x1618(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultSlotBlendTime;                              // 0x161C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AimOffsetAlpha;                                    // 0x1620(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrafeBlendTime;                                   // 0x1624(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlopeWarpingAlpha;                                 // 0x1628(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsMoveStyleSlotBActive;                           // 0x162C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_162D[0x3];                                     // 0x162D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SlotIdx;                                           // 0x1630(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1634[0x4];                                     // 0x1634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HeadLookLocation;                                  // 0x1638(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeadLookAlpha;                                     // 0x1650(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1654[0x1C];                                    // 0x1654(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lean;                                              // 0x1670(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanClamped;                                       // 0x1674(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanFactor;                                        // 0x1678(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanInterpSpeed;                                   // 0x167C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AdjustedPlayrate;                                  // 0x1680(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedScaling;                                      // 0x1684(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayrateClampMax;                                  // 0x1688(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentIdleIndex;                                  // 0x168C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStrafeDirection                              CurrentStrafeDirection;                            // 0x1690(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1691[0x7];                                     // 0x1691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StrafeDirectionAngle;                              // 0x1698(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_169C[0x4];                                     // 0x169C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              AimOffsetInterpolated;                             // 0x16A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              AO_2DVector;                                       // 0x16B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInRagdoll;                                        // 0x16C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRecoveringFromRagdoll;                            // 0x16C1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDead;                                           // 0x16C2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlayingDeathAnim;                               // 0x16C3(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16C4[0x4];                                     // 0x16C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWorldBuildingAnimState                WorldBuildingAnimState;                            // 0x16C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCarryArrestedAnimState                CarryArrestAnimState;                              // 0x16D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FTakeHostageAnimState                  TakeHostageAnimState;                              // 0x16E0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	EAnimWeaponType                               CurWeaponType;                                     // 0x16F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16F9[0x7];                                     // 0x16F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          IncapacitationLoopAnim;                            // 0x1700(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsArrested;                                       // 0x1708(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsArrestedAsRagdoll;                              // 0x1709(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBeingArrested;                                  // 0x170A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBeingArrestedAsRagdoll;                         // 0x170B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSurrendered;                                      // 0x170C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCarried;                                        // 0x170D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsGetUpPlaying;                                   // 0x170E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_170F[0x1];                                     // 0x170F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIncapacitated;                                    // 0x1710(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableIKProcess;                                  // 0x1711(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFemale;                                         // 0x1712(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsUnarmed;                                        // 0x1713(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSWAT;                                           // 0x1714(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCrouching;                                      // 0x1715(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsArrestedAndDead;                                // 0x1716(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1717[0x1];                                     // 0x1717(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCoverAnimStateMachineData             CoverAnimStateMachineData;                         // 0x1718(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FHidingAnimStateMachineData            HidingAnimStateMachineData;                        // 0x1730(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FHoleTraversalAnimStateMachineData     HoleTraversalAnimStateMachineData;                 // 0x1740(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	float                                         LeftArmIKAlpha;                                    // 0x1750(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RightArmIKAlpha;                                   // 0x1754(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ArmsOnlySlotAlpha;                                 // 0x1758(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftArmOnlySlotAlpha;                              // 0x175C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandAdditiveLockOverride;                          // 0x1760(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWeaponDown;                                       // 0x1764(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPistolAndWeaponDown;                            // 0x1765(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPistol;                                         // 0x1766(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1767[0x9];                                     // 0x1767(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Calm_Override_Pose;                                // 0x1770(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Aiming_Override_Pose;                              // 0x1778(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Default_Calm_Override_Pose;                        // 0x1780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Default_Aiming_Override_Pose;                      // 0x1788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Weapon_Override_Pose_Low;                          // 0x1790(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Weapon_Override_Pose_Up;                           // 0x1798(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Default_Weapon_Override_Pose_Low;                  // 0x17A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Default_Weapon_Override_Pose_Up;                   // 0x17A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponOverridePoseAlpha;                           // 0x17B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsReloading;                                      // 0x17B4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17B5[0x3];                                     // 0x17B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FinalAimOffsetAlpha;                               // 0x17B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableAimOffset;                                  // 0x17BC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAnyMontageIsActive;                               // 0x17BD(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFullBodyMontagePlaying;                           // 0x17BE(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpperBodyMontagePlaying;                          // 0x17BF(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInteractionMontagePlaying;                        // 0x17C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFullOrInteractionMontagePlaying;                  // 0x17C1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemOverrideRule                             CurOverrideRule;                                   // 0x17C2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLoweredSet;                                     // 0x17C3(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowTurnInPlace;                                 // 0x17C4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17C5[0x3];                                     // 0x17C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TurnInPlaceSpeedMultiplier;                        // 0x17C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         YawOffsetLimit;                                    // 0x17CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimTurnInPlaceAnimSet                TurnInPlaceAnimSet;                                // 0x17D0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FAnimTurnInPlaceState                  TurnInPlaceState;                                  // 0x17E8(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bExitTurnRecoveryIfMoving;                         // 0x1848(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1849[0x3];                                     // 0x1849(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCachedAnimStateData                   TurnAnimStateData;                                 // 0x184C(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsTurnInPlaceStateRelevant;                       // 0x1868(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1869[0x3];                                     // 0x1869(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VelocityInterpTime;                                // 0x186C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                VelocitySmoothed;                                  // 0x1870(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableAdditiveOverrides;                         // 0x1888(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1889[0x7];                                     // 0x1889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         AdditiveDisableTagList;                            // 0x1890(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         move_x;                                            // 0x18A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         move_y;                                            // 0x18A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHostageTaker;                                   // 0x18A8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHostage;                                        // 0x18A9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHostageOrHostageTaker;                          // 0x18AA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18AB[0x1];                                     // 0x18AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MoveStyleBlendCoolDown;                            // 0x18AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18B0[0x4];                                     // 0x18B0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bMoveStyleChanging;                                // 0x18B4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseUpperBodyIdleOverride;                         // 0x18B5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTurnOnlyAffectsLowerBody;                         // 0x18B6(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18B7[0x1];                                     // 0x18B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TurnLowerBodyOnlyWeight;                           // 0x18B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18BC[0x4];                                     // 0x18BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CurUpperBodyIdleOverride;                          // 0x18C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpperBodyOverrideWeight;                           // 0x18C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18CC[0x4];                                     // 0x18CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ResetTurnInPlaceOffset();
	void SetMoveStyleDataFromComp(class URoNMoveStyleComponent* MoveStyleComp);
	void UpdateGaitDataFromComp(class URoNMoveStyleComponent* MoveStyleComp);
	void UpdateMoveStyleDataFromComp(class URoNMoveStyleComponent* MoveStyleComp);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RoNAnimInstance_HumanBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RoNAnimInstance_HumanBase")
	}
	static class URoNAnimInstance_HumanBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<URoNAnimInstance_HumanBase>();
	}
};
DUMPER7_ASSERTS_URoNAnimInstance_HumanBase;

// Class ReadyOrNot.RoNAnimInstance_PlayerFP
// 0x00E0 (0x0680 - 0x05A0)
class URoNAnimInstance_PlayerFP : public UReadyOrNotAnimInstance
{
public:
	class UReadyOrNotWeaponAnimData*              LastWeaponAnimData;                                // 0x0598(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotWeaponAnimData*              EditorWeaponAnimData;                              // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanAngleY;                                        // 0x05A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanAngleZ;                                        // 0x05AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               MeshControlRotation;                               // 0x05B0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                MeshPostureLeanOffset;                             // 0x05C8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MeshWeaponOffset;                                  // 0x05E0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               MeshWeaponRotation;                                // 0x05F8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               MeshWeaponFreeAimRotation;                         // 0x0610(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                MeshWeaponLeanOffset;                              // 0x0628(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               MeshWeaponLeanRotation;                            // 0x0640(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 TPMeshReference;                                   // 0x0658(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LazySpringStrength;                                // 0x0660(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ADS_Movement_Weight;                               // 0x0664(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InteractionSlotAlpha;                              // 0x0668(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultSlotAlpha;                                  // 0x066C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RollMoveInput;                                     // 0x0670(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_674[0xC];                                      // 0x0674(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnC2Detonation();
	void OnHolsterComplete();
	void OnReloadComplete();

	class UAnimSequenceBase* GetPlayerAnimation_FP(EBaseAnimType_FP AnimName) const;
	class UBlendSpace* GetPlayerBlendspace_FP(EBaseBlendspaces_FP BlendspaceName) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RoNAnimInstance_PlayerFP")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RoNAnimInstance_PlayerFP")
	}
	static class URoNAnimInstance_PlayerFP* GetDefaultObj()
	{
		return GetDefaultObjImpl<URoNAnimInstance_PlayerFP>();
	}
};
DUMPER7_ASSERTS_URoNAnimInstance_PlayerFP;

// Class ReadyOrNot.RoNAnimInstance_PlayerTP
// 0x0C60 (0x1200 - 0x05A0)
class URoNAnimInstance_PlayerTP final : public UReadyOrNotAnimInstance
{
public:
	uint8                                         Pad_598[0x8];                                      // 0x0598(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FReadyOrNotAnimInstanceProxyTP         Proxy;                                             // 0x05A0(0x0700)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	class UReadyOrNotWeaponAnimData*              LastAnimWeaponData;                                // 0x0CA0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotWeaponAnimData*              EditorWeaponAnimData;                              // 0x0CA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowTurnInPlace;                                 // 0x0CB0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTurnInPlaceStateRelevant;                       // 0x0CB1(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CB2[0x2];                                      // 0x0CB2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         YawOffsetLimit;                                    // 0x0CB4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurnInPlaceSpeedMultiplier;                        // 0x0CB8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CBC[0x4];                                      // 0x0CBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimTurnInPlaceAnimSet                TurnInPlaceAnimSet;                                // 0x0CC0(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FAnimTurnInPlaceState                  TurnInPlaceState;                                  // 0x0CD8(0x0060)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAnimTurnInPlaceAnimSet                StandRifAnimSet;                                   // 0x0D38(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAnimTurnInPlaceAnimSet                CrouchRifAnimSet;                                  // 0x0D50(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bWeaponDown;                                       // 0x0D68(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAiming;                                         // 0x0D69(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsShieldEquipped;                                 // 0x0D6A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D6B[0x1];                                      // 0x0D6B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AimingAlpha;                                       // 0x0D6C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeanLeft;                                         // 0x0D70(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeanRight;                                        // 0x0D71(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D72[0x2];                                      // 0x0D72(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         QuickLeanLeftAmount;                               // 0x0D74(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanRightAmount;                              // 0x0D78(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanLeftAlpha;                                // 0x0D7C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanRightAlpha;                               // 0x0D80(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanIntensity;                                // 0x0D84(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanInterpSpeed;                              // 0x0D88(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootIKValue;                                       // 0x0D8C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootIKAlpha;                                       // 0x0D90(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRagdoll;                                          // 0x0D94(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlayingDeathAnim;                               // 0x0D95(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bArrested;                                         // 0x0D96(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDead;                                           // 0x0D97(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeathAnimEnd;                                     // 0x0D98(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStunned;                                          // 0x0D99(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTased;                                            // 0x0D9A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnLadder;                                         // 0x0D9B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LadderUpDownMovement;                              // 0x0D9C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanAngleY;                                        // 0x0DA0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanAngleZ;                                        // 0x0DA4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverLeft;                                        // 0x0DA8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverRight;                                       // 0x0DA9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverMiddle;                                      // 0x0DAA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverLeftLow;                                     // 0x0DAB(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverRightLow;                                    // 0x0DAC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverPeek;                                        // 0x0DAD(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DAE[0x2];                                      // 0x0DAE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AimOffsetAlpha;                                    // 0x0DB0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DB4[0x4];                                      // 0x0DB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              AimOffsets;                                        // 0x0DB8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bJumpStartTrigger;                                 // 0x0DC8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC9[0x3];                                      // 0x0DC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SmoothMappedLeanToAnimStandLeft;                   // 0x0DCC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmoothMappedLeanToAnimStandRight;                  // 0x0DD0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmoothMappedLeanToAnimCrouchLeft;                  // 0x0DD4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmoothMappedLeanToAnimCrouchRight;                 // 0x0DD8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Speed_tp_rifle_stand_sprint_f;                     // 0x0DDC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Low_TP;                           // 0x0DE0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Up_TP;                            // 0x0DE8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Shld_TP;                          // 0x0DF0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Sights_TP;                        // 0x0DF8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Ret_TP;                           // 0x0E00(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Ovr_TP;                           // 0x0E08(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Low_TP;                                  // 0x0E10(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Up_TP;                                   // 0x0E18(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Shld_TP;                                 // 0x0E20(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Sights_TP;                               // 0x0E28(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Ret_TP;                                  // 0x0E30(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Ovr_TP;                                  // 0x0E38(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_VFG_TP;                                  // 0x0E40(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_AFG_TP;                                  // 0x0E48(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_HSTOP_TP;                                // 0x0E50(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeaningLeftNotCrouching;                          // 0x0E58(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotLeaningLeftOrCrouching;                        // 0x0E59(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotLeaningLeftOrNotCrouching;                     // 0x0E5A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeaningRightNotCrouching;                         // 0x0E5B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotLeaningRightOrCrouching;                       // 0x0E5C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotLeaningRightOrNotCrouching;                    // 0x0E5D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCrouchingAndMoving;                               // 0x0E5E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotCrouchingAndMoving;                            // 0x0E5F(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAimingAndNotDeployable;                           // 0x0E60(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E61[0x3];                                      // 0x0E61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WalkSpeedForward;                                  // 0x0E64(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WalkSpeedLeft;                                     // 0x0E68(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WalkSpeedRight;                                    // 0x0E6C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WalkSpeedBackward;                                 // 0x0E70(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchWalkSpeedForward;                            // 0x0E74(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchWalkSpeedLeft;                               // 0x0E78(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchWalkSpeedRight;                              // 0x0E7C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchWalkSpeedBackward;                           // 0x0E80(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RunSpeedForward;                                   // 0x0E84(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RunSpeedLeft;                                      // 0x0E88(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RunSpeedRight;                                     // 0x0E8C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RunSpeedBackward;                                  // 0x0E90(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLessThanPointOneSecondOnRelevantAnim;             // 0x0E94(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInCombatOrAlerted;                              // 0x0E95(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMoving;                                           // 0x0E96(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAlerted;                                        // 0x0E97(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AlertAlpha;                                        // 0x0E98(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInCombat;                                       // 0x0E9C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSurrendering;                                   // 0x0E9D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSprayed;                                          // 0x0E9E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStung;                                            // 0x0E9F(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPseudoSpeedType                              CurPseudoSpeed;                                    // 0x0EA0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFemale;                                           // 0x0EA1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bChild;                                            // 0x0EA2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasInjury;                                        // 0x0EA3(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimSpeedFwdPlayrateSync;                          // 0x0EA4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimSpeedSidePlayrateSync;                         // 0x0EA8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimSpeedPlayrateSync;                             // 0x0EAC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RetentionAlpha;                                    // 0x0EB0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LoweredAlpha;                                      // 0x0EB4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EB8[0x8];                                      // 0x0EB8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SightAlpha;                                        // 0x0EC0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LoweredCooldownTime;                               // 0x0EC4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsLoweredUp;                                       // 0x0EC8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EC9[0x13];                                     // 0x0EC9(0x0013)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ArmsOnlySlotAlpha;                                 // 0x0EDC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftArmOnlySlotAlpha;                              // 0x0EE0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VelocityInterpTime;                                // 0x0EE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                VelocitySmoothed;                                  // 0x0EE8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedScaling;                                      // 0x0F00(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayrateClampMax;                                  // 0x0F04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimCharacterMovementSnapshot         CharMovementSnapshot;                              // 0x0F08(0x00E8)(Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	float                                         PostPivotTriggerThreshold;                         // 0x0FF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCardinalDirectionSnapshot             PivotingCardinalDirSnapShot;                       // 0x0FF4(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_100C[0x1C];                                    // 0x100C(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       CharacterRef;                                      // 0x1028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACyberneticCharacter*                   CharacterAiRef;                                    // 0x1030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDistanceMatching;                              // 0x1038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDistanceMatchingType                         DistanceMatchingCurrentState;                      // 0x1039(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_103A[0x6];                                     // 0x103A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPredictionResult                      StartMarker;                                       // 0x1040(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      StopMarker;                                        // 0x1070(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      PivotMarker;                                       // 0x10A0(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      PostPivotMarker;                                   // 0x10D0(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      TakeOffMarker;                                     // 0x1100(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      ApexMarker;                                        // 0x1130(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      LandingMarker;                                     // 0x1160(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	EMoveDirectionExt                             CurrentPivotDirectionExt;                          // 0x1190(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPivotDirectionBroken;                             // 0x1191(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanPivotInCurDirection;                           // 0x1192(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSMPrePivotRuleset;                                // 0x1193(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStartDirectionBroken;                             // 0x1194(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1195[0x3];                                     // 0x1195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReplicatedMaxSpeed;                                // 0x1198(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSMStartRuleset;                                   // 0x119C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSMStopRuleset;                                    // 0x119D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_119E[0x2];                                     // 0x119E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PelvisDefaultWorldPos;                             // 0x11A0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CrouchedPelvisDefaultWorldPos;                     // 0x11B8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CrouchedPelvisMovingWorldPos;                      // 0x11D0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CrouchedPelvisCurrentWorldPos;                     // 0x11E8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class UAnimSequenceBase* GetPlayerAnimation_TP(EBaseAnimType_TP AnimName) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RoNAnimInstance_PlayerTP")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RoNAnimInstance_PlayerTP")
	}
	static class URoNAnimInstance_PlayerTP* GetDefaultObj()
	{
		return GetDefaultObjImpl<URoNAnimInstance_PlayerTP>();
	}
};
DUMPER7_ASSERTS_URoNAnimInstance_PlayerTP;

// Class ReadyOrNot.RoNAnimInstance_PlayerTP_V2
// 0x0960 (0x0F00 - 0x05A0)
class URoNAnimInstance_PlayerTP_V2 : public UReadyOrNotAnimInstance
{
public:
	class UReadyOrNotWeaponAnimData*              LastAnimWeaponData;                                // 0x0598(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReadyOrNotWeaponAnimData*              EditorWeaponAnimData;                              // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowTurnInPlace;                                 // 0x05A8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A9[0x3];                                      // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         YawOffsetLimit;                                    // 0x05AC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurnInPlaceSpeedMultiplier;                        // 0x05B0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5B4[0x4];                                      // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimTurnInPlaceAnimSet                TurnInPlaceAnimSet;                                // 0x05B8(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FAnimTurnInPlaceState                  TurnInPlaceState;                                  // 0x05D0(0x0060)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAnimTurnInPlaceAnimSet                StandRifAnimSet;                                   // 0x0630(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAnimTurnInPlaceAnimSet                CrouchRifAnimSet;                                  // 0x0648(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bIsAIControlled;                                   // 0x0660(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWeaponDown;                                       // 0x0661(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAiming;                                         // 0x0662(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsShieldEquipped;                                 // 0x0663(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AimingAlpha;                                       // 0x0664(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeanLeft;                                         // 0x0668(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeanRight;                                        // 0x0669(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_66A[0x2];                                      // 0x066A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         QuickLeanLeftAmount;                               // 0x066C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanRightAmount;                              // 0x0670(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanLeftAlpha;                                // 0x0674(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanRightAlpha;                               // 0x0678(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanIntensity;                                // 0x067C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuickLeanInterpSpeed;                              // 0x0680(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootIKValue;                                       // 0x0684(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootIKAlpha;                                       // 0x0688(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRagdoll;                                          // 0x068C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlayingDeathAnim;                               // 0x068D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bArrested;                                         // 0x068E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDead;                                           // 0x068F(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeathAnimEnd;                                     // 0x0690(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStunned;                                          // 0x0691(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTased;                                            // 0x0692(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnLadder;                                         // 0x0693(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LadderUpDownMovement;                              // 0x0694(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanAngleY;                                        // 0x0698(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanAngleZ;                                        // 0x069C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverLeft;                                        // 0x06A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverRight;                                       // 0x06A1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverMiddle;                                      // 0x06A2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverLeftLow;                                     // 0x06A3(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverRightLow;                                    // 0x06A4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoverPeek;                                        // 0x06A5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A6[0x2];                                      // 0x06A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AimOffsetAlpha;                                    // 0x06A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6AC[0x4];                                      // 0x06AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              AimOffsets;                                        // 0x06B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bJumpStartTrigger;                                 // 0x06C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsNotFalling;                                     // 0x06C1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C2[0x2];                                      // 0x06C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SmoothMappedLeanToAnimStandLeft;                   // 0x06C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmoothMappedLeanToAnimStandRight;                  // 0x06C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmoothMappedLeanToAnimCrouchLeft;                  // 0x06CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmoothMappedLeanToAnimCrouchRight;                 // 0x06D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Speed_tp_rifle_stand_sprint_f;                     // 0x06D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Low_TP;                           // 0x06D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Up_TP;                            // 0x06E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Shld_TP;                          // 0x06E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Sights_TP;                        // 0x06F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Ret_TP;                           // 0x06F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Crouch_Idle_Pose_Ovr_TP;                           // 0x0700(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Low_TP;                                  // 0x0708(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Up_TP;                                   // 0x0710(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Shld_TP;                                 // 0x0718(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Sights_TP;                               // 0x0720(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Ret_TP;                                  // 0x0728(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_Ovr_TP;                                  // 0x0730(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_VFG_TP;                                  // 0x0738(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_AFG_TP;                                  // 0x0740(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_HSTOP_TP;                                // 0x0748(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_RK1_TP;                                  // 0x0750(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Idle_Pose_CQR_TP;                                  // 0x0758(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeaningLeftNotCrouching;                          // 0x0760(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotLeaningLeftOrCrouching;                        // 0x0761(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotLeaningLeftOrNotCrouching;                     // 0x0762(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLeaningRightNotCrouching;                         // 0x0763(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotLeaningRightOrCrouching;                       // 0x0764(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotLeaningRightOrNotCrouching;                    // 0x0765(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCrouchingAndMoving;                               // 0x0766(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotCrouchingAndMoving;                            // 0x0767(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAimingAndNotDeployable;                           // 0x0768(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_769[0x3];                                      // 0x0769(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WalkSpeedForward;                                  // 0x076C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WalkSpeedLeft;                                     // 0x0770(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WalkSpeedRight;                                    // 0x0774(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WalkSpeedBackward;                                 // 0x0778(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchWalkSpeedForward;                            // 0x077C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchWalkSpeedLeft;                               // 0x0780(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchWalkSpeedRight;                              // 0x0784(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchWalkSpeedBackward;                           // 0x0788(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RunSpeedForward;                                   // 0x078C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RunSpeedLeft;                                      // 0x0790(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RunSpeedRight;                                     // 0x0794(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RunSpeedBackward;                                  // 0x0798(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLessThanPointOneSecondOnRelevantAnim;             // 0x079C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInCombatOrAlerted;                              // 0x079D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMoving;                                           // 0x079E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAlerted;                                        // 0x079F(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AlertAlpha;                                        // 0x07A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInCombat;                                       // 0x07A4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSurrendering;                                   // 0x07A5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSprayed;                                          // 0x07A6(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStung;                                            // 0x07A7(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPseudoSpeedType                              CurPseudoSpeed;                                    // 0x07A8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFemale;                                           // 0x07A9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bChild;                                            // 0x07AA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasInjury;                                        // 0x07AB(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimSpeedFwdPlayrateSync;                          // 0x07AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimSpeedSidePlayrateSync;                         // 0x07B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimSpeedPlayrateSync;                             // 0x07B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RetentionAlpha;                                    // 0x07B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LoweredAlpha;                                      // 0x07BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C0[0x8];                                      // 0x07C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SightAlpha;                                        // 0x07C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LoweredCooldownTime;                               // 0x07CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsLoweredUp;                                       // 0x07D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7D1[0x13];                                     // 0x07D1(0x0013)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ArmsOnlySlotAlpha;                                 // 0x07E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftArmOnlySlotAlpha;                              // 0x07E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VelocityInterpTime;                                // 0x07EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                VelocitySmoothed;                                  // 0x07F0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimCharacterMovementSnapshot         CharMovementSnapshot;                              // 0x0808(0x00E8)(Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	float                                         PostPivotTriggerThreshold;                         // 0x08F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCardinalDirectionSnapshot             PivotingCardinalDirSnapShot;                       // 0x08F4(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_90C[0x1C];                                     // 0x090C(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   BaseCharacterRef;                                  // 0x0928(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerCharacter*                       CharacterRef;                                      // 0x0930(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACyberneticCharacter*                   CharacterAiRef;                                    // 0x0938(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDistanceMatching;                              // 0x0940(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDistanceMatchingType                         DistanceMatchingCurrentState;                      // 0x0941(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_942[0x6];                                      // 0x0942(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPredictionResult                      StartMarker;                                       // 0x0948(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      StopMarker;                                        // 0x0978(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      PivotMarker;                                       // 0x09A8(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      PostPivotMarker;                                   // 0x09D8(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      TakeOffMarker;                                     // 0x0A08(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      ApexMarker;                                        // 0x0A38(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FPredictionResult                      LandingMarker;                                     // 0x0A68(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	EMoveDirectionExt                             CurrentPivotDirectionExt;                          // 0x0A98(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPivotDirectionBroken;                             // 0x0A99(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanPivotInCurDirection;                           // 0x0A9A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSMPrePivotRuleset;                                // 0x0A9B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStartDirectionBroken;                             // 0x0A9C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9D[0x3];                                      // 0x0A9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReplicatedMaxSpeed;                                // 0x0AA0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSMStartRuleset;                                   // 0x0AA4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSMStopRuleset;                                    // 0x0AA5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDistanceMatchToTarget;                            // 0x0AA6(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AA7[0x1];                                      // 0x0AA7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DistanceCurveName;                                 // 0x0AA8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PelvisDefaultWorldPos;                             // 0x0AB0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CrouchedPelvisDefaultWorldPos;                     // 0x0AC8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CrouchedPelvisMovingWorldPos;                      // 0x0AE0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CrouchedPelvisCurrentWorldPos;                     // 0x0AF8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   IdleStateData;                                     // 0x0B10(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   StartStateData;                                    // 0x0B2C(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   MoveStateData;                                     // 0x0B48(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   StopStateData;                                     // 0x0B64(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   PrePivotStateData;                                 // 0x0B80(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   PostPivotStateData;                                // 0x0B9C(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   TurnInPlaceStateData;                              // 0x0BB8(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                   LocalTurnInPlaceStateData;                         // 0x0BD4(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_BF0[0x92];                                     // 0x0BF0(0x0092)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bStartToCycleRuleSet;                              // 0x0C82(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerPivotARuleSet;                             // 0x0C83(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerPivotBRuleSet;                             // 0x0C84(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrePivotToPostPivotRuleSet;                       // 0x0C85(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPostPivotToPrePivotRuleSet;                       // 0x0C86(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPivotToCycleRuleSet;                              // 0x0C87(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStopToIdleRuleSet;                                // 0x0C88(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanEnterPrePivotRuleSet;                          // 0x0C89(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C8A[0x6];                                      // 0x0C8A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequence*>                  StandFastStartAnimations;                          // 0x0C90(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  StandFastStopAnimations;                           // 0x0CA0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  StandFastPivotAnimations;                          // 0x0CB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  StandSlowStartAnimations;                          // 0x0CC0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  StandSlowStopAnimations;                           // 0x0CD0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  StandSlowPivotAnimations;                          // 0x0CE0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  CrouchFastStartAnimations;                         // 0x0CF0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  CrouchFastStopAnimations;                          // 0x0D00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  CrouchFastPivotAnimations;                         // 0x0D10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  CrouchSlowStartAnimations;                         // 0x0D20(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  CrouchSlowStopAnimations;                          // 0x0D30(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  CrouchSlowPivotAnimations;                         // 0x0D40(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UAnimSequence*                          ActiveStopAnim;                                    // 0x0D50(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActiveStopAnimTime;                                // 0x0D58(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D5C[0x4];                                      // 0x0D5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          ActiveStartAnim;                                   // 0x0D60(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActiveStartAnimTime;                               // 0x0D68(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D6C[0x4];                                      // 0x0D6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          ActivePrePivotAnim;                                // 0x0D70(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActivePrePivotAnimTime;                            // 0x0D78(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D7C[0x4];                                      // 0x0D7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          ActivePostPivotAnim;                               // 0x0D80(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActivePostPivotAnimTime;                           // 0x0D88(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsIdleStateRelevant;                              // 0x0D8C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsStartStateRelevant;                             // 0x0D8D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsStopStateRelevant;                              // 0x0D8E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPrePivotStateRelevant;                          // 0x0D8F(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPostPivotStateRelevant;                         // 0x0D90(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsMoveStateRelevant;                              // 0x0D91(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTurnInPlaceStateRelevant;                       // 0x0D92(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsStartStateFullWeight;                           // 0x0D93(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPrePivotStateFullWeight;                        // 0x0D94(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPostPivotStateFullWeight;                       // 0x0D95(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D96[0x2];                                      // 0x0D96(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeInStartState;                                  // 0x0D98(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeInPostPivotState;                              // 0x0D9C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReadDisableSpeedCurve;                            // 0x0DA0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DA1[0x3];                                      // 0x0DA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DisableSpeedWarping;                               // 0x0DA4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedScaling;                                      // 0x0DA8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayrateClampMax;                                  // 0x0DAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              PlayRateClamp;                                     // 0x0DB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              PlayRateClampCycle;                                // 0x0DC0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              PlayRateClampStartsPivots;                         // 0x0DD0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrideWarpingBlendInStartOffset;                   // 0x0DE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrideWarpingBlendInDurationScaled;                // 0x0DE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrideWarpingStartAlpha;                           // 0x0DE8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrideWarpingPivotAlpha;                           // 0x0DEC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DirectionBlendTime;                                // 0x0DF0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DF4[0x4];                                      // 0x0DF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseSnapshot                          DeathPose;                                         // 0x0DF8(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	float                                         SlopeWarpingAlpha;                                 // 0x0E30(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsItemOrPistolMotionBlock;                        // 0x0E34(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRifleMotionBlock;                               // 0x0E35(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCrouchingWithShield;                            // 0x0E36(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E37[0x1];                                      // 0x0E37(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CrouchHighPoseAdditiveAlpha;                       // 0x0E38(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StandHighPoseAdditiveAlpha;                        // 0x0E3C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftHandIKAlpha_ItemBased;                         // 0x0E40(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E44[0x4];                                      // 0x0E44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ZHeightLeanAdjustment;                             // 0x0E48(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IsCrouchingWithShield_AsFloat;                     // 0x0E60(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandAdditiveLockOverride;                          // 0x0E64(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftHandAdditiveOvrBlend;                          // 0x0E68(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftHandTempFinIK;                                 // 0x0E6C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFastWalkSwitchRule;                               // 0x0E70(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCrouchFastWalkSwitchRule;                         // 0x0E71(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStartWalkSwitchTransitionRule;                    // 0x0E72(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E73[0x1];                                      // 0x0E73(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DefaultCrouchSpeed;                                // 0x0E74(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultStandSpeed;                                 // 0x0E78(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStopWalkSwitchTransitionRule;                     // 0x0E7C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPivotWalkSwitchTransitionRule;                    // 0x0E7D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasUnderbarrelAttachment;                         // 0x0E7E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWeaponUnderbarrelAnimationType               UnderbarrelType;                                   // 0x0E7F(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftHandGripAlpha;                                 // 0x0E80(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpperbodySlotNoWeight;                             // 0x0E84(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFastWalking;                                    // 0x0E88(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFastStop;                                       // 0x0E89(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFastStart;                                      // 0x0E8A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFastPivot;                                      // 0x0E8B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLocallyFirstPerson;                             // 0x0E8C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPFStartPhase;                                     // 0x0E8D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPFStoppingPhase;                                  // 0x0E8E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPFHasReachedStoppingPhase;                        // 0x0E8F(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PFStartDistanceThreshold;                          // 0x0E90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PFStopDistanceThreshold;                           // 0x0E94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PFLastStopLocation;                                // 0x0E98(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PFCurrentStopLocation;                             // 0x0EB0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PFStopDistance;                                    // 0x0EC8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PFCurrentAcceptanceRadius;                         // 0x0ECC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPFPathTooShort;                                   // 0x0ED0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPFPathIsValid;                                    // 0x0ED1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPFRequestedNewPath;                               // 0x0ED2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_ED3[0x15];                                     // 0x0ED3(0x0015)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               HeadLookRotationSwapped;                           // 0x0EE8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

public:
	class UAnimSequenceBase* GetPlayerAnimation_TP(EBaseAnimType_TP AnimName) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RoNAnimInstance_PlayerTP_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RoNAnimInstance_PlayerTP_V2")
	}
	static class URoNAnimInstance_PlayerTP_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<URoNAnimInstance_PlayerTP_V2>();
	}
};
DUMPER7_ASSERTS_URoNAnimInstance_PlayerTP_V2;

// Class ReadyOrNot.TutorialMenu
// 0x0008 (0x02F8 - 0x02F0)
class UTutorialMenu final : public UBaseWidget
{
public:
	uint8                                         Pad_2F0[0x8];                                      // 0x02F0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialMenu")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialMenu")
	}
	static class UTutorialMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialMenu>();
	}
};
DUMPER7_ASSERTS_UTutorialMenu;

// Class ReadyOrNot.RONCameraModifier_CameraShake
// 0x0000 (0x00B0 - 0x00B0)
class URONCameraModifier_CameraShake final : public UCameraModifier_CameraShake
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RONCameraModifier_CameraShake")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RONCameraModifier_CameraShake")
	}
	static class URONCameraModifier_CameraShake* GetDefaultObj()
	{
		return GetDefaultObjImpl<URONCameraModifier_CameraShake>();
	}
};
DUMPER7_ASSERTS_URONCameraModifier_CameraShake;

// Class ReadyOrNot.RONGameplayStats
// 0x0010 (0x0038 - 0x0028)
class URONGameplayStats final : public UObject
{
public:
	class UStatSubsystem*                         StatSubsystem;                                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void IncrementDamageTaken(float Damage);
	void IncrementShotsFired(int32 Count);
	void OnMissionEnd(const bool bMissionSuccess, const struct FMissionCoreStats& MissionStats);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RONGameplayStats")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RONGameplayStats")
	}
	static class URONGameplayStats* GetDefaultObj()
	{
		return GetDefaultObjImpl<URONGameplayStats>();
	}
};
DUMPER7_ASSERTS_URONGameplayStats;

// Class ReadyOrNot.RoNMoveStyleCharacter
// 0x0020 (0x06A0 - 0x0680)
class ARoNMoveStyleCharacter final : public ACharacter
{
public:
	class USpringArmComponent*                    CameraBoom;                                        // 0x0678(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraComponent*                       FollowCamera;                                      // 0x0680(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URoNMoveStyleComponent*                 MoveStyle;                                         // 0x0688(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BaseTurnRate;                                      // 0x0690(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BaseLookUpRate;                                    // 0x0694(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_698[0x8];                                      // 0x0698(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RoNMoveStyleCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RoNMoveStyleCharacter")
	}
	static class ARoNMoveStyleCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARoNMoveStyleCharacter>();
	}
};
DUMPER7_ASSERTS_ARoNMoveStyleCharacter;

// Class ReadyOrNot.WeaponSound
// 0x0188 (0x01B8 - 0x0030)
class UWeaponSound final : public UDataAsset
{
public:
	bool                                          bPlayFMODFiringAudio;                              // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             FMODGunShot1P;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             FMODGunShot3P;                                     // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MagCheck_FullSeq;                                  // 0x0048(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             QuickReload_FullSeq;                               // 0x0050(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             QuickReloadEmpty_FullSeq;                          // 0x0058(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             Reload_FullSeq;                                    // 0x0060(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             ReloadEmpty_FullSeq;                               // 0x0068(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MagIn;                                             // 0x0070(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MagOut;                                            // 0x0078(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MagInQuick;                                        // 0x0080(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MagOutQuick;                                       // 0x0088(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MagDrop;                                           // 0x0090(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MagDropQuick;                                      // 0x0098(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             WeaponDrop;                                        // 0x00A0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             BoltClose;                                         // 0x00A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             BoltCloseQuick;                                    // 0x00B0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             BoltOpen;                                          // 0x00B8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             BoltOpenQuick;                                     // 0x00C0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             OnADSSound;                                        // 0x00C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             OnEndADSSound;                                     // 0x00D0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             NightvisionOn;                                     // 0x00D8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             NightvisionOff;                                    // 0x00E0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             Holster;                                           // 0x00E8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             Draw;                                              // 0x00F0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             DrawFirst;                                         // 0x00F8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SelectSemi;                                        // 0x0100(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SelectBurst;                                       // 0x0108(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SelectAuto;                                        // 0x0110(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             SelectSafe;                                        // 0x0118(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWeaponSoundData                       Firing_Inside;                                     // 0x0120(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponSoundData                       Firing_Outside;                                    // 0x0140(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UFMODEvent*                             DryFire;                                           // 0x0160(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             FireLast;                                          // 0x0168(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayBulletWhizz;                                  // 0x0170(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             BulletWhizzFar;                                    // 0x0178(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             HitMarker;                                         // 0x0180(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             HeadshotMarker;                                    // 0x0188(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             KillMarker;                                        // 0x0190(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             PhysicsImpact;                                     // 0x0198(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             PlayerImpact;                                      // 0x01A0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PhysicsImpactMinimumVelocity;                      // 0x01A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             MovementLayer;                                     // 0x01B0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponSound")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponSound")
	}
	static class UWeaponSound* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponSound>();
	}
};
DUMPER7_ASSERTS_UWeaponSound;

// Class ReadyOrNot.DoorSound
// 0x0050 (0x0080 - 0x0030)
class UDoorSound final : public UDataAsset
{
public:
	class UFMODEvent*                             DoorClosed;                                        // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             DoorOpened;                                        // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             DoorStartManipulation;                             // 0x0040(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             DoorStopManipulation;                              // 0x0048(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             BrokenByC2;                                        // 0x0050(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             BrokenByRam;                                       // 0x0058(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             BrokenByShotgun;                                   // 0x0060(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             KickedDown;                                        // 0x0068(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             KickedDownFailed;                                  // 0x0070(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             KickedDownBreak;                                   // 0x0078(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DoorSound")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DoorSound")
	}
	static class UDoorSound* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDoorSound>();
	}
};
DUMPER7_ASSERTS_UDoorSound;

// Class ReadyOrNot.RoNWeaponAnimInstance
// 0x0020 (0x0370 - 0x0350)
class URoNWeaponAnimInstance : public UAnimInstance
{
public:
	float                                         AmmoRemaining;                                     // 0x0348(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               OptiwandBoneModify;                                // 0x0350(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_368[0x4];                                      // 0x0368(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsEquipped;                                       // 0x036C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36D[0x3];                                      // 0x036D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDisassembleMagazineEjected();
	void OnSpeedReloadMagazineEjected();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RoNWeaponAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RoNWeaponAnimInstance")
	}
	static class URoNWeaponAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<URoNWeaponAnimInstance>();
	}
};
DUMPER7_ASSERTS_URoNWeaponAnimInstance;

// Class ReadyOrNot.TrapDamage
// 0x0008 (0x0048 - 0x0040)
class UTrapDamage final : public UDamageType
{
public:
	uint8                                         bDestroyAllDoorChunks : 1;                         // 0x0040(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrapDamage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrapDamage")
	}
	static class UTrapDamage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrapDamage>();
	}
};
DUMPER7_ASSERTS_UTrapDamage;

// Class ReadyOrNot.RoomVolume
// 0x0030 (0x0300 - 0x02D0)
class ARoomVolume final : public AVolume
{
public:
	int32                                         RoomGroupID;                                       // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D4[0x14];                                     // 0x02D4(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         OverlappingActors;                                 // 0x02E8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class AReflectionProbe*                       ReflectionProbe;                                   // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RoomVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RoomVolume")
	}
	static class ARoomVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARoomVolume>();
	}
};
DUMPER7_ASSERTS_ARoomVolume;

// Class ReadyOrNot.RosterTrait
// 0x00D8 (0x0108 - 0x0030)
class URosterTrait final : public UDataAsset
{
public:
	class FName                                   Reference;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Name_0;                                            // 0x0038(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0050(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   Format;                                            // 0x0068(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     TraitCurve;                                        // 0x0080(0x0088)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RosterTrait")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RosterTrait")
	}
	static class URosterTrait* GetDefaultObj()
	{
		return GetDefaultObjImpl<URosterTrait>();
	}
};
DUMPER7_ASSERTS_URosterTrait;

// Class ReadyOrNot.RosterStoryline
// 0x0070 (0x00A0 - 0x0030)
class URosterStoryline final : public UDataAsset
{
public:
	TArray<class FText>                           DeathEvents;                                       // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           UnfitForDutyEvents;                                // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           ReturnFromIncapacitationEvents;                    // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           ReturnFromTherapyEvents;                           // 0x0060(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           StressQuitEvents;                                  // 0x0070(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           TherapistEvents;                                   // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           TherapistAssessmentEvents;                         // 0x0090(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RosterStoryline")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RosterStoryline")
	}
	static class URosterStoryline* GetDefaultObj()
	{
		return GetDefaultObjImpl<URosterStoryline>();
	}
};
DUMPER7_ASSERTS_URosterStoryline;

// Class ReadyOrNot.RosterEventData
// 0x0020 (0x0050 - 0x0030)
class URosterEventData final : public UDataAsset
{
public:
	TArray<class URosterStoryline*>               Storylines;                                        // 0x0030(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FTherapistReminderEvent>        TherapistReminderEvents;                           // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RosterEventData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RosterEventData")
	}
	static class URosterEventData* GetDefaultObj()
	{
		return GetDefaultObjImpl<URosterEventData>();
	}
};
DUMPER7_ASSERTS_URosterEventData;

// Class ReadyOrNot.RosterCharacterArchetype
// 0x0050 (0x0080 - 0x0030)
class URosterCharacterArchetype final : public UPrimaryDataAsset
{
public:
	TArray<class UCustomizationCharacter*>        CharacterPool;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UCustomizationVoice*>            VoicePool;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class FText>                           BackgroundTextPool;                                // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         FirstNamePool;                                     // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         LastNamePool;                                      // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RosterCharacterArchetype")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RosterCharacterArchetype")
	}
	static class URosterCharacterArchetype* GetDefaultObj()
	{
		return GetDefaultObjImpl<URosterCharacterArchetype>();
	}
};
DUMPER7_ASSERTS_URosterCharacterArchetype;

// Class ReadyOrNot.RosterCharacter
// 0x00A8 (0x00D0 - 0x0028)
class URosterCharacter final : public UObject
{
public:
	ERosterCharacterState                         State;                                             // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERosterSquadPosition                          Position;                                          // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERosterRemovalReason                          RemovalReason;                                     // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionsPlayed;                                    // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StressLevel;                                       // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MissionsUntilReturn;                               // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsNew;                                            // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERosterCharacterState                         PreviousState;                                     // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PreviousStressLevel;                               // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTherapistIntervened;                              // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URosterTrait*                           Trait;                                             // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTraitUnlocked;                                    // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bJustUnlockedTrait;                                // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   MostRecentEventText;                               // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class URosterCharacterArchetype*              Archetype;                                         // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomizationCharacter*                Character;                                         // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomizationVoice*                    Voice;                                             // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FirstName;                                         // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LastName;                                          // 0x0098(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SerialNumber;                                      // 0x00A8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         YearsInSWAT;                                       // 0x00AC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x00B0(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class URosterStoryline*                       Storyline;                                         // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RosterCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RosterCharacter")
	}
	static class URosterCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<URosterCharacter>();
	}
};
DUMPER7_ASSERTS_URosterCharacter;

// Class ReadyOrNot.RosterManagerSettings
// 0x00C0 (0x00F8 - 0x0038)
class URosterManagerSettings final : public UDeveloperSettings
{
public:
	int32                                         RosterSize;                                        // 0x0038(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumRecruitableCharacters;                          // 0x003C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 AdditionalRosterSlots;                             // 0x0040(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	float                                         MaximumStartingStress;                             // 0x0050(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRosterTraitEntry>              AvailableTraits;                                   // 0x0058(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	int32                                         MissionsUntilTraitUnlockable;                      // 0x0068(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class URosterEventData>        EventData;                                         // 0x0070(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DeathChance;                                       // 0x0098(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxIncapacitationTime;                             // 0x009C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxStressWhenIncapacitated;                        // 0x00A0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxOfficersFiredAtOnce;                            // 0x00A4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StressGainForOfficerFired;                         // 0x00A8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxStressForOfficerFired;                          // 0x00AC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StressGainForOfficerKilled;                        // 0x00B0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StressGainForPlayerKilled;                         // 0x00B4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StressGainForExfil;                                // 0x00B8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StressGainForActiveShooterExfil;                   // 0x00BC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StressGainForOfficerNotExfil;                      // 0x00C0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StressGainForFriendlyKilledByPlayer;               // 0x00C4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StressGainForFriendlyKilledByPlayerBase;           // 0x00C8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinBaseStressGainForKill;                          // 0x00CC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxBaseStressGainForKill;                          // 0x00D0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StressMultiplierForKillInstigator;                 // 0x00D4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StressMultiplierForCivilianKill;                   // 0x00D8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StressLossForCivilianArrest;                       // 0x00DC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StressLossForSuspectArrest;                        // 0x00E0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PassiveStressLoss;                                 // 0x00E4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxCharactersInTherapy;                            // 0x00E8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinimumStressForTherapy;                           // 0x00EC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TherapistTimeScale;                                // 0x00F0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RosterManagerSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RosterManagerSettings")
	}
	static class URosterManagerSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<URosterManagerSettings>();
	}
};
DUMPER7_ASSERTS_URosterManagerSettings;

// Class ReadyOrNot.RosterManager
// 0x0178 (0x01A0 - 0x0028)
class URosterManager final : public UObject
{
public:
	class URosterManagerSettings*                 Settings;                                          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommanderProfile*                      CommanderProfile;                                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class URosterCharacter*>               Characters;                                        // 0x0038(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class URosterCharacter*>               PreviousCharacters;                                // 0x0048(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class URosterCharacter*>               RecruitableCharacters;                             // 0x0058(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<ERosterSquadPosition, class URosterCharacter*> SquadCharacters;                             // 0x0068(0x0050)(NativeAccessSpecifierPrivate)
	TArray<class URosterCharacterArchetype*>      PossibleCharacters;                                // 0x00B8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<class FName, class URosterTrait*>        PossibleTraits;                                    // 0x00C8(0x0050)(UObjectWrapper, NativeAccessSpecifierPrivate)
	class URosterEventData*                       EventData;                                         // 0x0118(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URosterCharacterArchetype*              LastArchetype;                                     // 0x0120(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_128[0x78];                                     // 0x0128(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<struct FRosterTraitEntry> GetAvailableTraits() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RosterManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RosterManager")
	}
	static class URosterManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<URosterManager>();
	}
};
DUMPER7_ASSERTS_URosterManager;

// Class ReadyOrNot.RosterPortal
// 0x0018 (0x02B0 - 0x0298)
class ARosterPortal final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	ERosterPortalType                             PortalType;                                        // 0x02A0(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableComponent*                 InteractableComponent;                             // 0x02A8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RosterPortal")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RosterPortal")
	}
	static class ARosterPortal* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARosterPortal>();
	}
};
DUMPER7_ASSERTS_ARosterPortal;

// Class ReadyOrNot.RosterReviewWidget
// 0x0008 (0x0420 - 0x0418)
class URosterReviewWidget : public UCommonActivatableWidget
{
public:
	class URosterManager*                         RosterManager;                                     // 0x0418(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void AddIncapacitatedCharacters(const TArray<class URosterCharacter*>& Characters);
	void AddRemovedCharacters(const TArray<class URosterCharacter*>& Characters);
	void AddReturningCharacters(const TArray<class URosterCharacter*>& Characters);
	void AddSquadCharacters(const TMap<ERosterSquadPosition, class URosterCharacter*>& Characters);
	TArray<class URosterCharacter*> GetAllCharacters();
	class FText GetTherapistReminderPrompt();
	void OpenRoster();

	TArray<class URosterCharacter*> GetCharactersSortedByReviewScore() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RosterReviewWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RosterReviewWidget")
	}
	static class URosterReviewWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URosterReviewWidget>();
	}
};
DUMPER7_ASSERTS_URosterReviewWidget;

// Class ReadyOrNot.RosterScenarioSpawner
// 0x0030 (0x02C8 - 0x0298)
class ARosterScenarioSpawner final : public AInfo
{
public:
	TArray<struct FObjectiveSpawn>                Objectives;                                        // 0x0298(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ADoor*>                          UsedTrapDoors;                                     // 0x02A8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B8[0x10];                                     // 0x02B8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RosterScenarioSpawner")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RosterScenarioSpawner")
	}
	static class ARosterScenarioSpawner* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARosterScenarioSpawner>();
	}
};
DUMPER7_ASSERTS_ARosterScenarioSpawner;

// Class ReadyOrNot.RosterSelectionWidget
// 0x0010 (0x0428 - 0x0418)
class URosterSelectionWidget : public UCommonActivatableWidget
{
public:
	class UCommanderProfile*                      CommanderProfile;                                  // 0x0418(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URosterManager*                         RosterManager;                                     // 0x0420(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	bool CanFireCharacter(class URosterCharacter* Character);
	bool CanUseTherapist(class URosterCharacter* Character);
	void FireCharacter(class URosterCharacter* Character);
	TArray<class URosterCharacter*> GetAllCharacters();
	struct FRosterLoadout GetCharacterLoadout(class URosterCharacter* Character);
	int32 GetMaxCharactersInTherapy();
	int32 GetNumCharactersInTherapy();
	TArray<class URosterCharacter*> GetRecruitableCharacters();
	TMap<ERosterSquadPosition, class URosterCharacter*> GetSquadCharacters();
	void InitializeRoster();
	void OnCharactersUpdated();
	void RecruitCharacter(class URosterCharacter* Character);
	void RefreshRoster();
	void RefreshRosterEvent();
	void SendCharacterToTherapist(class URosterCharacter* Character);
	void SetSquadCharacter(class URosterCharacter* Character, ERosterSquadPosition Position);

	TArray<struct FRosterActiveTraitInfo> GetActiveTraits() const;
	int32 GetCurrentRosterSize() const;
	int32 GetMaximumRosterSize() const;
	TArray<int32> GetUnlockableSlotMissionsRemaining() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RosterSelectionWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RosterSelectionWidget")
	}
	static class URosterSelectionWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URosterSelectionWidget>();
	}
};
DUMPER7_ASSERTS_URosterSelectionWidget;

// Class ReadyOrNot.TeamDeathmatchGM
// 0x0020 (0x0A40 - 0x0A20)
class ATeamDeathmatchGM : public AReadyOrNotGameMode_PVP
{
public:
	bool                                          bSuddenDeath;                                      // 0x0A20(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A21[0x7];                                      // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             MatchLoopMusic;                                    // 0x0A28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MatchStartMusic;                                   // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             MatchEndMusic;                                     // 0x0A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TeamDeathmatchGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TeamDeathmatchGM")
	}
	static class ATeamDeathmatchGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATeamDeathmatchGM>();
	}
};
DUMPER7_ASSERTS_ATeamDeathmatchGM;

// Class ReadyOrNot.RoundEndWidget_PVP
// 0x0008 (0x02F8 - 0x02F0)
class URoundEndWidget_PVP : public UBaseWidget
{
public:
	class UWidgetAnimation*                       Anim_FadeIn;                                       // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnGameModeRoundEnded();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RoundEndWidget_PVP")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RoundEndWidget_PVP")
	}
	static class URoundEndWidget_PVP* GetDefaultObj()
	{
		return GetDefaultObjImpl<URoundEndWidget_PVP>();
	}
};
DUMPER7_ASSERTS_URoundEndWidget_PVP;

// Class ReadyOrNot.RoundupWidget
// 0x0050 (0x0468 - 0x0418)
class URoundupWidget : public UCommonActivatableWidget
{
public:
	bool                                          bIsCollapsed;                                      // 0x0418(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           Unlocks;                                           // 0x0420(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FText>                           Actions;                                           // 0x0430(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bUsingGamepad;                                     // 0x0440(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaGameProfile*                       MetaGameProfile;                                   // 0x0448(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommanderProfile*                      CommanderProfile;                                  // 0x0450(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URosterManager*                         RosterManager;                                     // 0x0458(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_460[0x8];                                      // 0x0460(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddRoundupAction(const class FText& Action);
	void AddRoundupUnlock(const class FText& Unlock);
	void CollapseContent();
	void EmptyWidget();
	void ExpandContent();
	void HideRoundupActions();
	void HideRoundupUnlocks();
	void HideWidget();
	void OnInputMethodChanged(const ECommonInputType InputMethod);
	void RefreshWidget();
	void ShowWidget();
	void ToggleContent();

	bool IsNewCommanderModeSave() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RoundupWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RoundupWidget")
	}
	static class URoundupWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URoundupWidget>();
	}
};
DUMPER7_ASSERTS_URoundupWidget;

// Class ReadyOrNot.SaveUpgradeInterface
// 0x0000 (0x0000 - 0x0000)
class ISaveUpgradeInterface final
{
public:
	int32 GetCurrentSaveVersion();
	bool UpgradeSave_Version1to2();
	bool UpgradeSave_Version2to3();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SaveUpgradeInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SaveUpgradeInterface")
	}
	static class ISaveUpgradeInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISaveUpgradeInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISaveUpgradeInterface;

// Class ReadyOrNot.ScanDoorActivity
// 0x0098 (0x0288 - 0x01F0)
class UScanDoorActivity final : public UBaseActivity
{
public:
	class ADoor*                                  Door;                                              // 0x01F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F8[0x28];                                     // 0x01F8(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACyberneticCharacter*>           SpottedCharacters;                                 // 0x0220(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class ATrapActorAttachedToDoor*               SpottedTrap;                                       // 0x0230(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_238[0x50];                                     // 0x0238(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnterCompleteStage();
	void EnterMoveToStage();
	void EnterScanStage();
	void TickCompleteStage(float DeltaTime, float Uptime);
	void TickMoveToStage(float DeltaTime, float Uptime);
	void TickScanStage(float DeltaTime, float Uptime);

	bool CanStartScanning() const;
	bool IsScanComplete() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScanDoorActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScanDoorActivity")
	}
	static class UScanDoorActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScanDoorActivity>();
	}
};
DUMPER7_ASSERTS_UScanDoorActivity;

// Class ReadyOrNot.ScopedWeaponAttachment
// 0x0770 (0x1840 - 0x10D0)
class UScopedWeaponAttachment : public UWeaponAttachment
{
public:
	TArray<struct FScopeModifications>            ScopeMods;                                         // 0x10D0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         ZoomFOVAddition;                                   // 0x10E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomInSpeed;                                       // 0x10E4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomOutSpeed;                                      // 0x10E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSupportsCowitness;                                // 0x10EC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseScopeEffect;                                   // 0x10ED(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10EE[0x2];                                     // 0x10EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              ScopeReticle;                                      // 0x10F0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsePipRendering;                                  // 0x1118(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESceneCaptureSource                           CaptureSource;                                     // 0x1119(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverridePostProcessSettings;                      // 0x111A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedInventoryUpdate;                              // 0x111B(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111C[0x4];                                     // 0x111C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   OverridePostProcessSettings;                       // 0x1120(0x06E0)(Edit, NativeAccessSpecifierPublic)
	int32                                         PipMaterialIdx;                                    // 0x1800(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PipFOV;                                            // 0x1804(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerCameraFOVMultiplier;                         // 0x1808(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_180C[0x4];                                     // 0x180C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               PipRenderDynamicMaterial;                          // 0x1810(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneCaptureComponent2D*               PipSceneCapture;                                   // 0x1818(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                 PipRenderTarget;                                   // 0x1820(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              PipResolution;                                     // 0x1828(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1838[0x8];                                     // 0x1838(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetMeshspaceOffsetDistance(class ABaseWeapon* Weapon);
	float GetMeshspaceOffsetHorizontal(class ABaseWeapon* Weapon);
	float GetMeshspaceOffsetVertical(class ABaseWeapon* Weapon);
	struct FScopeModifications GetScopeMods(class ABaseWeapon* Weapon);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScopedWeaponAttachment")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScopedWeaponAttachment")
	}
	static class UScopedWeaponAttachment* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScopedWeaponAttachment>();
	}
};
DUMPER7_ASSERTS_UScopedWeaponAttachment;

// Class ReadyOrNot.ScoringComponent
// 0x00A0 (0x0140 - 0x00A0)
class UScoringComponent final : public UActorComponent
{
public:
	uint8                                         bEnabled : 1;                                      // 0x00A0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScoreData                             ScoringData;                                       // 0x00A8(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    ScoreGroup;                                        // 0x00D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   ScoreGroupName;                                    // 0x00E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EObjectiveLevel                               ObjectiveLevel;                                    // 0x00F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAutoAddToScorePool : 1;                           // 0x00F1(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	bool                                          bShowPopupOnTakeAllScoresWithNoChange;             // 0x00F2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F3[0x45];                                      // 0x00F3(0x0045)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             ScoreGroupDataTable;                               // 0x0138(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	int32 GetScore(const class FText& ScoreName) const;
	int32 GetTotalScore(bool bOnlyEnabled, const bool bOnlyGiven) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScoringComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScoringComponent")
	}
	static class UScoringComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScoringComponent>();
	}
};
DUMPER7_ASSERTS_UScoringComponent;

// Class ReadyOrNot.ScoringInterface
// 0x0000 (0x0000 - 0x0000)
class IScoringInterface final
{
public:
	class UScoringComponent* GetScoringComponent() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScoringInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScoringInterface")
	}
	static class IScoringInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IScoringInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IScoringInterface;

// Class ReadyOrNot.ScoringManager
// 0x0050 (0x02E8 - 0x0298)
class AScoringManager final : public AInfo
{
public:
	uint8                                         Pad_298[0x18];                                     // 0x0298(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TotalScorePool;                                    // 0x02B0(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B4[0xC];                                      // 0x02B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FScoreGroup>                    ObjectiveScoreGroups;                              // 0x02C0(0x0010)(Net, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FScorePenaltyData>              PenaltyScoreGroups;                                // 0x02D0(0x0010)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E0[0x1];                                      // 0x02E0(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bCachedHasClearedMission;                          // 0x02E1(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCachedSoftClearedMission;                         // 0x02E2(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCachedMissionFailed;                              // 0x02E3(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsOfficialScoring;                                // 0x02E4(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class FString CalculateGradeLetterFromPercentage(float ScorePercentage);
	static class AScoringManager* Get();
	static void GetCivilianCount(int32* OutReported, int32* OutInjured, int32* OutKilled, int32* OutArrested, int32* OutTotal);
	static void GetEvidenceCount(int32* EvidenceCollected, int32* TotalEvidence);
	static void GetObjectiveCompletionStatus(int32* ObjectivesComplete, int32* ObjectivesFailed, int32* TotalObjectives);
	static void GetReportCount(int32* ReportedCount, int32* TotalReports);
	static void GetScoreCountFromGroup(const class FName& InGroupName, int32* OutScoresGiven, int32* OutTotalScores, bool bRequiredOnly);
	static void GetSuspectCount(int32* OutReported, int32* OutArrested, int32* OutKilled, int32* OutTotal);
	static void HasClearedMission(bool* bHasClearedMission, bool* bSoftClearedMission, bool* bMissionFailed);
	static bool IsOfficialScoring();

	class FString CalculateGradeLetterFromPlayerScore();
	void ChangeScoreGroup(class UScoringComponent* InScoringComponent, class FName NewGroupName);
	void DisplayBonuses(class UScoringComponent* InScoringComponent, bool bCondensed, const class FText& ScoreTextOverride);
	void DisplayBonusesAndPenalties(class UScoringComponent* InScoringComponent, bool bCondensed, const class FText& ScoreTextOverride);
	void DisplayPenalties(class UScoringComponent* InScoringComponent, bool bCondensed, const class FText& ScoreTextOverride);
	void GetTotalScore(int32* TotalScore, bool bIncludePrimaryScores);
	void GetTotalScorePool(int32* MaxScore);
	void GiveAllScores(class UScoringComponent* InScoringComponent, bool bOnlyEnabledScore, bool bDisplayScoreOnHUD, const class FText& ScoreText, float DisplayOnHUDDelay, int32 CustomScoreOnHUD);
	void GiveCustomPenalty(const class FText& PenaltyGroupName, int32 PenaltyScore, bool bDisplayScoreOnHUD, float DisplayOnHUDDelay);
	void GiveFakeScore(class UScoringComponent* InScoringComponent, const class FText& ScoreName, bool bDisplayScoreOnHUD, const class FText& ScoreText, float DisplayOnHUDDelay, int32 CustomScoreOnHUD);
	void GivePenalty(class UScoringComponent* InScoringComponent, const class FText& PenaltyGroupName, bool bDisplayScoreOnHUD, const class FText& ScoreText, float DisplayOnHUDDelay, int32 CustomScoreOnHUD);
	void GiveScore(class UScoringComponent* InScoringComponent, const class FText& ScoreName, bool bDisplayScoreOnHUD, const class FText& ScoreText, float DisplayOnHUDDelay, int32 CustomScoreOnHUD);
	void GiveScores(class UScoringComponent* InScoringComponent, const TArray<class FText>& ScoreNames, bool bDisplayScoreOnHUD, const class FText& ScoreText, float DisplayOnHUDDelay, int32 CustomScoreOnHUD);
	void Multicast_DisplayScore(const class FText& ScoreText, int32 Score, bool bGive);
	void RevokeAllPenalties(class UScoringComponent* InScoringComponent);
	void RevokePenalty(class UScoringComponent* InScoringComponent, const class FText& PenaltyGroupName);
	void TakeAllScores(class UScoringComponent* InScoringComponent, const class FText& TakeReason, bool bDisplayScoreOnHUD, bool bDisableScores);
	void TakeAllScoresExcept(class UScoringComponent* InScoringComponent, const TArray<class FText>& ScoreNames, const class FText& TakeReason, bool bDisplayScoreOnHUD, bool bDisableScores);
	void TakeScore(class UScoringComponent* InScoringComponent, const class FText& ScoreName, const class FText& TakeReason, bool bDisplayScoreOnHUD, bool bDisableScore);
	void TakeScores(class UScoringComponent* InScoringComponent, const TArray<class FText>& ScoreNames, const class FText& TakeReason, bool bDisplayScoreOnHUD, bool bDisableScores);

	bool AllRequiredScoresGiven(const TArray<struct FScoreBonus>& InScoreBonusArray) const;
	bool AllScoresGiven(const TArray<struct FScoreBonus>& InScoreBonusArray) const;
	bool AnyScoresGiven(const TArray<struct FScoreBonus>& InScoreBonusArray) const;
	class FString CalculateGradeLetterFromScore(int32 Score) const;
	float GetCurrentScoreAsPercentage() const;
	int32 GetGivenScoreCountFromArray(const TArray<struct FScoreData>& InScoreDataArray, bool bIncludeHiddenScores) const;
	int32 GetGivenScoreCountFromGroup(const TArray<struct FScoreGroup>& InScoreGroupArray) const;
	int32 GetNonGivenScoreCountFromArray(const TArray<struct FScoreData>& InScoreDataArray, bool bOnlyEnabled) const;
	int32 GetNonGivenScoreCountFromGroup(const TArray<struct FScoreGroup>& InScoreGroupArray) const;
	TArray<struct FScorePenaltyData> GetPenaltyScoreGroups() const;
	TArray<struct FScoreGroup> GetScoreGroups() const;
	int32 GetTotalActorsTrackingScore() const;
	int32 GetTotalGivenScoresFromArray(const TArray<struct FScoreData>& InScoreDataArray, bool bIncludeHiddenScores) const;
	int32 GetTotalNonGivenScoresFromArray(const TArray<struct FScoreData>& InScoreDataArray) const;
	int32 GetTotalScoreCountFromArray(const TArray<struct FScoreData>& InScoreDataArray, bool bIncludeHiddenScores) const;
	int32 GetTotalScoreFromArray(const TArray<struct FScoreData>& InScoreDataArray) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScoringManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScoringManager")
	}
	static class AScoringManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AScoringManager>();
	}
};
DUMPER7_ASSERTS_AScoringManager;

// Class ReadyOrNot.ScreenspaceMarkerWidget
// 0x0000 (0x02F0 - 0x02F0)
class UScreenspaceMarkerWidget final : public UCommonUserWidget
{
public:
	void HideWidget();
	void ShowWidget();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScreenspaceMarkerWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScreenspaceMarkerWidget")
	}
	static class UScreenspaceMarkerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScreenspaceMarkerWidget>();
	}
};
DUMPER7_ASSERTS_UScreenspaceMarkerWidget;

// Class ReadyOrNot.ScriptedDialogue
// 0x0060 (0x0090 - 0x0030)
class UScriptedDialogue final : public UBlueprintAsyncActionBase
{
public:
	TMulticastInlineDelegate<void()>              DialogueFinished;                                  // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObject*                                WorldContextObject;                                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AReadyOrNotCharacter*                   Character;                                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoundSource*                           VoiceSoundSource;                                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x38];                                      // 0x0058(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UScriptedDialogue* Start2DScriptedDialogue(class UObject* WorldContextObject_0, class UFMODEvent* Event, const class FString& Speaker, const class FString& VoiceLine, class FName SpeakerTag);
	static class UScriptedDialogue* StartCharacterScriptedDialogue(class AReadyOrNotCharacter* Character_0, const class FString& VoiceLine);

	void HandleDialogueFinished();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScriptedDialogue")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScriptedDialogue")
	}
	static class UScriptedDialogue* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScriptedDialogue>();
	}
};
DUMPER7_ASSERTS_UScriptedDialogue;

// Class ReadyOrNot.ScriptedLevelEvents
// 0x0000 (0x0028 - 0x0028)
class UScriptedLevelEvents final : public UBlueprintFunctionLibrary
{
public:
	static class ACyberneticCharacter* GetCyberneticsCharacterByTag(class FName Tag);
	static class ACyberneticController* GetCyberneticsControllerByTag(class FName Tag);
	static void GiveWorldBuildingActivityByTag(class ACyberneticController* Controller, class FName Tag, float TimeDoingActivity);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScriptedLevelEvents")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScriptedLevelEvents")
	}
	static class UScriptedLevelEvents* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScriptedLevelEvents>();
	}
};
DUMPER7_ASSERTS_UScriptedLevelEvents;

// Class ReadyOrNot.SearchAndDestroyGM
// 0x0010 (0x0A30 - 0x0A20)
class ASearchAndDestroyGM final : public AReadyOrNotGameMode_PVP
{
public:
	bool                                          bBombPlanted;                                      // 0x0A20(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A21[0x3];                                      // 0x0A21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumRedSpawned;                                     // 0x0A24(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumBlueSpawned;                                    // 0x0A28(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A2C[0x4];                                      // 0x0A2C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 GetNumberOfActivePlayersOnTeam(ETeamType Team);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SearchAndDestroyGM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SearchAndDestroyGM")
	}
	static class ASearchAndDestroyGM* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASearchAndDestroyGM>();
	}
};
DUMPER7_ASSERTS_ASearchAndDestroyGM;

// Class ReadyOrNot.SearchAndDestroyGS
// 0x0010 (0x0938 - 0x0928)
class ASearchAndDestroyGS final : public AReadyOrNotGameState
{
public:
	float                                         BombCountActive;                                   // 0x0928(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBombPlanted;                                      // 0x092C(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBombDetonate;                                     // 0x092D(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBombDefused;                                      // 0x092E(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_92F[0x1];                                      // 0x092F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       bHasBomb;                                          // 0x0930(0x0008)(BlueprintVisible, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SearchAndDestroyGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SearchAndDestroyGS")
	}
	static class ASearchAndDestroyGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASearchAndDestroyGS>();
	}
};
DUMPER7_ASSERTS_ASearchAndDestroyGS;

// Class ReadyOrNot.SearchAndSecureActivity
// 0x0080 (0x0270 - 0x01F0)
class USearchAndSecureActivity final : public UBaseActivity
{
public:
	TMulticastInlineDelegate<void(class USearchAndSecureActivity* Activity, class ADoor* BreachedDoor)> OnSearchComplete; // 0x01F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_200[0x20];                                     // 0x0200(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class ADoor*                                  BreachDoor;                                        // 0x0220(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_228[0x30];                                     // 0x0228(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         AllSecurables;                                     // 0x0258(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class AActor*                                 ClosestSecurable;                                  // 0x0268(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SearchAndSecureActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SearchAndSecureActivity")
	}
	static class USearchAndSecureActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<USearchAndSecureActivity>();
	}
};
DUMPER7_ASSERTS_USearchAndSecureActivity;

// Class ReadyOrNot.SearchLandmarkActivity
// 0x0020 (0x0210 - 0x01F0)
class USearchLandmarkActivity final : public UBaseActivity
{
public:
	class ACoverLandmark*                         CoverLandmark;                                     // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F8[0x18];                                     // 0x01F8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnterCompleteStage();
	void EnterMoveToStage();
	void EnterSearchStage();
	void Notify_SearchLandmark();
	void TickSearchStage(float DeltaTime, float Uptime);

	bool CanAbortSearch() const;
	bool CanSearchNow() const;
	bool IsSearchFinished() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SearchLandmarkActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SearchLandmarkActivity")
	}
	static class USearchLandmarkActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<USearchLandmarkActivity>();
	}
};
DUMPER7_ASSERTS_USearchLandmarkActivity;

// Class ReadyOrNot.Securable
// 0x0000 (0x0000 - 0x0000)
class ISecurable final
{
public:
	void Secure(class AReadyOrNotCharacter* Instigator);

	bool CanBeSecured() const;
	bool CanBeSecuredByTrailers() const;
	class UEvidenceComponent* GetEvidenceComponent() const;
	struct FVector GetLocation() const;
	bool IsSecured() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Securable")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Securable")
	}
	static class ISecurable* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISecurable>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISecurable;

// Class ReadyOrNot.ServerListData
// 0x0148 (0x0410 - 0x02C8)
class UServerListData final : public UUserWidget
{
public:
	class FString                                 ServerName;                                        // 0x02C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentPlayers;                                    // 0x02D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxPlayers;                                        // 0x02DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Ping;                                              // 0x02E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                Session;                                           // 0x02E8(0x0120)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UServerList*                            ServerListRef;                                     // 0x0408(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ServerListData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ServerListData")
	}
	static class UServerListData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UServerListData>();
	}
};
DUMPER7_ASSERTS_UServerListData;

// Class ReadyOrNot.ServerList
// 0x0098 (0x04B0 - 0x0418)
class UServerList : public UCommonActivatableWidget
{
public:
	class UCommonListView*                        GlobalServerListView;                              // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonListView*                        FriendsServerListView;                             // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UServerListData*>                GlobalServerList;                                  // 0x0428(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UServerListData*>                FriendsServerList;                                 // 0x0438(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UServerListData*>                GlobalServerListFiltered;                          // 0x0448(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UServerListData*>                FriendsServerListFiltered;                         // 0x0458(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>                ListEntryWidgetClass;                              // 0x0468(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CurrentButtonId;                                   // 0x0470(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 HoveredPlayerID;                                   // 0x0478(0x0010)(BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_488[0x28];                                     // 0x0488(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FilterLists(bool HideFullLobbies);
	void PopulateServerList(const TArray<struct FBlueprintSessionResult>& SessionResults);
	void SortServerList(int32 ButtonId);
	void TempPopulateServerList();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ServerList")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ServerList")
	}
	static class UServerList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UServerList>();
	}
};
DUMPER7_ASSERTS_UServerList;

// Class ReadyOrNot.ServerList_Entry
// 0x0030 (0x0448 - 0x0418)
class UServerList_Entry : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UServerListData*                        ListData;                                          // 0x0420(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             ServerName_TextBlock;                              // 0x0428(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             ServerCurrentPlayers_TextBlock;                    // 0x0430(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             ServerMaxPlayers_TextBlock;                        // 0x0438(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             ServerPing_TextBlock;                              // 0x0440(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class FString GetOwningUserID(const struct FBlueprintSessionResult& Session);
	void JoinSession(const struct FBlueprintSessionResult& Session);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ServerList_Entry")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ServerList_Entry")
	}
	static class UServerList_Entry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UServerList_Entry>();
	}
};
DUMPER7_ASSERTS_UServerList_Entry;

// Class ReadyOrNot.SettingsMenuGamepad
// 0x00F0 (0x0508 - 0x0418)
class USettingsMenuGamepad : public UMenuWidget
{
public:
	TArray<struct FKeyBinding>                    CharacterControls;                                 // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FKeyBinding>                    DroneControls;                                     // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FKeyBinding>                    SharedControls;                                    // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class UControlsBind*, struct FAxisMappingStruct> AxesControlBinds;                          // 0x0448(0x0050)(BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<class UControlsBind*, struct FActionMappingStruct> ActionsControlBinds;                     // 0x0498(0x0050)(BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FKeyBinding>                    UnbindableControls;                                // 0x04E8(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UIllegalUnbindModal*                    IllegalKeyConflictDetectedPopUp;                   // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonActivatableWidgetStack*          WidgetStack;                                       // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void EndButtonsDisabledForBinding();
	void SelectNewTab(const TArray<class UCommonButtonBase*>& TabButtonsArray, int32 WidgetIndex, bool GoingToPreviousWidget);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SettingsMenuGamepad")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SettingsMenuGamepad")
	}
	static class USettingsMenuGamepad* GetDefaultObj()
	{
		return GetDefaultObjImpl<USettingsMenuGamepad>();
	}
};
DUMPER7_ASSERTS_USettingsMenuGamepad;

// Class ReadyOrNot.WorldActionActivity
// 0x0098 (0x0288 - 0x01F0)
class UWorldActionActivity final : public UBaseActivity
{
public:
	bool                                          bUseAnimationDataTableMontage;                     // 0x01F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           StartMontage;                                      // 0x01F8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           LoopMontage;                                       // 0x0200(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           EndMontage;                                        // 0x0208(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           InterruptedMontage;                                // 0x0210(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LoopTime;                                          // 0x0218(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TableMontageRowName;                               // 0x0220(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAllowUnarmed;                                     // 0x0230(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHolsterWeapon;                                    // 0x0231(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bShouldStrafeToLocation;                           // 0x0232(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bRequiresExactLocation;                            // 0x0233(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bRequiresExactRotation;                            // 0x0234(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAbortOnSeenSwat;                                  // 0x0235(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAbortOnAggressiveNoise;                           // 0x0236(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_237[0x1];                                      // 0x0237(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AWorldAction*                           WorldAction;                                       // 0x0238(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_240[0x48];                                     // 0x0240(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnEnterEndState();
	void OnEnterInterruptState();
	void OnEnterLoopState();
	void OnEnterStartState();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WorldActionActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WorldActionActivity")
	}
	static class UWorldActionActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWorldActionActivity>();
	}
};
DUMPER7_ASSERTS_UWorldActionActivity;

// Class ReadyOrNot.ShaderCompilationWidget
// 0x0010 (0x02D8 - 0x02C8)
class UShaderCompilationWidget : public UUserWidget
{
public:
	uint8                                         Pad_2C8[0x10];                                     // 0x02C8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnShaderCompileCountUpdated(int32 NumShaders);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShaderCompilationWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShaderCompilationWidget")
	}
	static class UShaderCompilationWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShaderCompilationWidget>();
	}
};
DUMPER7_ASSERTS_UShaderCompilationWidget;

// Class ReadyOrNot.ShellRackShellComponent
// 0x0000 (0x0630 - 0x0630)
class UShellRackShellComponent final : public UStaticMeshComponent
{
public:
	int32                                         ShellNumber;                                       // 0x0628(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShellRackShellComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShellRackShellComponent")
	}
	static class UShellRackShellComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShellRackShellComponent>();
	}
};
DUMPER7_ASSERTS_UShellRackShellComponent;

// Class ReadyOrNot.SkinComponent
// 0x01B8 (0x0258 - 0x00A0)
class USkinComponent : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Name_0;                                            // 0x00A8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x00C0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x00D8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRequiresDLC;                                      // 0x0100(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGameVersionRestriction                       Dlc;                                               // 0x0101(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bResetsToFactorySkin;                              // 0x0102(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeamType                                     LockedToTeam;                                      // 0x0103(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class AActor>>             LockedToBlueprint;                                 // 0x0108(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class USkinnedAsset*, class USkeletalMesh*> SkeletalMeshSkinMap;                            // 0x0118(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class USkeletalMeshComponent*, class USkeletalMesh*> PreAppliedSkeletalMeshMap;             // 0x0168(0x0050)(ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class UStaticMesh*, class UStaticMesh*>  StaticMeshSkinMap;                                 // 0x01B8(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class UStaticMeshComponent*, class UStaticMesh*> PreAppliedStaticMeshMap;                   // 0x0208(0x0050)(ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UTexture2D* GetClassDefaultIcon(TSubclassOf<class USkinComponent> SkinComponent);

	bool HasDLCUnlocked();
	bool IsFactorySkin();
	void ResetSkin();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SkinComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SkinComponent")
	}
	static class USkinComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkinComponent>();
	}
};
DUMPER7_ASSERTS_USkinComponent;

// Class ReadyOrNot.SlowDownVolume
// 0x0008 (0x02A8 - 0x02A0)
class ASlowDownVolume final : public ATriggerBox
{
public:
	float                                         SlowDownMultiplier;                                // 0x02A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnOverlapBeginComponent(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnOverlapEndComponent(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SlowDownVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SlowDownVolume")
	}
	static class ASlowDownVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASlowDownVolume>();
	}
};
DUMPER7_ASSERTS_ASlowDownVolume;

// Class ReadyOrNot.SmallSlot_V2
// 0x0010 (0x0300 - 0x02F0)
class USmallSlot_V2 : public UCommonUserWidget
{
public:
	class UTextBlock*                             ItemName;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          Equipped;                                          // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool GetEquipped();
	void OnEquipped();
	void SetEquipped(bool IsEquipped);
	void SetText(const class FText& Text);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmallSlot_V2")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmallSlot_V2")
	}
	static class USmallSlot_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmallSlot_V2>();
	}
};
DUMPER7_ASSERTS_USmallSlot_V2;

// Class ReadyOrNot.SniperSpawn
// 0x0048 (0x02E0 - 0x0298)
class ASniperSpawn final : public AActor
{
public:
	class FName                                   SpawnLabel;                                        // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMovementLocked;                                   // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStartInADS;                                       // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLockADS;                                          // 0x02A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A3[0x5];                                      // 0x02A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ASniperCharacter>           SniperClass;                                       // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ASniperCharacter>           SpotterClass;                                      // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ASniperCharacter>           MarksmanClass;                                     // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        SpawnDirection;                                    // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        RootSceneComponent;                                // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasSniperSpawned;                                 // 0x02D0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASniperCharacter*                       SpawnedSniper;                                     // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SpawnMarksmanHere(int32 Designation);
	void SpawnPersonnelOfClass(TSubclassOf<class ASniperCharacter> CharacterClass, int32 Designation);
	void SpawnSniperHere(int32 Designation);
	void SpawnSpotterHere(int32 Designation);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SniperSpawn")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SniperSpawn")
	}
	static class ASniperSpawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASniperSpawn>();
	}
};
DUMPER7_ASSERTS_ASniperSpawn;

// Class ReadyOrNot.TaggedCharacterEventCondition
// 0x0020 (0x0060 - 0x0040)
class UTaggedCharacterEventCondition final : public UMissionEventCondition
{
public:
	class FName                                   CharacterTag;                                      // 0x0040(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerOnKilled;                                  // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerOnIncapacitated;                           // 0x0049(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerOnArrested;                                // 0x004A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerOnSurrendered;                             // 0x004B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerOnOverStressed;                            // 0x004C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OverStressedTriggerThreshold;                      // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACyberneticCharacter*                   TaggedCharacter;                                   // 0x0058(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HandleAllCharactersSpawned();
	void HandleCharacterArrestedOrSurrendered(class AReadyOrNotCharacter* Character);
	void HandleCharacterIncapacitated(class AReadyOrNotCharacter* IncapacitatedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
	void HandleCharacterKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TaggedCharacterEventCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TaggedCharacterEventCondition")
	}
	static class UTaggedCharacterEventCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTaggedCharacterEventCondition>();
	}
};
DUMPER7_ASSERTS_UTaggedCharacterEventCondition;

// Class ReadyOrNot.SoftCoverCombatMove
// 0x0008 (0x0238 - 0x0230)
class USoftCoverCombatMove final : public UBaseCombatMoveActivity
{
public:
	uint8                                         Pad_230[0x8];                                      // 0x0230(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SoftCoverCombatMove")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SoftCoverCombatMove")
	}
	static class USoftCoverCombatMove* GetDefaultObj()
	{
		return GetDefaultObjImpl<USoftCoverCombatMove>();
	}
};
DUMPER7_ASSERTS_USoftCoverCombatMove;

// Class ReadyOrNot.SoundData
// 0x0000 (0x0030 - 0x0030)
class USoundData final : public UDataAsset
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SoundData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SoundData")
	}
	static class USoundData* GetDefaultObj()
	{
		return GetDefaultObjImpl<USoundData>();
	}
};
DUMPER7_ASSERTS_USoundData;

// Class ReadyOrNot.SoundManager
// 0x0110 (0x0150 - 0x0040)
class USoundManager final : public UTickableWorldSubsystem
{
public:
	uint8                                         Pad_40[0x50];                                      // 0x0040(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bForceLegacySound;                                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasFinishedSetup;                                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APortalVolume*>                  PortalVolumes;                                     // 0x0098(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ARoomVolume*>                    RoomVolumes;                                       // 0x00A8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AReflectionProbe*>               ReflectionProbes;                                  // 0x00B8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class USoundSource*>                   ActiveSoundSources;                                // 0x00C8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class USoundSource*>                   InactiveSoundSources;                              // 0x00D8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UBVHNode*                               RootBVHNode;                                       // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F0[0x60];                                      // 0x00F0(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USoundManager* Get(class UWorld* World);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SoundManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SoundManager")
	}
	static class USoundManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<USoundManager>();
	}
};
DUMPER7_ASSERTS_USoundManager;

// Class ReadyOrNot.TugOfWarGS
// 0x0008 (0x0930 - 0x0928)
class ATugOfWarGS : public AReadyOrNotGameState
{
public:
	class ATugOfWarMover*                         Mover;                                             // 0x0928(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TugOfWarGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TugOfWarGS")
	}
	static class ATugOfWarGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATugOfWarGS>();
	}
};
DUMPER7_ASSERTS_ATugOfWarGS;

// Class ReadyOrNot.BVHNode
// 0x0070 (0x0098 - 0x0028)
class UBVHNode final : public UObject
{
public:
	uint8                                         Pad_28[0x48];                                      // 0x0028(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBVHNode*>                       Children;                                          // 0x0070(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ARoomVolume*>                    Rooms;                                             // 0x0080(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UWorld*                                 World;                                             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BVHNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BVHNode")
	}
	static class UBVHNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBVHNode>();
	}
};
DUMPER7_ASSERTS_UBVHNode;

// Class ReadyOrNot.SoundNodeVolume
// 0x0008 (0x0050 - 0x0048)
class USoundNodeVolume final : public USoundNodeAssetReferencer
{
public:
	float                                         VolumeAdjust;                                      // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SoundNodeVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SoundNodeVolume")
	}
	static class USoundNodeVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<USoundNodeVolume>();
	}
};
DUMPER7_ASSERTS_USoundNodeVolume;

// Class ReadyOrNot.SoundSource
// 0x0288 (0x02B0 - 0x0028)
class USoundSource final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsRunning;                                        // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsActive;                                         // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPaused;                                         // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSincePrimaryUpdate;                            // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSincePropagationUpdate;                        // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PrimaryUpdateInterval;                             // 0x003C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PropagationUpdateInterval;                         // 0x0040(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOcclusionType                                OcclusionType;                                     // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPropagationType                              PropagationType;                                   // 0x0045(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESoundSourceType                              SoundSourceType;                                   // 0x0046(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHierarchyType                                HierarchyType;                                     // 0x0047(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USoundSource*>                   ChildrenSoundSources;                              // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class USoundSource*                           ParentSoundSource;                                 // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  InstanceGuid;                                      // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             Event;                                             // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0080(0x0060)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Velocity;                                          // 0x00E0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        AttachToComponent;                                 // 0x00F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AttachPointName;                                   // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebugMode;                                        // 0x0108(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDoorAttachedSound;                              // 0x0109(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWorld*                                 World;                                             // 0x0110(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRegisterLater;                                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayLater;                                        // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11A[0xE];                                      // 0x011A(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnSoundStopped;                                    // 0x0128(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_138[0x38];                                     // 0x0138(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ProgrammerSoundName;                               // 0x0170(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_180[0x50];                                     // 0x0180(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnEventStopped;                                    // 0x01D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnSoundFinished;                                   // 0x01E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Name, int32 Position)> OnTimelineMarker;      // 0x01F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 Bar, int32 Beat, int32 Position, float Tempo, int32 TimeSignatureUpper, int32 TimeSignatureLower)> OnTimelineBeat; // 0x0200(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<class FName, float>                      ParameterCache;                                    // 0x0210(0x0050)(Edit, BlueprintVisible, SimpleDisplay, NativeAccessSpecifierPublic)
	uint8                                         Pad_260[0x50];                                     // 0x0260(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USoundSource* CreateFirstPersonSound(class UWorld* InWorld, class UFMODEvent* InEvent, const struct FTransform& InTransform, const TArray<struct FMODParam>& Params_0, bool InbDebugMode);
	static class USoundSource* CreateThirdPersonSound(class UWorld* InWorld, class UFMODEvent* InEvent, const struct FTransform& InTransform, const TArray<struct FMODParam>& Params_0, EOcclusionType InOcclusionType, EPropagationType InPropagationType, bool InbDebugMode);
	static void ReplaceAnimNotifies(class UAnimSequenceBase* AnimationSequence);

	void AddChild(class USoundSource* Child);
	void Attach(class USceneComponent* InAttachToComponent, class FName InAttachPointName);
	void Detach();
	float GetParameter(class FName Name_0);
	void GetParameterValue(class FName Name_0, float* UserValue, float* FinalValue);
	void Initialize(class UFMODEvent* InEvent, const struct FTransform& InTransform, const TArray<struct FMODParam>& Params_0, EOcclusionType InOcclusionType, EPropagationType InPropagationType, bool InbDebugMode);
	void Play();
	void ResetSoundSource();
	void SetDebugMode(bool InbDebugMode);
	void SetOcclusionType(EOcclusionType InOcclusionType);
	void SetParameter(class FName Name_0, float Value);
	void SetPaused(bool paused);
	void SetPrimaryTickInterval(float Interval);
	void SetProgrammerSoundName(const class FString& Value);
	void SetPropagationTickInterval(float Interval);
	void SetPropagationType(EPropagationType InPropagationType);
	void Stop(bool bImmediate);

	float GetCurrentTime() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SoundSource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SoundSource")
	}
	static class USoundSource* GetDefaultObj()
	{
		return GetDefaultObjImpl<USoundSource>();
	}
};
DUMPER7_ASSERTS_USoundSource;

// Class ReadyOrNot.SoundSourceAnimNotify
// 0x0020 (0x0058 - 0x0038)
class USoundSourceAnimNotify final : public UAnimNotify
{
public:
	uint8                                         bFollow : 1;                                       // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AttachName;                                        // 0x0040(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             Event;                                             // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SoundSourceAnimNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SoundSourceAnimNotify")
	}
	static class USoundSourceAnimNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<USoundSourceAnimNotify>();
	}
};
DUMPER7_ASSERTS_USoundSourceAnimNotify;

// Class ReadyOrNot.SpawnGenerator
// 0x0058 (0x02F0 - 0x0298)
class ASpawnGenerator final : public AActor
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0298(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A0[0x8];                                      // 0x02A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	ETeamType                                     SpawnTeam;                                         // 0x02A8(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A9[0x1];                                      // 0x02A9(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	uint16                                        Rows;                                              // 0x02AA(0x0002)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint16                                        Columns;                                           // 0x02AC(0x0002)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2AE[0x2];                                      // 0x02AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RowSpacing;                                        // 0x02B0(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ColumnSpacing;                                     // 0x02B4(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bShowNodes : 1;                                    // 0x02B8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_2B9[0x17];                                     // 0x02B9(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerStart*>                   PlayerStarts;                                      // 0x02D0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E0[0x10];                                     // 0x02E0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RefreshSpawns();
	void SelectAll();
	void UpdatePlayerStartTags();

	const TArray<class APlayerStart*> GetAllPlayerStarts() const;
	TArray<struct FVector> GetNodes() const;
	ETeamType GetSpawnTeam() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpawnGenerator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpawnGenerator")
	}
	static class ASpawnGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpawnGenerator>();
	}
};
DUMPER7_ASSERTS_ASpawnGenerator;

// Class ReadyOrNot.SpawnSkeletalMeshAnimNotifyState
// 0x00A0 (0x00D0 - 0x0030)
class USpawnSkeletalMeshAnimNotifyState final : public UAnimNotifyState
{
public:
	class USkeletalMesh*                          SkeletalMeshToSpawn;                               // 0x0030(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                        PlayAnimation;                                     // 0x0038(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             MeshTransform;                                     // 0x0040(0x0060)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableWeaponFOVShader;                            // 0x00A0(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyOwnerSee;                                     // 0x00A1(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOwnerNoSee;                                       // 0x00A2(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneToSpawnOn;                                     // 0x00A4(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDestroyAtEnd;                                     // 0x00AC(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSimulatePhysicsAtEnd;                             // 0x00AD(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ForceVector;                                       // 0x00B0(0x0018)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpawnSkeletalMeshAnimNotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpawnSkeletalMeshAnimNotifyState")
	}
	static class USpawnSkeletalMeshAnimNotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpawnSkeletalMeshAnimNotifyState>();
	}
};
DUMPER7_ASSERTS_USpawnSkeletalMeshAnimNotifyState;

// Class ReadyOrNot.SpawnStaticMeshAnimNotifyState
// 0x0030 (0x0060 - 0x0030)
class USpawnStaticMeshAnimNotifyState final : public UAnimNotifyState
{
public:
	class UStaticMesh*                            StaticMeshToSpawn;                                 // 0x0030(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneToSpawnOn;                                     // 0x0038(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCastShadow;                                       // 0x0040(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyOwnerSee;                                     // 0x0041(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOwnerNoSee;                                       // 0x0042(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDestroyAtEnd;                                     // 0x0043(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSimulatePhysicsAtEnd;                             // 0x0044(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSimulatePhysicsWhenRagdolled;                     // 0x0045(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ForceVector;                                       // 0x0048(0x0018)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpawnStaticMeshAnimNotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpawnStaticMeshAnimNotifyState")
	}
	static class USpawnStaticMeshAnimNotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpawnStaticMeshAnimNotifyState>();
	}
};
DUMPER7_ASSERTS_USpawnStaticMeshAnimNotifyState;

// Class ReadyOrNot.SpectateHUD
// 0x0000 (0x0388 - 0x0388)
class ASpectateHUD final : public AHUD
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpectateHUD")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpectateHUD")
	}
	static class ASpectateHUD* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpectateHUD>();
	}
};
DUMPER7_ASSERTS_ASpectateHUD;

// Class ReadyOrNot.SpectatePawn
// 0x0060 (0x03A8 - 0x0348)
class ASpectatePawn : public ASpectatorPawn
{
public:
	class UCameraComponent*                       PawnCamera;                                        // 0x0348(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeadSpectatePawn;                                 // 0x0350(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_351[0x1];                                      // 0x0351(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bBlendWithViewTarget;                              // 0x0352(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPendingCenterprint;                               // 0x0353(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PendingCenterprintDuration;                        // 0x0354(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PendingCenterprintType;                            // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerCharacter*                       PendingCenterprintOther;                           // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                              HeadcamMaterial;                                   // 0x0368(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               HeadcamMaterialInstance;                           // 0x0370(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpectatorCharacterHUD*                 SpectatorHUD;                                      // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldShowViewTargetHUD;                          // 0x0380(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CurrentViewTarget;                                 // 0x0388(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideWidgets;                                      // 0x0390(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       Killer;                                            // 0x0398(0x0008)(Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerCharacter*                       KilledCharacter;                                   // 0x03A0(0x0008)(Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void CleanUpOldPlayer();
	void EscapeMenu();
	void OnChatPressed();
	void OnSpectatedActorEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason);
	void OnTeamChatPressed();
	void SetViewTarget(class AReadyOrNotCharacter* InCharacter);
	void SpectateNextPlayer();
	void SpectatePreviousPlayer();

	ETeamType GetTeam() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpectatePawn")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpectatePawn")
	}
	static class ASpectatePawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpectatePawn>();
	}
};
DUMPER7_ASSERTS_ASpectatePawn;

// Class ReadyOrNot.SpinTestHeatmapVolume
// 0x0000 (0x02D0 - 0x02D0)
class ASpinTestHeatmapVolume final : public AVolume
{
public:
	void FlushVisualization();
	void VisualizeHeatMapIfExists();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpinTestHeatmapVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpinTestHeatmapVolume")
	}
	static class ASpinTestHeatmapVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpinTestHeatmapVolume>();
	}
};
DUMPER7_ASSERTS_ASpinTestHeatmapVolume;

// Class ReadyOrNot.SplineTrigger
// 0x0090 (0x0328 - 0x0298)
class ASplineTrigger : public AActor
{
public:
	TMulticastInlineDelegate<void(class APlayerCharacter* PlayerCharacter)> Delegate_OnSplineEnclosureEntered; // 0x0298(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class APlayerCharacter* PlayerCharacter)> Delegate_OnSplineEnclosureExited; // 0x02A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bInvertBounds;                                     // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LastValidPlayerLocation;                           // 0x02C0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                BoundsEntryDirection;                              // 0x02D8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bEnabled : 1;                                      // 0x02F0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bDrawDebugElements : 1;                            // 0x02F0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AverageSplinePointLocation;                        // 0x02F8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bIsOutsideSplineEnclosure : 1;                     // 0x0310(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       SplineComponent;                                   // 0x0318(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_320[0x8];                                      // 0x0320(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisableTrigger();
	void EnableTrigger();
	void OnSplineEnclosureEntered(class APlayerCharacter* PlayerCharacter);
	void OnSplineEnclosureExited(class APlayerCharacter* PlayerCharacter);
	void ToggleDrawDebug();

	bool IsActorInsideSplineEnclosure(class AActor* InActor) const;
	bool IsActorOutsideSplineEnclosure(class AActor* InActor) const;
	bool IsInsideSplineEnclosure() const;
	bool IsLocationOutsideSplineEnclosure(const struct FVector& Location) const;
	bool IsOutsideSplineEnclosure() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SplineTrigger")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SplineTrigger")
	}
	static class ASplineTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASplineTrigger>();
	}
};
DUMPER7_ASSERTS_ASplineTrigger;

// Class ReadyOrNot.SplineTrigger_Incrimination
// 0x0000 (0x0328 - 0x0328)
class ASplineTrigger_Incrimination final : public ASplineTrigger
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SplineTrigger_Incrimination")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SplineTrigger_Incrimination")
	}
	static class ASplineTrigger_Incrimination* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASplineTrigger_Incrimination>();
	}
};
DUMPER7_ASSERTS_ASplineTrigger_Incrimination;

// Class ReadyOrNot.SAGNumberOfSquadMembersWithValidTarget
// 0x0020 (0x0048 - 0x0028)
class USAGNumberOfSquadMembersWithValidTarget final : public USquadActionGate
{
public:
	int32                                         RequiredNumber;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ETargetType>                           TargetTypes;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ExposeOnSpawn, NativeAccessSpecifierPublic)
	bool                                          bAllowLastTrackedTarget;                           // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SAGNumberOfSquadMembersWithValidTarget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SAGNumberOfSquadMembersWithValidTarget")
	}
	static class USAGNumberOfSquadMembersWithValidTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USAGNumberOfSquadMembersWithValidTarget>();
	}
};
DUMPER7_ASSERTS_USAGNumberOfSquadMembersWithValidTarget;

// Class ReadyOrNot.SAGNumberOfSquadMembersKilled
// 0x0008 (0x0030 - 0x0028)
class USAGNumberOfSquadMembersKilled final : public USquadActionGate
{
public:
	int32                                         RequiredKilled;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeIncapacitated;                             // 0x002C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SAGNumberOfSquadMembersKilled")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SAGNumberOfSquadMembersKilled")
	}
	static class USAGNumberOfSquadMembersKilled* GetDefaultObj()
	{
		return GetDefaultObjImpl<USAGNumberOfSquadMembersKilled>();
	}
};
DUMPER7_ASSERTS_USAGNumberOfSquadMembersKilled;

// Class ReadyOrNot.SquadManager
// 0x00E0 (0x0378 - 0x0298)
class ASquadManager final : public AInfo
{
public:
	class FName                                   SquadName;                                         // 0x0298(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ACyberneticCharacter*>           SquadMembers;                                      // 0x02A0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class AReadyOrNotCharacter*, struct FCyberneticCharacterArrayContainer> ActiveTargetToSquadMembersMap; // 0x02B0(0x0050)(NativeAccessSpecifierPublic)
	class USquadRulesData*                        SquadActionRules;                                  // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UBaseSquadsActivity*>            SquadActivities;                                   // 0x0308(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UBaseSquadsActivity*                    ActiveSquadActivity;                               // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UBaseSquadsActivity*, float>       SquadsActivityCooldownMap;                         // 0x0320(0x0050)(NativeAccessSpecifierPublic)
	uint8                                         Pad_370[0x8];                                      // 0x0370(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDifficultyUpdated();
	void OnMemberAwarenessChange(class ACyberneticController* Controller, EAIAwarenessState Previous, EAIAwarenessState Current);
	void OnMemberIncapacitated(class AReadyOrNotCharacter* IncapacitatedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
	void OnMemberKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
	void OnMemberSeenCharacter(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Character);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SquadManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SquadManager")
	}
	static class ASquadManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASquadManager>();
	}
};
DUMPER7_ASSERTS_ASquadManager;

// Class ReadyOrNot.StackUpActor
// 0x0028 (0x02C0 - 0x0298)
class AStackUpActor final : public AActor
{
public:
	class USceneComponent*                        DefaultScene;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Depth;                                             // 0x02A0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            OccupiedBy;                                        // 0x02A8(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESquadPosition                                StackUpPosition;                                   // 0x02B0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADoor*                                  LinkedDoor;                                        // 0x02B8(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StackUpActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StackUpActor")
	}
	static class AStackUpActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AStackUpActor>();
	}
};
DUMPER7_ASSERTS_AStackUpActor;

// Class ReadyOrNot.StatComponentBase
// 0x0028 (0x00C8 - 0x00A0)
class UStatComponentBase : public UActorComponent
{
public:
	struct FDataTableRowHandle                    StatIDRowHandle;                                   // 0x00A0(0x0010)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UStatSubsystem*                         StatSystem;                                        // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B8[0x10];                                      // 0x00B8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsStatValid() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StatComponentBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StatComponentBase")
	}
	static class UStatComponentBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStatComponentBase>();
	}
};
DUMPER7_ASSERTS_UStatComponentBase;

// Class ReadyOrNot.StatFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UStatFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static float GetStatPercentage(int64 StatValue);
	static class UStatSubsystem* GetStatSubsystem();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StatFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StatFunctionLibrary")
	}
	static class UStatFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStatFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UStatFunctionLibrary;

// Class ReadyOrNot.StaticCharacterFaceAnimInstance
// 0x00A0 (0x03F0 - 0x0350)
class UStaticCharacterFaceAnimInstance : public UAnimInstance
{
public:
	class USkeletalMeshComponent*                 BodyDriverMesh;                                    // 0x0348(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 FaceMesh;                                          // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPoseAsset*                             FaceROM;                                           // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODAudioComponent*                    VoiceComponent;                                    // 0x0360(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               FocalTargetLookRotation;                           // 0x0368(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               HeadLookRotation;                                  // 0x0380(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         EyeTargetLookLeft;                                 // 0x0398(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EyeTargetLookRight;                                // 0x039C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EyeTargetLookUp;                                   // 0x03A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EyeTargetLookDown;                                 // 0x03A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          CurrentLipSyncAnimation;                           // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B0[0x4];                                      // 0x03B0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentLipSyncTime;                                // 0x03B4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B8[0x24];                                     // 0x03B8(0x0024)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentBlinkAmount;                                // 0x03DC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E0[0x10];                                     // 0x03E0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void PlayLipSyncAnimation(const class FString& SpeakerName, const class FString& VoiceLine);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StaticCharacterFaceAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StaticCharacterFaceAnimInstance")
	}
	static class UStaticCharacterFaceAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStaticCharacterFaceAnimInstance>();
	}
};
DUMPER7_ASSERTS_UStaticCharacterFaceAnimInstance;

// Class ReadyOrNot.StationSubLevelController
// 0x0020 (0x02B8 - 0x0298)
class AStationSubLevelController final : public AActor
{
public:
	class FName                                   LevelToLoad;                                       // 0x0298(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   EnableAfterCompleting;                             // 0x02A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   DisableAfterCompleting;                            // 0x02A8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsMultiplayerOnly;                                // 0x02B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<class FString> GetCampaignLevelOptions() const;
	TArray<class FString> GetStreamingLevelOptions() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StationSubLevelController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StationSubLevelController")
	}
	static class AStationSubLevelController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AStationSubLevelController>();
	}
};
DUMPER7_ASSERTS_AStationSubLevelController;

// Class ReadyOrNot.StatSubsystem
// 0x0190 (0x01C0 - 0x0030)
class UStatSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x20];                                      // 0x0030(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnStatsLoaded;                                     // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& FriendID)> OnFriendLoaded;                    // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UStatTableWrapper*                      StatsDataTableWrapper;                             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x148];                                     // 0x0078(0x0148)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClearAllStats();
	void ClearStat(const class FString& StatID);
	void FlushStats();
	class FString GetFriendStatString(const class FString& StatID, const struct FFriend& Friend);
	int64 GetFriendStatValue(const class FString& StatID, const struct FFriend& Friend);
	class FString GetGlobalStatString(const class FString& StatID);
	int64 GetGlobalStatValue(const class FString& StatID);
	class FString GetStatString(const class FString& StatID);
	int64 GetStatValue(const class FString& StatID);
	bool HasFriendData(const struct FFriend& Friend);
	bool IsFriendDataLoading(const struct FFriend& Friend);
	void LoadFriendData(const struct FFriend& Friend);
	void LogGlobalStat(const class FString& StatID);
	void LogStat(const class FString& StatID);
	void LogTransactions();
	void PopulateDebugStatsFromTable();
	void PullStatsFromBackend();
	void UpdateStat(const class FString& StatID, int64 Value);
	void UpdateStatString(const class FString& StatID, const class FString& Value);

	bool AreGlobalsLoaded() const;
	ERONStatType GetStatType(const class FString& StatID) const;
	bool IsInitialized() const;
	bool IsStatNumeric(const class FString& StatID) const;
	bool IsValidStatID(const class FString& StatID) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StatSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StatSubsystem")
	}
	static class UStatSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStatSubsystem>();
	}
};
DUMPER7_ASSERTS_UStatSubsystem;

// Class ReadyOrNot.StatTableWrapper
// 0x0008 (0x0030 - 0x0028)
class UStatTableWrapper final : public UObject
{
public:
	class UDataTable*                             StatDefinitions;                                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StatTableWrapper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StatTableWrapper")
	}
	static class UStatTableWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStatTableWrapper>();
	}
};
DUMPER7_ASSERTS_UStatTableWrapper;

// Class ReadyOrNot.StatViewerComponent
// 0x0000 (0x00C8 - 0x00C8)
class UStatViewerComponent final : public UStatComponentBase
{
public:
	void HandleStatChanged(const class FString& ChangedStatID);
	void OnStatChanged();

	class FString GetStatString(bool GetGlobal) const;
	int64 GetStatValue(bool GetGlobal) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StatViewerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StatViewerComponent")
	}
	static class UStatViewerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStatViewerComponent>();
	}
};
DUMPER7_ASSERTS_UStatViewerComponent;

// Class ReadyOrNot.StatViewerWidget
// 0x0028 (0x02F0 - 0x02C8)
class UStatViewerWidget : public UUserWidget
{
public:
	TArray<struct FDataTableRowHandle>            StatIDRowHandle;                                   // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UStatSubsystem*                         StatSystem;                                        // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E0[0x10];                                     // 0x02E0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleStatChanged(const class FString& ChangedStatID);
	void OnStatChanged(const class FString& StatID);
	void OnStatIDsUpdated();
	void UpdateStatIDs();

	class FString GetStatString(const class FString& StatID, bool GetGlobal) const;
	double GetStatValue(const class FString& StatID, bool GetGlobal) const;
	int64 GetStatValueRounded(const class FString& StatID, bool GetGlobal) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StatViewerWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StatViewerWidget")
	}
	static class UStatViewerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStatViewerWidget>();
	}
};
DUMPER7_ASSERTS_UStatViewerWidget;

// Class ReadyOrNot.TrackingSpotlightComponent
// 0x0060 (0x0100 - 0x00A0)
class UTrackingSpotlightComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(float Attenuation)> OnAttenuationSet;                              // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class URadialTrackingComponent*               TrackingComponent;                                 // 0x00B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMeshComponent*                         MeshComponent;                                     // 0x00B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDiegeticSoundComponent*                SpotlightOnSound;                                  // 0x00C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDiegeticSoundComponent*                SpotlightOffSound;                                 // 0x00C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        SpotlightRootComponent;                            // 0x00D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpotLightComponent*                    SpotLightComponent;                                // 0x00D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     SpotlightOnMaterial;                               // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     SpotlightOffMaterial;                              // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SpotlightIntensity;                                // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F4[0xC];                                       // 0x00F4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Initialise(const struct FTrackingSpotlightInitStruct& initStruct);
	void OnTargetFound(class ACyberneticCharacter* Target);
	void OnTargetLost(ETrackingTargetLoseReason LoseReason);
	void SetAttenuation(float Attenuation);
	void Stop();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrackingSpotlightComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrackingSpotlightComponent")
	}
	static class UTrackingSpotlightComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrackingSpotlightComponent>();
	}
};
DUMPER7_ASSERTS_UTrackingSpotlightComponent;

// Class ReadyOrNot.StatWriterComponent
// 0x0000 (0x00C8 - 0x00C8)
class UStatWriterComponent final : public UStatComponentBase
{
public:
	void UpdateStat(int64 Value);
	void UpdateStatString(const class FString& Value);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StatWriterComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StatWriterComponent")
	}
	static class UStatWriterComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStatWriterComponent>();
	}
};
DUMPER7_ASSERTS_UStatWriterComponent;

// Class ReadyOrNot.StingerDamageType
// 0x0000 (0x07B0 - 0x07B0)
class UStingerDamageType : public UStunDamage
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StingerDamageType")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StingerDamageType")
	}
	static class UStingerDamageType* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStingerDamageType>();
	}
};
DUMPER7_ASSERTS_UStingerDamageType;

// Class ReadyOrNot.StreamingInstallProgress
// 0x0060 (0x0350 - 0x02F0)
class UStreamingInstallProgress : public UCommonUserWidget
{
public:
	uint8                                         Pad_2F0[0x10];                                     // 0x02F0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class URichTextBlock*                         ProgressText;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         PercentageText;                                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         ETAText;                                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         ETANumbers;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                           ProgressBar;                                       // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_328[0x28];                                     // 0x0328(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool StaticGetIsDone();

	float GetETA();
	bool GetIsDone();
	float GetProgress();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StreamingInstallProgress")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StreamingInstallProgress")
	}
	static class UStreamingInstallProgress* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStreamingInstallProgress>();
	}
};
DUMPER7_ASSERTS_UStreamingInstallProgress;

// Class ReadyOrNot.StrideWarpingLibrary
// 0x0000 (0x0028 - 0x0028)
class UStrideWarpingLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void UpdateStrideWarping(float DeltaTime, const struct FVector& Velocity, const float& VelocityInterpTime, const float& CurrentAnimationSpeed, const float& PlayrateMaxAdjustment, float& StrideScaling, float& PlayRate, struct FVector& VelocitySmoothed);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StrideWarpingLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StrideWarpingLibrary")
	}
	static class UStrideWarpingLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStrideWarpingLibrary>();
	}
};
DUMPER7_ASSERTS_UStrideWarpingLibrary;

// Class ReadyOrNot.WorldTutorial
// 0x00C0 (0x0358 - 0x0298)
class AWorldTutorial final : public AActor
{
public:
	class AActor*                                 AttachedObject;                                    // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTutorialWidgetData                    WidgetData;                                        // 0x02A0(0x0080)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bEnableScreenspaceMarker;                          // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTutorialLocationForScreenspaceMarker;          // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForCompletionClose;                           // 0x0322(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bResetAfterCompletion;                             // 0x0323(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LoginsUntilInvalid;                                // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETooltipActivationType                        TutorialActivationType;                            // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EScreenspaceMarkerType                        ScreenspaceMarkerType;                             // 0x0329(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETutorialWidgetLocation                       TutorialWidgetLocation;                            // 0x032A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32B[0x1];                                      // 0x032B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TutorialActivationDistance;                        // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlayerInRange;                                  // 0x0330(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTutorialVisible;                                // 0x0331(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_332[0x6];                                      // 0x0332(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTutorialWidget*                        TutorialWidget;                                    // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       ActivationComponent;                               // 0x0340(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_348[0x10];                                     // 0x0348(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CompletionEvent();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WorldTutorial")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WorldTutorial")
	}
	static class AWorldTutorial* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWorldTutorial>();
	}
};
DUMPER7_ASSERTS_AWorldTutorial;

// Class ReadyOrNot.SubtitlesSettings
// 0x00B0 (0x00E8 - 0x0038)
class USubtitlesSettings final : public UDeveloperSettings
{
public:
	class FString                                 FallbackLocale;                                    // 0x0038(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FText>              AvailableLocales;                                  // 0x0048(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	TMap<class FString, float>                    VoiceLineCooldowns;                                // 0x0098(0x0050)(Edit, Config, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SubtitlesSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SubtitlesSettings")
	}
	static class USubtitlesSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubtitlesSettings>();
	}
};
DUMPER7_ASSERTS_USubtitlesSettings;

// Class ReadyOrNot.SubtitlesSubsystem
// 0x01B8 (0x01E8 - 0x0030)
class USubtitlesSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x1B8];                                     // 0x0030(0x01B8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SubtitlesSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SubtitlesSubsystem")
	}
	static class USubtitlesSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubtitlesSubsystem>();
	}
};
DUMPER7_ASSERTS_USubtitlesSubsystem;

// Class ReadyOrNot.SubtitlesStatics
// 0x0000 (0x0028 - 0x0028)
class USubtitlesStatics final : public UBlueprintFunctionLibrary
{
public:
	static const TMap<class FString, class FText> GetAvailableLocales();
	static void PlaySubtitles(class UObject* WorldContextObject, const class FString& Speaker, const class FString& VoiceLine, float Length, class FName SpeakerTag, const class FString& NameLookupOverride);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SubtitlesStatics")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SubtitlesStatics")
	}
	static class USubtitlesStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubtitlesStatics>();
	}
};
DUMPER7_ASSERTS_USubtitlesStatics;

// Class ReadyOrNot.SubtitleBlock
// 0x0010 (0x02D8 - 0x02C8)
class USubtitleBlock : public UUserWidget
{
public:
	float                                         CurrentTime;                                       // 0x02C8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TotalTime;                                         // 0x02CC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVerticalBoxSlot*                       VerticalBoxSlot;                                   // 0x02D0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SetBackgroundColor(const struct FLinearColor& Color);
	void SetText(const class FText& Text);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SubtitleBlock")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SubtitleBlock")
	}
	static class USubtitleBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubtitleBlock>();
	}
};
DUMPER7_ASSERTS_USubtitleBlock;

// Class ReadyOrNot.SubtitlesWidget
// 0x0050 (0x0318 - 0x02C8)
class USubtitlesWidget : public UUserWidget
{
public:
	TSubclassOf<class USubtitleBlock>             SubtitleBlockClass;                                // 0x02C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxSubtitles;                                      // 0x02D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LingerTime;                                        // 0x02D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeInTime;                                        // 0x02D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeOutTime;                                       // 0x02DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PadInTime;                                         // 0x02E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBox*                           SubtitlesVerticalBox;                              // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USubtitleBlock*>                 SubtitleBlocks;                                    // 0x02F0(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	class USubtitleBlock*                         PreviousSubtitle;                                  // 0x0300(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_308[0x10];                                     // 0x0308(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetSubtitlesSize(ESubtitlesSize Size);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SubtitlesWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SubtitlesWidget")
	}
	static class USubtitlesWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubtitlesWidget>();
	}
};
DUMPER7_ASSERTS_USubtitlesWidget;

// Class ReadyOrNot.SuppressionCombatMove
// 0x0020 (0x0250 - 0x0230)
class USuppressionCombatMove final : public UBaseCombatMoveActivity
{
public:
	uint8                                         Pad_230[0x20];                                     // 0x0230(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SuppressionCombatMove")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SuppressionCombatMove")
	}
	static class USuppressionCombatMove* GetDefaultObj()
	{
		return GetDefaultObjImpl<USuppressionCombatMove>();
	}
};
DUMPER7_ASSERTS_USuppressionCombatMove;

// Class ReadyOrNot.SuspectCharacter
// 0x0010 (0x27F0 - 0x27E0)
class ASuspectCharacter final : public ACyberneticCharacter
{
public:
	uint8                                         Pad_27E0[0x10];                                    // 0x27E0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SuspectCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SuspectCharacter")
	}
	static class ASuspectCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASuspectCharacter>();
	}
};
DUMPER7_ASSERTS_ASuspectCharacter;

// Class ReadyOrNot.SuspectCombatActivity
// 0x0020 (0x04D0 - 0x04B0)
class USuspectCombatActivity final : public UBaseCombatActivity
{
public:
	uint8                                         Pad_4B0[0x20];                                     // 0x04B0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SuspectCombatActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SuspectCombatActivity")
	}
	static class USuspectCombatActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<USuspectCombatActivity>();
	}
};
DUMPER7_ASSERTS_USuspectCombatActivity;

// Class ReadyOrNot.TabletWidget
// 0x0028 (0x0510 - 0x04E8)
class UTabletWidget : public UMissionPlanWidget
{
public:
	class UTeamViewWidget*                        TeamView;                                          // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                        ScreenSwitcher;                                    // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonUserWidget*                      OverlayWidget;                                     // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_500[0x10];                                     // 0x0500(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 GetActiveButton(int32 CurrentIndex, int32 navigationDirection, const TArray<bool>& buttonVisibilities);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TabletWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TabletWidget")
	}
	static class UTabletWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTabletWidget>();
	}
};
DUMPER7_ASSERTS_UTabletWidget;

// Class ReadyOrNot.TakeCoverAtLandmarkActivity
// 0x0068 (0x0258 - 0x01F0)
class UTakeCoverAtLandmarkActivity final : public UBaseActivity
{
public:
	class ACoverLandmark*                         CoverLandmark;                                     // 0x01F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACoverLandmarkProxy*                    ChosenEntryProxy;                                  // 0x01F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACoverLandmarkProxy*                    ChosenExitProxy;                                   // 0x0200(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SearchRadius;                                      // 0x0208(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_20C[0x1C];                                     // 0x020C(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           EntryAnim;                                         // 0x0228(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           ExitAnim;                                          // 0x0230(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           LoopEntryAnim;                                     // 0x0238(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           LoopExitAnim;                                      // 0x0240(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AStaticMeshActor*>               IgnoredMeshActors;                                 // 0x0248(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	void Enter_AbruptExit_State();
	void Enter_EnterLandmark_State();
	void Enter_ExitLandmark_State();
	void Enter_Wait_State();
	void EnterMoveToLandmarkState();
	void OnEnemyWeaponFire(class AReadyOrNotCharacter* Character, class ABaseMagazineWeapon* Weapon, const struct FVector& fireDirection);
	void OnHeardYell(class AReadyOrNotCharacter* Shouter, bool bLOS);
	void OnStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
	void OnTakeDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
	void Tick_AbruptExit_State(float DeltaTime, float Uptime);
	void Tick_EnterLandmark_State(float DeltaTime, float Uptime);
	void Tick_ExitLandmark_State(float DeltaTime, float Uptime);
	void Tick_Wait_State(float DeltaTime, float Uptime);
	void TickMoveToLandmarkState(float DeltaTime, float Uptime);

	bool CanAbruptlyExit() const;
	bool CanEnterLandmark() const;
	bool CanExitLandmark() const;
	bool ShouldWait() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TakeCoverAtLandmarkActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TakeCoverAtLandmarkActivity")
	}
	static class UTakeCoverAtLandmarkActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTakeCoverAtLandmarkActivity>();
	}
};
DUMPER7_ASSERTS_UTakeCoverAtLandmarkActivity;

// Class ReadyOrNot.TargetNextCivilianActivity
// 0x0018 (0x0208 - 0x01F0)
class UTargetNextCivilianActivity final : public UBaseActivity
{
public:
	class ACyberneticCharacter*                   TargetingCivilian;                                 // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1F8[0xC];                                      // 0x01F8(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	ETargetNextCivilianState                      TargetNextCivilianState;                           // 0x0204(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnTargetCivilianKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetNextCivilianActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetNextCivilianActivity")
	}
	static class UTargetNextCivilianActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetNextCivilianActivity>();
	}
};
DUMPER7_ASSERTS_UTargetNextCivilianActivity;

// Class ReadyOrNot.TeamBreachAndClearActivity
// 0x00D8 (0x0320 - 0x0248)
class UTeamBreachAndClearActivity final : public UTeamStackUpActivity
{
public:
	TMulticastInlineDelegate<void(class UTeamBreachAndClearActivity* Activity, bool bAuto)> OnCleared; // 0x0248(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_258[0x40];                                     // 0x0258(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class ACyberneticCharacter*                   AIBlockingClearingPath;                            // 0x0298(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACyberneticCharacter*                   ClearingLeader;                                    // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AThreatAwarenessActor*                  NearestThreat;                                     // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B0[0x70];                                     // 0x02B0(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnterBreachStage();
	void EnterClearedStage();
	void EnterClearStage();
	void EnterScanStage();
	void OnDoorBreachActivityFinished(class UBaseActivity* InActivity, class ACyberneticController* InController);
	void OnDoorBreacherBreaching();
	void OnDoorBreacherReady();
	void OnDoorBreachFinished(class UBaseActivity* InActivity, class ACyberneticController* InController);
	void OnDoorScanFinished(class UBaseActivity* Activity, class ACyberneticController* Controller);
	void OnLeaderGrenadeDetonated(class ABaseGrenade* InGrenade);
	void OnLeaderGrenadeProjectileDetonated(class AGrenadeProjectile* InGrenadeProjectile);
	void OnLeaderItemPrimaryUse(class AReadyOrNotCharacter* ItemOwner, class ABaseItem* Item);
	void PerformBreachStage(float DeltaTime, float Uptime);
	void PerformClearStage(float DeltaTime, float Uptime);
	void PerformScanStage(float DeltaTime, float Uptime);

	bool CanPerformBreach() const;
	bool CanPerformClear() const;
	bool IsFinishedClearing() const;
	bool IsScanFinished() const;
	bool ShouldScan() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TeamBreachAndClearActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TeamBreachAndClearActivity")
	}
	static class UTeamBreachAndClearActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTeamBreachAndClearActivity>();
	}
};
DUMPER7_ASSERTS_UTeamBreachAndClearActivity;

// Class ReadyOrNot.ThreatAwarenessActor
// 0x0070 (0x0308 - 0x0298)
class AThreatAwarenessActor final : public AActor
{
public:
	class USceneComponent*                        DefaultScene;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EThreatLevel                                  ThreatLevel;                                       // 0x02A0(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FExitData>                      Exits;                                             // 0x02A8(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<class ADoor*>                          UniqueExits;                                       // 0x02B8(0x0010)(Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bOverrideOwningRoom;                               // 0x02C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   OwningRoom;                                        // 0x02CC(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADoor*                                  DoorThreat;                                        // 0x02D8(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFrontDoorThreat;                                  // 0x02E0(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsOutside;                                        // 0x02E1(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AThreatAwarenessActor*>          PathableThreatAwarenessActors;                     // 0x02E8(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FLookAtPoint>                   SwatLookAtPoints;                                  // 0x02F8(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)

public:
	void GenerateLookAtPoints();
	void RemoveAnyVisibleExits();

	class ADoor* GetAttachedDoor() const;
	bool GetRandomExitDoor(class ADoor** Door) const;
	EThreatLevel GetThreatLevel() const;
	bool GetUniqueExtis(TArray<class ADoor*>* OutDoors) const;
	bool HasExit() const;
	bool HasSpecificExitDoor(class ADoor* Door) const;
	bool IsDoorThreat() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ThreatAwarenessActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ThreatAwarenessActor")
	}
	static class AThreatAwarenessActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AThreatAwarenessActor>();
	}
};
DUMPER7_ASSERTS_AThreatAwarenessActor;

// Class ReadyOrNot.ToggleDoorActivity
// 0x0008 (0x0260 - 0x0258)
class UToggleDoorActivity final : public UDoorInteractionActivity
{
public:
	uint8                                         Pad_258[0x8];                                      // 0x0258(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ToggleDoorActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ToggleDoorActivity")
	}
	static class UToggleDoorActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UToggleDoorActivity>();
	}
};
DUMPER7_ASSERTS_UToggleDoorActivity;

// Class ReadyOrNot.TrailerSWATCharacter
// 0x0000 (0x2830 - 0x2830)
class ATrailerSWATCharacter : public ASWATCharacter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrailerSWATCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrailerSWATCharacter")
	}
	static class ATrailerSWATCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATrailerSWATCharacter>();
	}
};
DUMPER7_ASSERTS_ATrailerSWATCharacter;

// Class ReadyOrNot.TrainingGS
// 0x0008 (0x0930 - 0x0928)
class ATrainingGS : public AReadyOrNotGameState
{
public:
	uint8                                         Pad_928[0x8];                                      // 0x0928(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrainingGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrainingGS")
	}
	static class ATrainingGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATrainingGS>();
	}
};
DUMPER7_ASSERTS_ATrainingGS;

// Class ReadyOrNot.TrainingTarget
// 0x0038 (0x02D0 - 0x0298)
class ATrainingTarget final : public AActor
{
public:
	class UStaticMeshComponent*                   TargetMesh;                                        // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                          SuccessBox;                                        // 0x02A0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                          FailureBox;                                        // 0x02A8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(class ATrainingTarget* Target)> OnSuccessfulShot;                  // 0x02B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ATrainingTarget* Target)> OnGrenadeHit;                      // 0x02C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void OnPointDamage(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& ShotFromDirection, const class UDamageType* DamageType, class AActor* DamageCauser);
	void OnRadialDamage(class AActor* DamagedActor, float Damage, const class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrainingTarget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrainingTarget")
	}
	static class ATrainingTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATrainingTarget>();
	}
};
DUMPER7_ASSERTS_ATrainingTarget;

// Class ReadyOrNot.TraverseHoleActivity
// 0x0110 (0x0300 - 0x01F0)
class alignas(0x10) UTraverseHoleActivity final : public UBaseActivity
{
public:
	class AWallHoleTraversal*                     WallHoleTraversalActor;                            // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIgnoreCooldown : 1;                               // 0x01F8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bFromNavLink : 1;                                  // 0x01F8(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           EntryAnim;                                         // 0x0200(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           ExitAnim;                                          // 0x0208(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           LoopAnim;                                          // 0x0210(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_218[0xE8];                                     // 0x0218(0x00E8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Enter_EnterHole_State();
	void Enter_ExitHole_State();
	void Enter_Move_State();
	void Enter_MoveToHole_State();
	void Tick_EnterHole_State(float DeltaTime, float Uptime);
	void Tick_ExitHole_State(float DeltaTime, float Uptime);
	void Tick_Move_State(float DeltaTime, float Uptime);
	void Tick_MoveToHole_State(float DeltaTime, float Uptime);

	bool CanEnterHole() const;
	bool CanExitHole() const;
	bool ShouldMove() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TraverseHoleActivity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TraverseHoleActivity")
	}
	static class UTraverseHoleActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTraverseHoleActivity>();
	}
};
DUMPER7_ASSERTS_UTraverseHoleActivity;

// Class ReadyOrNot.TugOfWarButton
// 0x0048 (0x0338 - 0x02F0)
class ATugOfWarButton final : public AInteractionActor
{
public:
	ETeamType                                     OnlyTeamUse;                                       // 0x02F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATugOfWarMover*                         Mover;                                             // 0x02F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerCharacter*                       CurrentUser;                                       // 0x0300(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_308[0x30];                                     // 0x0308(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnInfluencerArrested(class APlayerCharacter* ArrestedCharacter, class APlayerCharacter* InstigatorCharacter);
	void OnInfluencerKilled(class AActor* Causer, class ACharacter* InstigatorCharacter, class ACharacter* KilledCharacter, const struct FDamageEvent& DamageEvent, class APlayerState* LastPlayerState);
	void OnInfluencerStunned(class APlayerCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TugOfWarButton")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TugOfWarButton")
	}
	static class ATugOfWarButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATugOfWarButton>();
	}
};
DUMPER7_ASSERTS_ATugOfWarButton;

// Class ReadyOrNot.TutorialMessageVolume
// 0x0050 (0x0318 - 0x02C8)
class ATutorialMessageVolume final : public AReadyOrNotTriggerVolume
{
public:
	class FString                                 MessageMapID;                                      // 0x02C8(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBigPopUp;                                       // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasDisplayedMessage;                              // 0x02D9(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2DA[0x6];                                      // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   MessageTitle;                                      // 0x02E0(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<class FText>                           MessageContent;                                    // 0x02F8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTutorialActionPromptSlot>      MessageActions;                                    // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	void GenerateMessageContent();
	void TutorialBoxBeginOverlap(class AActor* ThisActor, class AActor* OtherActor);
	void TutorialBoxEndOverlap(class AActor* ThisActor, class AActor* OtherActor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialMessageVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialMessageVolume")
	}
	static class ATutorialMessageVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATutorialMessageVolume>();
	}
};
DUMPER7_ASSERTS_ATutorialMessageVolume;

// Class ReadyOrNot.VIPEscortGS
// 0x0070 (0x0998 - 0x0928)
class AVIPEscortGS : public AReadyOrNotGameState
{
public:
	float                                         HoldVIP_TimeRemaining;                             // 0x0928(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVIPArrested;                                      // 0x092C(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanKillVIP;                                       // 0x092D(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_92E[0x2];                                      // 0x092E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       VIPCharacter;                                      // 0x0930(0x0008)(BlueprintVisible, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      VIPPlayer;                                         // 0x0938(0x0008)(BlueprintVisible, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotPlayerState*                 VIPPlayerState;                                    // 0x0940(0x0008)(BlueprintVisible, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeamType                                     LastWinningTeam;                                   // 0x0948(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVIPSelected;                                      // 0x0949(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVIPKilled;                                        // 0x094A(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeamType                                     CurrentVIPTeam;                                    // 0x094B(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94C[0x4];                                      // 0x094C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   RecentArrester;                                    // 0x0950(0x0008)(BlueprintVisible, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotCharacter*                   RecentFreer;                                       // 0x0958(0x0008)(BlueprintVisible, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AReadyOrNotCharacter*                   RecentVIPKiller;                                   // 0x0960(0x0008)(BlueprintVisible, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   VIPRescueText;                                     // 0x0968(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   VIPExecuteText;                                    // 0x0980(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	void OnRep_VIPArrested();
	void OnRep_VIPKilled();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VIPEscortGS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VIPEscortGS")
	}
	static class AVIPEscortGS* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVIPEscortGS>();
	}
};
DUMPER7_ASSERTS_AVIPEscortGS;

// Class ReadyOrNot.Watch
// 0x0030 (0x02C8 - 0x0298)
class AWatch final : public AActor
{
public:
	class UStaticMeshComponent*                   WatchMesh;                                         // 0x0298(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   HourHandMesh;                                      // 0x02A0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   MinuteHandMesh;                                    // 0x02A8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   SecondHandMesh;                                    // 0x02B0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   DateMesh;                                          // 0x02B8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C0[0x8];                                      // 0x02C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Watch")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Watch")
	}
	static class AWatch* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWatch>();
	}
};
DUMPER7_ASSERTS_AWatch;

// Class ReadyOrNot.ObjectiveWidget
// 0x0010 (0x0300 - 0x02F0)
class UObjectiveWidget final : public UBaseWidget
{
public:
	class UWidgetComponent*                       OwningComponent;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeamType                                     ObjectiveTeam;                                     // 0x02F8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetObjectiveText(const class FText& NewText);
	void SetObjectiveType(EPlayerObjectiveMarkerType NewType);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ObjectiveWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ObjectiveWidget")
	}
	static class UObjectiveWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UObjectiveWidget>();
	}
};
DUMPER7_ASSERTS_UObjectiveWidget;

// Class ReadyOrNot.WidgetsData
// 0x0218 (0x0248 - 0x0030)
class UWidgetsData final : public UDataAsset
{
public:
	TSubclassOf<class UUserWidget>                MagCheckUI;                                        // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   FireModeUI;                                        // 0x0038(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   StartupMenu;                                       // 0x0060(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   AuthenticationMenu;                                // 0x0088(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   MainMenu;                                          // 0x00B0(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   OptionsMenu;                                       // 0x00D8(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   CustomizationMenu;                                 // 0x0100(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   ChatBox;                                           // 0x0128(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           Overlays;                                          // 0x0150(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   Scoreboard;                                        // 0x0160(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                LoadingScreen;                                     // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   MessageDisplayBoxClass;                            // 0x0190(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   Leaderboards;                                      // 0x01B8(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   CrosshairOverlay;                                  // 0x01E0(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USoundBase*>                     UISoundClasses;                                    // 0x0208(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   EscapeMenu;                                        // 0x0218(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponWheelWidget>         WeaponWheelWidget;                                 // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WidgetsData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WidgetsData")
	}
	static class UWidgetsData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidgetsData>();
	}
};
DUMPER7_ASSERTS_UWidgetsData;

// Class ReadyOrNot.WorldBuildingPlacementActor
// 0x0028 (0x02C0 - 0x0298)
class AWorldBuildingPlacementActor final : public AActor
{
public:
	TSubclassOf<class UWorldBuildingActivity>     Activity;                                          // 0x0298(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACyberneticController*                  InUseByController;                                 // 0x02A0(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWorldBuildingActivity*                 ActivityInstance;                                  // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoveActivity*                          MoveToActivityInstance;                            // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        DefaultScene;                                      // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnWorldBuildingActivityFinished(class UBaseActivity* InActivity, class ACyberneticController* CyberneticController);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WorldBuildingPlacementActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WorldBuildingPlacementActor")
	}
	static class AWorldBuildingPlacementActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWorldBuildingPlacementActor>();
	}
};
DUMPER7_ASSERTS_AWorldBuildingPlacementActor;

// Class ReadyOrNot.WorldGenSave
// 0x0040 (0x0068 - 0x0028)
class UWorldGenSave final : public USaveGame
{
public:
	TArray<struct FSavedThreatAwarenessActor>     SavedThreatAwarenessActors;                        // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSavedDoorActor>                SavedDoorActors;                                   // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSavedCoverActor>               SavedCoverActors;                                  // 0x0048(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSavedRoomData>                 SavedRooms;                                        // 0x0058(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WorldGenSave")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WorldGenSave")
	}
	static class UWorldGenSave* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWorldGenSave>();
	}
};
DUMPER7_ASSERTS_UWorldGenSave;

}

