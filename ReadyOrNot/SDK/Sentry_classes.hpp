#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Sentry

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "Sentry_structs.hpp"


namespace SDK
{

// Class Sentry.SentryAttachment
// 0x0018 (0x0040 - 0x0028)
class USentryAttachment final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void InitializeWithData(const TArray<uint8>& Data, const class FString& Filename, const class FString& ContentType);
	void InitializeWithPath(const class FString& Path, const class FString& Filename, const class FString& ContentType);

	class FString GetContentType() const;
	TArray<uint8> GetData() const;
	class FString GetFilename() const;
	class FString GetPath() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentryAttachment")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentryAttachment")
	}
	static class USentryAttachment* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentryAttachment>();
	}
};
DUMPER7_ASSERTS_USentryAttachment;

// Class Sentry.SentryBeforeBreadcrumbHandler
// 0x0000 (0x0028 - 0x0028)
class USentryBeforeBreadcrumbHandler final : public UObject
{
public:
	class USentryBreadcrumb* HandleBeforeBreadcrumb(class USentryBreadcrumb* Breadcrumb, class USentryHint* Hint);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentryBeforeBreadcrumbHandler")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentryBeforeBreadcrumbHandler")
	}
	static class USentryBeforeBreadcrumbHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentryBeforeBreadcrumbHandler>();
	}
};
DUMPER7_ASSERTS_USentryBeforeBreadcrumbHandler;

// Class Sentry.SentryBeforeSendHandler
// 0x0000 (0x0028 - 0x0028)
class USentryBeforeSendHandler : public UObject
{
public:
	class USentryEvent* HandleBeforeSend(class USentryEvent* Event, class USentryHint* Hint);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentryBeforeSendHandler")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentryBeforeSendHandler")
	}
	static class USentryBeforeSendHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentryBeforeSendHandler>();
	}
};
DUMPER7_ASSERTS_USentryBeforeSendHandler;

// Class Sentry.SentryBreadcrumb
// 0x0018 (0x0040 - 0x0028)
class USentryBreadcrumb final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Initialize();
	void SetCategory(const class FString& Category);
	void SetData(const TMap<class FString, struct FSentryVariant>& Data);
	void SetLevel(ESentryLevel Level);
	void SetMessage(const class FString& Message);
	void SetType(const class FString& Type);

	class FString GetCategory() const;
	TMap<class FString, struct FSentryVariant> GetData() const;
	ESentryLevel GetLevel() const;
	class FString GetMessage() const;
	class FString GetType() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentryBreadcrumb")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentryBreadcrumb")
	}
	static class USentryBreadcrumb* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentryBreadcrumb>();
	}
};
DUMPER7_ASSERTS_USentryBreadcrumb;

// Class Sentry.SentryEvent
// 0x0018 (0x0040 - 0x0028)
class USentryEvent final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Initialize();
	void RemoveContext(const class FString& Key);
	void RemoveExtra(const class FString& Key);
	void RemoveTag(const class FString& Key);
	void SetContext(const class FString& Key, const TMap<class FString, struct FSentryVariant>& Values);
	void SetExtra(const class FString& Key, const struct FSentryVariant& Value);
	void SetExtras(const TMap<class FString, struct FSentryVariant>& Extras);
	void SetFingerprint(const TArray<class FString>& Fingerprint);
	void SetLevel(ESentryLevel Level);
	void SetMessage(const class FString& Message);
	void SetTag(const class FString& Key, const class FString& Value);
	void SetTags(const TMap<class FString, class FString>& Tags);

	TMap<class FString, struct FSentryVariant> GetContext(const class FString& Key) const;
	struct FSentryVariant GetExtra(const class FString& Key) const;
	TMap<class FString, struct FSentryVariant> GetExtras() const;
	TArray<class FString> GetFingerprint() const;
	class FString GetID() const;
	ESentryLevel GetLevel() const;
	class FString GetMessage() const;
	class FString GetTag(const class FString& Key) const;
	TMap<class FString, class FString> GetTags() const;
	bool IsAnr() const;
	bool IsCrash() const;
	bool TryGetContext(const class FString& Key, TMap<class FString, struct FSentryVariant>* Value) const;
	bool TryGetExtra(const class FString& Key, struct FSentryVariant* Value) const;
	bool TryGetTag(const class FString& Key, class FString* Value) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentryEvent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentryEvent")
	}
	static class USentryEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentryEvent>();
	}
};
DUMPER7_ASSERTS_USentryEvent;

// Class Sentry.SentryHint
// 0x0018 (0x0040 - 0x0028)
class USentryHint final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddAttachment(class USentryAttachment* Attachment);
	void Initialize();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentryHint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentryHint")
	}
	static class USentryHint* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentryHint>();
	}
};
DUMPER7_ASSERTS_USentryHint;

// Class Sentry.SentryLibrary
// 0x0000 (0x0028 - 0x0028)
class USentryLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class USentryAttachment* CreateSentryAttachmentWithData(const TArray<uint8>& Data, const class FString& Filename, const class FString& ContentType);
	static class USentryAttachment* CreateSentryAttachmentWithPath(const class FString& Path, const class FString& Filename, const class FString& ContentType);
	static class USentryBreadcrumb* CreateSentryBreadcrumb(const class FString& Message, const class FString& Type, const class FString& Category, const TMap<class FString, struct FSentryVariant>& Data, ESentryLevel Level);
	static class USentryEvent* CreateSentryEvent(const class FString& Message, ESentryLevel Level);
	static class USentryTransactionContext* CreateSentryTransactionContext(const class FString& Name_0, const class FString& Operation);
	static class USentryUser* CreateSentryUser(const class FString& Email, const class FString& ID, const class FString& Username, const class FString& IpAddress, const TMap<class FString, class FString>& Data);
	static class USentryUserFeedback* CreateSentryUserFeedback(const class FString& EventID, const class FString& Name_0, const class FString& Email, const class FString& Comments);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentryLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentryLibrary")
	}
	static class USentryLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentryLibrary>();
	}
};
DUMPER7_ASSERTS_USentryLibrary;

// Class Sentry.SentrySamplingContext
// 0x0018 (0x0040 - 0x0028)
class USentrySamplingContext final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TMap<class FString, class FString> GetCustomSamplingContext() const;
	class USentryTransactionContext* GetTransactionContext() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentrySamplingContext")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentrySamplingContext")
	}
	static class USentrySamplingContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentrySamplingContext>();
	}
};
DUMPER7_ASSERTS_USentrySamplingContext;

// Class Sentry.SentryScope
// 0x0018 (0x0040 - 0x0028)
class USentryScope final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddAttachment(class USentryAttachment* Attachment);
	void AddBreadcrumb(class USentryBreadcrumb* Breadcrumb);
	void Clear();
	void ClearAttachments();
	void ClearBreadcrumbs();
	void Initialize();
	void RemoveContext(const class FString& Key);
	void RemoveExtra(const class FString& Key);
	void RemoveTag(const class FString& Key);
	void SetContext(const class FString& Key, const TMap<class FString, struct FSentryVariant>& Values);
	void SetExtra(const class FString& Key, const struct FSentryVariant& Value);
	void SetExtras(const TMap<class FString, struct FSentryVariant>& Extras);
	void SetFingerprint(const TArray<class FString>& Fingerprint);
	void SetLevel(ESentryLevel Level);
	void SetTag(const class FString& Key, const class FString& Value);
	void SetTags(const TMap<class FString, class FString>& Tags);

	TMap<class FString, struct FSentryVariant> GetContext(const class FString& Key) const;
	struct FSentryVariant GetExtra(const class FString& Key) const;
	TMap<class FString, struct FSentryVariant> GetExtras() const;
	TArray<class FString> GetFingerprint() const;
	ESentryLevel GetLevel() const;
	class FString GetTag(const class FString& Key) const;
	TMap<class FString, class FString> GetTags() const;
	bool TryGetContext(const class FString& Key, TMap<class FString, struct FSentryVariant>* Value) const;
	bool TryGetExtra(const class FString& Key, struct FSentryVariant* Value) const;
	bool TryGetTag(const class FString& Key, class FString* Value) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentryScope")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentryScope")
	}
	static class USentryScope* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentryScope>();
	}
};
DUMPER7_ASSERTS_USentryScope;

// Class Sentry.ScopeTestBeforeSendHandler
// 0x0000 (0x0028 - 0x0028)
class UScopeTestBeforeSendHandler final : public USentryBeforeSendHandler
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScopeTestBeforeSendHandler")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScopeTestBeforeSendHandler")
	}
	static class UScopeTestBeforeSendHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScopeTestBeforeSendHandler>();
	}
};
DUMPER7_ASSERTS_UScopeTestBeforeSendHandler;

// Class Sentry.SentrySettings
// 0x0150 (0x0178 - 0x0028)
class USentrySettings final : public UObject
{
public:
	bool                                          InitAutomatically;                                 // 0x0028(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Dsn;                                               // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Debug;                                             // 0x0040(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ENVIRONMENT;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Dist;                                              // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SampleRate;                                        // 0x0068(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableAutoLogAttachment;                           // 0x006C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AttachStacktrace;                                  // 0x006D(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SendDefaultPii;                                    // 0x006E(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AttachScreenshot;                                  // 0x006F(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AttachGpuDump;                                     // 0x0070(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxAttachmentSize;                                 // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxBreadcrumbs;                                    // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAutomaticBreadcrumbs                  AutomaticBreadcrumbs;                              // 0x007C(0x0005)(Edit, BlueprintVisible, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FAutomaticBreadcrumbsForLogs           AutomaticBreadcrumbsForLogs;                       // 0x0081(0x0005)(Edit, BlueprintVisible, Config, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          EnableAutoSessionTracking;                         // 0x0086(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SessionTimeout;                                    // 0x0088(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OverrideReleaseName;                               // 0x008C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Release;                                           // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseProxy;                                          // 0x00A0(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ProxyUrl;                                          // 0x00A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USentryBeforeSendHandler>   BeforeSendHandler;                                 // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USentryBeforeBreadcrumbHandler> BeforeBreadcrumbHandler;                       // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableAutoCrashCapturing;                          // 0x00C8(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESentryDatabaseLocation                       DatabaseLocation;                                  // 0x00C9(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CrashpadWaitForUpload;                             // 0x00CA(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         InAppInclude;                                      // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<class FString>                         InAppExclude;                                      // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                          EnableAppNotRespondingTracking;                    // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableTracing;                                     // 0x00F1(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESentryTracesSamplingType                     SamplingType;                                      // 0x00F2(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F3[0x1];                                       // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TracesSampleRate;                                  // 0x00F4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USentryTraceSampler>        TracesSampler;                                     // 0x00F8(0x0008)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EditorDsn;                                         // 0x0100(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTagsPromotion                         TagsPromotion;                                     // 0x0110(0x0006)(Edit, BlueprintVisible, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FEnableBuildConfigurations             EnableBuildConfigurations;                         // 0x0116(0x0005)(Edit, BlueprintVisible, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FEnableBuildTargets                    EnableBuildTargets;                                // 0x011B(0x0005)(Edit, BlueprintVisible, Config, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          EnableForPromotedBuildsOnly;                       // 0x0120(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UploadSymbolsAutomatically;                        // 0x0121(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ProjectName;                                       // 0x0128(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OrgName;                                           // 0x0138(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AuthToken;                                         // 0x0148(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IncludeSources;                                    // 0x0158(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESentryCliLogLevel                            DiagnosticLevel;                                   // 0x0159(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseLegacyGradlePlugin;                             // 0x015A(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15B[0x5];                                      // 0x015B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CrashReporterUrl;                                  // 0x0160(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_170[0x8];                                      // 0x0170(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentrySettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentrySettings")
	}
	static class USentrySettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentrySettings>();
	}
};
DUMPER7_ASSERTS_USentrySettings;

// Class Sentry.SentrySpan
// 0x0018 (0x0040 - 0x0028)
class USentrySpan final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Finish();
	void FinishWithTimestamp(int64 Timestamp);
	void GetTrace(class FString* Name_0, class FString* Value);
	void RemoveData(const class FString& Key);
	void RemoveTag(const class FString& Key);
	void SetData(const class FString& Key, const TMap<class FString, struct FSentryVariant>& Values);
	void SetTag(const class FString& Key, const class FString& Value);
	class USentrySpan* StartChild(const class FString& Operation, const class FString& Description);
	class USentrySpan* StartChildWithTimestamp(const class FString& Operation, const class FString& Description, int64 Timestamp);

	bool IsFinished() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentrySpan")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentrySpan")
	}
	static class USentrySpan* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentrySpan>();
	}
};
DUMPER7_ASSERTS_USentrySpan;

// Class Sentry.SentrySubsystem
// 0x0080 (0x00B0 - 0x0030)
class USentrySubsystem final : public UEngineSubsystem
{
public:
	uint8                                         Pad_30[0x30];                                      // 0x0030(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class USentryBeforeSendHandler*               BeforeSendHandler;                                 // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USentryBeforeBreadcrumbHandler*         BeforeBreadcrumbHandler;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USentryTraceSampler*                    TraceSampler;                                      // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_78[0x38];                                      // 0x0078(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddAttachment(class USentryAttachment* Attachment);
	void AddBreadcrumb(class USentryBreadcrumb* Breadcrumb);
	void AddBreadcrumbWithParams(const class FString& Message, const class FString& Category, const class FString& Type, const TMap<class FString, struct FSentryVariant>& Data, ESentryLevel Level);
	class FString CaptureEvent(class USentryEvent* Event);
	class FString CaptureEventWithScope(class USentryEvent* Event, const TDelegate<void(class USentryScope* Scope)>& OnConfigureScope);
	class FString CaptureMessage(const class FString& Message, ESentryLevel Level);
	class FString CaptureMessageWithScope(const class FString& Message, const TDelegate<void(class USentryScope* Scope)>& OnConfigureScope, ESentryLevel Level);
	void CaptureUserFeedback(class USentryUserFeedback* UserFeedback);
	void CaptureUserFeedbackWithParams(const class FString& EventID, const class FString& Email, const class FString& Comments, const class FString& Name_0);
	void ClearAttachments();
	void ClearBreadcrumbs();
	void Close();
	class USentryTransactionContext* ContinueTrace(const class FString& SentryTrace, const TArray<class FString>& BaggageHeaders);
	void EndSession();
	void Initialize();
	void InitializeWithSettings(const TDelegate<void(class USentrySettings* Settings)>& OnConfigureSettings);
	void RemoveTag(const class FString& Key);
	void RemoveUser();
	void SetContext(const class FString& Key, const TMap<class FString, struct FSentryVariant>& Values);
	void SetLevel(ESentryLevel Level);
	void SetTag(const class FString& Key, const class FString& Value);
	void SetUser(class USentryUser* User);
	void StartSession();
	class USentryTransaction* StartTransaction(const class FString& Name_0, const class FString& Operation);
	class USentryTransaction* StartTransactionWithContext(class USentryTransactionContext* Context);
	class USentryTransaction* StartTransactionWithContextAndOptions(class USentryTransactionContext* Context, const TMap<class FString, class FString>& Options);
	class USentryTransaction* StartTransactionWithContextAndTimestamp(class USentryTransactionContext* Context, int64 Timestamp);

	ESentryCrashedLastRun IsCrashedLastRun() const;
	bool IsEnabled() const;
	bool IsSupportedForCurrentSettings() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentrySubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentrySubsystem")
	}
	static class USentrySubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentrySubsystem>();
	}
};
DUMPER7_ASSERTS_USentrySubsystem;

// Class Sentry.SentryTraceSampler
// 0x0000 (0x0028 - 0x0028)
class USentryTraceSampler final : public UObject
{
public:
	bool Sample(class USentrySamplingContext* samplingContext, float* samplingValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentryTraceSampler")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentryTraceSampler")
	}
	static class USentryTraceSampler* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentryTraceSampler>();
	}
};
DUMPER7_ASSERTS_USentryTraceSampler;

// Class Sentry.SentryTransaction
// 0x0018 (0x0040 - 0x0028)
class USentryTransaction final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Finish();
	void FinishWithTimestamp(int64 Timestamp);
	void GetTrace(class FString* Name_0, class FString* Value);
	void RemoveData(const class FString& Key);
	void RemoveTag(const class FString& Key);
	void SetData(const class FString& Key, const TMap<class FString, struct FSentryVariant>& Values);
	void SetName(const class FString& Name_0);
	void SetTag(const class FString& Key, const class FString& Value);
	class USentrySpan* StartChildSpan(const class FString& Operation, const class FString& Description);
	class USentrySpan* StartChildSpanWithTimestamp(const class FString& Operation, const class FString& Description, int64 Timestamp);

	bool IsFinished() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentryTransaction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentryTransaction")
	}
	static class USentryTransaction* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentryTransaction>();
	}
};
DUMPER7_ASSERTS_USentryTransaction;

// Class Sentry.SentryTransactionContext
// 0x0018 (0x0040 - 0x0028)
class USentryTransactionContext final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Initialize(const class FString& Name_0, const class FString& Operation);

	class FString GetName() const;
	class FString GetOperation() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentryTransactionContext")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentryTransactionContext")
	}
	static class USentryTransactionContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentryTransactionContext>();
	}
};
DUMPER7_ASSERTS_USentryTransactionContext;

// Class Sentry.SentryUser
// 0x0018 (0x0040 - 0x0028)
class USentryUser final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetData(const TMap<class FString, class FString>& Data);
	void SetEmail(const class FString& Email);
	void SetId(const class FString& ID);
	void SetIpAddress(const class FString& IpAddress);
	void SetUsername(const class FString& Username);

	TMap<class FString, class FString> GetData() const;
	class FString GetEmail() const;
	class FString GetID() const;
	class FString GetIpAddress() const;
	class FString GetUsername() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentryUser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentryUser")
	}
	static class USentryUser* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentryUser>();
	}
};
DUMPER7_ASSERTS_USentryUser;

// Class Sentry.SentryUserFeedback
// 0x0018 (0x0040 - 0x0028)
class USentryUserFeedback final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Initialize(const class FString& EventID);
	void SetComment(const class FString& Comments);
	void SetEmail(const class FString& Email);
	void SetName(const class FString& Name_0);

	class FString GetComment() const;
	class FString GetEmail() const;
	class FString GetName() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentryUserFeedback")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentryUserFeedback")
	}
	static class USentryUserFeedback* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentryUserFeedback>();
	}
};
DUMPER7_ASSERTS_USentryUserFeedback;

// Class Sentry.SentryVariantHelper
// 0x0000 (0x0028 - 0x0028)
class USentryVariantHelper final : public UBlueprintFunctionLibrary
{
public:
	static struct FSentryVariant Conv_ArrayToFSentryVariant(const TArray<struct FSentryVariant>& Value);
	static struct FSentryVariant Conv_BoolToFSentryVariant(bool Value);
	static struct FSentryVariant Conv_FloatToFSentryVariant(float Value);
	static struct FSentryVariant Conv_IntToFSentryVariant(int32 Value);
	static struct FSentryVariant Conv_MapToFSentryVariant(const TMap<class FString, struct FSentryVariant>& Value);
	static struct FSentryVariant Conv_StringToFSentryVariant(const class FString& Value);
	static TArray<struct FSentryVariant> GetArray(const struct FSentryVariant& Variant);
	static bool GetBool(const struct FSentryVariant& Variant);
	static float GetFloat(const struct FSentryVariant& Variant);
	static int32 GetInteger(const struct FSentryVariant& Variant);
	static TMap<class FString, struct FSentryVariant> GetMap(const struct FSentryVariant& Variant);
	static class FString GetString(const struct FSentryVariant& Variant);
	static ESentryVariantType GetType(const struct FSentryVariant& Variant);
	static struct FSentryVariant MakeSentryVariantFromArray(const TArray<struct FSentryVariant>& Value);
	static struct FSentryVariant MakeSentryVariantFromBool(bool Value);
	static struct FSentryVariant MakeSentryVariantFromFloat(float Value);
	static struct FSentryVariant MakeSentryVariantFromInteger(int32 Value);
	static struct FSentryVariant MakeSentryVariantFromMap(const TMap<class FString, struct FSentryVariant>& Value);
	static struct FSentryVariant MakeSentryVariantFromString(const class FString& Value);
	static bool TryGetArray(const struct FSentryVariant& Variant, TArray<struct FSentryVariant>* Value);
	static bool TryGetBool(const struct FSentryVariant& Variant, bool* Value);
	static bool TryGetFloat(const struct FSentryVariant& Variant, float* Value);
	static bool TryGetInteger(const struct FSentryVariant& Variant, int32* Value);
	static bool TryGetMap(const struct FSentryVariant& Variant, TMap<class FString, struct FSentryVariant>* Value);
	static bool TryGetString(const struct FSentryVariant& Variant, class FString* Value);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SentryVariantHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SentryVariantHelper")
	}
	static class USentryVariantHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<USentryVariantHelper>();
	}
};
DUMPER7_ASSERTS_USentryVariantHelper;

}

