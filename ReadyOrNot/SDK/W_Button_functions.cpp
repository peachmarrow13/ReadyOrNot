#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Button

#include "Basic.hpp"

#include "W_Button_classes.hpp"
#include "W_Button_parameters.hpp"


namespace SDK
{

// Function W_Button.W_Button_C.BP_OnClicked
// (Event, Protected, BlueprintEvent)

void UW_Button_C::BP_OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "BP_OnClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.BP_OnDeselected
// (Event, Protected, BlueprintEvent)

void UW_Button_C::BP_OnDeselected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "BP_OnDeselected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.BP_OnDoubleClicked
// (Event, Protected, BlueprintEvent)

void UW_Button_C::BP_OnDoubleClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "BP_OnDoubleClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UW_Button_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.BP_OnSelected
// (Event, Protected, BlueprintEvent)

void UW_Button_C::BP_OnSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "BP_OnSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UW_Button_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.Deselect
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Button_C::Deselect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "Deselect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.DisableInteraction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Disable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Button_C::DisableInteraction(bool Disable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "DisableInteraction");

	Params::W_Button_C_DisableInteraction Parms{};

	Parms.Disable = Disable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Button.W_Button_C.Enable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Button_C::Enable(bool Enable_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "Enable");

	Params::W_Button_C_Enable Parms{};

	Parms.Enable_0 = Enable_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Button.W_Button_C.EventOnPressed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Button_C::EventOnPressed(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "EventOnPressed");

	Params::W_Button_C_EventOnPressed Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Button.W_Button_C.EventOnReleased
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Button_C::EventOnReleased(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "EventOnReleased");

	Params::W_Button_C_EventOnReleased Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Button.W_Button_C.ExecuteUbergraph_W_Button
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Button_C::ExecuteUbergraph_W_Button(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "ExecuteUbergraph_W_Button");

	Params::W_Button_C_ExecuteUbergraph_W_Button Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Button.W_Button_C.ForceClick
// (BlueprintCallable, BlueprintEvent)

void UW_Button_C::ForceClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "ForceClick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.ForceDoubleClick
// (BlueprintCallable, BlueprintEvent)

void UW_Button_C::ForceDoubleClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "ForceDoubleClick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.IgnoreInteraction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ignore                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Button_C::IgnoreInteraction(bool Ignore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "IgnoreInteraction");

	Params::W_Button_C_IgnoreInteraction Parms{};

	Parms.Ignore = Ignore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Button.W_Button_C.InitContent
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Button_C::InitContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "InitContent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Button_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.OnActionComplete
// (Event, Protected, BlueprintEvent)

void UW_Button_C::OnActionComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "OnActionComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.OnActionProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   HeldPercent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Button_C::OnActionProgress(float HeldPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "OnActionProgress");

	Params::W_Button_C_OnActionProgress Parms{};

	Parms.HeldPercent = HeldPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Button.W_Button_C.OnCurrentTextStyleChanged
// (Event, Protected, BlueprintEvent)

void UW_Button_C::OnCurrentTextStyleChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "OnCurrentTextStyleChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_Button_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "OnMouseButtonDown");

	Params::W_Button_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Button.W_Button_C.OnMouseButtonUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_Button_C::OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "OnMouseButtonUp");

	Params::W_Button_C_OnMouseButtonUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Button.W_Button_C.OnPressed
// (BlueprintCallable, BlueprintEvent)

void UW_Button_C::OnPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "OnPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.PassthroughInteraction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PassThrough                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Button_C::PassthroughInteraction(bool PassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "PassthroughInteraction");

	Params::W_Button_C_PassthroughInteraction Parms{};

	Parms.PassThrough = PassThrough;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Button.W_Button_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Button_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "PreConstruct");

	Params::W_Button_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Button.W_Button_C.RightMousePressed
// (BlueprintCallable, BlueprintEvent)

void UW_Button_C::RightMousePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "RightMousePressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.RightMouseReleased
// (BlueprintCallable, BlueprintEvent)

void UW_Button_C::RightMouseReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "RightMouseReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.Select
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Button_C::Select()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "Select");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Button.W_Button_C.SetBackgroundTint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLinearColor&              InBackgroundColor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Button_C::SetBackgroundTint(const struct FLinearColor& InBackgroundColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "SetBackgroundTint");

	Params::W_Button_C_SetBackgroundTint Parms{};

	Parms.InBackgroundColor = std::move(InBackgroundColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Button.W_Button_C.SetButtonText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_Button_C::SetButtonText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "SetButtonText");

	Params::W_Button_C_SetButtonText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Button.W_Button_C.TruncateText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Truncate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CharacterLimit_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    TruncationCharacters                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_Button_C::TruncateText(bool Truncate, int32 CharacterLimit_0, const class FString& TruncationCharacters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "TruncateText");

	Params::W_Button_C_TruncateText Parms{};

	Parms.Truncate = Truncate;
	Parms.CharacterLimit_0 = CharacterLimit_0;
	Parms.TruncationCharacters = std::move(TruncationCharacters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Button.W_Button_C.BP_GetButtonLabel
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UCommonTextBlock*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UCommonTextBlock* UW_Button_C::BP_GetButtonLabel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Button_C", "BP_GetButtonLabel");

	Params::W_Button_C_BP_GetButtonLabel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

