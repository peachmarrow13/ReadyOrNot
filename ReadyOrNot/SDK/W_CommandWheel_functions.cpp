#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CommandWheel

#include "Basic.hpp"

#include "W_CommandWheel_classes.hpp"
#include "W_CommandWheel_parameters.hpp"


namespace SDK
{

// Function W_CommandWheel.W_CommandWheel_C.AnimateWheelUpdate
// (Event, Protected, BlueprintEvent)

void UW_CommandWheel_C::AnimateWheelUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "AnimateWheelUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_CommandWheel.W_CommandWheel_C.CommandWheelDisabled
// (Event, Protected, BlueprintEvent)

void UW_CommandWheel_C::CommandWheelDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "CommandWheelDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_CommandWheel.W_CommandWheel_C.CommandWheelEnabled
// (Event, Protected, BlueprintEvent)

void UW_CommandWheel_C::CommandWheelEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "CommandWheelEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_CommandWheel.W_CommandWheel_C.DisableOuterWheel
// (Event, Protected, BlueprintEvent)

void UW_CommandWheel_C::DisableOuterWheel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "DisableOuterWheel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_CommandWheel.W_CommandWheel_C.ExecuteUbergraph_W_CommandWheel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandWheel_C::ExecuteUbergraph_W_CommandWheel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "ExecuteUbergraph_W_CommandWheel");

	Params::W_CommandWheel_C_ExecuteUbergraph_W_CommandWheel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CommandWheel.W_CommandWheel_C.ForceSetInDeadzone
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInDeadzone                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandWheel_C::ForceSetInDeadzone(bool bInDeadzone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "ForceSetInDeadzone");

	Params::W_CommandWheel_C_ForceSetInDeadzone Parms{};

	Parms.bInDeadzone = bInDeadzone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CommandWheel.W_CommandWheel_C.GetCurentIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  CurrentIndex_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandWheel_C::GetCurentIndex(int32* CurrentIndex_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "GetCurentIndex");

	Params::W_CommandWheel_C_GetCurentIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentIndex_0 != nullptr)
		*CurrentIndex_0 = Parms.CurrentIndex_0;
}


// Function W_CommandWheel.W_CommandWheel_C.OnUpdateWheelColor
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETeamType                               Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandWheel_C::OnUpdateWheelColor(ETeamType Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "OnUpdateWheelColor");

	Params::W_CommandWheel_C_OnUpdateWheelColor Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CommandWheel.W_CommandWheel_C.SetInnerCommands
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<struct FSwatCommand>&      Options                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_CommandWheel_C::SetInnerCommands(const TArray<struct FSwatCommand>& Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "SetInnerCommands");

	Params::W_CommandWheel_C_SetInnerCommands Parms{};

	Parms.Options = std::move(Options);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CommandWheel.W_CommandWheel_C.SetInnerSegments
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandWheel_C::SetInnerSegments(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "SetInnerSegments");

	Params::W_CommandWheel_C_SetInnerSegments Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CommandWheel.W_CommandWheel_C.SetInnerWheelDirection
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FVector&                   Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandWheel_C::SetInnerWheelDirection(const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "SetInnerWheelDirection");

	Params::W_CommandWheel_C_SetInnerWheelDirection Parms{};

	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CommandWheel.W_CommandWheel_C.SetOuterSegments
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandWheel_C::SetOuterSegments(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "SetOuterSegments");

	Params::W_CommandWheel_C_SetOuterSegments Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CommandWheel.W_CommandWheel_C.Update Cursor Visibility
// (Public, BlueprintCallable, BlueprintEvent)

void UW_CommandWheel_C::Update_Cursor_Visibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "Update Cursor Visibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_CommandWheel.W_CommandWheel_C.Update Icons
// (Public, BlueprintCallable, BlueprintEvent)

void UW_CommandWheel_C::Update_Icons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "Update Icons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_CommandWheel.W_CommandWheel_C.UpdateIconColors
// (Event, Protected, BlueprintEvent)

void UW_CommandWheel_C::UpdateIconColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "UpdateIconColors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_CommandWheel.W_CommandWheel_C.UpdateOuterWheel
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FVector&                   Direction                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<struct FSwatCommand>&      Options                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const int32                             SelectedIndex                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandWheel_C::UpdateOuterWheel(const struct FVector& Direction, const TArray<struct FSwatCommand>& Options, const int32 SelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "UpdateOuterWheel");

	Params::W_CommandWheel_C_UpdateOuterWheel Parms{};

	Parms.Direction = std::move(Direction);
	Parms.Options = std::move(Options);
	Parms.SelectedIndex = SelectedIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CommandWheel.W_CommandWheel_C.UpdateRadialMenu
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FSwatCommand>&      Commands                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UUMG_RadialMenu_C*                RadialMenu                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   SelectedIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandWheel_C::UpdateRadialMenu(const TArray<struct FSwatCommand>& Commands, class UUMG_RadialMenu_C* RadialMenu, int32 SelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "UpdateRadialMenu");

	Params::W_CommandWheel_C_UpdateRadialMenu Parms{};

	Parms.Commands = std::move(Commands);
	Parms.RadialMenu = RadialMenu;
	Parms.SelectedIndex = SelectedIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CommandWheel.W_CommandWheel_C.UpdateWheelSelection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InVector                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandWheel_C::UpdateWheelSelection(class UObject* Object, const struct FVector& InVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandWheel_C", "UpdateWheelSelection");

	Params::W_CommandWheel_C_UpdateWheelSelection Parms{};

	Parms.Object = Object;
	Parms.InVector = std::move(InVector);

	UObject::ProcessEvent(Func, &Parms);
}

}

