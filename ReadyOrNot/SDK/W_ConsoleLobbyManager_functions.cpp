#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ConsoleLobbyManager

#include "Basic.hpp"

#include "W_ConsoleLobbyManager_classes.hpp"
#include "W_ConsoleLobbyManager_parameters.hpp"


namespace SDK
{

// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.BndEvt__W_ConsoleLobbyManager_PageWrapper_K2Node_ComponentBoundEvent_0_OnNavOptionSelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FName                             OptionNameID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ConsoleLobbyManager_C::BndEvt__W_ConsoleLobbyManager_PageWrapper_K2Node_ComponentBoundEvent_0_OnNavOptionSelected__DelegateSignature(class FName OptionNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "BndEvt__W_ConsoleLobbyManager_PageWrapper_K2Node_ComponentBoundEvent_0_OnNavOptionSelected__DelegateSignature");

	Params::W_ConsoleLobbyManager_C_BndEvt__W_ConsoleLobbyManager_PageWrapper_K2Node_ComponentBoundEvent_0_OnNavOptionSelected__DelegateSignature Parms{};

	Parms.OptionNameID = OptionNameID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.BndEvt__W_ConsoleLobbyManager_PageWrapper_K2Node_ComponentBoundEvent_1_OnFooterButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const class FString&                    ButtonId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_ConsoleLobbyManager_C::BndEvt__W_ConsoleLobbyManager_PageWrapper_K2Node_ComponentBoundEvent_1_OnFooterButtonClicked__DelegateSignature(const class FString& ButtonId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "BndEvt__W_ConsoleLobbyManager_PageWrapper_K2Node_ComponentBoundEvent_1_OnFooterButtonClicked__DelegateSignature");

	Params::W_ConsoleLobbyManager_C_BndEvt__W_ConsoleLobbyManager_PageWrapper_K2Node_ComponentBoundEvent_1_OnFooterButtonClicked__DelegateSignature Parms{};

	Parms.ButtonId = std::move(ButtonId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void UW_ConsoleLobbyManager_C::BP_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.Cancel kick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStandardModal*                   CallingModal                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_ConsoleLobbyManager_C::Cancel_kick(class UStandardModal* CallingModal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "Cancel kick");

	Params::W_ConsoleLobbyManager_C_Cancel_kick Parms{};

	Parms.CallingModal = CallingModal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_ConsoleLobbyManager_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.ExecuteUbergraph_W_ConsoleLobbyManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ConsoleLobbyManager_C::ExecuteUbergraph_W_ConsoleLobbyManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "ExecuteUbergraph_W_ConsoleLobbyManager");

	Params::W_ConsoleLobbyManager_C_ExecuteUbergraph_W_ConsoleLobbyManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.FocusedPlayerChanged
// (BlueprintCallable, BlueprintEvent)

void UW_ConsoleLobbyManager_C::FocusedPlayerChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "FocusedPlayerChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.FooterButtonClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ButtonId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_ConsoleLobbyManager_C::FooterButtonClicked(const class FString& ButtonId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "FooterButtonClicked");

	Params::W_ConsoleLobbyManager_C_FooterButtonClicked Parms{};

	Parms.ButtonId = std::move(ButtonId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.Initialise Kick Popup
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLobbyPlayer&              Player_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// class UW_StandardModal_C**              OutputPopUp                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_ConsoleLobbyManager_C::Initialise_Kick_Popup(const struct FLobbyPlayer& Player_Name, class UW_StandardModal_C** OutputPopUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "Initialise Kick Popup");

	Params::W_ConsoleLobbyManager_C_Initialise_Kick_Popup Parms{};

	Parms.Player_Name = std::move(Player_Name);

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPopUp != nullptr)
		*OutputPopUp = Parms.OutputPopUp;
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.IsKickButtonVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLobbyPlayer&              Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// bool*                                   KickButtonIsVisible                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ConsoleLobbyManager_C::IsKickButtonVisible(const struct FLobbyPlayer& Player, bool* KickButtonIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "IsKickButtonVisible");

	Params::W_ConsoleLobbyManager_C_IsKickButtonVisible Parms{};

	Parms.Player = std::move(Player);

	UObject::ProcessEvent(Func, &Parms);

	if (KickButtonIsVisible != nullptr)
		*KickButtonIsVisible = Parms.KickButtonIsVisible;
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.IsMuteButtonVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLobbyPlayer&              Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// bool*                                   MuteButtonIsVisible                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   UnMuteButtonIsVisible                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ConsoleLobbyManager_C::IsMuteButtonVisible(const struct FLobbyPlayer& Player, bool* MuteButtonIsVisible, bool* UnMuteButtonIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "IsMuteButtonVisible");

	Params::W_ConsoleLobbyManager_C_IsMuteButtonVisible Parms{};

	Parms.Player = std::move(Player);

	UObject::ProcessEvent(Func, &Parms);

	if (MuteButtonIsVisible != nullptr)
		*MuteButtonIsVisible = Parms.MuteButtonIsVisible;

	if (UnMuteButtonIsVisible != nullptr)
		*UnMuteButtonIsVisible = Parms.UnMuteButtonIsVisible;
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.kick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_StandardModal_C*               CallingModal                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const class FText&                      TextEntry                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_ConsoleLobbyManager_C::kick(class UW_StandardModal_C* CallingModal, const class FText& TextEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "kick");

	Params::W_ConsoleLobbyManager_C_kick Parms{};

	Parms.CallingModal = CallingModal;
	Parms.TextEntry = std::move(TextEntry);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.OnlyShowBlockList
// (Public, BlueprintCallable, BlueprintEvent)

void UW_ConsoleLobbyManager_C::OnlyShowBlockList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "OnlyShowBlockList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.OpenBlockList
// (Public, BlueprintCallable, BlueprintEvent)

void UW_ConsoleLobbyManager_C::OpenBlockList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "OpenBlockList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.OpenLobbyList
// (Public, BlueprintCallable, BlueprintEvent)

void UW_ConsoleLobbyManager_C::OpenLobbyList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "OpenLobbyList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.OpenSocialSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UW_ConsoleLobbyManager_C::OpenSocialSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "OpenSocialSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.PlayerBlocked
// (BlueprintCallable, BlueprintEvent)

void UW_ConsoleLobbyManager_C::PlayerBlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "PlayerBlocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.Set EOS Button Visibility
// (Public, BlueprintCallable, BlueprintEvent)

void UW_ConsoleLobbyManager_C::Set_EOS_Button_Visibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "Set EOS Button Visibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ConsoleLobbyManager.W_ConsoleLobbyManager_C.BP_GetDesiredFocusTarget
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UW_ConsoleLobbyManager_C::BP_GetDesiredFocusTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ConsoleLobbyManager_C", "BP_GetDesiredFocusTarget");

	Params::W_ConsoleLobbyManager_C_BP_GetDesiredFocusTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

