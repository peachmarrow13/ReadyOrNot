#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ControlsBind

#include "Basic.hpp"

#include "EInputKeyCategory_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "KeyModifiers_structs.hpp"
#include "InputRemapping_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ControlsBind.W_ControlsBind_C
// 0x02A8 (0x0650 - 0x03A8)
class UW_ControlsBind_C final : public UControlsBind
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Button_Disabled;                                   // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Button_Dn;                                         // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Button_Hi;                                         // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Button_Up;                                         // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ClickListener;                                     // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                KeybindButton;                                     // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DescriptionWidget_0;                               // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   DescriptionText;                                   // 0x03E8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   ChangeBindFormat;                                  // 0x0400(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FActionMappingStruct                   ActionMappingData_0;                               // 0x0418(0x0028)(Edit, BlueprintVisible)
	struct FAxisMappingStruct                     AxisMappingData_0;                                 // 0x0440(0x0028)(Edit, BlueprintVisible)
	bool                                          bIsAxis0;                                          // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BindIndex_0;                                       // 0x046C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   UnboundText_0;                                     // 0x0470(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FKey                                   Key;                                               // 0x0488(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<EKeyModifiers>                         KeyModifiers;                                      // 0x04A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class UW_ControlsBind_C* CallingWidget)> OnHovered;                // 0x04B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_ControlsBind_C* CallingWidget)> OnUnhovered;              // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_ControlsBind_C* CallingWidget)> OnPressed;                // 0x04D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_ControlsBind_C* CallingWidget)> OnReleased;               // 0x04E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_ControlsBind_C* CallingWidget)> OnBindingStarted;         // 0x04F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_ControlsBind_C* CallingWidget)> OnBindingCanceled;        // 0x0500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_ControlsBind_C* CallingWidget, const struct FKey& NewKey)> OnBindingCommitted; // 0x0510(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   BindName_0;                                        // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Mod_Shift;                                         // 0x0528(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Mod_Ctrl;                                          // 0x0540(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Mod_Alt;                                           // 0x0558(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Mod_Cmd;                                           // 0x0570(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bListeningForKeystrokes0;                          // 0x0588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BindFriendlyName_0;                                // 0x0590(0x0018)(Edit, BlueprintVisible)
	class UTextBlock*                             BindNotificationWidget_0;                          // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        AxisScale_0;                                       // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_ControlsBind_C*                      PairedKeybind;                                     // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             KeybindHoveredSoundEffect;                         // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UFMODEvent*                             KeybindStartBindingSoundEffect;                    // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UW_ControlsBind_C* CallingBind, TArray<struct FActionMappingStruct>& ActionMappings, TArray<struct FAxisMappingStruct>& AxisMappings, const struct FKey& Key, TArray<class FText>& ConflictBindsText)> OnConflictingBindDetected; // 0x05D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FKey                                   PendingNewKey_0;                                   // 0x05E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	EInputKeyCategory                             KeyCategory_0;                                     // 0x05F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F9[0x7];                                      // 0x05F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                SettingsMenu_0;                                    // 0x0600(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           ConflictBindFriendlyNamesList_0;                   // 0x0608(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FAxisMappingStruct>             ConflictingAxes;                                   // 0x0618(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FActionMappingStruct>           ConflictingActions;                                // 0x0628(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class FText BindFriendlyName)> OnUnbindableKeyReboundAttempted;    // 0x0638(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bIsReadOnly;                                       // 0x0648(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Add_Conflicting_Keybinds_to_List_OLD(class FName MappingName, double Scale, TArray<struct FAxisMappingStruct>& Axes, TArray<struct FActionMappingStruct>& Actions);
	void Add_Keybinds_to_List_OLD(TArray<struct FSKeybinding>& Keybinds, class FName AxisMapping, double Scale, TArray<struct FAxisMappingStruct>& AxesList, TArray<struct FActionMappingStruct>& ActionsList);
	void Binding_Confirmed();
	void BndEvt__KeybindButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__KeybindButton_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__KeybindButton_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__KeybindButton_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__KeybindButton_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();
	struct FEventReply Click_Listener_Button_Down(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void Construct();
	void Destruct();
	void ExecuteUbergraph_W_ControlsBind(int32 EntryPoint);
	void Get_Conflicting_Keybind_Text_OLD(const class FText& RequiredKeybindName, class FText* Text);
	void Get_Conflicting_Keybinds_when_Valid_OLD(TArray<struct FAxisMappingStruct>& Axes, TArray<struct FActionMappingStruct>& Actions, bool* bHasConflict, TArray<struct FAxisMappingStruct>* ConflictingAxes_0, TArray<struct FActionMappingStruct>* ConflictingActions_0);
	void GetOtherBindingIndex(int32* Value);
	struct FEventReply HandleKeyDown(const struct FGeometry& My_Geometry, const struct FKeyEvent& In_Key_Event);
	void HandleMouseButtonDown(const struct FPointerEvent& PointerEvent, struct FEventReply* Reply);
	struct FEventReply HandleMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent);
	void Key_Event_Received(const struct FKey& KeyIn);
	void OnIllegalBindAttempted(const class FText& BindFriendlyName_0);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void PreConstruct(bool IsDesignTime);
	void Remove_Conflict_Keybinds_OLD(TArray<struct FAxisMappingStruct>& Axes, TArray<struct FActionMappingStruct>& Actions);
	void SetDisabled(bool Disabled);
	void SetupDescription();
	void UnbindAllEvents();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("W_ControlsBind_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"W_ControlsBind_C")
	}
	static class UW_ControlsBind_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ControlsBind_C>();
	}
};
DUMPER7_ASSERTS_UW_ControlsBind_C;

}

