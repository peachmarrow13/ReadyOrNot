#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Credits

#include "Basic.hpp"

#include "W_Credits_classes.hpp"
#include "W_Credits_parameters.hpp"


namespace SDK
{

// Function W_Credits.W_Credits_C.Add Spacer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AmountOfSpacers                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Credits_C::Add_Spacer(int32 AmountOfSpacers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "Add Spacer");

	Params::W_Credits_C_Add_Spacer Parms{};

	Parms.AmountOfSpacers = AmountOfSpacers;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Credits.W_Credits_C.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void UW_Credits_C::BP_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Credits.W_Credits_C.BP_OnHandleBackAction
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UW_Credits_C::BP_OnHandleBackAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "BP_OnHandleBackAction");

	Params::W_Credits_C_BP_OnHandleBackAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Credits.W_Credits_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Credits_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Credits.W_Credits_C.End Credits
// (BlueprintCallable, BlueprintEvent)

void UW_Credits_C::End_Credits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "End Credits");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Credits.W_Credits_C.ExecuteUbergraph_W_Credits
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Credits_C::ExecuteUbergraph_W_Credits(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "ExecuteUbergraph_W_Credits");

	Params::W_Credits_C_ExecuteUbergraph_W_Credits Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Credits.W_Credits_C.GetScrollboxDimensions
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 Height                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 TopMargin                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 BottomMargin                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Credits_C::GetScrollboxDimensions(double* Height, double* TopMargin, double* BottomMargin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "GetScrollboxDimensions");

	Params::W_Credits_C_GetScrollboxDimensions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Height != nullptr)
		*Height = Parms.Height;

	if (TopMargin != nullptr)
		*TopMargin = Parms.TopMargin;

	if (BottomMargin != nullptr)
		*BottomMargin = Parms.BottomMargin;
}


// Function W_Credits.W_Credits_C.GetSupporterCredits
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>&                    SupporterCredits_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UW_SupporterCredit_C*>*    SupporterCredit                                        (Parm, OutParm, ContainsInstancedReference)

void UW_Credits_C::GetSupporterCredits(TArray<class FText>& SupporterCredits_0, TArray<class UW_SupporterCredit_C*>* SupporterCredit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "GetSupporterCredits");

	Params::W_Credits_C_GetSupporterCredits Parms{};

	Parms.SupporterCredits_0 = std::move(SupporterCredits_0);

	UObject::ProcessEvent(Func, &Parms);

	SupporterCredits_0 = std::move(Parms.SupporterCredits_0);

	if (SupporterCredit != nullptr)
		*SupporterCredit = std::move(Parms.SupporterCredit);
}


// Function W_Credits.W_Credits_C.IsCreditInScrollBoxMargin
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          Credit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsInMargin                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Credits_C::IsCreditInScrollBoxMargin(class UWidget* Credit, bool* IsInMargin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "IsCreditInScrollBoxMargin");

	Params::W_Credits_C_IsCreditInScrollBoxMargin Parms{};

	Parms.Credit = Credit;

	UObject::ProcessEvent(Func, &Parms);

	if (IsInMargin != nullptr)
		*IsInMargin = Parms.IsInMargin;
}


// Function W_Credits.W_Credits_C.IsCreditInView
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          Credit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsInView                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Credits_C::IsCreditInView(class UWidget* Credit, bool* IsInView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "IsCreditInView");

	Params::W_Credits_C_IsCreditInView Parms{};

	Parms.Credit = Credit;

	UObject::ProcessEvent(Func, &Parms);

	if (IsInView != nullptr)
		*IsInView = Parms.IsInView;
}


// Function W_Credits.W_Credits_C.OnAnalogValueChanged
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FAnalogInputEvent&         InAnalogInputEvent                                     (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_Credits_C::OnAnalogValueChanged(const struct FGeometry& MyGeometry, const struct FAnalogInputEvent& InAnalogInputEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "OnAnalogValueChanged");

	Params::W_Credits_C_OnAnalogValueChanged Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InAnalogInputEvent = std::move(InAnalogInputEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Credits.W_Credits_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FKeyEvent&                 InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_Credits_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "OnKeyDown");

	Params::W_Credits_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Credits.W_Credits_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FKeyEvent&                 InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_Credits_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "OnKeyUp");

	Params::W_Credits_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Credits.W_Credits_C.OnScrollDirectionChanged
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Credits_C::OnScrollDirectionChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "OnScrollDirectionChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Credits.W_Credits_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Credits_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "PreConstruct");

	Params::W_Credits_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Credits.W_Credits_C.RevealCredits
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_Credit_C*                      InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Credits_C::RevealCredits(class UW_Credit_C* InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "RevealCredits");

	Params::W_Credits_C_RevealCredits Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Credits.W_Credits_C.RevealHeader
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_Credit_C*                      InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Credits_C::RevealHeader(class UW_Credit_C* InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "RevealHeader");

	Params::W_Credits_C_RevealHeader Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Credits.W_Credits_C.RevealSupporterCredits
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_SupporterCredit_C*             InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Credits_C::RevealSupporterCredits(class UW_SupporterCredit_C* InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "RevealSupporterCredits");

	Params::W_Credits_C_RevealSupporterCredits Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Credits.W_Credits_C.ShouldAnimateCredits
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          Credit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFadeIn                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UW_Credits_C::ShouldAnimateCredits(class UWidget* Credit, bool IsFadeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "ShouldAnimateCredits");

	Params::W_Credits_C_ShouldAnimateCredits Parms{};

	Parms.Credit = Credit;
	Parms.IsFadeIn = IsFadeIn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Credits.W_Credits_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Credits_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "Tick");

	Params::W_Credits_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Credits.W_Credits_C.TriggerNextFadeIn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBaseCredit*>&             Credits_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UW_Credits_C::TriggerNextFadeIn(TArray<class UBaseCredit*>& Credits_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "TriggerNextFadeIn");

	Params::W_Credits_C_TriggerNextFadeIn Parms{};

	Parms.Credits_0 = std::move(Credits_0);

	UObject::ProcessEvent(Func, &Parms);

	Credits_0 = std::move(Parms.Credits_0);
}


// Function W_Credits.W_Credits_C.TriggerNextFadeOut
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBaseCredit*>&             Credits_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UW_Credits_C::TriggerNextFadeOut(TArray<class UBaseCredit*>& Credits_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "TriggerNextFadeOut");

	Params::W_Credits_C_TriggerNextFadeOut Parms{};

	Parms.Credits_0 = std::move(Credits_0);

	UObject::ProcessEvent(Func, &Parms);

	Credits_0 = std::move(Parms.Credits_0);
}


// Function W_Credits.W_Credits_C.Update Scroll And Animation Speed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Multiplier                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Credits_C::Update_Scroll_And_Animation_Speed(double Multiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "Update Scroll And Animation Speed");

	Params::W_Credits_C_Update_Scroll_And_Animation_Speed Parms{};

	Parms.Multiplier = Multiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Credits.W_Credits_C.BP_GetDesiredFocusTarget
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UW_Credits_C::BP_GetDesiredFocusTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Credits_C", "BP_GetDesiredFocusTarget");

	Params::W_Credits_C_BP_GetDesiredFocusTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

