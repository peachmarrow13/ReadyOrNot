#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DebugOverlay

#include "Basic.hpp"

#include "W_DebugOverlay_classes.hpp"
#include "W_DebugOverlay_parameters.hpp"


namespace SDK
{

// Function W_DebugOverlay.W_DebugOverlay_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_DebugOverlay_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DebugOverlay_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DebugOverlay.W_DebugOverlay_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void UW_DebugOverlay_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DebugOverlay_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DebugOverlay.W_DebugOverlay_C.CustomEvent_1
// (BlueprintCallable, BlueprintEvent)

void UW_DebugOverlay_C::CustomEvent_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DebugOverlay_C", "CustomEvent_1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DebugOverlay.W_DebugOverlay_C.ExecuteUbergraph_W_DebugOverlay
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DebugOverlay_C::ExecuteUbergraph_W_DebugOverlay(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DebugOverlay_C", "ExecuteUbergraph_W_DebugOverlay");

	Params::W_DebugOverlay_C_ExecuteUbergraph_W_DebugOverlay Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DebugOverlay.W_DebugOverlay_C.HideBounceVertical
// (BlueprintCallable, BlueprintEvent)

void UW_DebugOverlay_C::HideBounceVertical()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DebugOverlay_C", "HideBounceVertical");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DebugOverlay.W_DebugOverlay_C.HideDebugElements
// (Public, BlueprintCallable, BlueprintEvent)

void UW_DebugOverlay_C::HideDebugElements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DebugOverlay_C", "HideDebugElements");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DebugOverlay.W_DebugOverlay_C.ShowBounceVertical
// (BlueprintCallable, BlueprintEvent)

void UW_DebugOverlay_C::ShowBounceVertical()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DebugOverlay_C", "ShowBounceVertical");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DebugOverlay.W_DebugOverlay_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DebugOverlay_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DebugOverlay_C", "Tick");

	Params::W_DebugOverlay_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DebugOverlay.W_DebugOverlay_C.UpdateDebugPanel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_DebugOverlay_C::UpdateDebugPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DebugOverlay_C", "UpdateDebugPanel");

	UObject::ProcessEvent(Func, nullptr);
}

}

