#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DifficultyModal

#include "Basic.hpp"

#include "W_DifficultyModal_classes.hpp"
#include "W_DifficultyModal_parameters.hpp"


namespace SDK
{

// Function W_DifficultyModal.W_DifficultyModal_C.BndEvt__W_DifficultyModal_W_Button_K2Node_ComponentBoundEvent_2_CommonSelectedStateChangedBase__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Selected                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DifficultyModal_C::BndEvt__W_DifficultyModal_W_Button_K2Node_ComponentBoundEvent_2_CommonSelectedStateChangedBase__DelegateSignature(class UCommonButtonBase* Button, bool Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "BndEvt__W_DifficultyModal_W_Button_K2Node_ComponentBoundEvent_2_CommonSelectedStateChangedBase__DelegateSignature");

	Params::W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_Button_K2Node_ComponentBoundEvent_2_CommonSelectedStateChangedBase__DelegateSignature Parms{};

	Parms.Button = Button;
	Parms.Selected = Selected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultyModal.W_DifficultyModal_C.BndEvt__W_DifficultyModal_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const class FString&                    ButtonId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_DifficultyModal_C::BndEvt__W_DifficultyModal_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature(const class FString& ButtonId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "BndEvt__W_DifficultyModal_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature");

	Params::W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature Parms{};

	Parms.ButtonId = std::move(ButtonId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultyModal.W_DifficultyModal_C.BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_DifficultyModal_C::BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");

	Params::W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultyModal.W_DifficultyModal_C.BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_DifficultyModal_C::BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");

	Params::W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultyModal.W_DifficultyModal_C.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void UW_DifficultyModal_C::BP_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultyModal.W_DifficultyModal_C.BP_OnDeactivated
// (Event, Protected, BlueprintEvent)

void UW_DifficultyModal_C::BP_OnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "BP_OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultyModal.W_DifficultyModal_C.BP_OnHandleBackAction
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UW_DifficultyModal_C::BP_OnHandleBackAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "BP_OnHandleBackAction");

	Params::W_DifficultyModal_C_BP_OnHandleBackAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_DifficultyModal.W_DifficultyModal_C.ConfigureRegions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_DifficultyModal_C::ConfigureRegions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "ConfigureRegions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultyModal.W_DifficultyModal_C.Confirm
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OkClicked                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ApplyClicked                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TextInputConfirm                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DifficultyModal_C::Confirm(bool OkClicked, bool ApplyClicked, bool TextInputConfirm)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "Confirm");

	Params::W_DifficultyModal_C_Confirm Parms{};

	Parms.OkClicked = OkClicked;
	Parms.ApplyClicked = ApplyClicked;
	Parms.TextInputConfirm = TextInputConfirm;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultyModal.W_DifficultyModal_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_DifficultyModal_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultyModal.W_DifficultyModal_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_DifficultyModal_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultyModal.W_DifficultyModal_C.DisplayWarningText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      WarningText                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_DifficultyModal_C::DisplayWarningText(const class FText& WarningText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "DisplayWarningText");

	Params::W_DifficultyModal_C_DisplayWarningText Parms{};

	Parms.WarningText = std::move(WarningText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultyModal.W_DifficultyModal_C.Do Custom Navigation Cancel Down
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Navigation_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UW_DifficultyModal_C::Do_Custom_Navigation_Cancel_Down(EUINavigation Navigation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "Do Custom Navigation Cancel Down");

	Params::W_DifficultyModal_C_Do_Custom_Navigation_Cancel_Down Parms{};

	Parms.Navigation_0 = Navigation_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_DifficultyModal.W_DifficultyModal_C.ExecuteUbergraph_W_DifficultyModal
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DifficultyModal_C::ExecuteUbergraph_W_DifficultyModal(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "ExecuteUbergraph_W_DifficultyModal");

	Params::W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultyModal.W_DifficultyModal_C.Get_OkButton_bIsEnabled_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UW_DifficultyModal_C::Get_OkButton_bIsEnabled_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "Get_OkButton_bIsEnabled_0");

	Params::W_DifficultyModal_C_Get_OkButton_bIsEnabled_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_DifficultyModal.W_DifficultyModal_C.HideWarningText
// (Public, BlueprintCallable, BlueprintEvent)

void UW_DifficultyModal_C::HideWarningText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "HideWarningText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultyModal.W_DifficultyModal_C.InputMethodChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonInputType                        bNewInputType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DifficultyModal_C::InputMethodChanged(ECommonInputType bNewInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "InputMethodChanged");

	Params::W_DifficultyModal_C_InputMethodChanged Parms{};

	Parms.bNewInputType = bNewInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultyModal.W_DifficultyModal_C.OnButtonStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              EntryTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UW_DifficultyModal_C::OnButtonStateChanged(bool bEnabled, const struct FGameplayTag& EntryTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "OnButtonStateChanged");

	Params::W_DifficultyModal_C_OnButtonStateChanged Parms{};

	Parms.bEnabled = bEnabled;
	Parms.EntryTag = std::move(EntryTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultyModal.W_DifficultyModal_C.OnRegionsCancel
// (BlueprintCallable, BlueprintEvent)

void UW_DifficultyModal_C::OnRegionsCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "OnRegionsCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultyModal.W_DifficultyModal_C.OnUserScrolled_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentOffset                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DifficultyModal_C::OnUserScrolled_Event_0(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "OnUserScrolled_Event_0");

	Params::W_DifficultyModal_C_OnUserScrolled_Event_0 Parms{};

	Parms.CurrentOffset = CurrentOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultyModal.W_DifficultyModal_C.PopulateDifficultyEntries
// (BlueprintCallable, BlueprintEvent)

void UW_DifficultyModal_C::PopulateDifficultyEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "PopulateDifficultyEntries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultyModal.W_DifficultyModal_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DifficultyModal_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "PreConstruct");

	Params::W_DifficultyModal_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultyModal.W_DifficultyModal_C.Reconfigure
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHosting                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FriendsOnly                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SettingRegions                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DifficultyModal_C::Reconfigure(bool IsHosting, bool FriendsOnly, bool SettingRegions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "Reconfigure");

	Params::W_DifficultyModal_C_Reconfigure Parms{};

	Parms.IsHosting = IsHosting;
	Parms.FriendsOnly = FriendsOnly;
	Parms.SettingRegions = SettingRegions;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultyModal.W_DifficultyModal_C.ReconfigureButtons
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowOkButton_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowCancelButton_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowApplyButton_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DifficultyModal_C::ReconfigureButtons(bool ShowOkButton_0, bool ShowCancelButton_0, bool ShowApplyButton_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "ReconfigureButtons");

	Params::W_DifficultyModal_C_ReconfigureButtons Parms{};

	Parms.ShowOkButton_0 = ShowOkButton_0;
	Parms.ShowCancelButton_0 = ShowCancelButton_0;
	Parms.ShowApplyButton_0 = ShowApplyButton_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultyModal.W_DifficultyModal_C.Set Crossplay Settings Visibility
// (Public, BlueprintCallable, BlueprintEvent)

void UW_DifficultyModal_C::Set_Crossplay_Settings_Visibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "Set Crossplay Settings Visibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultyModal.W_DifficultyModal_C.SetActiveWidgetsForCurrentState
// (Public, BlueprintCallable, BlueprintEvent)

void UW_DifficultyModal_C::SetActiveWidgetsForCurrentState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "SetActiveWidgetsForCurrentState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultyModal.W_DifficultyModal_C.SetDescriptionText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      ModalDescription_0                                     (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_DifficultyModal_C::SetDescriptionText(const class FText& ModalDescription_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "SetDescriptionText");

	Params::W_DifficultyModal_C_SetDescriptionText Parms{};

	Parms.ModalDescription_0 = std::move(ModalDescription_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultyModal.W_DifficultyModal_C.Should Show Crossplay Toggle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UW_DifficultyModal_C::Should_Show_Crossplay_Toggle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "Should Show Crossplay Toggle");

	Params::W_DifficultyModal_C_Should_Show_Crossplay_Toggle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_DifficultyModal.W_DifficultyModal_C.Toggle Crossplay Button
// (Public, BlueprintCallable, BlueprintEvent)

void UW_DifficultyModal_C::Toggle_Crossplay_Button()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "Toggle Crossplay Button");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultyModal.W_DifficultyModal_C.Update Regions Text List
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_DifficultyModal_C::Update_Regions_Text_List()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "Update Regions Text List");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultyModal.W_DifficultyModal_C.UpdateHeaderText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_DifficultyModal_C::UpdateHeaderText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "UpdateHeaderText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultyModal.W_DifficultyModal_C.UpdatePageFooter
// (Public, BlueprintCallable, BlueprintEvent)

void UW_DifficultyModal_C::UpdatePageFooter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "UpdatePageFooter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultyModal.W_DifficultyModal_C.UpdateSearchButtonActive
// (Public, BlueprintCallable, BlueprintEvent)

void UW_DifficultyModal_C::UpdateSearchButtonActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "UpdateSearchButtonActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultyModal.W_DifficultyModal_C.BP_GetDesiredFocusTarget
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UW_DifficultyModal_C::BP_GetDesiredFocusTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultyModal_C", "BP_GetDesiredFocusTarget");

	Params::W_DifficultyModal_C_BP_GetDesiredFocusTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

