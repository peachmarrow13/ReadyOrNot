#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DifficultySelect

#include "Basic.hpp"

#include "W_DifficultySelect_classes.hpp"
#include "W_DifficultySelect_parameters.hpp"


namespace SDK
{

// Function W_DifficultySelect.W_DifficultySelect_C.BndEvt__W_DifficultySelect_W_Carousel_K2Node_ComponentBoundEvent_1_OnOptionSelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FName                             OptionID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DifficultySelect_C::BndEvt__W_DifficultySelect_W_Carousel_K2Node_ComponentBoundEvent_1_OnOptionSelected__DelegateSignature(class FName OptionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultySelect_C", "BndEvt__W_DifficultySelect_W_Carousel_K2Node_ComponentBoundEvent_1_OnOptionSelected__DelegateSignature");

	Params::W_DifficultySelect_C_BndEvt__W_DifficultySelect_W_Carousel_K2Node_ComponentBoundEvent_1_OnOptionSelected__DelegateSignature Parms{};

	Parms.OptionID = OptionID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultySelect.W_DifficultySelect_C.BndEvt__W_DifficultySelect_w_Dropdown_K2Node_ComponentBoundEvent_0_OnOptionSelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const class FString&                    OptionID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_DifficultySelect_C::BndEvt__W_DifficultySelect_w_Dropdown_K2Node_ComponentBoundEvent_0_OnOptionSelected__DelegateSignature(const class FString& OptionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultySelect_C", "BndEvt__W_DifficultySelect_w_Dropdown_K2Node_ComponentBoundEvent_0_OnOptionSelected__DelegateSignature");

	Params::W_DifficultySelect_C_BndEvt__W_DifficultySelect_w_Dropdown_K2Node_ComponentBoundEvent_0_OnOptionSelected__DelegateSignature Parms{};

	Parms.OptionID = std::move(OptionID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultySelect.W_DifficultySelect_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_DifficultySelect_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultySelect_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultySelect.W_DifficultySelect_C.ExecuteUbergraph_W_DifficultySelect
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DifficultySelect_C::ExecuteUbergraph_W_DifficultySelect(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultySelect_C", "ExecuteUbergraph_W_DifficultySelect");

	Params::W_DifficultySelect_C_ExecuteUbergraph_W_DifficultySelect Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultySelect.W_DifficultySelect_C.InputMethodChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonInputType                        bNewInputType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DifficultySelect_C::InputMethodChanged(ECommonInputType bNewInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultySelect_C", "InputMethodChanged");

	Params::W_DifficultySelect_C_InputMethodChanged Parms{};

	Parms.bNewInputType = bNewInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultySelect.W_DifficultySelect_C.OnInputMethodChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UseGamepad_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DifficultySelect_C::OnInputMethodChanged(bool UseGamepad_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultySelect_C", "OnInputMethodChanged");

	Params::W_DifficultySelect_C_OnInputMethodChanged Parms{};

	Parms.UseGamepad_0 = UseGamepad_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultySelect.W_DifficultySelect_C.OnOptionSelected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    OptionID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_DifficultySelect_C::OnOptionSelected(const class FString& OptionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultySelect_C", "OnOptionSelected");

	Params::W_DifficultySelect_C_OnOptionSelected Parms{};

	Parms.OptionID = std::move(OptionID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultySelect.W_DifficultySelect_C.PopulateDifficulties
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_DifficultySelect_C::PopulateDifficulties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultySelect_C", "PopulateDifficulties");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultySelect.W_DifficultySelect_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DifficultySelect_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultySelect_C", "PreConstruct");

	Params::W_DifficultySelect_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DifficultySelect.W_DifficultySelect_C.Start Listening
// (BlueprintCallable, BlueprintEvent)

void UW_DifficultySelect_C::Start_Listening()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultySelect_C", "Start Listening");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DifficultySelect.W_DifficultySelect_C.Stop Listening
// (BlueprintCallable, BlueprintEvent)

void UW_DifficultySelect_C::Stop_Listening()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DifficultySelect_C", "Stop Listening");

	UObject::ProcessEvent(Func, nullptr);
}

}

