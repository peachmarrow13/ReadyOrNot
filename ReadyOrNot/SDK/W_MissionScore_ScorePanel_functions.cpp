#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MissionScore_ScorePanel

#include "Basic.hpp"

#include "W_MissionScore_ScorePanel_classes.hpp"
#include "W_MissionScore_ScorePanel_parameters.hpp"


namespace SDK
{

// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.AddPenalties
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FScorePenaltyData>& Scores                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_MissionScore_ScorePanel_C::AddPenalties(const TArray<struct FScorePenaltyData>& Scores)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "AddPenalties");

	Params::W_MissionScore_ScorePanel_C_AddPenalties Parms{};

	Parms.Scores = std::move(Scores);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.AddScores
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FScoreGroup>&       Scores                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UW_MissionScore_ScorePanel_C::AddScores(const TArray<struct FScoreGroup>& Scores)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "AddScores");

	Params::W_MissionScore_ScorePanel_C_AddScores Parms{};

	Parms.Scores = std::move(Scores);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.AddToProgress
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_MissionScore_ScorePanel_Entry_C*EntryWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MissionScore_ScorePanel_C::AddToProgress(class UW_MissionScore_ScorePanel_Entry_C* EntryWidget, int32 Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "AddToProgress");

	Params::W_MissionScore_ScorePanel_C_AddToProgress Parms{};

	Parms.EntryWidget = EntryWidget;
	Parms.Score = Score;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.BackPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Handled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MissionScore_ScorePanel_C::BackPage(bool* Handled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "BackPage");

	Params::W_MissionScore_ScorePanel_C_BackPage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Handled != nullptr)
		*Handled = Parms.Handled;
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.ChangePage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PageName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MissionScore_ScorePanel_C::ChangePage(class FName PageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "ChangePage");

	Params::W_MissionScore_ScorePanel_C_ChangePage Parms{};

	Parms.PageName = PageName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_MissionScore_ScorePanel_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.ExecuteUbergraph_W_MissionScore_ScorePanel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MissionScore_ScorePanel_C::ExecuteUbergraph_W_MissionScore_ScorePanel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "ExecuteUbergraph_W_MissionScore_ScorePanel");

	Params::W_MissionScore_ScorePanel_C_ExecuteUbergraph_W_MissionScore_ScorePanel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.GetMissionObjectiveFromScoringComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScoringComponent*                ScoringComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AObjective**                      MatchingObjective                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UW_MissionScore_ScorePanel_C::GetMissionObjectiveFromScoringComponent(class UScoringComponent* ScoringComponent, class AObjective** MatchingObjective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "GetMissionObjectiveFromScoringComponent");

	Params::W_MissionScore_ScorePanel_C_GetMissionObjectiveFromScoringComponent Parms{};

	Parms.ScoringComponent = ScoringComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (MatchingObjective != nullptr)
		*MatchingObjective = Parms.MatchingObjective;
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.Hide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Collapse                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MissionScore_ScorePanel_C::Hide(double Delay, bool Collapse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "Hide");

	Params::W_MissionScore_ScorePanel_C_Hide Parms{};

	Parms.Delay = Delay;
	Parms.Collapse = Collapse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.NextPenalty
// (BlueprintCallable, BlueprintEvent)

void UW_MissionScore_ScorePanel_C::NextPenalty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "NextPenalty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.NextScore
// (BlueprintCallable, BlueprintEvent)

void UW_MissionScore_ScorePanel_C::NextScore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "NextScore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.PenalizeProgress
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_MissionScore_ScorePanel_Entry_C*EntryWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MissionScore_ScorePanel_C::PenalizeProgress(class UW_MissionScore_ScorePanel_Entry_C* EntryWidget, int32 Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "PenalizeProgress");

	Params::W_MissionScore_ScorePanel_C_PenalizeProgress Parms{};

	Parms.EntryWidget = EntryWidget;
	Parms.Score = Score;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.PopulateObjectives
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FScoreData>&              Scores                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// EObjectiveLevel                         ObjectiveLevel                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MissionScore_ScorePanel_C::PopulateObjectives(TArray<struct FScoreData>& Scores, EObjectiveLevel ObjectiveLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "PopulateObjectives");

	Params::W_MissionScore_ScorePanel_C_PopulateObjectives Parms{};

	Parms.Scores = std::move(Scores);
	Parms.ObjectiveLevel = ObjectiveLevel;

	UObject::ProcessEvent(Func, &Parms);

	Scores = std::move(Parms.Scores);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MissionScore_ScorePanel_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "PreConstruct");

	Params::W_MissionScore_ScorePanel_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.PrimaryObjectivesReady
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_MissionScore_ScorePanel_SubEntry_C*EntryWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MissionScore_ScorePanel_C::PrimaryObjectivesReady(class UW_MissionScore_ScorePanel_SubEntry_C* EntryWidget, int32 Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "PrimaryObjectivesReady");

	Params::W_MissionScore_ScorePanel_C_PrimaryObjectivesReady Parms{};

	Parms.EntryWidget = EntryWidget;
	Parms.Score = Score;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.Reveal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MissionScore_ScorePanel_C::Reveal(double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "Reveal");

	Params::W_MissionScore_ScorePanel_C_Reveal Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.SetInputMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MissionScore_ScorePanel_C::SetInputMode(bool IsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "SetInputMode");

	Params::W_MissionScore_ScorePanel_C_SetInputMode Parms{};

	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.SoftObjectivesReady
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_MissionScore_ScorePanel_SubEntry_C*EntryWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MissionScore_ScorePanel_C::SoftObjectivesReady(class UW_MissionScore_ScorePanel_SubEntry_C* EntryWidget, int32 Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "SoftObjectivesReady");

	Params::W_MissionScore_ScorePanel_C_SoftObjectivesReady Parms{};

	Parms.EntryWidget = EntryWidget;
	Parms.Score = Score;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MissionScore_ScorePanel.W_MissionScore_ScorePanel_C.GetFocusTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UWidget**                         Focus                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_MissionScore_ScorePanel_C::GetFocusTarget(class UWidget** Focus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MissionScore_ScorePanel_C", "GetFocusTarget");

	Params::W_MissionScore_ScorePanel_C_GetFocusTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Focus != nullptr)
		*Focus = Parms.Focus;
}

}

