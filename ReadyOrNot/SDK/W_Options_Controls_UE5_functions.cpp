#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Options_Controls_UE5

#include "Basic.hpp"

#include "W_Options_Controls_UE5_classes.hpp"
#include "W_Options_Controls_UE5_parameters.hpp"


namespace SDK
{

// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.Add To Control Binds Lists
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_ControlsBind_C*                ControlBind                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FAxisMappingStruct&        InputAxis                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FActionMappingStruct&      InputAction                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_Options_Controls_UE5_C::Add_To_Control_Binds_Lists(class UW_ControlsBind_C* ControlBind, const struct FAxisMappingStruct& InputAxis, const struct FActionMappingStruct& InputAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "Add To Control Binds Lists");

	Params::W_Options_Controls_UE5_C_Add_To_Control_Binds_Lists Parms{};

	Parms.ControlBind = ControlBind;
	Parms.InputAxis = std::move(InputAxis);
	Parms.InputAction = std::move(InputAction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.AddControlsToGridPanel
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FKeyBinding>&       Bindings                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UGridPanel*                       GridPanel                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::AddControlsToGridPanel(const TArray<struct FKeyBinding>& Bindings, class UGridPanel* GridPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "AddControlsToGridPanel");

	Params::W_Options_Controls_UE5_C_AddControlsToGridPanel Parms{};

	Parms.Bindings = std::move(Bindings);
	Parms.GridPanel = GridPanel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.BndEvt__W_Options_Controls_UE5_btn_ControlsEquipment_1_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_ScrollButton_C*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::BndEvt__W_Options_Controls_UE5_btn_ControlsEquipment_1_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature(class UW_ScrollButton_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "BndEvt__W_Options_Controls_UE5_btn_ControlsEquipment_1_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature");

	Params::W_Options_Controls_UE5_C_BndEvt__W_Options_Controls_UE5_btn_ControlsEquipment_1_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.BndEvt__W_Options_Controls_UE5_btn_ControlsInteraction_1_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_ScrollButton_C*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::BndEvt__W_Options_Controls_UE5_btn_ControlsInteraction_1_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature(class UW_ScrollButton_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "BndEvt__W_Options_Controls_UE5_btn_ControlsInteraction_1_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature");

	Params::W_Options_Controls_UE5_C_BndEvt__W_Options_Controls_UE5_btn_ControlsInteraction_1_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.BndEvt__W_Options_Controls_UE5_btn_ControlsMovement_1_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_ScrollButton_C*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::BndEvt__W_Options_Controls_UE5_btn_ControlsMovement_1_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature(class UW_ScrollButton_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "BndEvt__W_Options_Controls_UE5_btn_ControlsMovement_1_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature");

	Params::W_Options_Controls_UE5_C_BndEvt__W_Options_Controls_UE5_btn_ControlsMovement_1_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.BndEvt__W_Options_Controls_UE5_btn_ControlsReplay_1_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_ScrollButton_C*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::BndEvt__W_Options_Controls_UE5_btn_ControlsReplay_1_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature(class UW_ScrollButton_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "BndEvt__W_Options_Controls_UE5_btn_ControlsReplay_1_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature");

	Params::W_Options_Controls_UE5_C_BndEvt__W_Options_Controls_UE5_btn_ControlsReplay_1_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.BndEvt__W_Options_Controls_UE5_btn_ControlsReplay_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_ScrollButton_C*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::BndEvt__W_Options_Controls_UE5_btn_ControlsReplay_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature(class UW_ScrollButton_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "BndEvt__W_Options_Controls_UE5_btn_ControlsReplay_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature");

	Params::W_Options_Controls_UE5_C_BndEvt__W_Options_Controls_UE5_btn_ControlsReplay_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.BndEvt__W_Options_Controls_UE5_btn_ControlsVehicle_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_ScrollButton_C*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::BndEvt__W_Options_Controls_UE5_btn_ControlsVehicle_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature(class UW_ScrollButton_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "BndEvt__W_Options_Controls_UE5_btn_ControlsVehicle_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature");

	Params::W_Options_Controls_UE5_C_BndEvt__W_Options_Controls_UE5_btn_ControlsVehicle_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.BndEvt__W_Options_Controls_UE5_NextGamepadTabButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_Button_C*                      Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::BndEvt__W_Options_Controls_UE5_NextGamepadTabButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "BndEvt__W_Options_Controls_UE5_NextGamepadTabButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");

	Params::W_Options_Controls_UE5_C_BndEvt__W_Options_Controls_UE5_NextGamepadTabButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.BndEvt__W_Options_Controls_UE5_PreviousGamepadTabButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_Button_C*                      Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::BndEvt__W_Options_Controls_UE5_PreviousGamepadTabButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature(class UW_Button_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "BndEvt__W_Options_Controls_UE5_PreviousGamepadTabButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");

	Params::W_Options_Controls_UE5_C_BndEvt__W_Options_Controls_UE5_PreviousGamepadTabButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.BndEvt__W_Options_Controls_UE5_W_ScrollButton_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_ScrollButton_C*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::BndEvt__W_Options_Controls_UE5_W_ScrollButton_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature(class UW_ScrollButton_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "BndEvt__W_Options_Controls_UE5_W_ScrollButton_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");

	Params::W_Options_Controls_UE5_C_BndEvt__W_Options_Controls_UE5_W_ScrollButton_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void UW_Options_Controls_UE5_C::BP_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.BP_OnDeactivated
// (Event, Protected, BlueprintEvent)

void UW_Options_Controls_UE5_C::BP_OnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "BP_OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.Clear Control Binds Lists
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Options_Controls_UE5_C::Clear_Control_Binds_Lists()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "Clear Control Binds Lists");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.Conflicting Bind Cancel Clicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStandardModal*                   CallingModal                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::Conflicting_Bind_Cancel_Clicked(class UStandardModal* CallingModal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "Conflicting Bind Cancel Clicked");

	Params::W_Options_Controls_UE5_C_Conflicting_Bind_Cancel_Clicked Parms{};

	Parms.CallingModal = CallingModal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.Conflicting Bind Detected
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_ControlsBind_C*                CallingBind                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TArray<struct FActionMappingStruct>&    ActionMappings                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FAxisMappingStruct>&      AxisMappings                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TArray<class FText>&                    ConflictBindsText                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_Options_Controls_UE5_C::Conflicting_Bind_Detected(class UW_ControlsBind_C* CallingBind, TArray<struct FActionMappingStruct>& ActionMappings, TArray<struct FAxisMappingStruct>& AxisMappings, const struct FKey& Key, TArray<class FText>& ConflictBindsText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "Conflicting Bind Detected");

	Params::W_Options_Controls_UE5_C_Conflicting_Bind_Detected Parms{};

	Parms.CallingBind = CallingBind;
	Parms.ActionMappings = std::move(ActionMappings);
	Parms.AxisMappings = std::move(AxisMappings);
	Parms.Key = std::move(Key);
	Parms.ConflictBindsText = std::move(ConflictBindsText);

	UObject::ProcessEvent(Func, &Parms);

	ActionMappings = std::move(Parms.ActionMappings);
	AxisMappings = std::move(Parms.AxisMappings);
	ConflictBindsText = std::move(Parms.ConflictBindsText);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.Conflicting Bind Ok Clicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_StandardModal_C*               CallingModal                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const class FText&                      TextEntry                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_Options_Controls_UE5_C::Conflicting_Bind_Ok_Clicked(class UW_StandardModal_C* CallingModal, const class FText& TextEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "Conflicting Bind Ok Clicked");

	Params::W_Options_Controls_UE5_C_Conflicting_Bind_Ok_Clicked Parms{};

	Parms.CallingModal = CallingModal;
	Parms.TextEntry = std::move(TextEntry);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Options_Controls_UE5_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.End Buttons Disabled For Binding
// (BlueprintCallable, BlueprintEvent)

void UW_Options_Controls_UE5_C::End_Buttons_Disabled_For_Binding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "End Buttons Disabled For Binding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.ExecuteUbergraph_W_Options_Controls_UE5
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::ExecuteUbergraph_W_Options_Controls_UE5(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "ExecuteUbergraph_W_Options_Controls_UE5");

	Params::W_Options_Controls_UE5_C_ExecuteUbergraph_W_Options_Controls_UE5 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.GetConflictingKeybindListText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FAxisMappingStruct>&      Axes                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FActionMappingStruct>&    Actions                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FText>&                    ConflictBinds                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText*                            Text                                                   (Parm, OutParm)

void UW_Options_Controls_UE5_C::GetConflictingKeybindListText(TArray<struct FAxisMappingStruct>& Axes, TArray<struct FActionMappingStruct>& Actions, TArray<class FText>& ConflictBinds, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "GetConflictingKeybindListText");

	Params::W_Options_Controls_UE5_C_GetConflictingKeybindListText Parms{};

	Parms.Axes = std::move(Axes);
	Parms.Actions = std::move(Actions);
	Parms.ConflictBinds = std::move(ConflictBinds);

	UObject::ProcessEvent(Func, &Parms);

	Axes = std::move(Parms.Axes);
	Actions = std::move(Parms.Actions);
	ConflictBinds = std::move(Parms.ConflictBinds);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.GetConflictingKeybindText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TArray<struct FAxisMappingStruct>&      ConflictingAxes                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FActionMappingStruct>&    ConflictingActions                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FText>&                    ConflictBindNames                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText*                            Text                                                   (Parm, OutParm)

void UW_Options_Controls_UE5_C::GetConflictingKeybindText(const struct FKey& Key, TArray<struct FAxisMappingStruct>& ConflictingAxes, TArray<struct FActionMappingStruct>& ConflictingActions, TArray<class FText>& ConflictBindNames, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "GetConflictingKeybindText");

	Params::W_Options_Controls_UE5_C_GetConflictingKeybindText Parms{};

	Parms.Key = std::move(Key);
	Parms.ConflictingAxes = std::move(ConflictingAxes);
	Parms.ConflictingActions = std::move(ConflictingActions);
	Parms.ConflictBindNames = std::move(ConflictBindNames);

	UObject::ProcessEvent(Func, &Parms);

	ConflictingAxes = std::move(Parms.ConflictingAxes);
	ConflictingActions = std::move(Parms.ConflictingActions);
	ConflictBindNames = std::move(Parms.ConflictBindNames);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.Initialise Or Get Pop Up
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           PopUpType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FSStandardModalDetails&    ModalDetails                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UStandardModal**                  OutputPopUp                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::Initialise_Or_Get_Pop_Up(class UClass* PopUpType, const struct FSStandardModalDetails& ModalDetails, class UStandardModal** OutputPopUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "Initialise Or Get Pop Up");

	Params::W_Options_Controls_UE5_C_Initialise_Or_Get_Pop_Up Parms{};

	Parms.PopUpType = PopUpType;
	Parms.ModalDetails = std::move(ModalDetails);

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPopUp != nullptr)
		*OutputPopUp = Parms.OutputPopUp;
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.InitialisePopUps
// (BlueprintCallable, BlueprintEvent)

void UW_Options_Controls_UE5_C::InitialisePopUps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "InitialisePopUps");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.NextControlsTab
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_Options_Controls_UE5_C::NextControlsTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "NextControlsTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.On Binding Canceled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_ControlsBind_C*                CallingWidget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::On_Binding_Canceled(class UW_ControlsBind_C* CallingWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "On Binding Canceled");

	Params::W_Options_Controls_UE5_C_On_Binding_Canceled Parms{};

	Parms.CallingWidget = CallingWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.On Binding Committed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_ControlsBind_C*                CallingWidget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FKey&                      NewKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::On_Binding_Committed(class UW_ControlsBind_C* CallingWidget, const struct FKey& NewKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "On Binding Committed");

	Params::W_Options_Controls_UE5_C_On_Binding_Committed Parms{};

	Parms.CallingWidget = CallingWidget;
	Parms.NewKey = std::move(NewKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.On Binding Started
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_ControlsBind_C*                CallingWidget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::On_Binding_Started(class UW_ControlsBind_C* CallingWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "On Binding Started");

	Params::W_Options_Controls_UE5_C_On_Binding_Started Parms{};

	Parms.CallingWidget = CallingWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.OnCancelIllegalBindClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStandardModal*                   CallingModal                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::OnCancelIllegalBindClicked(class UStandardModal* CallingModal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "OnCancelIllegalBindClicked");

	Params::W_Options_Controls_UE5_C_OnCancelIllegalBindClicked Parms{};

	Parms.CallingModal = CallingModal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.PopulatePCControls
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Options_Controls_UE5_C::PopulatePCControls()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "PopulatePCControls");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.PreviousControlsTab
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_Options_Controls_UE5_C::PreviousControlsTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "PreviousControlsTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.ResetKeybinds
// (BlueprintCallable, BlueprintEvent)

void UW_Options_Controls_UE5_C::ResetKeybinds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "ResetKeybinds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.SetupControlsCategories
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Options_Controls_UE5_C::SetupControlsCategories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "SetupControlsCategories");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.SwitchControlsTab
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_ScrollButton_C*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          MenuWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::SwitchControlsTab(class UW_ScrollButton_C* Button, class UWidget* MenuWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "SwitchControlsTab");

	Params::W_Options_Controls_UE5_C_SwitchControlsTab Parms{};

	Parms.Button = Button;
	Parms.MenuWidget = MenuWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.TryAssignUnbindableControl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKeyBinding&               KeyBinding                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Options_Controls_UE5_C::TryAssignUnbindableControl(const struct FKeyBinding& KeyBinding, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "TryAssignUnbindableControl");

	Params::W_Options_Controls_UE5_C_TryAssignUnbindableControl Parms{};

	Parms.KeyBinding = std::move(KeyBinding);

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function W_Options_Controls_UE5.W_Options_Controls_UE5_C.BP_GetDesiredFocusTarget
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UW_Options_Controls_UE5_C::BP_GetDesiredFocusTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_Controls_UE5_C", "BP_GetDesiredFocusTarget");

	Params::W_Options_Controls_UE5_C_BP_GetDesiredFocusTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

