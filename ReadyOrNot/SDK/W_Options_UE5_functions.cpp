#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Options_UE5

#include "Basic.hpp"

#include "W_Options_UE5_classes.hpp"
#include "W_Options_UE5_parameters.hpp"


namespace SDK
{

// Function W_Options_UE5.W_Options_UE5_C.Add To Control Binds Lists
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_ControlsBind_C*                ControlBind                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FAxisMappingStruct&        InputAxis                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FActionMappingStruct&      InputAction                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_Options_UE5_C::Add_To_Control_Binds_Lists(class UW_ControlsBind_C* ControlBind, const struct FAxisMappingStruct& InputAxis, const struct FActionMappingStruct& InputAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "Add To Control Binds Lists");

	Params::W_Options_UE5_C_Add_To_Control_Binds_Lists Parms{};

	Parms.ControlBind = ControlBind;
	Parms.InputAxis = std::move(InputAxis);
	Parms.InputAction = std::move(InputAction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_UE5.W_Options_UE5_C.BndEvt__W_SettingsMenuGamepad_PageWrapper_K2Node_ComponentBoundEvent_110_OnNavOptionSelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FName                             OptionNameID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Options_UE5_C::BndEvt__W_SettingsMenuGamepad_PageWrapper_K2Node_ComponentBoundEvent_110_OnNavOptionSelected__DelegateSignature(class FName OptionNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "BndEvt__W_SettingsMenuGamepad_PageWrapper_K2Node_ComponentBoundEvent_110_OnNavOptionSelected__DelegateSignature");

	Params::W_Options_UE5_C_BndEvt__W_SettingsMenuGamepad_PageWrapper_K2Node_ComponentBoundEvent_110_OnNavOptionSelected__DelegateSignature Parms{};

	Parms.OptionNameID = OptionNameID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_UE5.W_Options_UE5_C.BndEvt__W_SettingsMenuGamepad_PageWrapper_K2Node_ComponentBoundEvent_98_OnFooterButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const class FString&                    ButtonId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_Options_UE5_C::BndEvt__W_SettingsMenuGamepad_PageWrapper_K2Node_ComponentBoundEvent_98_OnFooterButtonClicked__DelegateSignature(const class FString& ButtonId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "BndEvt__W_SettingsMenuGamepad_PageWrapper_K2Node_ComponentBoundEvent_98_OnFooterButtonClicked__DelegateSignature");

	Params::W_Options_UE5_C_BndEvt__W_SettingsMenuGamepad_PageWrapper_K2Node_ComponentBoundEvent_98_OnFooterButtonClicked__DelegateSignature Parms{};

	Parms.ButtonId = std::move(ButtonId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_UE5.W_Options_UE5_C.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void UW_Options_UE5_C::BP_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.BP_OnHandleBackAction
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UW_Options_UE5_C::BP_OnHandleBackAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "BP_OnHandleBackAction");

	Params::W_Options_UE5_C_BP_OnHandleBackAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Options_UE5.W_Options_UE5_C.CancelGraphics
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStandardModal*                   CallingModal                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_UE5_C::CancelGraphics(class UStandardModal* CallingModal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "CancelGraphics");

	Params::W_Options_UE5_C_CancelGraphics Parms{};

	Parms.CallingModal = CallingModal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_UE5.W_Options_UE5_C.Clear Control Binds Lists
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Options_UE5_C::Clear_Control_Binds_Lists()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "Clear Control Binds Lists");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.Clear Controls Tab
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Options_UE5_C::Clear_Controls_Tab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "Clear Controls Tab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Options_UE5_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.CreateGamepadOverlayWidget
// (BlueprintCallable, BlueprintEvent)

void UW_Options_UE5_C::CreateGamepadOverlayWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "CreateGamepadOverlayWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Options_UE5_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.DisableAppliedSettingsText
// (BlueprintCallable, BlueprintEvent)

void UW_Options_UE5_C::DisableAppliedSettingsText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "DisableAppliedSettingsText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.ExecuteUbergraph_W_Options_UE5
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Options_UE5_C::ExecuteUbergraph_W_Options_UE5(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "ExecuteUbergraph_W_Options_UE5");

	Params::W_Options_UE5_C_ExecuteUbergraph_W_Options_UE5 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_UE5.W_Options_UE5_C.ExitMenu
// (BlueprintCallable, BlueprintEvent)

void UW_Options_UE5_C::ExitMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "ExitMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.GetConflictingKeybindListText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FAxisMappingStruct>&      Axes                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FActionMappingStruct>&    Actions                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FText>&                    ConflictBinds                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText*                            Text                                                   (Parm, OutParm)

void UW_Options_UE5_C::GetConflictingKeybindListText(TArray<struct FAxisMappingStruct>& Axes, TArray<struct FActionMappingStruct>& Actions, TArray<class FText>& ConflictBinds, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "GetConflictingKeybindListText");

	Params::W_Options_UE5_C_GetConflictingKeybindListText Parms{};

	Parms.Axes = std::move(Axes);
	Parms.Actions = std::move(Actions);
	Parms.ConflictBinds = std::move(ConflictBinds);

	UObject::ProcessEvent(Func, &Parms);

	Axes = std::move(Parms.Axes);
	Actions = std::move(Parms.Actions);
	ConflictBinds = std::move(Parms.ConflictBinds);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function W_Options_UE5.W_Options_UE5_C.GetConflictingKeybindText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TArray<struct FAxisMappingStruct>&      ConflictingAxes                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FActionMappingStruct>&    ConflictingActions                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FText>&                    ConflictBindNames                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText*                            Text                                                   (Parm, OutParm)

void UW_Options_UE5_C::GetConflictingKeybindText(const struct FKey& Key, TArray<struct FAxisMappingStruct>& ConflictingAxes, TArray<struct FActionMappingStruct>& ConflictingActions, TArray<class FText>& ConflictBindNames, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "GetConflictingKeybindText");

	Params::W_Options_UE5_C_GetConflictingKeybindText Parms{};

	Parms.Key = std::move(Key);
	Parms.ConflictingAxes = std::move(ConflictingAxes);
	Parms.ConflictingActions = std::move(ConflictingActions);
	Parms.ConflictBindNames = std::move(ConflictBindNames);

	UObject::ProcessEvent(Func, &Parms);

	ConflictingAxes = std::move(Parms.ConflictingAxes);
	ConflictingActions = std::move(Parms.ConflictingActions);
	ConflictBindNames = std::move(Parms.ConflictBindNames);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function W_Options_UE5.W_Options_UE5_C.InitGraphicsChangedModal
// (BlueprintCallable, BlueprintEvent)

void UW_Options_UE5_C::InitGraphicsChangedModal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "InitGraphicsChangedModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.Initialise Or Get Pop Up
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           PopUpType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FSStandardModalDetails&    ModalDetails                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UStandardModal**                  OutputPopUp                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_UE5_C::Initialise_Or_Get_Pop_Up(class UClass* PopUpType, const struct FSStandardModalDetails& ModalDetails, class UStandardModal** OutputPopUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "Initialise Or Get Pop Up");

	Params::W_Options_UE5_C_Initialise_Or_Get_Pop_Up Parms{};

	Parms.PopUpType = PopUpType;
	Parms.ModalDetails = std::move(ModalDetails);

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPopUp != nullptr)
		*OutputPopUp = Parms.OutputPopUp;
}


// Function W_Options_UE5.W_Options_UE5_C.NoGraphics
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_StandardModal_C*               CallingModal                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const class FText&                      TextEntry                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_Options_UE5_C::NoGraphics(class UW_StandardModal_C* CallingModal, const class FText& TextEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "NoGraphics");

	Params::W_Options_UE5_C_NoGraphics Parms{};

	Parms.CallingModal = CallingModal;
	Parms.TextEntry = std::move(TextEntry);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_UE5.W_Options_UE5_C.OkGraphics
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_StandardModal_C*               CallingModal                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const class FText&                      TextEntry                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_Options_UE5_C::OkGraphics(class UW_StandardModal_C* CallingModal, const class FText& TextEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "OkGraphics");

	Params::W_Options_UE5_C_OkGraphics Parms{};

	Parms.CallingModal = CallingModal;
	Parms.TextEntry = std::move(TextEntry);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_UE5.W_Options_UE5_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FKeyEvent&                 InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_Options_UE5_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "OnKeyDown");

	Params::W_Options_UE5_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Options_UE5.W_Options_UE5_C.OnPreviewKeyDown
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FKeyEvent&                 InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_Options_UE5_C::OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "OnPreviewKeyDown");

	Params::W_Options_UE5_C_OnPreviewKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Options_UE5.W_Options_UE5_C.OpenAccessibilityOptions
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Options_UE5_C::OpenAccessibilityOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "OpenAccessibilityOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.OpenAudioOptions
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Options_UE5_C::OpenAudioOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "OpenAudioOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.OpenControlOptions
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Options_UE5_C::OpenControlOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "OpenControlOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.OpenGameOptions
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Options_UE5_C::OpenGameOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "OpenGameOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.OpenGamepadOptions
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Options_UE5_C::OpenGamepadOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "OpenGamepadOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.OpenGraphicsOptions
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Options_UE5_C::OpenGraphicsOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "OpenGraphicsOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.PopulateSubtitleLocales
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_CommonCarousel_C*              Carousel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Options_UE5_C::PopulateSubtitleLocales(class UW_CommonCarousel_C* Carousel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "PopulateSubtitleLocales");

	Params::W_Options_UE5_C_PopulateSubtitleLocales Parms{};

	Parms.Carousel = Carousel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_UE5.W_Options_UE5_C.SetGamepadButtonPrompts
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Options_UE5_C::SetGamepadButtonPrompts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "SetGamepadButtonPrompts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.SetupControlsCategories
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Options_UE5_C::SetupControlsCategories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "SetupControlsCategories");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.SetupDescriptionWidgets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_Options_UE5_C::SetupDescriptionWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "SetupDescriptionWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Options_UE5.W_Options_UE5_C.SwitchTab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonActivatableWidget*         MenuWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Tab_Name                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    bShowResetButton                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShowApplyButton                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShowGamepadButton                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Options_UE5_C::SwitchTab(class UCommonActivatableWidget* MenuWidget, const class FText& Tab_Name, bool bShowResetButton, bool bShowApplyButton, bool bShowGamepadButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "SwitchTab");

	Params::W_Options_UE5_C_SwitchTab Parms{};

	Parms.MenuWidget = MenuWidget;
	Parms.Tab_Name = std::move(Tab_Name);
	Parms.bShowResetButton = bShowResetButton;
	Parms.bShowApplyButton = bShowApplyButton;
	Parms.bShowGamepadButton = bShowGamepadButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_UE5.W_Options_UE5_C.ToggleApplyButton
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowApply                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Options_UE5_C::ToggleApplyButton(bool ShowApply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "ToggleApplyButton");

	Params::W_Options_UE5_C_ToggleApplyButton Parms{};

	Parms.ShowApply = ShowApply;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_UE5.W_Options_UE5_C.ToggleGamepadButton
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowApply                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Options_UE5_C::ToggleGamepadButton(bool ShowApply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "ToggleGamepadButton");

	Params::W_Options_UE5_C_ToggleGamepadButton Parms{};

	Parms.ShowApply = ShowApply;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_UE5.W_Options_UE5_C.ToggleResetButton
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowReset                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Options_UE5_C::ToggleResetButton(bool ShowReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "ToggleResetButton");

	Params::W_Options_UE5_C_ToggleResetButton Parms{};

	Parms.ShowReset = ShowReset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Options_UE5.W_Options_UE5_C.TryAssignUnbindableControl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKeyBinding&               KeyBinding                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Options_UE5_C::TryAssignUnbindableControl(const struct FKeyBinding& KeyBinding, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Options_UE5_C", "TryAssignUnbindableControl");

	Params::W_Options_UE5_C_TryAssignUnbindableControl Parms{};

	Parms.KeyBinding = std::move(KeyBinding);

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}

}

