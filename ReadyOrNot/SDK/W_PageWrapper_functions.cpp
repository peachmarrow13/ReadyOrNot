#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PageWrapper

#include "Basic.hpp"

#include "W_PageWrapper_classes.hpp"
#include "W_PageWrapper_parameters.hpp"


namespace SDK
{

// Function W_PageWrapper.W_PageWrapper_C.AddFooterEntry
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InsertAtIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString&                          EntryID                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// const struct FScreenFooterEntry&        ScreenFooterEntry                                      (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_PageWrapper_C::AddFooterEntry(int32 InsertAtIndex, class FString& EntryID, const struct FScreenFooterEntry& ScreenFooterEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "AddFooterEntry");

	Params::W_PageWrapper_C_AddFooterEntry Parms{};

	Parms.InsertAtIndex = InsertAtIndex;
	Parms.EntryID = std::move(EntryID);
	Parms.ScreenFooterEntry = std::move(ScreenFooterEntry);

	UObject::ProcessEvent(Func, &Parms);

	EntryID = std::move(Parms.EntryID);
}


// Function W_PageWrapper.W_PageWrapper_C.AddHeaderNavOption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             OptionNameID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      OptionLabelText                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    DefaultSelection                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::AddHeaderNavOption(class FName OptionNameID, const class FText& OptionLabelText, bool DefaultSelection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "AddHeaderNavOption");

	Params::W_PageWrapper_C_AddHeaderNavOption Parms{};

	Parms.OptionNameID = OptionNameID;
	Parms.OptionLabelText = std::move(OptionLabelText);
	Parms.DefaultSelection = DefaultSelection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.Animating
// (BlueprintCallable, BlueprintEvent)

void UW_PageWrapper_C::Animating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "Animating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.BackPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Handled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::BackPage(bool* Handled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "BackPage");

	Params::W_PageWrapper_C_BackPage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Handled != nullptr)
		*Handled = Parms.Handled;
}


// Function W_PageWrapper.W_PageWrapper_C.BndEvt__W_PageHeader_W_PageHeader_Carousel_K2Node_ComponentBoundEvent_0_OnOptionSelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FName                             OptionID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::BndEvt__W_PageHeader_W_PageHeader_Carousel_K2Node_ComponentBoundEvent_0_OnOptionSelected__DelegateSignature(class FName OptionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "BndEvt__W_PageHeader_W_PageHeader_Carousel_K2Node_ComponentBoundEvent_0_OnOptionSelected__DelegateSignature");

	Params::W_PageWrapper_C_BndEvt__W_PageHeader_W_PageHeader_Carousel_K2Node_ComponentBoundEvent_0_OnOptionSelected__DelegateSignature Parms{};

	Parms.OptionID = OptionID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.BndEvt__W_PageHeader_W_ScreenFooter_K2Node_ComponentBoundEvent_2_OnFooterEntriesUpdated__DelegateSignature
// (BlueprintEvent)

void UW_PageWrapper_C::BndEvt__W_PageHeader_W_ScreenFooter_K2Node_ComponentBoundEvent_2_OnFooterEntriesUpdated__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "BndEvt__W_PageHeader_W_ScreenFooter_K2Node_ComponentBoundEvent_2_OnFooterEntriesUpdated__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.BndEvt__W_PageHeader_W_ScreenFooter_K2Node_ComponentBoundEvent_3_OnFooterEntryClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_ScreenFooterEntry_C*           FooterEntry                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::BndEvt__W_PageHeader_W_ScreenFooter_K2Node_ComponentBoundEvent_3_OnFooterEntryClicked__DelegateSignature(class UW_ScreenFooterEntry_C* FooterEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "BndEvt__W_PageHeader_W_ScreenFooter_K2Node_ComponentBoundEvent_3_OnFooterEntryClicked__DelegateSignature");

	Params::W_PageWrapper_C_BndEvt__W_PageHeader_W_ScreenFooter_K2Node_ComponentBoundEvent_3_OnFooterEntryClicked__DelegateSignature Parms{};

	Parms.FooterEntry = FooterEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.BndEvt__W_PageWrapper_PageHeaderNav_K2Node_ComponentBoundEvent_1_OnNextHandled__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FName                             OptionID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::BndEvt__W_PageWrapper_PageHeaderNav_K2Node_ComponentBoundEvent_1_OnNextHandled__DelegateSignature(class FName OptionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "BndEvt__W_PageWrapper_PageHeaderNav_K2Node_ComponentBoundEvent_1_OnNextHandled__DelegateSignature");

	Params::W_PageWrapper_C_BndEvt__W_PageWrapper_PageHeaderNav_K2Node_ComponentBoundEvent_1_OnNextHandled__DelegateSignature Parms{};

	Parms.OptionID = OptionID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.BndEvt__W_PageWrapper_PageHeaderNav_K2Node_ComponentBoundEvent_4_OnPreviousHandled__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FName                             OptionID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::BndEvt__W_PageWrapper_PageHeaderNav_K2Node_ComponentBoundEvent_4_OnPreviousHandled__DelegateSignature(class FName OptionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "BndEvt__W_PageWrapper_PageHeaderNav_K2Node_ComponentBoundEvent_4_OnPreviousHandled__DelegateSignature");

	Params::W_PageWrapper_C_BndEvt__W_PageWrapper_PageHeaderNav_K2Node_ComponentBoundEvent_4_OnPreviousHandled__DelegateSignature Parms{};

	Parms.OptionID = OptionID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void UW_PageWrapper_C::BP_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.ChangePage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PageName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::ChangePage(class FName PageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "ChangePage");

	Params::W_PageWrapper_C_ChangePage Parms{};

	Parms.PageName = PageName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.ClearHeadline
// (Public, BlueprintCallable, BlueprintEvent)

void UW_PageWrapper_C::ClearHeadline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "ClearHeadline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.ClearTagline
// (Public, BlueprintCallable, BlueprintEvent)

void UW_PageWrapper_C::ClearTagline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "ClearTagline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_PageWrapper_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_PageWrapper_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.DisableHeaderNavOption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             OptionNameID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::DisableHeaderNavOption(class FName OptionNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "DisableHeaderNavOption");

	Params::W_PageWrapper_C_DisableHeaderNavOption Parms{};

	Parms.OptionNameID = OptionNameID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.EnableHeaderNavOption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             OptionNameID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::EnableHeaderNavOption(class FName OptionNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "EnableHeaderNavOption");

	Params::W_PageWrapper_C_EnableHeaderNavOption Parms{};

	Parms.OptionNameID = OptionNameID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.ExecuteUbergraph_W_PageWrapper
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::ExecuteUbergraph_W_PageWrapper(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "ExecuteUbergraph_W_PageWrapper");

	Params::W_PageWrapper_C_ExecuteUbergraph_W_PageWrapper Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.GetCurrentNavSelection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName*                            SelectedNavOption_0                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::GetCurrentNavSelection(class FName* SelectedNavOption_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "GetCurrentNavSelection");

	Params::W_PageWrapper_C_GetCurrentNavSelection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectedNavOption_0 != nullptr)
		*SelectedNavOption_0 = Parms.SelectedNavOption_0;
}


// Function W_PageWrapper.W_PageWrapper_C.GetLineWidthByConstraint
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UW_PageWrapper_C::GetLineWidthByConstraint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "GetLineWidthByConstraint");

	Params::W_PageWrapper_C_GetLineWidthByConstraint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_PageWrapper.W_PageWrapper_C.Hide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Collapse                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::Hide(double Delay, bool Collapse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "Hide");

	Params::W_PageWrapper_C_Hide Parms{};

	Parms.Delay = Delay;
	Parms.Collapse = Collapse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.HideFooter
// (Public, BlueprintCallable, BlueprintEvent)

void UW_PageWrapper_C::HideFooter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "HideFooter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.HideFooterEntryByID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_PageWrapper_C::HideFooterEntryByID(const class FString& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "HideFooterEntryByID");

	Params::W_PageWrapper_C_HideFooterEntryByID Parms{};

	Parms.ID = std::move(ID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.HideFooterEntryByIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::HideFooterEntryByIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "HideFooterEntryByIndex");

	Params::W_PageWrapper_C_HideFooterEntryByIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.HideRedLine
// (Public, BlueprintCallable, BlueprintEvent)

void UW_PageWrapper_C::HideRedLine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "HideRedLine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.InitializeFooter
// (Public, BlueprintCallable, BlueprintEvent)

void UW_PageWrapper_C::InitializeFooter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "InitializeFooter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.InitializeHeader
// (Public, BlueprintCallable, BlueprintEvent)

void UW_PageWrapper_C::InitializeHeader()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "InitializeHeader");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.InitializeMaterials
// (Public, BlueprintCallable, BlueprintEvent)

void UW_PageWrapper_C::InitializeMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "InitializeMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.InitializeNavigation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_PageWrapper_C::InitializeNavigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "InitializeNavigation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.InputMethodChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonInputType                        bNewInputType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::InputMethodChanged(ECommonInputType bNewInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "InputMethodChanged");

	Params::W_PageWrapper_C_InputMethodChanged Parms{};

	Parms.bNewInputType = bNewInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.IsAspectConstrained
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UW_PageWrapper_C::IsAspectConstrained()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "IsAspectConstrained");

	Params::W_PageWrapper_C_IsAspectConstrained Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_PageWrapper.W_PageWrapper_C.IsPS5
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsPlaystation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::IsPS5(bool* IsPlaystation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "IsPS5");

	Params::W_PageWrapper_C_IsPS5 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaystation != nullptr)
		*IsPlaystation = Parms.IsPlaystation;
}


// Function W_PageWrapper.W_PageWrapper_C.OnFooterEntryPressed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_ScreenFooterEntry_C*           NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::OnFooterEntryPressed(class UW_ScreenFooterEntry_C* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "OnFooterEntryPressed");

	Params::W_PageWrapper_C_OnFooterEntryPressed Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_PageWrapper_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "PreConstruct");

	Params::W_PageWrapper_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.RemoveHeaderNavOption
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             OptionNameID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::RemoveHeaderNavOption(class FName OptionNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "RemoveHeaderNavOption");

	Params::W_PageWrapper_C_RemoveHeaderNavOption Parms{};

	Parms.OptionNameID = OptionNameID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.Reveal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::Reveal(double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "Reveal");

	Params::W_PageWrapper_C_Reveal Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.SetAspectConstraints
// (Public, BlueprintCallable, BlueprintEvent)

void UW_PageWrapper_C::SetAspectConstraints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "SetAspectConstraints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.SetFooterEntries
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<class FString, struct FScreenFooterEntry>&FooterEntries_0                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_PageWrapper_C::SetFooterEntries(const TMap<class FString, struct FScreenFooterEntry>& FooterEntries_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "SetFooterEntries");

	Params::W_PageWrapper_C_SetFooterEntries Parms{};

	Parms.FooterEntries_0 = std::move(FooterEntries_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.SetFooterFocusByID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_PageWrapper_C::SetFooterFocusByID(const class FString& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "SetFooterFocusByID");

	Params::W_PageWrapper_C_SetFooterFocusByID Parms{};

	Parms.ID = std::move(ID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.SetHeaderNavOptions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<class FName, class FText>&   OptionMap                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_PageWrapper_C::SetHeaderNavOptions(const TMap<class FName, class FText>& OptionMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "SetHeaderNavOptions");

	Params::W_PageWrapper_C_SetHeaderNavOptions Parms{};

	Parms.OptionMap = std::move(OptionMap);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.SetHeaderNavSelection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             OptionNameID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::SetHeaderNavSelection(class FName OptionNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "SetHeaderNavSelection");

	Params::W_PageWrapper_C_SetHeaderNavSelection Parms{};

	Parms.OptionNameID = OptionNameID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.SetInputMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::SetInputMode(bool IsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "SetInputMode");

	Params::W_PageWrapper_C_SetInputMode Parms{};

	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.ShowFooter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsPlaystation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::ShowFooter(bool* IsPlaystation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "ShowFooter");

	Params::W_PageWrapper_C_ShowFooter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaystation != nullptr)
		*IsPlaystation = Parms.IsPlaystation;
}


// Function W_PageWrapper.W_PageWrapper_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "Tick");

	Params::W_PageWrapper_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.ToggleNavVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::ToggleNavVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "ToggleNavVisibility");

	Params::W_PageWrapper_C_ToggleNavVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.UnhideFooterEntryByID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_PageWrapper_C::UnhideFooterEntryByID(const class FString& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "UnhideFooterEntryByID");

	Params::W_PageWrapper_C_UnhideFooterEntryByID Parms{};

	Parms.ID = std::move(ID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.UnhideFooterEntryByIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::UnhideFooterEntryByIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "UnhideFooterEntryByIndex");

	Params::W_PageWrapper_C_UnhideFooterEntryByIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.UpdateBackgroundBlur
// (Public, BlueprintCallable, BlueprintEvent)

void UW_PageWrapper_C::UpdateBackgroundBlur()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "UpdateBackgroundBlur");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.UpdateCurrentNavOptions
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_PageWrapper_C::UpdateCurrentNavOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "UpdateCurrentNavOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.UpdateHeader
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      NewHeader                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      NewTagline                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_PageWrapper_C::UpdateHeader(const class FText& NewHeader, const class FText& NewTagline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "UpdateHeader");

	Params::W_PageWrapper_C_UpdateHeader Parms{};

	Parms.NewHeader = std::move(NewHeader);
	Parms.NewTagline = std::move(NewTagline);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PageWrapper.W_PageWrapper_C.UpdateVignette
// (Public, BlueprintCallable, BlueprintEvent)

void UW_PageWrapper_C::UpdateVignette()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "UpdateVignette");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PageWrapper.W_PageWrapper_C.GetFocusTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UWidget**                         Focus                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_PageWrapper_C::GetFocusTarget(class UWidget** Focus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PageWrapper_C", "GetFocusTarget");

	Params::W_PageWrapper_C_GetFocusTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Focus != nullptr)
		*Focus = Parms.Focus;
}

}

