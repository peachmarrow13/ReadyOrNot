#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_PlanningMap_Level

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C
// 0x0288 (0x0558 - 0x02D0)
class UW_PreMission_PlanningMap_Level_C final : public UPreMissionPlanningMapLevel
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 img_Map;                                           // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MainCanvas;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MarkerCanvas;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMissionPlanLinesWidget*                PlanLineRenderer;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLevelFloor                            FloorData;                                         // 0x0300(0x0068)(Edit, BlueprintVisible, ExposeOnSpawn)
	TMap<int32, class UCanvasPanel*>              Lines;                                             // 0x0368(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<int32, class UW_PreMission_Tablet_MapMarker_C*> Icons;                                      // 0x03B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UW_PreMission_PlanningMap_C*            PlanningMapWidget;                                 // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(int32 MarkerID, class UW_PreMission_Tablet_MapMarker_C* Marker)> OnMarkerDrawn; // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(int32 LineID, class UCanvasPanel* LineCanvas)> OnLineDrawn;        // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FEntryPoint>                    LevelEntryPoints;                                  // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class UW_PreMission_Tablet_MapMarker_C* TriggeringMarker, int32 FloorLevel, double Rotation)> OnMarkerRotated; // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          StyleGuide;                                        // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class UW_OfficerMarker_C*>        LineMarkers;                                       // 0x0458(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<int32, struct FVector2D>                 LineMarkerCoordinates;                             // 0x04A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         HoveredLineId;                                     // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HoveredIconId;                                     // 0x04FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UGCCheckCooldown;                                  // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, int32>                            LineOwners;                                        // 0x0508(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void CheckForUGCPolicyChange(double DeltaTime);
	void ConfirmHoveredIdOwnership();
	void Construct();
	void DrawLine(int32 LineID, const struct FPlanningLine& LineData);
	void DrawMarker(const int32& MarkerID, const struct FPlanningMarker& MarkerData);
	void EraseIcon(int32 ID);
	void EraseLine(int32 LineID);
	void EraseMarkerAndLine(int32 Key);
	void ExecuteUbergraph_W_PreMission_PlanningMap_Level(int32 EntryPoint);
	void GamepadHover();
	void GetLineAngle(const struct FVector2D& PointA, const struct FVector2D& PointB, double PointA_X, double PointA_Y, double PointB_X, double PointB_Y, double* Angle);
	void GetLineLength(const struct FVector2D& PointA, const struct FVector2D& PointB, double* Length);
	void Is_Hovered_By_Gamepad(const struct FVector2D& Coordinates, bool* IsHovered_0);
	void Line_Start_Node_Selected(class UW_OfficerMarker_C* OfficerMarker);
	void MarkerRotated(class UW_PreMission_Tablet_MapMarker_C* TriggeringMarker, double Rotation);
	void OnLoaded_705E207A4CED22445B404F937107DCF3(class UObject* Loaded);
	void Set_Icon_Marker_Hover_Status(int32 ID, bool Hover);
	void SetMarkerHoverStatus(int32 ID, bool Hover);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("W_PreMission_PlanningMap_Level_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"W_PreMission_PlanningMap_Level_C")
	}
	static class UW_PreMission_PlanningMap_Level_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PreMission_PlanningMap_Level_C>();
	}
};
DUMPER7_ASSERTS_UW_PreMission_PlanningMap_Level_C;

}

