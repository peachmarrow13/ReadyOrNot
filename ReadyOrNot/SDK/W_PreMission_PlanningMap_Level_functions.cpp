#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_PlanningMap_Level

#include "Basic.hpp"

#include "W_PreMission_PlanningMap_Level_classes.hpp"
#include "W_PreMission_PlanningMap_Level_parameters.hpp"


namespace SDK
{

// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.CheckForUGCPolicyChange
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PreMission_PlanningMap_Level_C::CheckForUGCPolicyChange(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "CheckForUGCPolicyChange");

	Params::W_PreMission_PlanningMap_Level_C_CheckForUGCPolicyChange Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.ConfirmHoveredIdOwnership
// (Public, BlueprintCallable, BlueprintEvent)

void UW_PreMission_PlanningMap_Level_C::ConfirmHoveredIdOwnership()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "ConfirmHoveredIdOwnership");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_PreMission_PlanningMap_Level_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.DrawLine
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LineID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FPlanningLine&             LineData                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_PreMission_PlanningMap_Level_C::DrawLine(int32 LineID, const struct FPlanningLine& LineData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "DrawLine");

	Params::W_PreMission_PlanningMap_Level_C_DrawLine Parms{};

	Parms.LineID = LineID;
	Parms.LineData = std::move(LineData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.DrawMarker
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            MarkerID                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FPlanningMarker&           MarkerData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UW_PreMission_PlanningMap_Level_C::DrawMarker(const int32& MarkerID, const struct FPlanningMarker& MarkerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "DrawMarker");

	Params::W_PreMission_PlanningMap_Level_C_DrawMarker Parms{};

	Parms.MarkerID = MarkerID;
	Parms.MarkerData = std::move(MarkerData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.EraseIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PreMission_PlanningMap_Level_C::EraseIcon(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "EraseIcon");

	Params::W_PreMission_PlanningMap_Level_C_EraseIcon Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.EraseLine
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LineID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PreMission_PlanningMap_Level_C::EraseLine(int32 LineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "EraseLine");

	Params::W_PreMission_PlanningMap_Level_C_EraseLine Parms{};

	Parms.LineID = LineID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.EraseMarkerAndLine
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PreMission_PlanningMap_Level_C::EraseMarkerAndLine(int32 Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "EraseMarkerAndLine");

	Params::W_PreMission_PlanningMap_Level_C_EraseMarkerAndLine Parms{};

	Parms.Key = Key;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.ExecuteUbergraph_W_PreMission_PlanningMap_Level
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PreMission_PlanningMap_Level_C::ExecuteUbergraph_W_PreMission_PlanningMap_Level(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "ExecuteUbergraph_W_PreMission_PlanningMap_Level");

	Params::W_PreMission_PlanningMap_Level_C_ExecuteUbergraph_W_PreMission_PlanningMap_Level Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.GamepadHover
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_PreMission_PlanningMap_Level_C::GamepadHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "GamepadHover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.GetLineAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 PointA                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 PointB                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PointA_X                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PointA_Y                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PointB_X                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PointB_Y                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Angle                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PreMission_PlanningMap_Level_C::GetLineAngle(const struct FVector2D& PointA, const struct FVector2D& PointB, double PointA_X, double PointA_Y, double PointB_X, double PointB_Y, double* Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "GetLineAngle");

	Params::W_PreMission_PlanningMap_Level_C_GetLineAngle Parms{};

	Parms.PointA = std::move(PointA);
	Parms.PointB = std::move(PointB);
	Parms.PointA_X = PointA_X;
	Parms.PointA_Y = PointA_Y;
	Parms.PointB_X = PointB_X;
	Parms.PointB_Y = PointB_Y;

	UObject::ProcessEvent(Func, &Parms);

	if (Angle != nullptr)
		*Angle = Parms.Angle;
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.GetLineLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 PointA                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 PointB                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PreMission_PlanningMap_Level_C::GetLineLength(const struct FVector2D& PointA, const struct FVector2D& PointB, double* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "GetLineLength");

	Params::W_PreMission_PlanningMap_Level_C_GetLineLength Parms{};

	Parms.PointA = std::move(PointA);
	Parms.PointB = std::move(PointB);

	UObject::ProcessEvent(Func, &Parms);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.Is Hovered By Gamepad
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Coordinates                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsHovered_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PreMission_PlanningMap_Level_C::Is_Hovered_By_Gamepad(const struct FVector2D& Coordinates, bool* IsHovered_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "Is Hovered By Gamepad");

	Params::W_PreMission_PlanningMap_Level_C_Is_Hovered_By_Gamepad Parms{};

	Parms.Coordinates = std::move(Coordinates);

	UObject::ProcessEvent(Func, &Parms);

	if (IsHovered_0 != nullptr)
		*IsHovered_0 = Parms.IsHovered_0;
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.Line Start Node Selected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_OfficerMarker_C*               OfficerMarker                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_PreMission_PlanningMap_Level_C::Line_Start_Node_Selected(class UW_OfficerMarker_C* OfficerMarker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "Line Start Node Selected");

	Params::W_PreMission_PlanningMap_Level_C_Line_Start_Node_Selected Parms{};

	Parms.OfficerMarker = OfficerMarker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.MarkerRotated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_PreMission_Tablet_MapMarker_C* TriggeringMarker                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PreMission_PlanningMap_Level_C::MarkerRotated(class UW_PreMission_Tablet_MapMarker_C* TriggeringMarker, double Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "MarkerRotated");

	Params::W_PreMission_PlanningMap_Level_C_MarkerRotated Parms{};

	Parms.TriggeringMarker = TriggeringMarker;
	Parms.Rotation = Rotation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.OnLoaded_705E207A4CED22445B404F937107DCF3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UW_PreMission_PlanningMap_Level_C::OnLoaded_705E207A4CED22445B404F937107DCF3(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "OnLoaded_705E207A4CED22445B404F937107DCF3");

	Params::W_PreMission_PlanningMap_Level_C_OnLoaded_705E207A4CED22445B404F937107DCF3 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.Set Icon Marker Hover Status
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hover                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PreMission_PlanningMap_Level_C::Set_Icon_Marker_Hover_Status(int32 ID, bool Hover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "Set Icon Marker Hover Status");

	Params::W_PreMission_PlanningMap_Level_C_Set_Icon_Marker_Hover_Status Parms{};

	Parms.ID = ID;
	Parms.Hover = Hover;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.SetMarkerHoverStatus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hover                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PreMission_PlanningMap_Level_C::SetMarkerHoverStatus(int32 ID, bool Hover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "SetMarkerHoverStatus");

	Params::W_PreMission_PlanningMap_Level_C_SetMarkerHoverStatus Parms{};

	Parms.ID = ID;
	Parms.Hover = Hover;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PreMission_PlanningMap_Level.W_PreMission_PlanningMap_Level_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PreMission_PlanningMap_Level_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_PlanningMap_Level_C", "Tick");

	Params::W_PreMission_PlanningMap_Level_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

