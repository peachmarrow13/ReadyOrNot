#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ScreenFooterEntry

#include "Basic.hpp"

#include "W_ScreenFooterEntry_classes.hpp"
#include "W_ScreenFooterEntry_parameters.hpp"


namespace SDK
{

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.BackPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Handled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScreenFooterEntry_C::BackPage(bool* Handled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "BackPage");

	Params::W_ScreenFooterEntry_C_BackPage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Handled != nullptr)
		*Handled = Parms.Handled;
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.BndEvt__W_ScreenFooterEntry_W_FooterInputActionButton_K2Node_ComponentBoundEvent_12_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_ScreenFooterEntry_C::BndEvt__W_ScreenFooterEntry_W_FooterInputActionButton_K2Node_ComponentBoundEvent_12_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "BndEvt__W_ScreenFooterEntry_W_FooterInputActionButton_K2Node_ComponentBoundEvent_12_CommonButtonBaseClicked__DelegateSignature");

	Params::W_ScreenFooterEntry_C_BndEvt__W_ScreenFooterEntry_W_FooterInputActionButton_K2Node_ComponentBoundEvent_12_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.ChangePage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PageName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScreenFooterEntry_C::ChangePage(class FName PageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "ChangePage");

	Params::W_ScreenFooterEntry_C_ChangePage Parms{};

	Parms.PageName = PageName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_ScreenFooterEntry_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.ExecuteUbergraph_W_ScreenFooterEntry
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScreenFooterEntry_C::ExecuteUbergraph_W_ScreenFooterEntry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "ExecuteUbergraph_W_ScreenFooterEntry");

	Params::W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetButtonID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString*                          ButtonId                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UW_ScreenFooterEntry_C::GetButtonID(class FString* ButtonId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "GetButtonID");

	Params::W_ScreenFooterEntry_C_GetButtonID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ButtonId != nullptr)
		*ButtonId = std::move(Parms.ButtonId);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetButtonLabel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText*                            ButtonLabel                                            (Parm, OutParm)

void UW_ScreenFooterEntry_C::GetButtonLabel(class FText* ButtonLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "GetButtonLabel");

	Params::W_ScreenFooterEntry_C_GetButtonLabel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ButtonLabel != nullptr)
		*ButtonLabel = std::move(Parms.ButtonLabel);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetInputAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FDataTableRowHandle*             InputAction                                            (Parm, OutParm, NoDestructor)

void UW_ScreenFooterEntry_C::GetInputAction(struct FDataTableRowHandle* InputAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "GetInputAction");

	Params::W_ScreenFooterEntry_C_GetInputAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InputAction != nullptr)
		*InputAction = std::move(Parms.InputAction);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetInputActions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FDataTableRowHandle>*     InputActions                                           (Parm, OutParm)

void UW_ScreenFooterEntry_C::GetInputActions(TArray<struct FDataTableRowHandle>* InputActions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "GetInputActions");

	Params::W_ScreenFooterEntry_C_GetInputActions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InputActions != nullptr)
		*InputActions = std::move(Parms.InputActions);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetIsButton
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsButton                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScreenFooterEntry_C::GetIsButton(bool* IsButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "GetIsButton");

	Params::W_ScreenFooterEntry_C_GetIsButton Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsButton != nullptr)
		*IsButton = Parms.IsButton;
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetIsMultiInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsMulti                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScreenFooterEntry_C::GetIsMultiInput(bool* IsMulti)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "GetIsMultiInput");

	Params::W_ScreenFooterEntry_C_GetIsMultiInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsMulti != nullptr)
		*IsMulti = Parms.IsMulti;
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetMultipleInputActions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FDataTableRowHandle>*     InputActions                                           (Parm, OutParm)

void UW_ScreenFooterEntry_C::GetMultipleInputActions(TArray<struct FDataTableRowHandle>* InputActions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "GetMultipleInputActions");

	Params::W_ScreenFooterEntry_C_GetMultipleInputActions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InputActions != nullptr)
		*InputActions = std::move(Parms.InputActions);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetTriggeringInputAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FDataTableRowHandle*             TriggeringInputAction                                  (Parm, OutParm, NoDestructor)

void UW_ScreenFooterEntry_C::GetTriggeringInputAction(struct FDataTableRowHandle* TriggeringInputAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "GetTriggeringInputAction");

	Params::W_ScreenFooterEntry_C_GetTriggeringInputAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TriggeringInputAction != nullptr)
		*TriggeringInputAction = std::move(Parms.TriggeringInputAction);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.Hide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Collapse                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScreenFooterEntry_C::Hide(double Delay, bool Collapse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "Hide");

	Params::W_ScreenFooterEntry_C_Hide Parms{};

	Parms.Delay = Delay;
	Parms.Collapse = Collapse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.InputSwitched
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UseGamepad_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScreenFooterEntry_C::InputSwitched(bool UseGamepad_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "InputSwitched");

	Params::W_ScreenFooterEntry_C_InputSwitched Parms{};

	Parms.UseGamepad_0 = UseGamepad_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.InputTypeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonInputType                        bNewInputType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScreenFooterEntry_C::InputTypeChanged(ECommonInputType bNewInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "InputTypeChanged");

	Params::W_ScreenFooterEntry_C_InputTypeChanged Parms{};

	Parms.bNewInputType = bNewInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_ScreenFooterEntry_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScreenFooterEntry_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "PreConstruct");

	Params::W_ScreenFooterEntry_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.Reveal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScreenFooterEntry_C::Reveal(double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "Reveal");

	Params::W_ScreenFooterEntry_C_Reveal Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.Set Button Text
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      ButtonText                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_ScreenFooterEntry_C::Set_Button_Text(const class FText& ButtonText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "Set Button Text");

	Params::W_ScreenFooterEntry_C_Set_Button_Text Parms{};

	Parms.ButtonText = std::move(ButtonText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.Set Input Actions
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FDataTableRowHandle>&     InInputActions                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_ScreenFooterEntry_C::Set_Input_Actions(TArray<struct FDataTableRowHandle>& InInputActions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "Set Input Actions");

	Params::W_ScreenFooterEntry_C_Set_Input_Actions Parms{};

	Parms.InInputActions = std::move(InInputActions);

	UObject::ProcessEvent(Func, &Parms);

	InInputActions = std::move(Parms.InInputActions);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.SetFooterEntryData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FScreenFooterEntry&        FooterEntryData_0                                      (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_ScreenFooterEntry_C::SetFooterEntryData(const struct FScreenFooterEntry& FooterEntryData_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "SetFooterEntryData");

	Params::W_ScreenFooterEntry_C_SetFooterEntryData Parms{};

	Parms.FooterEntryData_0 = std::move(FooterEntryData_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.SetInputAction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDataTableRowHandle&       InputActionRow                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UW_ScreenFooterEntry_C::SetInputAction(const struct FDataTableRowHandle& InputActionRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "SetInputAction");

	Params::W_ScreenFooterEntry_C_SetInputAction Parms{};

	Parms.InputActionRow = std::move(InputActionRow);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.SetInputMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScreenFooterEntry_C::SetInputMode(bool IsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "SetInputMode");

	Params::W_ScreenFooterEntry_C_SetInputMode Parms{};

	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.SetInputVisibility
// (Private, BlueprintCallable, BlueprintEvent)

void UW_ScreenFooterEntry_C::SetInputVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "SetInputVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.SetLabel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_ScreenFooterEntry_C::SetLabel(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "SetLabel");

	Params::W_ScreenFooterEntry_C_SetLabel Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.SetMultiInputAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FDataTableRowHandle>&     InputActionRows                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_ScreenFooterEntry_C::SetMultiInputAction(TArray<struct FDataTableRowHandle>& InputActionRows)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "SetMultiInputAction");

	Params::W_ScreenFooterEntry_C_SetMultiInputAction Parms{};

	Parms.InputActionRows = std::move(InputActionRows);

	UObject::ProcessEvent(Func, &Parms);

	InputActionRows = std::move(Parms.InputActionRows);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.UpdateEntry
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_ScreenFooterEntry_C::UpdateEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "UpdateEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.UpdateVisualState
// (Public, BlueprintCallable, BlueprintEvent)

void UW_ScreenFooterEntry_C::UpdateVisualState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "UpdateVisualState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetFocusTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UWidget**                         Focus                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_ScreenFooterEntry_C::GetFocusTarget(class UWidget** Focus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScreenFooterEntry_C", "GetFocusTarget");

	Params::W_ScreenFooterEntry_C_GetFocusTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Focus != nullptr)
		*Focus = Parms.Focus;
}

}

