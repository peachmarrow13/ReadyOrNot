#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ShaderCompilation

#include "Basic.hpp"

#include "W_ShaderCompilation_classes.hpp"
#include "W_ShaderCompilation_parameters.hpp"


namespace SDK
{

// Function W_ShaderCompilation.W_ShaderCompilation_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_ShaderCompilation_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ShaderCompilation_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ShaderCompilation.W_ShaderCompilation_C.ExecuteUbergraph_W_ShaderCompilation
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ShaderCompilation_C::ExecuteUbergraph_W_ShaderCompilation(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ShaderCompilation_C", "ExecuteUbergraph_W_ShaderCompilation");

	Params::W_ShaderCompilation_C_ExecuteUbergraph_W_ShaderCompilation Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ShaderCompilation.W_ShaderCompilation_C.OnShaderCompileCountUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   NumShaders                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ShaderCompilation_C::OnShaderCompileCountUpdated(int32 NumShaders)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ShaderCompilation_C", "OnShaderCompileCountUpdated");

	Params::W_ShaderCompilation_C_OnShaderCompileCountUpdated Parms{};

	Parms.NumShaders = NumShaders;

	UObject::ProcessEvent(Func, &Parms);
}

}

