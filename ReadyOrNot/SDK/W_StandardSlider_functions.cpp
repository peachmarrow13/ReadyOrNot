#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_StandardSlider

#include "Basic.hpp"

#include "W_StandardSlider_classes.hpp"
#include "W_StandardSlider_parameters.hpp"


namespace SDK
{

// Function W_StandardSlider.W_StandardSlider_C.AddFloatValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 NewValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardSlider_C::AddFloatValue(double Value, double* NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "AddFloatValue");

	Params::W_StandardSlider_C_AddFloatValue Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (NewValue != nullptr)
		*NewValue = Parms.NewValue;
}


// Function W_StandardSlider.W_StandardSlider_C.AddIntegralValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  NewValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardSlider_C::AddIntegralValue(int32 Value, int32* NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "AddIntegralValue");

	Params::W_StandardSlider_C_AddIntegralValue Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (NewValue != nullptr)
		*NewValue = Parms.NewValue;
}


// Function W_StandardSlider.W_StandardSlider_C.BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardSlider_C::BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");

	Params::W_StandardSlider_C_BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardSlider.W_StandardSlider_C.BndEvt__TheSlider_K2Node_ComponentBoundEvent_1_OnMouseCaptureBeginEvent__DelegateSignature
// (BlueprintEvent)

void UW_StandardSlider_C::BndEvt__TheSlider_K2Node_ComponentBoundEvent_1_OnMouseCaptureBeginEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "BndEvt__TheSlider_K2Node_ComponentBoundEvent_1_OnMouseCaptureBeginEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StandardSlider.W_StandardSlider_C.BndEvt__TheSlider_K2Node_ComponentBoundEvent_2_OnMouseCaptureEndEvent__DelegateSignature
// (BlueprintEvent)

void UW_StandardSlider_C::BndEvt__TheSlider_K2Node_ComponentBoundEvent_2_OnMouseCaptureEndEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "BndEvt__TheSlider_K2Node_ComponentBoundEvent_2_OnMouseCaptureEndEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StandardSlider.W_StandardSlider_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_StandardSlider_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StandardSlider.W_StandardSlider_C.ExecuteUbergraph_W_StandardSlider
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardSlider_C::ExecuteUbergraph_W_StandardSlider(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "ExecuteUbergraph_W_StandardSlider");

	Params::W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardSlider.W_StandardSlider_C.Navigate Left
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Navigation_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UW_StandardSlider_C::Navigate_Left(EUINavigation Navigation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "Navigate Left");

	Params::W_StandardSlider_C_Navigate_Left Parms{};

	Parms.Navigation_0 = Navigation_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_StandardSlider.W_StandardSlider_C.Navigate Right
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Navigation_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UW_StandardSlider_C::Navigate_Right(EUINavigation Navigation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "Navigate Right");

	Params::W_StandardSlider_C_Navigate_Right Parms{};

	Parms.Navigation_0 = Navigation_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_StandardSlider.W_StandardSlider_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_StandardSlider_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "OnMouseEnter");

	Params::W_StandardSlider_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardSlider.W_StandardSlider_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_StandardSlider_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "OnMouseLeave");

	Params::W_StandardSlider_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardSlider.W_StandardSlider_C.OnPreviewMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_StandardSlider_C::OnPreviewMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "OnPreviewMouseButtonDown");

	Params::W_StandardSlider_C_OnPreviewMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_StandardSlider.W_StandardSlider_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardSlider_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "PreConstruct");

	Params::W_StandardSlider_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardSlider.W_StandardSlider_C.SetDLSSQualityValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewQuality                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardSlider_C::SetDLSSQualityValue(int32 NewQuality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "SetDLSSQualityValue");

	Params::W_StandardSlider_C_SetDLSSQualityValue Parms{};

	Parms.NewQuality = NewQuality;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardSlider.W_StandardSlider_C.SetFloatValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewFloat                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 NewValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardSlider_C::SetFloatValue(double NewFloat, double* NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "SetFloatValue");

	Params::W_StandardSlider_C_SetFloatValue Parms{};

	Parms.NewFloat = NewFloat;

	UObject::ProcessEvent(Func, &Parms);

	if (NewValue != nullptr)
		*NewValue = Parms.NewValue;
}


// Function W_StandardSlider.W_StandardSlider_C.SetFrameGenerationValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewQuality                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardSlider_C::SetFrameGenerationValue(int32 NewQuality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "SetFrameGenerationValue");

	Params::W_StandardSlider_C_SetFrameGenerationValue Parms{};

	Parms.NewQuality = NewQuality;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardSlider.W_StandardSlider_C.SetFSRQualityValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewQuality                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardSlider_C::SetFSRQualityValue(int32 NewQuality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "SetFSRQualityValue");

	Params::W_StandardSlider_C_SetFSRQualityValue Parms{};

	Parms.NewQuality = NewQuality;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardSlider.W_StandardSlider_C.SetIntegralValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewInteger                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  NewValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardSlider_C::SetIntegralValue(int32 NewInteger, int32* NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "SetIntegralValue");

	Params::W_StandardSlider_C_SetIntegralValue Parms{};

	Parms.NewInteger = NewInteger;

	UObject::ProcessEvent(Func, &Parms);

	if (NewValue != nullptr)
		*NewValue = Parms.NewValue;
}


// Function W_StandardSlider.W_StandardSlider_C.SetQualityValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewQuality                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardSlider_C::SetQualityValue(int32 NewQuality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "SetQualityValue");

	Params::W_StandardSlider_C_SetQualityValue Parms{};

	Parms.NewQuality = NewQuality;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardSlider.W_StandardSlider_C.SetResolutionValue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Resolution                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_StandardSlider_C::SetResolutionValue(const class FString& Resolution)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "SetResolutionValue");

	Params::W_StandardSlider_C_SetResolutionValue Parms{};

	Parms.Resolution = std::move(Resolution);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardSlider.W_StandardSlider_C.SetText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_StandardSlider_C::SetText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "SetText");

	Params::W_StandardSlider_C_SetText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardSlider.W_StandardSlider_C.SetupDescription
// (Public, BlueprintCallable, BlueprintEvent)

void UW_StandardSlider_C::SetupDescription()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "SetupDescription");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StandardSlider.W_StandardSlider_C.UpdateSliderText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_StandardSlider_C::UpdateSliderText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardSlider_C", "UpdateSliderText");

	UObject::ProcessEvent(Func, nullptr);
}

}

