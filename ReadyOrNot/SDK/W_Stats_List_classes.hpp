#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Stats_List

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Stats_List.W_Stats_List_C
// 0x0370 (0x0660 - 0x02F0)
class UW_Stats_List_C final : public UStatViewerWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGridPanel*                             GP_Design;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             GP_StatList;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_div;                                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LabelAndDifference;                                // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_StatName;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_CompareDiff;                                   // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Value;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Value_Compare;                                 // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         RowCount;                                          // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompare;                                          // 0x033C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D[0x3];                                      // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class UCommonTextBlock*>  ValueMap;                                          // 0x0340(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class FString, class UCommonTextBlock*>  DiffMap;                                           // 0x0390(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class FString, class UCommonTextBlock*>  LabelMap;                                          // 0x03E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class FString, class UCommonTextBlock*>  CompareValueMap;                                   // 0x0430(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          Is_Design_Time;                                    // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriend                                CompareFriend;                                     // 0x0488(0x01C8)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UCommonTextBlock*>               TimeStats;                                         // 0x0650(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void AddDiv();
	void BackPage(bool* Handled);
	void CancelCompare();
	void ChangePage(class FName PageName);
	void CompareStats();
	void CompareWithFriend(const struct FFriend& Friend);
	void Construct();
	void CopyTextObject(class UCommonTextBlock* CommonTextToCopy, class UCommonTextBlock** NewCommonTextBlock);
	void CreateComparisonValueEntry(const struct FDataTableRowHandle& StatRowHandle, int32 InRow, int32 InColumn, class UCommonTextBlock** ValueTextWidget);
	void CreateLabel(const struct FDataTableRowHandle& StatRowHandle, int32 Row, int32 Column, class UOverlay** LabelOverlay);
	void CreateValueEntry(const struct FDataTableRowHandle& StatRowHandle, int32 InRow, int32 InColumn, class UCommonTextBlock** ValueTextWidget);
	void ExecuteUbergraph_W_Stats_List(int32 EntryPoint);
	void FormatPlaytime(int64 Time__in_seconds_, class FText* Result);
	void Hide(double Delay, bool Collapse);
	void OnInitialized();
	void OnStatChanged(const class FString& StatID);
	void PopulateStats();
	void PreConstruct(bool IsDesignTime);
	void Reveal(double Delay);
	void SetInputMode(bool IsGamepad);
	void StatsLoaded();
	void UpdateCompareValueEntry(const class FString& StatID);
	void UpdateValueEntry(const class FString& StatID);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("W_Stats_List_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"W_Stats_List_C")
	}
	static class UW_Stats_List_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Stats_List_C>();
	}
};
DUMPER7_ASSERTS_UW_Stats_List_C;

}

