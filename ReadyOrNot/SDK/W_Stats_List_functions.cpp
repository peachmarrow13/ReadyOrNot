#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Stats_List

#include "Basic.hpp"

#include "W_Stats_List_classes.hpp"
#include "W_Stats_List_parameters.hpp"


namespace SDK
{

// Function W_Stats_List.W_Stats_List_C.AddDiv
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Stats_List_C::AddDiv()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "AddDiv");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_List.W_Stats_List_C.BackPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Handled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_List_C::BackPage(bool* Handled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "BackPage");

	Params::W_Stats_List_C_BackPage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Handled != nullptr)
		*Handled = Parms.Handled;
}


// Function W_Stats_List.W_Stats_List_C.CancelCompare
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Stats_List_C::CancelCompare()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "CancelCompare");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_List.W_Stats_List_C.ChangePage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PageName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_List_C::ChangePage(class FName PageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "ChangePage");

	Params::W_Stats_List_C_ChangePage Parms{};

	Parms.PageName = PageName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_List.W_Stats_List_C.CompareStats
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_Stats_List_C::CompareStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "CompareStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_List.W_Stats_List_C.CompareWithFriend
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFriend&                   Friend                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_Stats_List_C::CompareWithFriend(const struct FFriend& Friend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "CompareWithFriend");

	Params::W_Stats_List_C_CompareWithFriend Parms{};

	Parms.Friend = std::move(Friend);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_List.W_Stats_List_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Stats_List_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_List.W_Stats_List_C.CopyTextObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonTextBlock*                 CommonTextToCopy                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UCommonTextBlock**                NewCommonTextBlock                                     (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Stats_List_C::CopyTextObject(class UCommonTextBlock* CommonTextToCopy, class UCommonTextBlock** NewCommonTextBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "CopyTextObject");

	Params::W_Stats_List_C_CopyTextObject Parms{};

	Parms.CommonTextToCopy = CommonTextToCopy;

	UObject::ProcessEvent(Func, &Parms);

	if (NewCommonTextBlock != nullptr)
		*NewCommonTextBlock = Parms.NewCommonTextBlock;
}


// Function W_Stats_List.W_Stats_List_C.CreateComparisonValueEntry
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDataTableRowHandle&       StatRowHandle                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// int32                                   InRow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InColumn                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCommonTextBlock**                ValueTextWidget                                        (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Stats_List_C::CreateComparisonValueEntry(const struct FDataTableRowHandle& StatRowHandle, int32 InRow, int32 InColumn, class UCommonTextBlock** ValueTextWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "CreateComparisonValueEntry");

	Params::W_Stats_List_C_CreateComparisonValueEntry Parms{};

	Parms.StatRowHandle = std::move(StatRowHandle);
	Parms.InRow = InRow;
	Parms.InColumn = InColumn;

	UObject::ProcessEvent(Func, &Parms);

	if (ValueTextWidget != nullptr)
		*ValueTextWidget = Parms.ValueTextWidget;
}


// Function W_Stats_List.W_Stats_List_C.CreateLabel
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDataTableRowHandle&       StatRowHandle                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// int32                                   Row                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Column                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOverlay**                        LabelOverlay                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Stats_List_C::CreateLabel(const struct FDataTableRowHandle& StatRowHandle, int32 Row, int32 Column, class UOverlay** LabelOverlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "CreateLabel");

	Params::W_Stats_List_C_CreateLabel Parms{};

	Parms.StatRowHandle = std::move(StatRowHandle);
	Parms.Row = Row;
	Parms.Column = Column;

	UObject::ProcessEvent(Func, &Parms);

	if (LabelOverlay != nullptr)
		*LabelOverlay = Parms.LabelOverlay;
}


// Function W_Stats_List.W_Stats_List_C.CreateValueEntry
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDataTableRowHandle&       StatRowHandle                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// int32                                   InRow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InColumn                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCommonTextBlock**                ValueTextWidget                                        (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Stats_List_C::CreateValueEntry(const struct FDataTableRowHandle& StatRowHandle, int32 InRow, int32 InColumn, class UCommonTextBlock** ValueTextWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "CreateValueEntry");

	Params::W_Stats_List_C_CreateValueEntry Parms{};

	Parms.StatRowHandle = std::move(StatRowHandle);
	Parms.InRow = InRow;
	Parms.InColumn = InColumn;

	UObject::ProcessEvent(Func, &Parms);

	if (ValueTextWidget != nullptr)
		*ValueTextWidget = Parms.ValueTextWidget;
}


// Function W_Stats_List.W_Stats_List_C.ExecuteUbergraph_W_Stats_List
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_List_C::ExecuteUbergraph_W_Stats_List(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "ExecuteUbergraph_W_Stats_List");

	Params::W_Stats_List_C_ExecuteUbergraph_W_Stats_List Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_List.W_Stats_List_C.FormatPlaytime
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int64                                   Time__in_seconds_                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Result                                                 (Parm, OutParm)

void UW_Stats_List_C::FormatPlaytime(int64 Time__in_seconds_, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "FormatPlaytime");

	Params::W_Stats_List_C_FormatPlaytime Parms{};

	Parms.Time__in_seconds_ = Time__in_seconds_;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function W_Stats_List.W_Stats_List_C.Hide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Collapse                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_List_C::Hide(double Delay, bool Collapse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "Hide");

	Params::W_Stats_List_C_Hide Parms{};

	Parms.Delay = Delay;
	Parms.Collapse = Collapse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_List.W_Stats_List_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Stats_List_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_List.W_Stats_List_C.OnStatChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// const class FString&                    StatID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_Stats_List_C::OnStatChanged(const class FString& StatID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "OnStatChanged");

	Params::W_Stats_List_C_OnStatChanged Parms{};

	Parms.StatID = std::move(StatID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_List.W_Stats_List_C.PopulateStats
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_Stats_List_C::PopulateStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "PopulateStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_List.W_Stats_List_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_List_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "PreConstruct");

	Params::W_Stats_List_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_List.W_Stats_List_C.Reveal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_List_C::Reveal(double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "Reveal");

	Params::W_Stats_List_C_Reveal Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_List.W_Stats_List_C.SetInputMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_List_C::SetInputMode(bool IsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "SetInputMode");

	Params::W_Stats_List_C_SetInputMode Parms{};

	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_List.W_Stats_List_C.StatsLoaded
// (BlueprintCallable, BlueprintEvent)

void UW_Stats_List_C::StatsLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "StatsLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_List.W_Stats_List_C.UpdateCompareValueEntry
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    StatID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_Stats_List_C::UpdateCompareValueEntry(const class FString& StatID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "UpdateCompareValueEntry");

	Params::W_Stats_List_C_UpdateCompareValueEntry Parms{};

	Parms.StatID = std::move(StatID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_List.W_Stats_List_C.UpdateValueEntry
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    StatID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_Stats_List_C::UpdateValueEntry(const class FString& StatID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "UpdateValueEntry");

	Params::W_Stats_List_C_UpdateValueEntry Parms{};

	Parms.StatID = std::move(StatID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_List.W_Stats_List_C.GetFocusTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UWidget**                         Focus                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Stats_List_C::GetFocusTarget(class UWidget** Focus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_List_C", "GetFocusTarget");

	Params::W_Stats_List_C_GetFocusTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Focus != nullptr)
		*Focus = Parms.Focus;
}

}

