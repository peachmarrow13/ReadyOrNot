#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Stats_Radial

#include "Basic.hpp"

#include "W_Stats_Radial_classes.hpp"
#include "W_Stats_Radial_parameters.hpp"


namespace SDK
{

// Function W_Stats_Radial.W_Stats_Radial_C.AnimateProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_Radial_C::AnimateProgress(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "AnimateProgress");

	Params::W_Stats_Radial_C_AnimateProgress Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_Radial.W_Stats_Radial_C.BackPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Handled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_Radial_C::BackPage(bool* Handled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "BackPage");

	Params::W_Stats_Radial_C_BackPage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Handled != nullptr)
		*Handled = Parms.Handled;
}


// Function W_Stats_Radial.W_Stats_Radial_C.CancelCompare
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Stats_Radial_C::CancelCompare()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "CancelCompare");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_Radial.W_Stats_Radial_C.ChangePage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PageName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_Radial_C::ChangePage(class FName PageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "ChangePage");

	Params::W_Stats_Radial_C_ChangePage Parms{};

	Parms.PageName = PageName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_Radial.W_Stats_Radial_C.CompareWithFriend
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFriend&                   Friend                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_Stats_Radial_C::CompareWithFriend(const struct FFriend& Friend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "CompareWithFriend");

	Params::W_Stats_Radial_C_CompareWithFriend Parms{};

	Parms.Friend = std::move(Friend);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_Radial.W_Stats_Radial_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Stats_Radial_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_Radial.W_Stats_Radial_C.ExecuteUbergraph_W_Stats_Radial
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_Radial_C::ExecuteUbergraph_W_Stats_Radial(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "ExecuteUbergraph_W_Stats_Radial");

	Params::W_Stats_Radial_C_ExecuteUbergraph_W_Stats_Radial Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_Radial.W_Stats_Radial_C.FormatValueText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int64                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UW_Stats_Radial_C::FormatValueText(int64 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "FormatValueText");

	Params::W_Stats_Radial_C_FormatValueText Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Stats_Radial.W_Stats_Radial_C.GetCompareFillProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 Main                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Secondary                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_Radial_C::GetCompareFillProgress(double* Main, double* Secondary)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "GetCompareFillProgress");

	Params::W_Stats_Radial_C_GetCompareFillProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Main != nullptr)
		*Main = Parms.Main;

	if (Secondary != nullptr)
		*Secondary = Parms.Secondary;
}


// Function W_Stats_Radial.W_Stats_Radial_C.GetComparisonSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UW_Stats_Radial_C::GetComparisonSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "GetComparisonSize");

	Params::W_Stats_Radial_C_GetComparisonSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Stats_Radial.W_Stats_Radial_C.GetProgressBarThickness
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UW_Stats_Radial_C::GetProgressBarThickness()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "GetProgressBarThickness");

	Params::W_Stats_Radial_C_GetProgressBarThickness Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Stats_Radial.W_Stats_Radial_C.GetValuePadding
// (Public, BlueprintCallable, BlueprintEvent, BlueprintPure)

void UW_Stats_Radial_C::GetValuePadding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "GetValuePadding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_Radial.W_Stats_Radial_C.Hide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Collapse                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_Radial_C::Hide(double Delay, bool Collapse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "Hide");

	Params::W_Stats_Radial_C_Hide Parms{};

	Parms.Delay = Delay;
	Parms.Collapse = Collapse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_Radial.W_Stats_Radial_C.InitializeStyle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_Stats_Radial_C::InitializeStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "InitializeStyle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_Radial.W_Stats_Radial_C.IsComparisonBetter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsBetter                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_Radial_C::IsComparisonBetter(bool* IsBetter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "IsComparisonBetter");

	Params::W_Stats_Radial_C_IsComparisonBetter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsBetter != nullptr)
		*IsBetter = Parms.IsBetter;
}


// Function W_Stats_Radial.W_Stats_Radial_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Stats_Radial_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_Radial.W_Stats_Radial_C.OnStatChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// const class FString&                    StatID_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_Stats_Radial_C::OnStatChanged(const class FString& StatID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "OnStatChanged");

	Params::W_Stats_Radial_C_OnStatChanged Parms{};

	Parms.StatID_0 = std::move(StatID_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_Radial.W_Stats_Radial_C.OnStatsLoaded
// (BlueprintCallable, BlueprintEvent)

void UW_Stats_Radial_C::OnStatsLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "OnStatsLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_Radial.W_Stats_Radial_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_Radial_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "PreConstruct");

	Params::W_Stats_Radial_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_Radial.W_Stats_Radial_C.Reveal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_Radial_C::Reveal(double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "Reveal");

	Params::W_Stats_Radial_C_Reveal Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_Radial.W_Stats_Radial_C.SetGraphMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Stats_Radial_C::SetGraphMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "SetGraphMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_Radial.W_Stats_Radial_C.SetInputMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_Radial_C::SetInputMode(bool IsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "SetInputMode");

	Params::W_Stats_Radial_C_SetInputMode Parms{};

	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_Radial.W_Stats_Radial_C.SetPlaceholder
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Stats_Radial_C::SetPlaceholder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "SetPlaceholder");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_Radial.W_Stats_Radial_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Stats_Radial_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "Tick");

	Params::W_Stats_Radial_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Stats_Radial.W_Stats_Radial_C.UpdateStats
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_Stats_Radial_C::UpdateStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "UpdateStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_Radial.W_Stats_Radial_C.UpdateStyle
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Stats_Radial_C::UpdateStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "UpdateStyle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Stats_Radial.W_Stats_Radial_C.GetFocusTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UWidget**                         Focus                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_Stats_Radial_C::GetFocusTarget(class UWidget** Focus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Stats_Radial_C", "GetFocusTarget");

	Params::W_Stats_Radial_C_GetFocusTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Focus != nullptr)
		*Focus = Parms.Focus;
}

}

