#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_VotePopUp_gamepad

#include "Basic.hpp"

#include "W_VotePopUp_gamepad_classes.hpp"
#include "W_VotePopUp_gamepad_parameters.hpp"


namespace SDK
{

// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_VotePopUp_gamepad_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.ExecuteUbergraph_W_VotePopUp_gamepad
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_VotePopUp_gamepad_C::ExecuteUbergraph_W_VotePopUp_gamepad(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "ExecuteUbergraph_W_VotePopUp_gamepad");

	Params::W_VotePopUp_gamepad_C_ExecuteUbergraph_W_VotePopUp_gamepad Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.GetAvailableVotes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UW_VotePopUp_gamepad_C::GetAvailableVotes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "GetAvailableVotes");

	Params::W_VotePopUp_gamepad_C_GetAvailableVotes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.GetbIsEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UW_VotePopUp_gamepad_C::GetbIsEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "GetbIsEnabled");

	Params::W_VotePopUp_gamepad_C_GetbIsEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.GetText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UW_VotePopUp_gamepad_C::GetText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "GetText");

	Params::W_VotePopUp_gamepad_C_GetText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.GetText_4
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UW_VotePopUp_gamepad_C::GetText_4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "GetText_4");

	Params::W_VotePopUp_gamepad_C_GetText_4 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.GetVotesRequired
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UW_VotePopUp_gamepad_C::GetVotesRequired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "GetVotesRequired");

	Params::W_VotePopUp_gamepad_C_GetVotesRequired Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.GetVoteState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   VotedYes                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_VotePopUp_gamepad_C::GetVoteState(bool* VotedYes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "GetVoteState");

	Params::W_VotePopUp_gamepad_C_GetVoteState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VotedYes != nullptr)
		*VotedYes = Parms.VotedYes;
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.Hide Widget
// (Public, BlueprintCallable, BlueprintEvent)

void UW_VotePopUp_gamepad_C::Hide_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "Hide Widget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.NewFunction
// (Public, BlueprintCallable, BlueprintEvent)

void UW_VotePopUp_gamepad_C::NewFunction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "NewFunction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.OnInputChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonInputType                        bNewInputType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_VotePopUp_gamepad_C::OnInputChange(ECommonInputType bNewInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "OnInputChange");

	Params::W_VotePopUp_gamepad_C_OnInputChange Parms{};

	Parms.bNewInputType = bNewInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.OnLocalPlayerReadyChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bReady                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_VotePopUp_gamepad_C::OnLocalPlayerReadyChange(bool bReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "OnLocalPlayerReadyChange");

	Params::W_VotePopUp_gamepad_C_OnLocalPlayerReadyChange Parms{};

	Parms.bReady = bReady;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.SetVoteResult
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVoteData&                 VoteResult_0                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   YesVotes_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NoVotes_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_VotePopUp_gamepad_C::SetVoteResult(const struct FVoteData& VoteResult_0, int32 YesVotes_0, int32 NoVotes_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "SetVoteResult");

	Params::W_VotePopUp_gamepad_C_SetVoteResult Parms{};

	Parms.VoteResult_0 = std::move(VoteResult_0);
	Parms.YesVotes_0 = YesVotes_0;
	Parms.NoVotes_0 = NoVotes_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.ShowWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show_Widget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_VotePopUp_gamepad_C::ShowWidget(bool Show_Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "ShowWidget");

	Params::W_VotePopUp_gamepad_C_ShowWidget Parms{};

	Parms.Show_Widget = Show_Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.StartVote
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      VoteReason_0                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      VoteQuestion                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    bCanVoteNo                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_VotePopUp_gamepad_C::StartVote(const class FText& VoteReason_0, const class FText& VoteQuestion, bool bCanVoteNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "StartVote");

	Params::W_VotePopUp_gamepad_C_StartVote Parms{};

	Parms.VoteReason_0 = std::move(VoteReason_0);
	Parms.VoteQuestion = std::move(VoteQuestion);
	Parms.bCanVoteNo = bCanVoteNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_VotePopUp_gamepad_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "Tick");

	Params::W_VotePopUp_gamepad_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.UpdateText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_VotePopUp_gamepad_C::UpdateText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "UpdateText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.UpdateVote
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_VotePopUp_gamepad_C::UpdateVote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "UpdateVote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.UpdateWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UW_VotePopUp_gamepad_C::UpdateWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "UpdateWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.VoteEnd
// (BlueprintCallable, BlueprintEvent)

void UW_VotePopUp_gamepad_C::VoteEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "VoteEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.VoteReason
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UW_VotePopUp_gamepad_C::VoteReason()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "VoteReason");

	Params::W_VotePopUp_gamepad_C_VoteReason Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.GetVoteQuestion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UW_VotePopUp_gamepad_C::GetVoteQuestion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "GetVoteQuestion");

	Params::W_VotePopUp_gamepad_C_GetVoteQuestion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_VotePopUp_gamepad.W_VotePopUp_gamepad_C.GetYesVotes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UW_VotePopUp_gamepad_C::GetYesVotes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_VotePopUp_gamepad_C", "GetYesVotes");

	Params::W_VotePopUp_gamepad_C_GetYesVotes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

